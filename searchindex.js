Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.abs", "api/pypath.inputs.abs.abs_interactions", "api/pypath.inputs.acsn", "api/pypath.inputs.acsn.acsn_interactions", "api/pypath.inputs.acsn.acsn_interactions_sif", "api/pypath.inputs.adrecs", "api/pypath.inputs.adrecs.AdrecsAdr", "api/pypath.inputs.adrecs.AdrecsChildParent", "api/pypath.inputs.adrecs.AdrecsDrug", "api/pypath.inputs.adrecs.AdrecsDrugAdr", "api/pypath.inputs.adrecs.AdrecsTerm", "api/pypath.inputs.adrecs.adrecs_adr_ontology", "api/pypath.inputs.adrecs.adrecs_drug_adr", "api/pypath.inputs.adrecs.adrecs_drug_identifiers", "api/pypath.inputs.adrecs.adrecs_hierarchy", "api/pypath.inputs.biogrid", "api/pypath.inputs.biogrid.biogrid_all_interactions", "api/pypath.inputs.biogrid.biogrid_interactions", "api/pypath.inputs.biomart", "api/pypath.inputs.biomart.biomart_homology", "api/pypath.inputs.biomart.biomart_microarray", "api/pypath.inputs.biomart.biomart_microarray_types", "api/pypath.inputs.biomart.biomart_microarrays", "api/pypath.inputs.biomart.biomart_query", "api/pypath.inputs.biomodels", "api/pypath.inputs.biomodels.download_single_model", "api/pypath.inputs.biomodels.get_all_models", "api/pypath.inputs.biomodels.get_biomodels", "api/pypath.inputs.biomodels.get_biomodels_req", "api/pypath.inputs.biomodels.get_single_model", "api/pypath.inputs.ca1", "api/pypath.inputs.ca1.ca1_interactions", "api/pypath.inputs.cancercellmap", "api/pypath.inputs.cancercellmap.ccmap_interactions", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.chembl", "api/pypath.inputs.chembl.chembl_activities", "api/pypath.inputs.chembl.chembl_assays", "api/pypath.inputs.chembl.chembl_documents", "api/pypath.inputs.chembl.chembl_drug_indications", "api/pypath.inputs.chembl.chembl_mechanisms", "api/pypath.inputs.chembl.chembl_molecules", "api/pypath.inputs.chembl.chembl_targets", "api/pypath.inputs.clinvar", "api/pypath.inputs.clinvar.clinvar_citations", "api/pypath.inputs.clinvar.clinvar_raw", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.compath", "api/pypath.inputs.compath.compath_mappings", "api/pypath.inputs.cpdb", "api/pypath.inputs.cpdb.cpdb_interactions", "api/pypath.inputs.cpdb.cpdb_interactions_ltp", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ctdbase", "api/pypath.inputs.ctdbase.ctdbase_relations", "api/pypath.inputs.ctdbase.ctdbase_vocabulary", "api/pypath.inputs.ddinter", "api/pypath.inputs.ddinter.ddinter_drug_interactions", "api/pypath.inputs.ddinter.ddinter_identifiers", "api/pypath.inputs.ddinter.ddinter_interactions", "api/pypath.inputs.ddinter.ddinter_mappings", "api/pypath.inputs.ddinter.ddinter_n_drugs", "api/pypath.inputs.deathdomain", "api/pypath.inputs.deathdomain.deathdomain_interactions", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued", "api/pypath.inputs.dip", "api/pypath.inputs.dip.dip_interactions", "api/pypath.inputs.dip.dip_login", "api/pypath.inputs.diseases", "api/pypath.inputs.diseases.diseases_general", "api/pypath.inputs.diseases.experiments_filtered", "api/pypath.inputs.diseases.experiments_full", "api/pypath.inputs.diseases.knowledge_filtered", "api/pypath.inputs.diseases.knowledge_full", "api/pypath.inputs.diseases.textmining_filtered", "api/pypath.inputs.diseases.textmining_full", "api/pypath.inputs.drugbank", "api/pypath.inputs.drugbank.DrugbankFull", "api/pypath.inputs.drugbank.drugbank_annotations", "api/pypath.inputs.drugbank.drugbank_drugs", "api/pypath.inputs.drugbank.drugbank_interactions", "api/pypath.inputs.drugbank.drugbank_mapping", "api/pypath.inputs.drugbank.drugbank_raw_interactions", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.elm", "api/pypath.inputs.elm.elm_classes", "api/pypath.inputs.elm.elm_domains", "api/pypath.inputs.elm.elm_instances", "api/pypath.inputs.elm.elm_interactions", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.encode", "api/pypath.inputs.encode.encode_tf_mirna_interactions", "api/pypath.inputs.ensembl", "api/pypath.inputs.ensembl.ensembl_organisms", "api/pypath.inputs.eutils", "api/pypath.inputs.eutils.esummary", "api/pypath.inputs.expasy", "api/pypath.inputs.expasy.expasy_enzyme_classes", "api/pypath.inputs.expasy.expasy_enzymes", "api/pypath.inputs.genecards", "api/pypath.inputs.genecards.genecards_datasheet", "api/pypath.inputs.genecards.genecards_soup", "api/pypath.inputs.genecards.genecards_summaries", "api/pypath.inputs.get_method", "api/pypath.inputs.graphviz", "api/pypath.inputs.graphviz.graphviz_attrs", "api/pypath.inputs.hprd", "api/pypath.inputs.hprd.get_hprd", "api/pypath.inputs.hprd.hprd_enzyme_substrate", "api/pypath.inputs.hprd.hprd_interactions", "api/pypath.inputs.hprd.hprd_interactions_htp", "api/pypath.inputs.htri", "api/pypath.inputs.htri.htri_interactions", "api/pypath.inputs.humsavar", "api/pypath.inputs.humsavar.uniprot_variants", "api/pypath.inputs.ielm", "api/pypath.inputs.ielm.get_ielm", "api/pypath.inputs.ielm.get_ielm_huge", "api/pypath.inputs.imweb", "api/pypath.inputs.imweb.get_imweb", "api/pypath.inputs.imweb.get_imweb_req", "api/pypath.inputs.innatedb", "api/pypath.inputs.innatedb.innatedb_interactions", "api/pypath.inputs.instruct", "api/pypath.inputs.instruct.get_instruct", "api/pypath.inputs.instruct.get_instruct_offsets", "api/pypath.inputs.intact", "api/pypath.inputs.intact.intact_interactions", "api/pypath.inputs.interpro", "api/pypath.inputs.interpro.interpro2go_annotations", "api/pypath.inputs.interpro.interpro_annotations", "api/pypath.inputs.interpro.interpro_entries", "api/pypath.inputs.interpro.interpro_xrefs", "api/pypath.inputs.ipi", "api/pypath.inputs.ipi.ipi_uniprot", "api/pypath.inputs.kegg_api", "api/pypath.inputs.kegg_api.disease_to_drug", "api/pypath.inputs.kegg_api.disease_to_gene", "api/pypath.inputs.kegg_api.disease_to_pathway", "api/pypath.inputs.kegg_api.drug_to_disease", "api/pypath.inputs.kegg_api.drug_to_drug", "api/pypath.inputs.kegg_api.drug_to_gene", "api/pypath.inputs.kegg_api.drug_to_pathway", "api/pypath.inputs.kegg_api.gene_to_disease", "api/pypath.inputs.kegg_api.gene_to_drug", "api/pypath.inputs.kegg_api.gene_to_pathway", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot", "api/pypath.inputs.kegg_api.pathway_to_disease", "api/pypath.inputs.kegg_api.pathway_to_drug", "api/pypath.inputs.kegg_api.pathway_to_gene", "api/pypath.inputs.kirouac2010", "api/pypath.inputs.kirouac2010.kirouac2010_interactions", "api/pypath.inputs.laudanna", "api/pypath.inputs.laudanna.laudanna_directions", "api/pypath.inputs.laudanna.laudanna_effects", "api/pypath.inputs.lincs", "api/pypath.inputs.lincs.lincs_compounds", "api/pypath.inputs.macrophage", "api/pypath.inputs.macrophage.macrophage_interactions", "api/pypath.inputs.main", "api/pypath.inputs.mimp", "api/pypath.inputs.mimp.get_kinase_class", "api/pypath.inputs.mimp.mimp_enzyme_substrate", "api/pypath.inputs.mimp.mimp_interactions", "api/pypath.inputs.mir2disease", "api/pypath.inputs.mir2disease.mir2disease_interactions", "api/pypath.inputs.mirdeathdb", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.mppi", "api/pypath.inputs.mppi.mppi_interactions", "api/pypath.inputs.ncrdeathdb", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "api/pypath.inputs.negatome", "api/pypath.inputs.negatome.negatome_interactions", "api/pypath.inputs.netbiol", "api/pypath.inputs.netbiol.arn_interactions", "api/pypath.inputs.netbiol.nrf2ome_interactions", "api/pypath.inputs.offsides", "api/pypath.inputs.offsides.offsides_side_effects", "api/pypath.inputs.ontology", "api/pypath.inputs.ontology.listof_ontologies", "api/pypath.inputs.ontology.ontology", "api/pypath.inputs.opentargets", "api/pypath.inputs.opentargets.opentargets_adverse_reactions", "api/pypath.inputs.opentargets.opentargets_baseline_expression", "api/pypath.inputs.opentargets.opentargets_direct_score", "api/pypath.inputs.opentargets.opentargets_general", "api/pypath.inputs.opentargets.opentargets_indirect_score", "api/pypath.inputs.pathophenodb", "api/pypath.inputs.pathophenodb.DiseasePathogen", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions", "api/pypath.inputs.pathwaycommons", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "api/pypath.inputs.pazar", "api/pypath.inputs.pazar.pazar_interactions", "api/pypath.inputs.pepcyber", "api/pypath.inputs.pepcyber.pepcyber_details", "api/pypath.inputs.pepcyber.pepcyber_interactions", "api/pypath.inputs.pharos", "api/pypath.inputs.pharos.pharos_diseases", "api/pypath.inputs.pharos.pharos_expression", "api/pypath.inputs.pharos.pharos_general", "api/pypath.inputs.pharos.pharos_gtex", "api/pypath.inputs.pharos.pharos_ligands", "api/pypath.inputs.pharos.pharos_orthologs", "api/pypath.inputs.pharos.pharos_targets", "api/pypath.inputs.pharos.pharos_xrefs", "api/pypath.inputs.phobius", "api/pypath.inputs.phobius.phobius_annotations", "api/pypath.inputs.phosphonetworks", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions", "api/pypath.inputs.phosphopoint", "api/pypath.inputs.phosphopoint.phosphopoint_directions", "api/pypath.inputs.phosphopoint.phosphopoint_interactions", "api/pypath.inputs.pro", "api/pypath.inputs.pro.get_pro", "api/pypath.inputs.pro.pro_mapping", "api/pypath.inputs.protmapper", "api/pypath.inputs.protmapper.get_protmapper", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate", "api/pypath.inputs.protmapper.protmapper_interactions", "api/pypath.inputs.pubchem", "api/pypath.inputs.pubchem.pubchem_mapping", "api/pypath.inputs.pubmed", "api/pypath.inputs.pubmed.get_pmid", "api/pypath.inputs.pubmed.get_pubmeds", "api/pypath.inputs.pubmed.only_pmids", "api/pypath.inputs.pubmed.open_pubmed", "api/pypath.inputs.pubmed.pmids_dict", "api/pypath.inputs.pubmed.pmids_list", "api/pypath.inputs.rdata", "api/pypath.inputs.reaction", "api/pypath.inputs.reaction.acsn_biopax", "api/pypath.inputs.reaction.acsn_interactions_2", "api/pypath.inputs.reaction.get_acsn_effects", "api/pypath.inputs.reaction.get_controls", "api/pypath.inputs.reaction.get_interactions", "api/pypath.inputs.reaction.get_reactions", "api/pypath.inputs.reaction.get_soup", "api/pypath.inputs.reaction.panther_biopax", "api/pypath.inputs.reaction.panther_interactions", "api/pypath.inputs.reaction.pid_biopax", "api/pypath.inputs.reaction.pid_interactions", "api/pypath.inputs.reaction.process_complex", "api/pypath.inputs.reaction.process_controls", "api/pypath.inputs.reaction.process_reactions", "api/pypath.inputs.reaction.reactions_biopax", "api/pypath.inputs.reaction.reactome_biopax", "api/pypath.inputs.reaction.reactome_bs", "api/pypath.inputs.reaction.reactome_interactions", "api/pypath.inputs.reaction.reactome_sbml", "api/pypath.inputs.reactome", "api/pypath.inputs.reactome.reactome_chebis", "api/pypath.inputs.reactome.reactome_pathway_relations", "api/pypath.inputs.reactome.reactome_pathways", "api/pypath.inputs.reactome.reactome_uniprots", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.inputs.sider", "api/pypath.inputs.sider.SiderDrug", "api/pypath.inputs.sider.SiderSideeffect", "api/pypath.inputs.sider.SiderSideeffectMeddra", "api/pypath.inputs.sider.SiderSideeffetFrequency", "api/pypath.inputs.sider.sider_drug_names", "api/pypath.inputs.sider.sider_meddra_side_effects", "api/pypath.inputs.sider.sider_side_effect_frequencies", "api/pypath.inputs.sider.sider_side_effects", "api/pypath.inputs.stitch", "api/pypath.inputs.stitch.stitch_actions_interactions", "api/pypath.inputs.stitch.stitch_links_interactions", "api/pypath.inputs.string", "api/pypath.inputs.string.string_effects", "api/pypath.inputs.string.string_links_interactions", "api/pypath.inputs.string.string_physical_interactions", "api/pypath.inputs.string.string_species", "api/pypath.inputs.swisslipids", "api/pypath.inputs.switches_elm", "api/pypath.inputs.switches_elm.get_switches_elm", "api/pypath.inputs.transmir", "api/pypath.inputs.transmir.transmir_interactions", "api/pypath.inputs.trip", "api/pypath.inputs.trip.take_a_trip", "api/pypath.inputs.trip.trip_find_uniprot", "api/pypath.inputs.trip.trip_get_uniprot", "api/pypath.inputs.trip.trip_interactions", "api/pypath.inputs.trip.trip_process", "api/pypath.inputs.trip.trip_process_table", "api/pypath.inputs.twosides", "api/pypath.inputs.twosides.twosides_interactions", "api/pypath.inputs.unichem", "api/pypath.inputs.unichem.info", "api/pypath.inputs.unichem.unichem_info", "api/pypath.inputs.unichem.unichem_mapping", "api/pypath.inputs.unichem.unichem_sources", "api/pypath.inputs.uniprot", "api/pypath.inputs.uniprot.Taxon", "api/pypath.inputs.uniprot.UniprotQuery", "api/pypath.inputs.uniprot.UniprotRecordHistory", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol", "api/pypath.inputs.uniprot.get_uniprot_sec", "api/pypath.inputs.uniprot.protein_datasheet", "api/pypath.inputs.uniprot.query_builder", "api/pypath.inputs.uniprot.swissprot_deleted", "api/pypath.inputs.uniprot.trembl_deleted", "api/pypath.inputs.uniprot.uniprot_data", "api/pypath.inputs.uniprot.uniprot_deleted", "api/pypath.inputs.uniprot.uniprot_families", "api/pypath.inputs.uniprot.uniprot_history", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet", "api/pypath.inputs.uniprot.uniprot_keywords", "api/pypath.inputs.uniprot.uniprot_locations", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "api/pypath.inputs.uniprot.uniprot_preprocess", "api/pypath.inputs.uniprot.uniprot_query", "api/pypath.inputs.uniprot.uniprot_recent_version", "api/pypath.inputs.uniprot.uniprot_taxonomy", "api/pypath.inputs.uniprot.uniprot_tissues", "api/pypath.inputs.uniprot.uniprot_topology", "api/pypath.inputs.uniprot.valid_uniprot", "api/pypath.inputs.uniprot_db", "api/pypath.inputs.uniprot_db.all_swissprots", "api/pypath.inputs.uniprot_db.all_trembls", "api/pypath.inputs.uniprot_db.all_uniprots", "api/pypath.inputs.uniprot_db.get_db", "api/pypath.inputs.uniprot_db.init_db", "api/pypath.inputs.uniprot_db.is_swissprot", "api/pypath.inputs.uniprot_db.is_trembl", "api/pypath.inputs.uniprot_db.is_uniprot", "api/pypath.inputs.uniprot_idmapping", "api/pypath.inputs.uniprot_idmapping.idtypes", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.HmdbMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.RampMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.refs", "api/pypath.internals.refs.Reference", "api/pypath.internals.refs.get_pubmed_data", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkDataset", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.data_formats", "api/pypath.resources.data_formats.activity_flow", "api/pypath.resources.data_formats.enzyme_substrate", "api/pypath.resources.data_formats.interaction", "api/pypath.resources.data_formats.interaction_htp", "api/pypath.resources.data_formats.pathway_bad", "api/pypath.resources.data_formats.reaction_pc", "api/pypath.resources.data_formats.transcription_deprecated", "api/pypath.resources.data_formats.transcription_onebyone", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.resources.network", "api/pypath.resources.urls", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.cache_path", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.settings", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.abs.rst", "api/pypath.inputs.abs.abs_interactions.rst", "api/pypath.inputs.acsn.rst", "api/pypath.inputs.acsn.acsn_interactions.rst", "api/pypath.inputs.acsn.acsn_interactions_sif.rst", "api/pypath.inputs.adrecs.rst", "api/pypath.inputs.adrecs.AdrecsAdr.rst", "api/pypath.inputs.adrecs.AdrecsChildParent.rst", "api/pypath.inputs.adrecs.AdrecsDrug.rst", "api/pypath.inputs.adrecs.AdrecsDrugAdr.rst", "api/pypath.inputs.adrecs.AdrecsTerm.rst", "api/pypath.inputs.adrecs.adrecs_adr_ontology.rst", "api/pypath.inputs.adrecs.adrecs_drug_adr.rst", "api/pypath.inputs.adrecs.adrecs_drug_identifiers.rst", "api/pypath.inputs.adrecs.adrecs_hierarchy.rst", "api/pypath.inputs.biogrid.rst", "api/pypath.inputs.biogrid.biogrid_all_interactions.rst", "api/pypath.inputs.biogrid.biogrid_interactions.rst", "api/pypath.inputs.biomart.rst", "api/pypath.inputs.biomart.biomart_homology.rst", "api/pypath.inputs.biomart.biomart_microarray.rst", "api/pypath.inputs.biomart.biomart_microarray_types.rst", "api/pypath.inputs.biomart.biomart_microarrays.rst", "api/pypath.inputs.biomart.biomart_query.rst", "api/pypath.inputs.biomodels.rst", "api/pypath.inputs.biomodels.download_single_model.rst", "api/pypath.inputs.biomodels.get_all_models.rst", "api/pypath.inputs.biomodels.get_biomodels.rst", "api/pypath.inputs.biomodels.get_biomodels_req.rst", "api/pypath.inputs.biomodels.get_single_model.rst", "api/pypath.inputs.ca1.rst", "api/pypath.inputs.ca1.ca1_interactions.rst", "api/pypath.inputs.cancercellmap.rst", "api/pypath.inputs.cancercellmap.ccmap_interactions.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.chembl.rst", "api/pypath.inputs.chembl.chembl_activities.rst", "api/pypath.inputs.chembl.chembl_assays.rst", "api/pypath.inputs.chembl.chembl_documents.rst", "api/pypath.inputs.chembl.chembl_drug_indications.rst", "api/pypath.inputs.chembl.chembl_mechanisms.rst", "api/pypath.inputs.chembl.chembl_molecules.rst", "api/pypath.inputs.chembl.chembl_targets.rst", "api/pypath.inputs.clinvar.rst", "api/pypath.inputs.clinvar.clinvar_citations.rst", "api/pypath.inputs.clinvar.clinvar_raw.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.compath.rst", "api/pypath.inputs.compath.compath_mappings.rst", "api/pypath.inputs.cpdb.rst", "api/pypath.inputs.cpdb.cpdb_interactions.rst", "api/pypath.inputs.cpdb.cpdb_interactions_ltp.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ctdbase.rst", "api/pypath.inputs.ctdbase.ctdbase_relations.rst", "api/pypath.inputs.ctdbase.ctdbase_vocabulary.rst", "api/pypath.inputs.ddinter.rst", "api/pypath.inputs.ddinter.ddinter_drug_interactions.rst", "api/pypath.inputs.ddinter.ddinter_identifiers.rst", "api/pypath.inputs.ddinter.ddinter_interactions.rst", "api/pypath.inputs.ddinter.ddinter_mappings.rst", "api/pypath.inputs.ddinter.ddinter_n_drugs.rst", "api/pypath.inputs.deathdomain.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued.rst", "api/pypath.inputs.dip.rst", "api/pypath.inputs.dip.dip_interactions.rst", "api/pypath.inputs.dip.dip_login.rst", "api/pypath.inputs.diseases.rst", "api/pypath.inputs.diseases.diseases_general.rst", "api/pypath.inputs.diseases.experiments_filtered.rst", "api/pypath.inputs.diseases.experiments_full.rst", "api/pypath.inputs.diseases.knowledge_filtered.rst", "api/pypath.inputs.diseases.knowledge_full.rst", "api/pypath.inputs.diseases.textmining_filtered.rst", "api/pypath.inputs.diseases.textmining_full.rst", "api/pypath.inputs.drugbank.rst", "api/pypath.inputs.drugbank.DrugbankFull.rst", "api/pypath.inputs.drugbank.drugbank_annotations.rst", "api/pypath.inputs.drugbank.drugbank_drugs.rst", "api/pypath.inputs.drugbank.drugbank_interactions.rst", "api/pypath.inputs.drugbank.drugbank_mapping.rst", "api/pypath.inputs.drugbank.drugbank_raw_interactions.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.elm.rst", "api/pypath.inputs.elm.elm_classes.rst", "api/pypath.inputs.elm.elm_domains.rst", "api/pypath.inputs.elm.elm_instances.rst", "api/pypath.inputs.elm.elm_interactions.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.encode.rst", "api/pypath.inputs.encode.encode_tf_mirna_interactions.rst", "api/pypath.inputs.ensembl.rst", "api/pypath.inputs.ensembl.ensembl_organisms.rst", "api/pypath.inputs.eutils.rst", "api/pypath.inputs.eutils.esummary.rst", "api/pypath.inputs.expasy.rst", "api/pypath.inputs.expasy.expasy_enzyme_classes.rst", "api/pypath.inputs.expasy.expasy_enzymes.rst", "api/pypath.inputs.genecards.rst", "api/pypath.inputs.genecards.genecards_datasheet.rst", "api/pypath.inputs.genecards.genecards_soup.rst", "api/pypath.inputs.genecards.genecards_summaries.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.graphviz.rst", "api/pypath.inputs.graphviz.graphviz_attrs.rst", "api/pypath.inputs.hprd.rst", "api/pypath.inputs.hprd.get_hprd.rst", "api/pypath.inputs.hprd.hprd_enzyme_substrate.rst", "api/pypath.inputs.hprd.hprd_interactions.rst", "api/pypath.inputs.hprd.hprd_interactions_htp.rst", "api/pypath.inputs.htri.rst", "api/pypath.inputs.htri.htri_interactions.rst", "api/pypath.inputs.humsavar.rst", "api/pypath.inputs.humsavar.uniprot_variants.rst", "api/pypath.inputs.ielm.rst", "api/pypath.inputs.ielm.get_ielm.rst", "api/pypath.inputs.ielm.get_ielm_huge.rst", "api/pypath.inputs.imweb.rst", "api/pypath.inputs.imweb.get_imweb.rst", "api/pypath.inputs.imweb.get_imweb_req.rst", "api/pypath.inputs.innatedb.rst", "api/pypath.inputs.innatedb.innatedb_interactions.rst", "api/pypath.inputs.instruct.rst", "api/pypath.inputs.instruct.get_instruct.rst", "api/pypath.inputs.instruct.get_instruct_offsets.rst", "api/pypath.inputs.intact.rst", "api/pypath.inputs.intact.intact_interactions.rst", "api/pypath.inputs.interpro.rst", "api/pypath.inputs.interpro.interpro2go_annotations.rst", "api/pypath.inputs.interpro.interpro_annotations.rst", "api/pypath.inputs.interpro.interpro_entries.rst", "api/pypath.inputs.interpro.interpro_xrefs.rst", "api/pypath.inputs.ipi.rst", "api/pypath.inputs.ipi.ipi_uniprot.rst", "api/pypath.inputs.kegg_api.rst", "api/pypath.inputs.kegg_api.disease_to_drug.rst", "api/pypath.inputs.kegg_api.disease_to_gene.rst", "api/pypath.inputs.kegg_api.disease_to_pathway.rst", "api/pypath.inputs.kegg_api.drug_to_disease.rst", "api/pypath.inputs.kegg_api.drug_to_drug.rst", "api/pypath.inputs.kegg_api.drug_to_gene.rst", "api/pypath.inputs.kegg_api.drug_to_pathway.rst", "api/pypath.inputs.kegg_api.gene_to_disease.rst", "api/pypath.inputs.kegg_api.gene_to_drug.rst", "api/pypath.inputs.kegg_api.gene_to_pathway.rst", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot.rst", "api/pypath.inputs.kegg_api.pathway_to_disease.rst", "api/pypath.inputs.kegg_api.pathway_to_drug.rst", "api/pypath.inputs.kegg_api.pathway_to_gene.rst", "api/pypath.inputs.kirouac2010.rst", "api/pypath.inputs.kirouac2010.kirouac2010_interactions.rst", "api/pypath.inputs.laudanna.rst", "api/pypath.inputs.laudanna.laudanna_directions.rst", "api/pypath.inputs.laudanna.laudanna_effects.rst", "api/pypath.inputs.lincs.rst", "api/pypath.inputs.lincs.lincs_compounds.rst", "api/pypath.inputs.macrophage.rst", "api/pypath.inputs.macrophage.macrophage_interactions.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mimp.rst", "api/pypath.inputs.mimp.get_kinase_class.rst", "api/pypath.inputs.mimp.mimp_enzyme_substrate.rst", "api/pypath.inputs.mimp.mimp_interactions.rst", "api/pypath.inputs.mir2disease.rst", "api/pypath.inputs.mir2disease.mir2disease_interactions.rst", "api/pypath.inputs.mirdeathdb.rst", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.mppi.rst", "api/pypath.inputs.mppi.mppi_interactions.rst", "api/pypath.inputs.ncrdeathdb.rst", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions.rst", "api/pypath.inputs.negatome.rst", "api/pypath.inputs.negatome.negatome_interactions.rst", "api/pypath.inputs.netbiol.rst", "api/pypath.inputs.netbiol.arn_interactions.rst", "api/pypath.inputs.netbiol.nrf2ome_interactions.rst", "api/pypath.inputs.offsides.rst", "api/pypath.inputs.offsides.offsides_side_effects.rst", "api/pypath.inputs.ontology.rst", "api/pypath.inputs.ontology.listof_ontologies.rst", "api/pypath.inputs.ontology.ontology.rst", "api/pypath.inputs.opentargets.rst", "api/pypath.inputs.opentargets.opentargets_adverse_reactions.rst", "api/pypath.inputs.opentargets.opentargets_baseline_expression.rst", "api/pypath.inputs.opentargets.opentargets_direct_score.rst", "api/pypath.inputs.opentargets.opentargets_general.rst", "api/pypath.inputs.opentargets.opentargets_indirect_score.rst", "api/pypath.inputs.pathophenodb.rst", "api/pypath.inputs.pathophenodb.DiseasePathogen.rst", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions.rst", "api/pypath.inputs.pathwaycommons.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions.rst", "api/pypath.inputs.pazar.rst", "api/pypath.inputs.pazar.pazar_interactions.rst", "api/pypath.inputs.pepcyber.rst", "api/pypath.inputs.pepcyber.pepcyber_details.rst", "api/pypath.inputs.pepcyber.pepcyber_interactions.rst", "api/pypath.inputs.pharos.rst", "api/pypath.inputs.pharos.pharos_diseases.rst", "api/pypath.inputs.pharos.pharos_expression.rst", "api/pypath.inputs.pharos.pharos_general.rst", "api/pypath.inputs.pharos.pharos_gtex.rst", "api/pypath.inputs.pharos.pharos_ligands.rst", "api/pypath.inputs.pharos.pharos_orthologs.rst", "api/pypath.inputs.pharos.pharos_targets.rst", "api/pypath.inputs.pharos.pharos_xrefs.rst", "api/pypath.inputs.phobius.rst", "api/pypath.inputs.phobius.phobius_annotations.rst", "api/pypath.inputs.phosphonetworks.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions.rst", "api/pypath.inputs.phosphopoint.rst", "api/pypath.inputs.phosphopoint.phosphopoint_directions.rst", "api/pypath.inputs.phosphopoint.phosphopoint_interactions.rst", "api/pypath.inputs.pro.rst", "api/pypath.inputs.pro.get_pro.rst", "api/pypath.inputs.pro.pro_mapping.rst", "api/pypath.inputs.protmapper.rst", "api/pypath.inputs.protmapper.get_protmapper.rst", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate.rst", "api/pypath.inputs.protmapper.protmapper_interactions.rst", "api/pypath.inputs.pubchem.rst", "api/pypath.inputs.pubchem.pubchem_mapping.rst", "api/pypath.inputs.pubmed.rst", "api/pypath.inputs.pubmed.get_pmid.rst", "api/pypath.inputs.pubmed.get_pubmeds.rst", "api/pypath.inputs.pubmed.only_pmids.rst", "api/pypath.inputs.pubmed.open_pubmed.rst", "api/pypath.inputs.pubmed.pmids_dict.rst", "api/pypath.inputs.pubmed.pmids_list.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.reaction.rst", "api/pypath.inputs.reaction.acsn_biopax.rst", "api/pypath.inputs.reaction.acsn_interactions_2.rst", "api/pypath.inputs.reaction.get_acsn_effects.rst", "api/pypath.inputs.reaction.get_controls.rst", "api/pypath.inputs.reaction.get_interactions.rst", "api/pypath.inputs.reaction.get_reactions.rst", "api/pypath.inputs.reaction.get_soup.rst", "api/pypath.inputs.reaction.panther_biopax.rst", "api/pypath.inputs.reaction.panther_interactions.rst", "api/pypath.inputs.reaction.pid_biopax.rst", "api/pypath.inputs.reaction.pid_interactions.rst", "api/pypath.inputs.reaction.process_complex.rst", "api/pypath.inputs.reaction.process_controls.rst", "api/pypath.inputs.reaction.process_reactions.rst", "api/pypath.inputs.reaction.reactions_biopax.rst", "api/pypath.inputs.reaction.reactome_biopax.rst", "api/pypath.inputs.reaction.reactome_bs.rst", "api/pypath.inputs.reaction.reactome_interactions.rst", "api/pypath.inputs.reaction.reactome_sbml.rst", "api/pypath.inputs.reactome.rst", "api/pypath.inputs.reactome.reactome_chebis.rst", "api/pypath.inputs.reactome.reactome_pathway_relations.rst", "api/pypath.inputs.reactome.reactome_pathways.rst", "api/pypath.inputs.reactome.reactome_uniprots.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.inputs.sider.rst", "api/pypath.inputs.sider.SiderDrug.rst", "api/pypath.inputs.sider.SiderSideeffect.rst", "api/pypath.inputs.sider.SiderSideeffectMeddra.rst", "api/pypath.inputs.sider.SiderSideeffetFrequency.rst", "api/pypath.inputs.sider.sider_drug_names.rst", "api/pypath.inputs.sider.sider_meddra_side_effects.rst", "api/pypath.inputs.sider.sider_side_effect_frequencies.rst", "api/pypath.inputs.sider.sider_side_effects.rst", "api/pypath.inputs.stitch.rst", "api/pypath.inputs.stitch.stitch_actions_interactions.rst", "api/pypath.inputs.stitch.stitch_links_interactions.rst", "api/pypath.inputs.string.rst", "api/pypath.inputs.string.string_effects.rst", "api/pypath.inputs.string.string_links_interactions.rst", "api/pypath.inputs.string.string_physical_interactions.rst", "api/pypath.inputs.string.string_species.rst", "api/pypath.inputs.swisslipids.rst", "api/pypath.inputs.switches_elm.rst", "api/pypath.inputs.switches_elm.get_switches_elm.rst", "api/pypath.inputs.transmir.rst", "api/pypath.inputs.transmir.transmir_interactions.rst", "api/pypath.inputs.trip.rst", "api/pypath.inputs.trip.take_a_trip.rst", "api/pypath.inputs.trip.trip_find_uniprot.rst", "api/pypath.inputs.trip.trip_get_uniprot.rst", "api/pypath.inputs.trip.trip_interactions.rst", "api/pypath.inputs.trip.trip_process.rst", "api/pypath.inputs.trip.trip_process_table.rst", "api/pypath.inputs.twosides.rst", "api/pypath.inputs.twosides.twosides_interactions.rst", "api/pypath.inputs.unichem.rst", "api/pypath.inputs.unichem.info.rst", "api/pypath.inputs.unichem.unichem_info.rst", "api/pypath.inputs.unichem.unichem_mapping.rst", "api/pypath.inputs.unichem.unichem_sources.rst", "api/pypath.inputs.uniprot.rst", "api/pypath.inputs.uniprot.Taxon.rst", "api/pypath.inputs.uniprot.UniprotQuery.rst", "api/pypath.inputs.uniprot.UniprotRecordHistory.rst", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol.rst", "api/pypath.inputs.uniprot.get_uniprot_sec.rst", "api/pypath.inputs.uniprot.protein_datasheet.rst", "api/pypath.inputs.uniprot.query_builder.rst", "api/pypath.inputs.uniprot.swissprot_deleted.rst", "api/pypath.inputs.uniprot.trembl_deleted.rst", "api/pypath.inputs.uniprot.uniprot_data.rst", "api/pypath.inputs.uniprot.uniprot_deleted.rst", "api/pypath.inputs.uniprot.uniprot_families.rst", "api/pypath.inputs.uniprot.uniprot_history.rst", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet.rst", "api/pypath.inputs.uniprot.uniprot_keywords.rst", "api/pypath.inputs.uniprot.uniprot_locations.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2.rst", "api/pypath.inputs.uniprot.uniprot_preprocess.rst", "api/pypath.inputs.uniprot.uniprot_query.rst", "api/pypath.inputs.uniprot.uniprot_recent_version.rst", "api/pypath.inputs.uniprot.uniprot_taxonomy.rst", "api/pypath.inputs.uniprot.uniprot_tissues.rst", "api/pypath.inputs.uniprot.uniprot_topology.rst", "api/pypath.inputs.uniprot.valid_uniprot.rst", "api/pypath.inputs.uniprot_db.rst", "api/pypath.inputs.uniprot_db.all_swissprots.rst", "api/pypath.inputs.uniprot_db.all_trembls.rst", "api/pypath.inputs.uniprot_db.all_uniprots.rst", "api/pypath.inputs.uniprot_db.get_db.rst", "api/pypath.inputs.uniprot_db.init_db.rst", "api/pypath.inputs.uniprot_db.is_swissprot.rst", "api/pypath.inputs.uniprot_db.is_trembl.rst", "api/pypath.inputs.uniprot_db.is_uniprot.rst", "api/pypath.inputs.uniprot_idmapping.rst", "api/pypath.inputs.uniprot_idmapping.idtypes.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.HmdbMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.RampMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.refs.rst", "api/pypath.internals.refs.Reference.rst", "api/pypath.internals.refs.get_pubmed_data.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkDataset.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.data_formats.rst", "api/pypath.resources.data_formats.activity_flow.rst", "api/pypath.resources.data_formats.enzyme_substrate.rst", "api/pypath.resources.data_formats.interaction.rst", "api/pypath.resources.data_formats.interaction_htp.rst", "api/pypath.resources.data_formats.pathway_bad.rst", "api/pypath.resources.data_formats.reaction_pc.rst", "api/pypath.resources.data_formats.transcription_deprecated.rst", "api/pypath.resources.data_formats.transcription_onebyone.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.resources.network.rst", "api/pypath.resources.urls.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.cache_path.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.settings.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.abs", "pypath.inputs.abs.abs_interactions", "pypath.inputs.acsn", "pypath.inputs.acsn.acsn_interactions", "pypath.inputs.acsn.acsn_interactions_sif", "pypath.inputs.adrecs", "pypath.inputs.adrecs.AdrecsAdr", "pypath.inputs.adrecs.AdrecsChildParent", "pypath.inputs.adrecs.AdrecsDrug", "pypath.inputs.adrecs.AdrecsDrugAdr", "pypath.inputs.adrecs.AdrecsTerm", "pypath.inputs.adrecs.adrecs_adr_ontology", "pypath.inputs.adrecs.adrecs_drug_adr", "pypath.inputs.adrecs.adrecs_drug_identifiers", "pypath.inputs.adrecs.adrecs_hierarchy", "pypath.inputs.biogrid", "pypath.inputs.biogrid.biogrid_all_interactions", "pypath.inputs.biogrid.biogrid_interactions", "pypath.inputs.biomart", "pypath.inputs.biomart.biomart_homology", "pypath.inputs.biomart.biomart_microarray", "pypath.inputs.biomart.biomart_microarray_types", "pypath.inputs.biomart.biomart_microarrays", "pypath.inputs.biomart.biomart_query", "pypath.inputs.biomodels", "pypath.inputs.biomodels.download_single_model", "pypath.inputs.biomodels.get_all_models", "pypath.inputs.biomodels.get_biomodels", "pypath.inputs.biomodels.get_biomodels_req", "pypath.inputs.biomodels.get_single_model", "pypath.inputs.ca1", "pypath.inputs.ca1.ca1_interactions", "pypath.inputs.cancercellmap", "pypath.inputs.cancercellmap.ccmap_interactions", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.chembl", "pypath.inputs.chembl.chembl_activities", "pypath.inputs.chembl.chembl_assays", "pypath.inputs.chembl.chembl_documents", "pypath.inputs.chembl.chembl_drug_indications", "pypath.inputs.chembl.chembl_mechanisms", "pypath.inputs.chembl.chembl_molecules", "pypath.inputs.chembl.chembl_targets", "pypath.inputs.clinvar", "pypath.inputs.clinvar.clinvar_citations", "pypath.inputs.clinvar.clinvar_raw", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.compath", "pypath.inputs.compath.compath_mappings", "pypath.inputs.cpdb", "pypath.inputs.cpdb.cpdb_interactions", "pypath.inputs.cpdb.cpdb_interactions_ltp", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ctdbase", "pypath.inputs.ctdbase.ctdbase_relations", "pypath.inputs.ctdbase.ctdbase_vocabulary", "pypath.inputs.ddinter", "pypath.inputs.ddinter.ddinter_drug_interactions", "pypath.inputs.ddinter.ddinter_identifiers", "pypath.inputs.ddinter.ddinter_interactions", "pypath.inputs.ddinter.ddinter_mappings", "pypath.inputs.ddinter.ddinter_n_drugs", "pypath.inputs.deathdomain", "pypath.inputs.deathdomain.deathdomain_interactions", "pypath.inputs.deathdomain.deathdomain_interactions_rescued", "pypath.inputs.dip", "pypath.inputs.dip.dip_interactions", "pypath.inputs.dip.dip_login", "pypath.inputs.diseases", "pypath.inputs.diseases.diseases_general", "pypath.inputs.diseases.experiments_filtered", "pypath.inputs.diseases.experiments_full", "pypath.inputs.diseases.knowledge_filtered", "pypath.inputs.diseases.knowledge_full", "pypath.inputs.diseases.textmining_filtered", "pypath.inputs.diseases.textmining_full", "pypath.inputs.drugbank", "pypath.inputs.drugbank.DrugbankFull", "pypath.inputs.drugbank.drugbank_annotations", "pypath.inputs.drugbank.drugbank_drugs", "pypath.inputs.drugbank.drugbank_interactions", "pypath.inputs.drugbank.drugbank_mapping", "pypath.inputs.drugbank.drugbank_raw_interactions", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.elm", "pypath.inputs.elm.elm_classes", "pypath.inputs.elm.elm_domains", "pypath.inputs.elm.elm_instances", "pypath.inputs.elm.elm_interactions", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.encode", "pypath.inputs.encode.encode_tf_mirna_interactions", "pypath.inputs.ensembl", "pypath.inputs.ensembl.ensembl_organisms", "pypath.inputs.eutils", "pypath.inputs.eutils.esummary", "pypath.inputs.expasy", "pypath.inputs.expasy.expasy_enzyme_classes", "pypath.inputs.expasy.expasy_enzymes", "pypath.inputs.genecards", "pypath.inputs.genecards.genecards_datasheet", "pypath.inputs.genecards.genecards_soup", "pypath.inputs.genecards.genecards_summaries", "pypath.inputs.get_method", "pypath.inputs.graphviz", "pypath.inputs.graphviz.graphviz_attrs", "pypath.inputs.hprd", "pypath.inputs.hprd.get_hprd", "pypath.inputs.hprd.hprd_enzyme_substrate", "pypath.inputs.hprd.hprd_interactions", "pypath.inputs.hprd.hprd_interactions_htp", "pypath.inputs.htri", "pypath.inputs.htri.htri_interactions", "pypath.inputs.humsavar", "pypath.inputs.humsavar.uniprot_variants", "pypath.inputs.ielm", "pypath.inputs.ielm.get_ielm", "pypath.inputs.ielm.get_ielm_huge", "pypath.inputs.imweb", "pypath.inputs.imweb.get_imweb", "pypath.inputs.imweb.get_imweb_req", "pypath.inputs.innatedb", "pypath.inputs.innatedb.innatedb_interactions", "pypath.inputs.instruct", "pypath.inputs.instruct.get_instruct", "pypath.inputs.instruct.get_instruct_offsets", "pypath.inputs.intact", "pypath.inputs.intact.intact_interactions", "pypath.inputs.interpro", "pypath.inputs.interpro.interpro2go_annotations", "pypath.inputs.interpro.interpro_annotations", "pypath.inputs.interpro.interpro_entries", "pypath.inputs.interpro.interpro_xrefs", "pypath.inputs.ipi", "pypath.inputs.ipi.ipi_uniprot", "pypath.inputs.kegg_api", "pypath.inputs.kegg_api.disease_to_drug", "pypath.inputs.kegg_api.disease_to_gene", "pypath.inputs.kegg_api.disease_to_pathway", "pypath.inputs.kegg_api.drug_to_disease", "pypath.inputs.kegg_api.drug_to_drug", "pypath.inputs.kegg_api.drug_to_gene", "pypath.inputs.kegg_api.drug_to_pathway", "pypath.inputs.kegg_api.gene_to_disease", "pypath.inputs.kegg_api.gene_to_drug", "pypath.inputs.kegg_api.gene_to_pathway", "pypath.inputs.kegg_api.kegg_drug_to_chebi", "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "pypath.inputs.kegg_api.kegg_gene_to_uniprot", "pypath.inputs.kegg_api.pathway_to_disease", "pypath.inputs.kegg_api.pathway_to_drug", "pypath.inputs.kegg_api.pathway_to_gene", "pypath.inputs.kirouac2010", "pypath.inputs.kirouac2010.kirouac2010_interactions", "pypath.inputs.laudanna", "pypath.inputs.laudanna.laudanna_directions", "pypath.inputs.laudanna.laudanna_effects", "pypath.inputs.lincs", "pypath.inputs.lincs.lincs_compounds", "pypath.inputs.macrophage", "pypath.inputs.macrophage.macrophage_interactions", "pypath.inputs.main", "pypath.inputs.mimp", "pypath.inputs.mimp.get_kinase_class", "pypath.inputs.mimp.mimp_enzyme_substrate", "pypath.inputs.mimp.mimp_interactions", "pypath.inputs.mir2disease", "pypath.inputs.mir2disease.mir2disease_interactions", "pypath.inputs.mirdeathdb", "pypath.inputs.mirdeathdb.mirdeathdb_interactions", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.mppi", "pypath.inputs.mppi.mppi_interactions", "pypath.inputs.ncrdeathdb", "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "pypath.inputs.negatome", "pypath.inputs.negatome.negatome_interactions", "pypath.inputs.netbiol", "pypath.inputs.netbiol.arn_interactions", "pypath.inputs.netbiol.nrf2ome_interactions", "pypath.inputs.offsides", "pypath.inputs.offsides.offsides_side_effects", "pypath.inputs.ontology", "pypath.inputs.ontology.listof_ontologies", "pypath.inputs.ontology.ontology", "pypath.inputs.opentargets", "pypath.inputs.opentargets.opentargets_adverse_reactions", "pypath.inputs.opentargets.opentargets_baseline_expression", "pypath.inputs.opentargets.opentargets_direct_score", "pypath.inputs.opentargets.opentargets_general", "pypath.inputs.opentargets.opentargets_indirect_score", "pypath.inputs.pathophenodb", "pypath.inputs.pathophenodb.DiseasePathogen", "pypath.inputs.pathophenodb.disease_pathogen_interactions", "pypath.inputs.pathwaycommons", "pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "pypath.inputs.pathwaycommons.PathwayCommonsResource", "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "pypath.inputs.pazar", "pypath.inputs.pazar.pazar_interactions", "pypath.inputs.pepcyber", "pypath.inputs.pepcyber.pepcyber_details", "pypath.inputs.pepcyber.pepcyber_interactions", "pypath.inputs.pharos", "pypath.inputs.pharos.pharos_diseases", "pypath.inputs.pharos.pharos_expression", "pypath.inputs.pharos.pharos_general", "pypath.inputs.pharos.pharos_gtex", "pypath.inputs.pharos.pharos_ligands", "pypath.inputs.pharos.pharos_orthologs", "pypath.inputs.pharos.pharos_targets", "pypath.inputs.pharos.pharos_xrefs", "pypath.inputs.phobius", "pypath.inputs.phobius.phobius_annotations", "pypath.inputs.phosphonetworks", "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "pypath.inputs.phosphonetworks.phosphonetworks_interactions", "pypath.inputs.phosphopoint", "pypath.inputs.phosphopoint.phosphopoint_directions", "pypath.inputs.phosphopoint.phosphopoint_interactions", "pypath.inputs.pro", "pypath.inputs.pro.get_pro", "pypath.inputs.pro.pro_mapping", "pypath.inputs.protmapper", "pypath.inputs.protmapper.get_protmapper", "pypath.inputs.protmapper.protmapper_enzyme_substrate", "pypath.inputs.protmapper.protmapper_interactions", "pypath.inputs.pubchem", "pypath.inputs.pubchem.pubchem_mapping", "pypath.inputs.pubmed", "pypath.inputs.pubmed.get_pmid", "pypath.inputs.pubmed.get_pubmeds", "pypath.inputs.pubmed.only_pmids", "pypath.inputs.pubmed.open_pubmed", "pypath.inputs.pubmed.pmids_dict", "pypath.inputs.pubmed.pmids_list", "pypath.inputs.rdata", "pypath.inputs.reaction", "pypath.inputs.reaction.acsn_biopax", "pypath.inputs.reaction.acsn_interactions_2", "pypath.inputs.reaction.get_acsn_effects", "pypath.inputs.reaction.get_controls", "pypath.inputs.reaction.get_interactions", "pypath.inputs.reaction.get_reactions", "pypath.inputs.reaction.get_soup", "pypath.inputs.reaction.panther_biopax", "pypath.inputs.reaction.panther_interactions", "pypath.inputs.reaction.pid_biopax", "pypath.inputs.reaction.pid_interactions", "pypath.inputs.reaction.process_complex", "pypath.inputs.reaction.process_controls", "pypath.inputs.reaction.process_reactions", "pypath.inputs.reaction.reactions_biopax", "pypath.inputs.reaction.reactome_biopax", "pypath.inputs.reaction.reactome_bs", "pypath.inputs.reaction.reactome_interactions", "pypath.inputs.reaction.reactome_sbml", "pypath.inputs.reactome", "pypath.inputs.reactome.reactome_chebis", "pypath.inputs.reactome.reactome_pathway_relations", "pypath.inputs.reactome.reactome_pathways", "pypath.inputs.reactome.reactome_uniprots", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.inputs.sider", "pypath.inputs.sider.SiderDrug", "pypath.inputs.sider.SiderSideeffect", "pypath.inputs.sider.SiderSideeffectMeddra", "pypath.inputs.sider.SiderSideeffetFrequency", "pypath.inputs.sider.sider_drug_names", "pypath.inputs.sider.sider_meddra_side_effects", "pypath.inputs.sider.sider_side_effect_frequencies", "pypath.inputs.sider.sider_side_effects", "pypath.inputs.stitch", "pypath.inputs.stitch.stitch_actions_interactions", "pypath.inputs.stitch.stitch_links_interactions", "pypath.inputs.string", "pypath.inputs.string.string_effects", "pypath.inputs.string.string_links_interactions", "pypath.inputs.string.string_physical_interactions", "pypath.inputs.string.string_species", "pypath.inputs.swisslipids", "pypath.inputs.switches_elm", "pypath.inputs.switches_elm.get_switches_elm", "pypath.inputs.transmir", "pypath.inputs.transmir.transmir_interactions", "pypath.inputs.trip", "pypath.inputs.trip.take_a_trip", "pypath.inputs.trip.trip_find_uniprot", "pypath.inputs.trip.trip_get_uniprot", "pypath.inputs.trip.trip_interactions", "pypath.inputs.trip.trip_process", "pypath.inputs.trip.trip_process_table", "pypath.inputs.twosides", "pypath.inputs.twosides.twosides_interactions", "pypath.inputs.unichem", "pypath.inputs.unichem.info", "pypath.inputs.unichem.unichem_info", "pypath.inputs.unichem.unichem_mapping", "pypath.inputs.unichem.unichem_sources", "pypath.inputs.uniprot", "pypath.inputs.uniprot.Taxon", "pypath.inputs.uniprot.UniprotQuery", "pypath.inputs.uniprot.UniprotRecordHistory", "pypath.inputs.uniprot.deleted_uniprot_genesymbol", "pypath.inputs.uniprot.get_uniprot_sec", "pypath.inputs.uniprot.protein_datasheet", "pypath.inputs.uniprot.query_builder", "pypath.inputs.uniprot.swissprot_deleted", "pypath.inputs.uniprot.trembl_deleted", "pypath.inputs.uniprot.uniprot_data", "pypath.inputs.uniprot.uniprot_deleted", "pypath.inputs.uniprot.uniprot_families", "pypath.inputs.uniprot.uniprot_history", "pypath.inputs.uniprot.uniprot_history_recent_datasheet", "pypath.inputs.uniprot.uniprot_keywords", "pypath.inputs.uniprot.uniprot_locations", "pypath.inputs.uniprot.uniprot_ncbi_taxids", "pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "pypath.inputs.uniprot.uniprot_preprocess", "pypath.inputs.uniprot.uniprot_query", "pypath.inputs.uniprot.uniprot_recent_version", "pypath.inputs.uniprot.uniprot_taxonomy", "pypath.inputs.uniprot.uniprot_tissues", "pypath.inputs.uniprot.uniprot_topology", "pypath.inputs.uniprot.valid_uniprot", "pypath.inputs.uniprot_db", "pypath.inputs.uniprot_db.all_swissprots", "pypath.inputs.uniprot_db.all_trembls", "pypath.inputs.uniprot_db.all_uniprots", "pypath.inputs.uniprot_db.get_db", "pypath.inputs.uniprot_db.init_db", "pypath.inputs.uniprot_db.is_swissprot", "pypath.inputs.uniprot_db.is_trembl", "pypath.inputs.uniprot_db.is_uniprot", "pypath.inputs.uniprot_idmapping", "pypath.inputs.uniprot_idmapping.idtypes", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.HmdbMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.RampMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.refs", "pypath.internals.refs.Reference", "pypath.internals.refs.get_pubmed_data", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkDataset", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.data_formats", "pypath.resources.data_formats.activity_flow", "pypath.resources.data_formats.enzyme_substrate", "pypath.resources.data_formats.interaction", "pypath.resources.data_formats.interaction_htp", "pypath.resources.data_formats.pathway_bad", "pypath.resources.data_formats.reaction_pc", "pypath.resources.data_formats.transcription_deprecated", "pypath.resources.data_formats.transcription_onebyone", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.resources.network", "pypath.resources.urls", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.cache_path", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.settings", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 16, 17, 18, 19, 20, 47, 50, 70, 72, 95, 97, 107, 115, 137, 152, 208, 209, 210, 211, 212, 214, 217, 218, 245, 263, 266, 300, 301, 302, 303, 307, 310, 313, 318, 336, 337, 338, 342, 345, 355, 367, 368, 369, 371, 374, 381, 385, 386, 389, 390, 391, 392, 400, 401, 403, 412, 422, 423, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 463, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 483, 484], "python": [0, 34, 480, 481, 483, 484], "modul": [0, 1, 4, 6, 9, 34, 70, 123, 263, 322, 372, 374, 381, 385, 398, 405, 410, 412, 414, 423, 425, 428, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 459, 460, 473, 479, 482, 483, 484], "build": [0, 342, 479, 480, 483], "molecular": [0, 318, 479, 480, 483], "biologi": [0, 480, 481], "databas": [0, 7, 11, 21, 22, 23, 54, 56, 65, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 97, 113, 115, 117, 118, 152, 160, 187, 198, 203, 211, 236, 237, 238, 241, 245, 259, 304, 305, 306, 307, 322, 329, 338, 377, 382, 407, 408, 417, 419, 420, 436, 479, 483, 484], "With": [0, 480], "you": [0, 386, 412, 436, 437, 440, 446, 451, 463, 479, 482, 484], "can": [0, 3, 32, 206, 310, 313, 314, 337, 342, 345, 355, 386, 412, 431, 436, 460, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478, 480, 481, 482, 483, 484], "access": [0, 4, 70, 95, 360, 386, 423, 451, 479, 480, 483], "process": [0, 13, 26, 27, 41, 43, 128, 129, 175, 176, 275, 287, 290, 325, 327, 337, 340, 342, 345, 355, 371, 398, 412, 430, 431, 436, 480, 483], "combin": [0, 310, 313, 480, 481, 484], "more": [0, 26, 27, 32, 33, 70, 102, 115, 266, 306, 332, 334, 337, 342, 345, 355, 412, 467, 468, 469, 470, 471, 472, 480, 481, 483, 484], "than": [0, 26, 27, 115, 266, 306, 480, 481, 484], "170": 0, "public": [0, 286], "resourc": [0, 5, 67, 68, 70, 122, 217, 226, 318, 332, 333, 379, 436, 479, 480, 483, 484], "interact": [0, 11, 13, 14, 26, 27, 41, 43, 67, 68, 75, 77, 81, 82, 95, 98, 107, 128, 129, 137, 144, 147, 160, 187, 189, 198, 200, 201, 236, 237, 260, 287, 290, 310, 313, 314, 325, 326, 327, 329, 379, 396, 412, 418, 419, 420, 479, 480, 483], "network": [0, 5, 41, 313, 401, 412, 460, 479, 480, 483], "includ": [0, 6, 13, 30, 32, 33, 36, 47, 205, 206, 313, 314, 326, 337, 342, 345, 355, 374, 381, 385, 412, 417, 419, 420, 481, 483, 484], "annot": [0, 96, 97, 134, 149, 150, 479, 480, 483], "about": [0, 7, 8, 95, 102, 113, 151, 236, 239, 240, 241, 242, 243, 244, 245, 246, 266, 306, 331, 332, 443, 444, 453, 479, 480, 484], "function": [0, 3, 4, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 62, 63, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 272, 292, 297, 299, 306, 308, 311, 313, 317, 318, 319, 321, 328, 330, 335, 337, 342, 345, 355, 361, 370, 394, 406, 410, 429, 430, 435, 436, 458, 463, 480, 481, 482, 483, 484], "local": [0, 13, 480, 481, 483, 484], "structur": [0, 144, 152, 337, 342, 345, 355, 475, 477, 478, 479, 480, 483], "other": [0, 3, 61, 374, 377, 381, 382, 384, 385, 416, 436, 480, 484], "properti": [0, 95, 337, 403, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "gene": [0, 29, 30, 32, 33, 72, 73, 120, 121, 122, 157, 161, 163, 164, 165, 167, 168, 171, 187, 189, 236, 320, 339, 479, 480, 483, 484], "protein": [0, 98, 100, 120, 121, 137, 144, 147, 150, 198, 200, 236, 237, 256, 310, 313, 314, 327, 345, 376, 379, 381, 383, 479, 480, 483, 484], "also": [0, 7, 137, 401, 460, 481, 484], "provid": [0, 3, 70, 95, 137, 337, 342, 345, 355, 374, 381, 385, 398, 401, 412, 423, 473, 480, 481, 483, 484], "number": [0, 16, 17, 18, 19, 20, 26, 27, 32, 62, 72, 79, 102, 115, 137, 144, 147, 150, 214, 217, 218, 239, 240, 242, 243, 244, 245, 246, 266, 300, 301, 302, 303, 309, 310, 336, 338, 360, 386, 396, 400, 403, 453, 480, 481, 484], "util": [0, 267, 396, 479, 480, 483], "id": [0, 23, 26, 27, 30, 31, 32, 33, 36, 39, 43, 49, 75, 77, 99, 113, 115, 120, 121, 122, 137, 150, 152, 160, 166, 167, 168, 178, 206, 236, 263, 265, 266, 267, 268, 289, 305, 306, 307, 315, 324, 327, 331, 332, 333, 334, 337, 339, 340, 345, 355, 357, 367, 368, 369, 371, 374, 377, 381, 382, 384, 385, 386, 396, 479, 484], "translat": [0, 99, 166, 167, 168, 263, 267, 333, 337, 342, 345, 355, 357, 377, 382, 384, 386, 479, 483, 484], "orthologi": [0, 29, 479, 483], "handl": [0, 436, 480, 481], "taxonomi": [0, 26, 27, 43, 339, 340, 357, 386, 479, 480], "sequenc": [0, 144, 479], "serv": [0, 327, 398, 484], "web": [0, 6, 33, 102, 268, 342, 386, 480, 481, 483], "server": [0, 412, 480, 481, 483, 484], "etc": [0, 431, 480, 481, 483, 484], "member": [0, 1, 2, 4, 6, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 181, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 272, 292, 297, 299, 308, 311, 316, 317, 319, 321, 328, 330, 335, 361, 370, 372, 373, 387, 393, 394, 397, 405, 406, 410, 411, 413, 414, 424, 426, 427, 428, 429, 433, 434, 435, 452, 454, 455, 456, 457, 460, 466, 467, 468, 469, 470, 471, 472, 473, 481], "class": [2, 3, 15, 16, 17, 18, 19, 20, 24, 94, 95, 102, 117, 213, 214, 216, 217, 218, 299, 300, 301, 302, 303, 335, 336, 337, 338, 345, 355, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 411, 412, 424, 425, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 457, 458, 459, 460, 461, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484], "none": [3, 5, 26, 27, 32, 33, 47, 59, 62, 63, 65, 67, 70, 84, 95, 96, 97, 98, 99, 100, 102, 109, 123, 136, 137, 160, 205, 206, 226, 241, 260, 276, 278, 290, 309, 322, 337, 342, 345, 355, 364, 365, 366, 369, 375, 376, 378, 379, 380, 381, 383, 385, 386, 388, 396, 398, 399, 401, 402, 404, 412, 425, 432, 436, 437, 441, 442, 453, 458, 459, 481], "kwarg": [3, 5, 70, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 261, 274, 281, 283, 290, 337, 342, 345, 355, 388, 398, 399, 402, 403, 404, 412, 436, 459, 481], "sourc": [3, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 160, 173, 175, 176, 178, 180, 183, 184, 185, 187, 189, 191, 192, 194, 196, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 226, 234, 236, 237, 241, 245, 248, 250, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 318, 320, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 395, 396, 398, 399, 401, 402, 403, 404, 407, 408, 409, 412, 423, 425, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 458, 459, 461, 463, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484], "base": [3, 16, 17, 18, 19, 20, 95, 214, 217, 218, 259, 300, 301, 302, 303, 336, 337, 338, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 412, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 458, 459, 461, 463, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 483], "object": [3, 4, 60, 62, 95, 121, 288, 289, 291, 337, 378, 379, 383, 388, 390, 395, 396, 401, 404, 412, 415, 416, 417, 418, 419, 420, 421, 422, 436, 438, 453, 458, 461, 463, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482], "which": [3, 4, 47, 50, 95, 267, 310, 313, 412, 416, 439, 440, 443, 444, 445, 446, 447, 448, 450, 451, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478, 479, 480, 483, 484], "carri": [3, 481], "custom": [3, 70, 310, 313, 314, 374, 377, 381, 382, 384, 385, 398, 412, 453, 479, 480], "attribut": [3, 16, 17, 18, 19, 20, 33, 36, 47, 125, 134, 175, 176, 214, 217, 218, 300, 301, 302, 303, 336, 337, 338, 345, 355, 379, 386, 388, 389, 390, 391, 392, 395, 399, 400, 401, 402, 403, 404, 412, 414, 436, 437, 467, 468, 469, 470, 471, 472, 481, 484], "data": [3, 5, 7, 13, 21, 22, 23, 29, 32, 35, 47, 48, 50, 51, 52, 53, 54, 56, 60, 61, 62, 65, 75, 77, 78, 82, 87, 88, 89, 90, 91, 92, 93, 102, 117, 118, 127, 128, 129, 137, 160, 208, 209, 210, 211, 212, 237, 238, 239, 240, 242, 243, 244, 245, 246, 263, 275, 293, 294, 295, 296, 313, 314, 322, 326, 327, 329, 333, 371, 385, 386, 398, 399, 403, 412, 430, 436, 437, 440, 441, 479, 480, 483, 484], "dedic": [3, 481], "dict": [3, 36, 39, 49, 59, 60, 61, 62, 70, 95, 96, 99, 102, 115, 118, 122, 125, 134, 149, 150, 152, 160, 166, 167, 168, 178, 205, 206, 208, 209, 210, 211, 212, 236, 239, 240, 241, 242, 243, 244, 245, 246, 263, 266, 291, 304, 307, 315, 326, 327, 333, 334, 337, 342, 345, 355, 357, 371, 401, 412, 481, 483], "under": [3, 388, 481], "__init__": [3, 16, 17, 18, 19, 20, 85, 95, 214, 217, 218, 300, 301, 302, 303, 336, 337, 338, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 412, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 458, 459, 461, 463, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481], "method": [3, 4, 16, 17, 18, 19, 20, 87, 95, 123, 137, 214, 217, 218, 300, 301, 302, 303, 326, 336, 337, 338, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 412, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 458, 459, 461, 463, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 483], "serial": 3, "gener": [3, 22, 59, 62, 63, 65, 87, 88, 89, 90, 91, 92, 93, 203, 208, 209, 210, 211, 212, 293, 294, 295, 296, 329, 348, 398, 412, 481, 483, 484], "json": [3, 60, 61, 102, 241, 371, 412, 481], "string": [3, 60, 61, 62, 70, 102, 120, 263, 289, 331, 333, 337, 342, 345, 355, 431, 436, 453, 481], "full": [3, 30, 87, 89, 91, 93, 95, 205, 206, 333, 470, 471, 479, 480, 483], "content": [3, 113, 259, 371, 412, 436, 480, 482, 483], "without": [3, 4, 47, 306, 412, 415, 436, 479, 484], "ani": [3, 61, 62, 70, 431, 463, 479, 480, 483, 484], "whitespac": 3, "line": [3, 62, 337, 467, 468, 469, 470, 471, 472, 481], "break": [3, 137, 481], "return": [3, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 113, 117, 118, 120, 121, 122, 123, 125, 128, 129, 134, 149, 150, 151, 152, 160, 175, 176, 178, 205, 208, 209, 210, 211, 212, 214, 215, 217, 218, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 259, 263, 267, 275, 288, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 315, 323, 325, 326, 332, 333, 334, 336, 337, 338, 339, 342, 345, 348, 355, 357, 367, 368, 371, 386, 389, 390, 391, 392, 399, 400, 401, 403, 412, 423, 430, 432, 436, 437, 453, 463, 467, 468, 469, 470, 471, 472, 480, 481, 484], "str": [3, 16, 18, 19, 20, 29, 30, 31, 32, 33, 39, 45, 49, 59, 60, 61, 62, 70, 72, 73, 75, 76, 95, 96, 97, 98, 99, 100, 102, 109, 115, 120, 121, 122, 134, 137, 149, 150, 152, 160, 205, 206, 211, 212, 241, 260, 263, 266, 267, 268, 298, 300, 301, 302, 303, 304, 307, 312, 315, 322, 324, 326, 327, 331, 333, 337, 342, 345, 355, 357, 371, 374, 379, 381, 385, 386, 398, 401, 403, 412, 430, 431, 432, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451], "The": [3, 30, 45, 50, 65, 87, 92, 93, 95, 96, 99, 102, 115, 137, 178, 206, 241, 245, 263, 290, 294, 295, 298, 310, 313, 314, 323, 324, 331, 337, 342, 345, 355, 371, 386, 396, 403, 412, 423, 425, 431, 436, 437, 453, 459, 463, 467, 468, 469, 470, 471, 472, 478, 479, 480, 483, 484], "update_attr": 3, "updat": [3, 85, 401, 412, 453, 481, 483, 484], "store": [3, 412, 423, 480, 481, 483], "here": [3, 102, 241, 453, 463, 480, 481, 484], "ident": [3, 412, 481], "kei": [3, 30, 32, 36, 49, 62, 70, 99, 102, 118, 122, 149, 150, 152, 160, 178, 205, 206, 208, 209, 210, 211, 212, 236, 263, 315, 333, 334, 337, 342, 345, 355, 357, 389, 390, 391, 392, 401, 412, 430, 431, 436, 481, 484], "ar": [3, 32, 47, 62, 72, 85, 87, 92, 93, 95, 96, 115, 136, 144, 150, 152, 157, 161, 163, 164, 165, 167, 168, 171, 205, 263, 266, 267, 290, 314, 325, 333, 337, 342, 345, 355, 374, 381, 385, 412, 416, 419, 420, 430, 436, 467, 468, 469, 470, 471, 472, 477, 479, 480, 482, 483, 484], "merg": [3, 481], "us": [3, 4, 33, 34, 36, 39, 99, 137, 206, 208, 209, 210, 211, 212, 259, 263, 267, 310, 313, 314, 326, 374, 381, 385, 386, 388, 412, 416, 430, 431, 436, 442, 446, 451, 460, 463, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 480, 484], "share": [3, 388, 412, 481, 483], "common": [3, 36, 479], "combine_attr": 3, "new": [3, 58, 412, 422, 480, 481, 483, 484], "three": [3, 463], "wai": [3, 70, 333, 337, 342, 345, 355, 374, 381, 385, 481], "an": [3, 30, 31, 32, 33, 99, 102, 154, 205, 206, 236, 237, 239, 240, 242, 243, 244, 246, 307, 333, 337, 342, 345, 355, 386, 389, 390, 391, 392, 401, 403, 412, 422, 431, 460, 463, 467, 468, 469, 470, 471, 472, 479, 480, 484], "call": [3, 68, 206, 325, 326, 388, 398, 436, 437, 480, 481], "dictionari": [3, 30, 32, 36, 39, 49, 62, 70, 95, 150, 152, 154, 208, 209, 210, 211, 212, 236, 327, 333, 357, 479, 480], "keyword": [3, 463, 481], "argument": [3, 325, 374, 381, 385, 436, 463, 481], "work": [4, 85, 102, 412, 480, 481, 484], "from": [4, 11, 13, 14, 21, 22, 23, 26, 27, 29, 34, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 65, 67, 68, 70, 75, 77, 81, 82, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 107, 115, 117, 118, 120, 121, 122, 123, 125, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 175, 176, 187, 189, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 238, 239, 240, 242, 243, 244, 246, 259, 263, 293, 296, 298, 304, 305, 306, 307, 320, 322, 323, 324, 327, 329, 333, 339, 345, 348, 357, 371, 377, 379, 381, 382, 385, 386, 398, 399, 401, 403, 412, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 460, 467, 468, 469, 470, 471, 472, 477, 479, 480, 483, 484], "might": [4, 239, 240, 242, 243, 244, 246, 412, 481, 484], "import": [4, 422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 480, 481], "main": [4, 35, 458, 480, 481, 484], "df": [5, 481], "entity_typ": [5, 376, 383, 481], "data_model": [5, 379, 402, 403, 412], "interaction_typ": [5, 217, 379, 402, 403, 412, 481], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": [5, 147], "effect": [5, 176, 203, 275, 305, 306, 307, 481], "entiti": [5, 481, 483, 484], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 13, 26, 27, 30, 32, 84, 102, 115, 127, 128, 129, 136, 137, 150, 160, 208, 209, 210, 211, 212, 237, 266, 267, 277, 285, 287, 288, 290, 310, 313, 337, 342, 344, 345, 346, 347, 350, 351, 354, 355, 358, 359, 371, 379, 386, 407, 436, 437, 438, 440, 442, 444, 446, 448, 451, 453, 481], "remove_loop": 5, "entities_or": 5, "fals": [5, 21, 22, 23, 30, 32, 33, 47, 63, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 117, 118, 136, 147, 160, 205, 208, 209, 210, 211, 212, 226, 237, 245, 257, 260, 293, 294, 295, 296, 307, 325, 326, 345, 357, 367, 368, 371, 375, 379, 383, 399, 407, 412, 423, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 453, 481], "filter": [5, 29, 33, 87, 88, 90, 92, 412, 481], "frame": [5, 21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 293, 294, 295, 296, 479, 480, 483], "licens": [6, 7, 412, 479, 483], "collect": [6, 34, 87, 99, 102, 412, 481, 484], "page": [6, 45, 102, 412, 480, 481, 482, 484], "compon": [6, 263, 337, 342, 345, 355, 481, 484], "biomart": [6, 481], "goos": 6, "queri": [6, 33, 102, 115, 136, 137, 160, 206, 241, 245, 266, 322, 337, 342, 345, 355, 386, 479, 483], "templat": [6, 481], "configur": [6, 481], "file": [6, 13, 34, 35, 39, 43, 45, 60, 61, 62, 63, 70, 72, 73, 95, 99, 237, 263, 287, 288, 291, 298, 322, 412, 430, 436, 437, 439, 440, 479, 480, 483], "print": [7, 8, 331, 441, 442, 443, 444, 445, 446, 481], "copyright": [7, 481], "point": [7, 198, 337, 345, 355, 412, 480, 481], "further": [7, 70, 144, 326, 479, 481, 484], "inform": [7, 8, 34, 55, 95, 151, 203, 236, 259, 304, 305, 306, 307, 331, 332, 334, 412, 445, 446, 453, 479, 484], "loglevel": 8, "9": [8, 479, 480, 481], "basic": [8, 345, 355, 479], "current": [8, 102, 389, 390, 391, 392, 409, 453, 460, 480, 481, 484], "session": [8, 412, 479, 480], "tf": [11, 320, 481, 483, 484], "target": [11, 29, 53, 65, 95, 187, 189, 208, 209, 210, 211, 212, 263, 379, 421, 467, 468, 469, 470, 471, 472, 481, 483, 484], "transcript": [11, 30, 32, 33, 375, 412, 418, 422, 480, 484], "regul": [11, 318, 484], "keep_in_complex_interact": 13, "list": [13, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 41, 43, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 95, 96, 97, 98, 100, 102, 109, 113, 115, 117, 125, 128, 129, 134, 137, 147, 151, 152, 160, 173, 175, 176, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 239, 240, 242, 243, 244, 245, 246, 265, 266, 267, 275, 295, 304, 305, 306, 309, 310, 312, 313, 314, 315, 325, 326, 332, 333, 337, 342, 345, 355, 371, 385, 386, 401, 412, 436, 480, 481, 483, 484], "bool": [13, 21, 22, 23, 26, 27, 30, 32, 33, 47, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 115, 117, 118, 137, 147, 150, 160, 205, 208, 209, 210, 211, 212, 237, 241, 245, 267, 293, 294, 295, 296, 307, 310, 313, 326, 345, 357, 371, 385, 386, 412], "whether": [13, 47, 137, 267, 326, 481], "complex": [13, 284, 313, 314, 337, 342, 345, 355, 479, 480, 483], "expans": 13, "retriev": [14, 29, 31, 32, 47, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 79, 87, 97, 100, 102, 120, 121, 122, 123, 134, 154, 187, 189, 203, 215, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 304, 305, 306, 307, 329, 339, 345, 348, 386, 481], "sif": [14, 481, 483], "format": [14, 36, 267, 288, 289, 291, 360, 453, 460, 483, 484], "distribut": [14, 480], "offici": [14, 481], "websit": [14, 337, 345, 355], "adr_class": 16, "badd": [16, 18, 20, 24], "namedtupl": [16, 17, 18, 19, 20, 50, 51, 76, 77, 78, 95, 300, 301, 302, 303], "alia": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403, 462, 464, 465], "field": [16, 17, 18, 19, 20, 29, 59, 60, 62, 70, 72, 95, 97, 102, 191, 192, 205, 206, 214, 217, 218, 300, 301, 302, 303, 305, 336, 337, 338, 342, 345, 354, 355, 400, 403, 436, 481, 484], "0": [16, 17, 18, 19, 20, 37, 50, 63, 139, 147, 214, 217, 218, 300, 301, 302, 303, 312, 336, 338, 376, 379, 383, 400, 403, 453, 459, 479, 480, 481], "1": [16, 17, 18, 19, 20, 26, 27, 214, 217, 218, 300, 301, 302, 303, 336, 338, 377, 379, 381, 382, 384, 400, 403, 453, 459, 479, 481, 484], "count": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403, 481], "valu": [16, 17, 18, 19, 20, 30, 32, 36, 47, 49, 61, 62, 70, 99, 122, 149, 150, 152, 160, 178, 205, 214, 217, 218, 236, 241, 263, 300, 301, 302, 303, 310, 313, 314, 315, 333, 334, 336, 337, 338, 342, 345, 355, 357, 386, 389, 390, 391, 392, 400, 401, 403, 412, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 468, 470, 471, 481, 484], "occurr": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403], "index": [16, 17, 18, 19, 20, 23, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403, 481], "start": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403, 480, 481, 483], "stop": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403, 439, 443, 481], "9223372036854775807": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403], "first": [16, 17, 18, 19, 20, 70, 95, 117, 214, 217, 218, 300, 301, 302, 303, 336, 338, 385, 400, 403, 423, 480, 481, 483], "rais": [16, 17, 18, 19, 20, 70, 214, 217, 218, 300, 301, 302, 303, 336, 337, 338, 400, 401, 403], "valueerror": [16, 17, 18, 19, 20, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 403], "present": [16, 17, 18, 19, 20, 24, 115, 214, 217, 218, 300, 301, 302, 303, 336, 338, 400, 401, 403, 480, 481], "child": [17, 24, 481], "parent": [17, 24, 263, 481], "adrecsadr": 17, "drug": [18, 19, 21, 22, 23, 50, 53, 75, 76, 77, 78, 79, 95, 96, 97, 98, 100, 134, 156, 159, 160, 161, 162, 164, 166, 170, 203, 208, 304, 305, 306, 307, 329, 481, 483], "synonym": [18, 20, 23, 211, 263, 324, 412, 481], "drugbank": [18, 23, 76, 78], "pubchem_cid": [18, 481], "mesh": [18, 23], "kegg": [18, 23, 65, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 422, 481], "tdd": [18, 23], "3": [18, 19, 20, 62, 117, 125, 214, 217, 303, 336, 337, 338, 342, 345, 355, 403, 458, 479, 480, 481], "6": [18, 147, 338, 479, 481], "5": [18, 338, 458, 479, 480, 481], "4": [18, 20, 214, 338, 403, 458, 463, 475, 478, 479, 481, 484], "2": [18, 19, 20, 62, 214, 217, 218, 236, 301, 302, 303, 336, 338, 400, 401, 403, 463, 475, 478, 479], "7": [18, 43, 338, 479, 480, 481, 484], "drug_badd": 19, "adr_badd": 19, "adr": [19, 21, 22, 211], "adrecs_class": 20, "name": [20, 23, 29, 30, 31, 32, 33, 36, 39, 47, 48, 52, 53, 55, 56, 65, 67, 68, 70, 75, 77, 97, 99, 102, 113, 117, 122, 123, 134, 151, 152, 157, 161, 163, 164, 165, 167, 168, 171, 178, 205, 208, 209, 210, 211, 212, 218, 241, 263, 300, 304, 305, 306, 307, 315, 323, 326, 332, 337, 345, 355, 357, 360, 367, 368, 369, 374, 377, 379, 381, 382, 383, 384, 385, 388, 398, 399, 400, 401, 402, 403, 404, 407, 412, 419, 425, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 459, 479, 482, 484], "meddra": [20, 305, 306, 307], "tupl": [20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 47, 48, 50, 51, 52, 53, 55, 56, 59, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 113, 117, 118, 134, 147, 149, 151, 160, 173, 178, 203, 205, 206, 214, 215, 217, 218, 237, 289, 293, 294, 295, 296, 304, 305, 306, 307, 309, 310, 312, 313, 314, 329, 332, 336, 337, 338, 342, 345, 355, 371, 400, 401, 431, 436, 463, 467, 468, 469, 470, 471, 472, 475, 478, 481], "return_df": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 293, 294, 295, 296, 481], "adrecsterm": 21, "datafram": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 293, 294, 295, 296, 371, 479, 480], "advers": [21, 203, 208, 329, 481], "reaction": [21, 208, 412, 481, 484], "ontologi": [21, 24, 256, 294, 381, 479, 480, 483], "paramet": [21, 22, 23, 65, 72, 73, 75, 76, 77, 78, 85, 87, 88, 89, 90, 91, 92, 93, 102, 115, 117, 118, 120, 121, 122, 136, 137, 208, 209, 210, 211, 212, 239, 240, 241, 242, 243, 244, 245, 246, 260, 266, 293, 294, 295, 296, 307, 322, 337, 340, 342, 345, 355, 357, 371, 374, 377, 379, 381, 382, 384, 385, 386, 396, 412, 425, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 459, 463, 479, 480, 481], "panda": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 208, 209, 210, 211, 212, 237, 293, 294, 295, 296, 479, 480, 483, 484], "term": [21, 24, 149, 152, 206, 481], "adrecsdrugadr": 22, "pd": [22, 65, 87, 88, 89, 90, 91, 92, 93, 118, 208, 209, 210, 211, 212, 293, 294, 295, 296, 481], "pair": [22, 65, 70, 147, 173, 198, 340, 371, 401, 436, 481, 484], "identifi": [23, 24, 30, 32, 36, 62, 75, 76, 78, 95, 97, 99, 100, 115, 147, 263, 333, 337, 339, 341, 345, 348, 349, 356, 357, 371, 431, 479, 480], "iupac": [23, 263, 481], "http": [23, 33, 102, 115, 137, 173, 187, 189, 200, 201, 237, 241, 259, 332, 337, 342, 345, 355, 436, 460, 480, 484], "www": [23, 33, 115, 173, 187, 189, 237, 259, 332, 337, 342, 345, 355, 460, 481], "bio": 23, "add": [23, 412, 480, 481, 483, 484], "org": [23, 33, 125, 173, 187, 200, 201, 237, 259, 337, 342, 345, 355, 386, 460, 481, 484], "jsp": 23, "set": [24, 30, 32, 67, 68, 70, 96, 99, 107, 115, 134, 137, 144, 149, 150, 260, 263, 266, 304, 307, 322, 333, 337, 357, 371, 374, 379, 381, 385, 386, 389, 390, 391, 392, 398, 399, 401, 412, 417, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 481, 483, 484], "adrecschildpar": 24, "relationship": [24, 215, 479, 480], "between": [24, 65, 166, 167, 168, 200, 310, 313, 340, 463, 468, 470, 471, 480, 481, 483, 484], "repres": [24, 95, 151, 205, 332, 401, 481], "both": [24, 306, 307, 313, 345, 369, 436, 480, 481, 484], "numer": [24, 115, 331, 334, 357, 481], "organ": [26, 27, 29, 30, 31, 32, 43, 84, 113, 142, 147, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 194, 287, 288, 315, 326, 337, 340, 342, 345, 347, 350, 351, 354, 355, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 386, 399, 479, 480, 483, 484], "int": [26, 27, 29, 30, 31, 32, 43, 50, 62, 79, 102, 109, 115, 137, 147, 150, 239, 240, 242, 243, 244, 245, 246, 266, 268, 310, 312, 313, 314, 315, 331, 333, 340, 345, 357, 386, 453], "9606": [26, 27, 29, 30, 31, 32, 43, 84, 142, 147, 150, 194, 287, 288, 310, 312, 313, 314, 337, 340, 342, 345, 347, 350, 351, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375, 379, 385, 386, 398, 481], "htp_limit": [26, 27], "ltp": [26, 27], "download": [26, 27, 32, 34, 35, 41, 43, 45, 81, 87, 102, 125, 127, 137, 149, 150, 151, 152, 160, 175, 176, 206, 211, 237, 256, 288, 290, 291, 298, 310, 313, 314, 315, 322, 323, 324, 326, 327, 340, 385, 398, 436, 440, 441, 447, 448, 479, 480, 483], "all": [26, 32, 34, 78, 95, 102, 134, 150, 263, 325, 337, 342, 345, 355, 396, 401, 412, 425, 436, 437, 448, 459, 467, 477, 480, 483, 484], "keep": [26, 27, 147, 205, 260, 267, 480, 481], "onli": [26, 27, 47, 70, 72, 98, 100, 102, 144, 147, 150, 260, 267, 337, 342, 345, 355, 374, 381, 385, 401, 412, 419, 422, 423, 436, 437, 445, 450, 479, 480, 483, 484], "low": [26, 27, 68, 419], "throughput": [26, 27, 68, 396, 419, 481], "arg": [26, 27, 30, 31, 32, 33, 39, 45, 47, 50, 60, 67, 68, 70, 95, 96, 97, 98, 99, 100, 102, 150, 152, 157, 160, 161, 163, 164, 165, 167, 168, 171, 205, 206, 237, 263, 298, 310, 313, 314, 331, 333, 403, 430], "ncbi": [26, 27, 43, 115, 167, 267, 339, 340, 357, 386, 396, 479, 480, 484], "exclud": [26, 27, 67, 68, 312, 481], "refer": [26, 27, 97, 137, 152, 198, 236, 337, 342, 345, 355, 379, 396, 412, 415, 416, 419, 420, 450, 451, 479, 480, 484], "cite": [26, 27], "thi": [26, 27, 34, 70, 85, 95, 107, 115, 123, 137, 263, 266, 306, 307, 322, 327, 337, 342, 345, 355, 374, 379, 381, 385, 389, 390, 391, 392, 399, 401, 412, 425, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 458, 459, 460, 463, 467, 468, 469, 470, 471, 472, 473, 480, 481, 483, 484], "physic": [27, 310, 313, 314], "multi": [27, 481, 483], "valid": [27, 50, 260, 337, 389, 390, 391, 392], "source_organ": 29, "target_organ": 29, "10090": [29, 337, 342, 345, 355, 480, 481, 484], "extra_field": 29, "iter": [29, 115, 312, 337, 345, 348, 355, 401, 412, 453, 481], "external_gene_nam": 29, "ensembl": [29, 30, 32, 33, 480, 481], "have": [29, 310, 313, 386, 412, 419, 440, 446, 451, 480, 481, 483, 484], "orthologu": 29, "homologi": [29, 479, 481, 484], "relat": [29, 47, 72, 100, 113, 152, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 480, 481, 484], "array_typ": 30, "peptid": [30, 32, 33, 481], "microarrai": [30, 31, 32, 374, 481], "probe": [30, 32, 374, 481], "map": [30, 32, 65, 76, 78, 154, 293, 296, 340, 371, 374, 381, 385, 386, 401, 467, 468, 469, 470, 471, 472, 475, 477, 478, 479, 480, 483], "model": [30, 32, 34, 35, 36, 39, 412], "shown": [30, 211, 324, 481], "webpag": [30, 45, 81, 298, 322, 323, 324, 327, 481, 484], "correspond": [30, 97, 265, 337, 345, 355, 389, 390, 391, 392, 401, 481], "code": [30, 334, 475, 477, 478, 481, 483], "For": [30, 32, 62, 72, 206, 265, 333, 334, 337, 342, 345, 355, 367, 368, 386, 388, 396, 412, 430, 480, 481, 484], "avail": [30, 31, 34, 36, 70, 99, 205, 206, 237, 337, 342, 345, 355, 386, 480, 481, 484], "see": [30, 260, 325, 332, 333, 334, 337, 342, 345, 355, 446, 460, 463, 475, 477, 478, 480, 481, 484], "biomart_microarray_typ": 30, "A": [30, 32, 36, 67, 68, 70, 75, 95, 102, 115, 120, 121, 122, 150, 151, 152, 160, 236, 241, 263, 305, 332, 333, 334, 337, 342, 345, 355, 357, 401, 403, 422, 430, 481, 483, 484], "type": [31, 32, 72, 96, 99, 137, 152, 226, 236, 260, 263, 278, 305, 332, 333, 334, 337, 371, 374, 377, 381, 382, 384, 385, 386, 412, 436, 437, 479, 480, 481], "vendor": 32, "multipl": [32, 137, 480, 481, 484], "arrai": [32, 412, 481], "one": [32, 63, 70, 75, 102, 136, 137, 151, 239, 240, 242, 243, 244, 245, 246, 267, 324, 327, 331, 332, 337, 345, 355, 374, 377, 381, 382, 384, 385, 386, 396, 412, 463, 470, 471, 480, 484], "option": [32, 481, 484], "limit": [32, 137, 310, 313, 314, 481], "note": [32, 239, 240, 242, 243, 244, 246, 412, 481, 484], "depend": [32, 481, 483], "take": [32, 239, 240, 242, 243, 244, 245, 246, 463, 480, 481], "minut": [32, 480, 481], "One": [32, 33, 72, 73, 115, 266, 327, 345, 355, 481], "mean": [32, 144, 399, 412, 430, 481], "human": [32, 134, 288, 291, 325, 326, 345, 377, 479, 480, 484], "possibl": [32, 263, 479, 481], "affi": [32, 481], "illumina": 32, "agil": [32, 481], "codelink": 32, "phalanx": 32, "attr": [33, 412], "dataset": [33, 87, 88, 89, 90, 91, 92, 93, 208, 209, 210, 211, 212, 306, 307, 379, 401, 402, 404, 412, 416, 422, 479, 480], "hsapiens_gene_ensembl": 33, "servic": [33, 102, 205, 206, 263, 371, 386, 480, 481, 483], "martview": 33, "check": [33, 360, 388, 389, 390, 391, 392, 480, 481, 484], "result": [33, 62, 102, 150, 327, 337, 440, 446, 447, 448, 451, 481], "yield": [33, 203, 289, 290, 329, 337, 340, 481], "request": [33, 102, 115, 137, 205, 266, 436, 437, 481, 484], "each": [33, 59, 62, 95, 97, 137, 151, 152, 205, 236, 245, 332, 337, 480, 481, 483, 484], "record": [33, 47, 48, 52, 53, 79, 102, 115, 147, 208, 209, 210, 212, 239, 240, 242, 243, 244, 245, 246, 259, 266, 268, 348, 484], "repositori": [34, 483], "bioservic": [34, 36, 39], "individu": [34, 160, 203, 481], "pars": [34, 241, 481], "relev": [34, 35, 481], "enter": 34, "model_id": [35, 39], "singl": [35, 39, 75, 76, 267, 479], "extract": [35, 60, 81, 102, 128, 129, 287, 290, 371, 436, 437, 481], "integr": [35, 422, 479, 481, 483], "should": [35, 47, 145, 327, 412, 467, 468, 469, 470, 471, 472, 480, 481, 484], "cach": [35, 115, 136, 137, 237, 266, 288, 327, 436, 439, 440, 441, 442, 443, 444, 447, 448, 479, 480], "fetch": [36, 245, 265, 386, 460, 481], "smbl": 36, "being": [36, 475, 477, 478], "most": [36, 348, 420, 442, 480, 481], "submiss": 36, "modif": [36, 481], "date": [36, 338, 481], "author": [36, 481], "verbos": [37, 139, 443, 444, 481, 483], "get": [39, 386, 401, 436, 479, 481, 484], "contain": [39, 65, 95, 102, 144, 267, 305, 313, 318, 327, 403, 460, 467, 468, 469, 470, 471, 472, 480, 481, 484], "specif": [39, 60, 102, 157, 161, 163, 164, 165, 167, 168, 171, 178, 480, 481, 484], "eg": 39, "descript": [39, 260, 453, 481, 483], "associ": [39, 210, 212, 313, 463, 475, 477, 478, 481], "signal": [41, 203, 329, 479, 484], "ma": 41, "ayan": 41, "2005": [41, 481], "match": [43, 150, 481, 484], "column": [43, 62, 260, 480, 481, 484], "node": [43, 463], "supp_url": 45, "article_url": 45, "supplementari": [45, 259, 260, 298], "materi": [45, 259, 298], "journal": [45, 298], "url": [45, 84, 102, 109, 211, 298, 337, 388, 436, 449, 481, 484], "articl": [45, 189, 481], "path": [45, 70, 99, 298, 322, 412, 430, 431, 432, 436, 480, 481], "standard_rel": 47, "liter": [47, 65, 87, 152, 211, 310, 313, 314, 412], "pchembl_value_non": 47, "activ": [47, 98, 100, 312, 415, 484], "todo": 47, "allow": [47, 412, 481], "must": [47, 412, 463, 481, 484], "pchembl": 47, "standard": [47, 107, 481], "need": [47, 144, 327, 437, 479, 481, 484], "standard_unit": 47, "why": [47, 481], "data_validity_com": 47, "part": [47, 136, 314, 412, 481, 483, 484], "assai": 48, "document": [49, 480, 481, 482], "pubm": [49, 115, 236, 396, 481], "convers": [49, 386, 479, 481, 483], "max_phase_threshold": 50, "indic": [50, 314, 436, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "threshold": [50, 309, 481], "maximum": 50, "phase": 50, "mechan": [51, 318, 481], "molecul": [52, 96, 480, 484], "variant": [54, 55, 56, 134, 480, 481], "citat": 55, "csv": [58, 63, 259, 260, 481], "old": [58, 412, 453, 480, 481], "callabl": [59, 102, 398, 412], "glom": [59, 60, 102, 206], "spec": [59, 60, 102, 206], "protect": 59, "coalesc": 59, "io": [60, 61, 102], "arbitrari": [60, 481, 484], "depth": [60, 284], "like": [60, 62, 239, 240, 242, 243, 244, 245, 246, 386, 401, 480, 481], "read": [61, 62, 63, 102, 237, 241, 259, 412, 437, 440, 447, 448, 479, 480, 483], "pass": [61, 325, 337, 342, 345, 355, 386, 481], "through": [61, 396, 480, 481], "col": [62, 458, 481], "fileobject": 62, "sep": [62, 438], "t": [62, 438, 439, 442, 443, 480, 481, 482, 484], "sep2": 62, "rem": 62, "hdr": 62, "encod": [62, 436, 437, 481, 484], "ascii": 62, "tabl": [62, 81, 99, 260, 323, 324, 327, 374, 377, 381, 382, 385, 386, 479, 480, 482, 483], "open": [62, 208, 209, 210, 211, 212, 268, 436, 437, 480, 481], "stringio": 62, "buffer": 62, "separ": [62, 376, 379, 383, 403, 412, 481, 483], "subfield": 62, "prefix": [62, 115, 453, 481], "e": [62, 72, 95, 96, 97, 98, 99, 100, 123, 260, 267, 326, 345, 396, 401, 412, 463, 473, 475, 478, 479, 480, 483, 484], "g": [62, 123, 260, 326, 345, 412, 480, 481, 483, 484], "header": [62, 136, 137, 337, 376, 379, 383, 436, 438, 481], "If": [62, 70, 95, 152, 160, 205, 208, 209, 210, 211, 212, 322, 337, 369, 386, 401, 480, 481, 484], "assum": [62, 70], "remov": [62, 401, 412, 481, 483], "element": [62, 267, 327, 337, 342, 345, 355, 481], "replac": [62, 338, 436, 481], "xls_file": 63, "sheet": [63, 109], "use_openpyxl": 63, "cell_rang": 63, "m": [63, 481], "excel": [63, 481], "xl": 63, "convert": [63, 327, 337, 342, 345, 355, 460, 480, 481], "source_db": 65, "wikipathwai": 65, "reactom": [65, 288, 289, 290, 291], "target_db": 65, "cross": [65, 97, 152], "pathwai": [65, 73, 158, 162, 165, 169, 170, 171, 201, 289, 294, 295, 412, 415, 420, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 480, 481, 484], "propos": 65, "accept": [65, 463, 475, 478, 481, 484], "user": [65, 70, 85, 95, 96, 97, 98, 99, 100, 310, 313, 314, 438, 480, 481], "curat": [65, 72, 107, 187, 189, 198, 200, 201, 419, 420, 484], "across": [65, 481], "specifi": [65, 326, 401, 468, 475, 477, 478], "direct": [65, 175, 210, 379, 417, 420, 467, 468, 469, 470, 471, 472, 479], "consensuspathdb": [67, 68], "cpdb_interact": 68, "hprd": [68, 418, 481], "biogrid": [68, 417, 418, 481], "phosphopoint": 68, "mint": 68, "bind": [68, 237, 310, 313, 481], "intact": [68, 417, 418, 481], "from_fil": 70, "requir": [70, 290, 310, 313, 314, 360, 480, 481], "restrict": [70, 96, 345, 481], "two": [70, 95, 463, 467, 468, 469, 470, 471, 472, 480, 481], "password": [70, 95, 96, 97, 98, 99, 100], "apart": [70, 205, 206, 480, 481], "rest": [70, 102, 337, 342, 345, 355, 484], "ignor": [70, 403, 412], "_credenti": 70, "exist": [70, 198, 322, 430, 432, 436, 437, 441, 481], "its": [70, 97, 123, 337, 342, 345, 355, 430, 432, 443, 444, 475, 477, 478, 481, 483], "locat": [70, 480, 481, 483, 484], "": [70, 95, 160, 203, 205, 329, 386, 401, 403, 446, 480, 481, 483], "default": [70, 95, 115, 137, 205, 206, 208, 209, 210, 211, 212, 245, 266, 322, 337, 342, 345, 355, 401, 412, 422, 423, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 463, 467, 468, 469, 470, 471, 472, 473, 478, 480, 481, 484], "secret": [70, 436, 481, 484], "directori": [70, 432, 480, 481, 483], "unchang": [70, 267], "explicit": 70, "runtimeerror": 70, "relation_typ": 72, "diseas": [72, 73, 156, 157, 158, 159, 160, 163, 169, 210, 212, 214, 215, 239, 245], "those": [72, 267, 481], "directevid": 72, "non": [72, 198, 412, 481], "too": [72, 481], "larg": [72, 290, 417, 436, 437, 480, 481, 483, 484], "follow": [72, 73, 305, 401, 436, 480, 481], "chemical_gen": 72, "chemical_diseas": 72, "disease_pathwai": 72, "chemical_phenotyp": 72, "gene_diseas": 72, "vocabulary_typ": 73, "vocabulari": 73, "chemic": [73, 310], "anatomi": 73, "phenotyp": 73, "level": [75, 77, 208, 209, 210, 211, 212, 318, 337, 345, 355, 389, 390, 391, 392, 412, 422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 480, 484], "action": [75, 77], "chembl": [76, 78, 99, 178, 481, 483], "pubchem": [76, 78, 178, 304, 305, 307, 481], "html": [81, 102, 120, 327, 481, 484], "load": [82, 137, 147, 322, 398, 412, 422, 430, 479, 480, 483], "rescu": 82, "core_onli": 84, "direct_onli": 84, "small_scale_onli": 84, "passwd": [85, 95, 96, 97, 98, 99, 100, 438], "doe": [85, 137, 322, 401, 430, 440, 445, 450, 480, 481], "unknown": [85, 379, 383, 481], "reason": [85, 137, 480, 481], "In": [85, 401, 412, 436, 480, 481], "addit": [85, 137, 205, 206, 337, 342, 345, 355, 412, 436, 481, 484], "binary_data": [85, 436], "curl": [85, 484], "ha": [85, 178, 401, 412, 422, 436, 480, 481, 483, 484], "been": [85, 412, 440, 480, 481, 483, 484], "chang": [85, 337, 342, 345, 355, 439, 442, 453, 480, 481], "below": [85, 134, 337, 342, 345, 355, 480, 481], "necessari": [85, 398, 480, 481], "data_origin": 87, "textmin": [87, 92, 93], "knowledg": [87, 90, 91, 198, 259], "experi": [87, 88, 89, 198, 481], "jensen": [87, 88, 89, 90, 91, 92, 93], "lab": [87, 88, 89, 90, 91, 92, 93, 175, 176, 480, 481], "warn": [87, 92, 93, 481], "enorm": [87, 92, 93], "instead": [87, 237, 431, 440, 481, 482, 484], "credentials_fnam": [95, 96, 97, 98, 99, 100], "wrapper": [95, 401, 436, 453, 481], "around": [95, 401, 436, 453, 479, 480], "xml": [95, 481], "drugbank_drugs_ful": 95, "drugbank_targets_ful": 95, "second": [95, 137, 481], "mail": [95, 96, 97, 98, 99, 100], "address": [95, 96, 97, 98, 99, 100, 481], "regist": [95, 96, 97, 98, 99, 100, 431], "account": [95, 96, 97, 98, 99, 100, 481], "detail": [95, 102, 151, 236, 310, 332, 337, 342, 345, 355, 480, 481], "drugbank_external_ids_ful": 95, "extern": [95, 152, 481], "drugbank_properties_ful": 95, "calcul": [95, 144], "statu": [96, 436, 453, 481], "variou": [97, 113, 357, 466, 480, 481], "pharma_act": [98, 100], "pharmacolog": [98, 100], "id_typ": [99, 136, 137, 383, 386, 481], "target_id_typ": [99, 257, 386, 481], "group": [99, 208, 209, 210, 211, 212, 459, 480, 481, 483], "ca": [99, 481], "inchikei": [99, 481], "inchi": [99, 178, 263, 481], "smile": [99, 178, 263, 481], "formula": [99, 481], "kegg_compound": 99, "kegg_drug": 99, "pubchem_compound": 99, "pubchem_subst": 99, "chebi": [99, 166, 178, 293, 481], "pharmgkb": 99, "het": [99, 481], "login": 99, "credenti": 99, "q": 102, "pagin": [102, 481], "page_length": 102, "500": [102, 136, 137, 337, 342, 345, 355, 481], "size_param": 102, "size": [102, 137, 437, 459, 481], "page_param": 102, "offset": [102, 144, 145, 481], "by_pag": 102, "page_field": 102, "total_field": 102, "totalpag": 102, "record_nam": 102, "append": [102, 412], "until": [102, 481, 482], "end": [102, 481], "per": [102, 313, 314], "item": [102, 401, 430, 431, 453, 481], "total": [102, 453, 470, 471], "readthedoc": 102, "en": [102, 481], "latest": [102, 481], "tutori": [102, 480, 481], "downlod": 107, "manual": [107, 419, 420, 481], "gold": 107, "init_url": [109, 436], "taxon": [113, 357, 481], "metadata": [113, 266, 396, 401, 481], "db": [115, 480, 481], "cache_smal": [115, 266], "10": [115, 173, 259, 266, 459, 479, 481, 484], "metainform": 115, "client": [115, 345, 355, 480, 481], "api": [115, 337, 342, 345, 355, 386, 480, 483, 484], "endpoint": [115, 481], "nlm": 115, "nih": [115, 238, 241, 245, 267], "gov": [115, 241], "book": [115, 479, 480], "nbk25499": 115, "chapter4": 115, "interst": 115, "understand": [115, 137, 481], "letter": [115, 481], "strip": [115, 337, 481], "geoprofil": [115, 481], "small": [115, 266, 459, 467, 468, 469, 470, 471, 472, 480, 483], "less": [115, 266, 481], "except": [115, 266, 484], "lower": [115, 266, 307, 481], "enzym": [117, 118, 412, 479, 480, 483], "classif": 117, "digit": 117, "ec": [117, 481], "datasheet": [120, 121, 122, 339], "symbol": [120, 121, 122, 236, 339, 374, 381, 385, 480, 481, 484], "uniprot": [120, 121, 122, 144, 145, 150, 154, 168, 236, 287, 296, 323, 324, 327, 369, 371, 379, 383, 385, 386, 399, 479, 480, 483, 484], "bs4": [121, 289, 323, 327], "beautifulsoup": [121, 289, 323], "summari": [122, 481, 483], "text": [122, 259, 337, 342, 345, 355, 481], "module_nam": 123, "method_nam": 123, "submodul": [123, 480, 481, 483], "uniprot_db": 123, "all_uniprot": [123, 481], "graph_attr": 125, "vertex_attr": 125, "edge_attr": 125, "in_vivo": [127, 128, 129], "preprocess": [127, 256, 322, 337, 480], "ptm": [128, 412, 416, 417, 481, 483, 484], "kinas": [128, 337, 342, 345, 355, 481, 484], "substrat": [128, 412, 479, 480, 483], "missens": 134, "uniprotkb": [134, 150, 257, 481], "swiss": [134, 481], "prot": [134, 481], "ppi": [136, 137, 402, 480, 481], "uniprotkb_ac": [136, 137], "mydomain": [136, 137], "hmm": [136, 137], "maxwait": [136, 137], "180": [136, 137], "part_siz": [136, 137], "perform": [136, 137, 208, 209, 210, 211, 212, 337, 342, 345, 355, 436, 447, 448, 481], "same": [136, 327, 333, 337, 342, 345, 355, 374, 379, 381, 385, 399, 412, 481], "get_ielm_hug": 136, "predict": [137, 325, 326], "domain": [137, 144, 318, 327, 481, 484], "motif": [137, 318, 481], "chunk": [137, 245], "retri": [137, 436], "case": [137, 401, 420, 437, 480, 481, 484], "failur": [137, 479], "reduc": [137, 481], "feedback": 137, "consol": [137, 436, 440, 479], "suppli": [137, 417], "pleas": [137, 480, 481], "what": [137, 446, 481, 484], "detect": [137, 326], "altern": [137, 337, 342, 345, 355, 480, 481, 484], "wait": 137, "time": [137, 150, 322, 412, 480, 481], "everyth": [137, 481], "again": [137, 412, 440, 467, 468, 469, 470, 471, 472, 480, 481], "send": [137, 412, 425, 436, 437, 459, 460], "residu": [144, 481], "chain": [144, 481], "pdb": [144, 145, 481, 484], "given": [144, 208, 209, 210, 211, 212, 401, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "support": [144, 480, 481, 483], "These": [145, 198, 337, 342, 345, 355, 374, 381, 385, 386, 417, 419, 420, 430, 481, 484], "understood": [145, 463], "miscor": 147, "complex_expans": 147, "only_id": 147, "smaller": [147, 481, 484], "memori": [147, 290, 480, 481, 483], "footprint": 147, "go": [149, 152, 446, 480, 481, 483], "entri": [149, 150, 151, 152, 481], "page_s": 150, "200": 150, "review": [150, 337, 342, 345, 347, 350, 351, 354, 355, 358, 359, 386, 481], "tax_id": 150, "thei": [150, 480, 481, 483], "otherwis": [150, 152, 205, 371, 401, 481], "db_type": 152, "where": [152, 403, 436, 467, 468, 469, 470, 471, 472, 481, 484], "join": [160, 481], "asynchron": 160, "els": [160, 401], "them": [160, 412, 480, 481, 484], "togeth": [160, 386, 481], "mutual": 160, "yet": [160, 481, 484], "implement": [160, 453, 463, 467, 468, 469, 470, 471, 472, 473, 477, 478, 480, 483, 484], "ligand": [173, 243, 245, 484], "receptor": [173, 484], "kirouac": 173, "et": [173, 259, 481], "al": [173, 259, 481], "2010": 173, "embopress": 173, "doi": [173, 265, 267], "1038": 173, "msb": 173, "71": 173, "signalingflow": 175, "edg": [175, 176, 463, 479], "signalingdirect": 176, "brand": 178, "compani": [178, 481], "compound": [178, 481, 483], "literatur": [187, 189, 198, 200, 201, 412, 415, 419, 420, 479, 484], "mirna": [187, 189, 320, 421, 480, 483, 484], "natur": [189, 480], "com": [189, 436, 480, 481], "cdd201287": 189, "do": [198, 327, 412, 445, 448, 450, 479, 484], "best": [198, 481], "our": [198, 479, 480], "paper": [198, 481, 484], "test": [198, 412, 436, 483], "find": [198, 480, 481], "neg": [198, 412, 481], "outcom": 198, "autophagi": 200, "autophagyregul": 200, "nrf2": [201, 415, 481], "nrf2ome": [201, 481], "side": [203, 305, 306, 307, 481], "off": [203, 441, 453], "label": [203, 306, 307, 333, 334, 374, 381, 386, 389, 390, 391, 392, 403, 412, 425, 430, 436, 437, 459, 463, 467, 468, 469, 470, 471, 472, 481], "mine": [203, 259, 329], "fda": [203, 211, 329], "event": [203, 329], "report": [203, 329, 481], "system": [203, 329, 436, 480, 481], "full_config": 205, "ebi": [205, 206, 332, 480], "lookup": [205, 206], "ones": [205, 206, 481], "config": [205, 431], "extra": 205, "abbrevi": [205, 481], "describ": [205, 337, 342, 345, 355], "ol": 206, "listof_ontologi": 206, "simpli": [206, 481], "section": [206, 481], "respons": [206, 241, 337, 480, 481], "variabl": [208, 209, 210, 211, 212, 241, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481], "top": [208, 209, 210, 211, 212, 337, 345, 355, 407, 481], "baselin": 209, "express": [209, 240, 245, 312, 480, 481, 484], "score": [210, 212, 310, 313, 314, 481], "assoc_direct": 211, "assoc_indirect": 211, "expr": 211, "associationbyoverallindirect": 211, "associationbyoveralldirect": 211, "significantadversedrugreact": 211, "baselineexpress": 211, "either": [211, 263, 333, 401, 436, 481, 484], "shorthand": 211, "indirect": [212, 481], "disease_id": 214, "pathogen_taxid": 214, "pathogen": [214, 215, 483], "evid": [214, 236, 260, 310, 313, 481, 483], "id_a": [217, 481], "id_b": [217, 481], "pc_label": 218, "version": [218, 226, 412, 480, 481, 483], "by_interact": 226, "12": [226, 479, 481], "num": 236, "length": [236, 337, 342, 345, 355, 481], "refseq": 236, "special": [236, 412, 481, 483], "_ref": 236, "hold": 236, "categori": [236, 318, 479, 483, 484], "phosphoprotein": [237, 481], "intermedi": [237, 481], "chunk_siz": [239, 240, 242, 243, 244, 245, 246], "100": [239, 240, 242, 243, 244, 245, 246, 337, 342, 345, 355, 480, 481], "half": [239, 240, 242, 243, 244, 245, 246, 481], "hour": [239, 240, 242, 243, 244, 245, 246, 481], "batch": [239, 240, 242, 243, 244, 245, 246, 386], "better": [239, 240, 242, 243, 244, 245, 246, 401, 481, 483, 484], "stai": [239, 240, 242, 243, 244, 245, 246, 481], "becaus": [239, 240, 242, 243, 244, 245, 246, 416, 481, 484], "higher": [239, 240, 242, 243, 244, 245, 246, 480], "caus": [239, 240, 242, 243, 244, 245, 246], "timeout": [239, 240, 242, 243, 244, 245, 246, 436], "error": [239, 240, 242, 243, 244, 245, 246, 337, 480, 484], "graphql": [241, 245], "boolean": [241, 379, 481], "gtex": [242, 245], "ortholog": [244, 245, 480, 481], "xref": [245, 246], "complet": [245, 337, 342, 345, 355, 480, 481, 483], "consist": [245, 453, 480, 481], "thousand": [245, 481], "uniprot_isoform": 257, "raw": [259, 371, 475, 477, 478, 480, 481], "dictread": [259, 481], "bachman": 259, "2019": [259, 481], "assembl": 259, "phosphoproteom": 259, "normal": [259, 480, 481], "phosphosit": [259, 481, 483, 484], "biorxiv": 259, "1101": 259, "822668v3": 259, "only_evid": 260, "only_literatur": 260, "nonetyp": [260, 412], "cid": [263, 302, 304, 305, 306, 307], "ftp": [263, 436, 481], "simpler": 263, "lowercas": [263, 481], "prefer": [263, 480, 481], "sid": 263, "idlist": [265, 267, 269, 270], "pmc": [265, 267], "pmid": [265, 266, 267, 268, 395, 481], "strict": [267, 325, 326, 481], "compli": 267, "attempt": [267, 324, 423, 480, 481], "neither": [267, 481], "manuscript": [267, 483], "browser": [268, 481, 484], "acsn": [275, 420], "protein_name_typ": [276, 287], "mandatory_ref": [277, 285], "elem": 279, "cref": 284, "entity_uniprot": [284, 286], "complexvari": 284, "cplex": [284, 481], "stoichiometri": [284, 481], "control": [285, 423, 463, 481, 483], "biopax_fil": 287, "clean": [287, 481], "biopax": [287, 290, 480, 483], "binari": [287, 290, 436], "sbml": [288, 289, 291], "representationa": 289, "pathwaya": 289, "cachefil": [290, 322, 396], "ask": [290, 481], "appli": [290, 337, 412, 447, 481], "criteria": 290, "veri": [290, 480, 481, 484], "stringent": 290, "few": [290, 480, 481, 483], "free": [290, 412, 480, 481, 483], "approx": [290, 481], "2g": 290, "hierarchi": 294, "atc": [300, 304], "umls_concept_on_label": [301, 303], "umls_concept_in_meddra": [301, 303], "side_effect": [301, 303], "meddra_id": [302, 305], "side_effect_nam": [302, 305], "frequenc": [303, 306, 307], "float": 303, "uml": [306, 307], "concept": [306, 307, 481], "attent": 306, "sider_side_effect": 306, "20k": 306, "row": [306, 481, 484], "freq": 307, "independ": [307, 481], "coverag": [307, 422, 484], "ncbi_tax_id": [310, 312, 313, 314, 357, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 398, 481, 484], "score_threshold": [310, 312, 313, 314], "highest_confid": [310, 313, 314], "high_confid": [310, 313, 314], "medium_confid": [310, 313, 314], "low_confid": [310, 313, 314], "physical_interaction_scor": [310, 313], "link": 310, "subscor": [310, 313, 314], "defin": [310, 313, 314, 386, 412, 467, 468, 469, 470, 471, 472, 475, 477, 478, 479, 480, 484], "interactor": [310, 327], "we": [310, 313, 463, 475, 478, 480, 481, 482, 484], "minimum": [310, 313, 314], "pre": [310, 313, 314, 479], "confid": [310, 313, 314, 422, 481, 484], "stimul": [312, 481], "inhibit": [312, 481], "channel": [313, 314, 481, 484], "output": [313, 481], "form": [313, 436], "subnetwork": 314, "tax": [315, 386], "scientif": [315, 479], "switch": 318, "elm": [318, 416], "resolut": 318, "classifi": [318, 481, 484], "accord": [318, 388, 463, 481], "intract": 320, "save": [322, 479, 480], "next": [322, 430, 481], "pickl": [322, 479, 480], "dump": [322, 398, 430, 481], "By": [322, 337, 412, 445, 450, 481, 484], "soup": 323, "look": [323, 324, 327, 386, 398], "up": [323, 324, 327, 398, 481], "instanc": [323, 412, 423, 425, 436, 437, 451, 453, 459, 463, 480, 481, 484], "trip_get_uniprot": 323, "syn": [324, 481], "exclude_method": [325, 326], "infer": [325, 326, 481], "specul": [325, 326], "speci": [325, 326, 481, 483], "obtain": [325, 386, 396, 481], "trip_process": 325, "definit": [325, 412, 479, 480, 483], "dadio": 326, "take_a_trip": 326, "provcess": 326, "discard": 326, "bait": 326, "tab": [327, 337], "intr": 327, "trp_uniprot": 327, "tag": [327, 481], "fill": 327, "alreadi": [327, 412, 422, 481], "so": [327, 439, 445, 447, 450, 480, 481], "twice": 327, "trp": 327, "safeti": 329, "ac": [332, 480, 481], "uk": 332, "ucqueri": 332, "listsourc": 332, "id_type_a": [333, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 481], "id_type_b": [333, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 481], "integ": [333, 389, 390, 391, 392, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "unichem_sourc": 333, "unichem_info": 334, "ncbi_id": [336, 481], "latin": [336, 481], "english": [336, 481], "latin_synonym": [336, 481], "construct": [337, 436, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478], "readi": [337, 342, 345, 355, 481], "bypass": [337, 342, 345, 355], "simpl": [337, 342, 345, 355, 412, 480, 481, 484], "concaten": [337, 342, 345, 355], "nest": [337, 342, 345, 355, 481], "exampl": [337, 342, 345, 355, 388, 422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 479, 480], "built": [337, 342, 345, 355, 386, 412, 479, 480], "sever": [337, 342, 345, 355, 480, 481], "query_build": [337, 345, 355, 481], "AND": [337, 342, 345, 355, 481, 484], "organism_id": [337, 342, 345, 355, 481], "abov": [337, 342, 345, 355, 374, 381, 385, 396, 480, 481, 484], "oper": [337, 342, 345, 355, 481], "within": [337, 342, 345, 355, 401, 453, 463, 475, 478, 480, 481, 484], "OR": [337, 342, 345, 355, 481], "10116": [337, 342, 345, 355, 481, 484], "op": [337, 342, 345, 355, 480, 481], "underscor": [337, 342, 345, 355, 403, 412, 481], "mass": [337, 342, 345, 355, 481], "50000": [337, 342, 345, 355, 481], "TO": [337, 342, 345, 355, 481], "lit_author": [337, 342, 345, 355, 481], "huang": [337, 342, 345, 355, 481], "kovac": [337, 342, 345, 355, 481], "_and": [337, 342, 345, 355, 481], "parenthes": [337, 342, 345, 355, 481], "interv": [337, 342, 345, 355, 453], "help": [337, 342, 345, 355, 479], "search": [337, 342, 345, 355], "syntax": [337, 342, 345, 355], "_field_synonym": [337, 345, 355], "return_field": [337, 345, 355], "__iter__": 337, "over": [337, 348, 483], "skip": [337, 458], "empti": [337, 401, 480, 481], "linebreak": 337, "split": [337, 483], "fail_on_empti": 337, "name_process": 337, "differ": [337, 386, 412, 480, 481, 483, 484], "appropri": [337, 480, 481], "especi": [337, 481, 483], "were": [337, 345, 355, 401, 481], "exactli": [337, 345, 355, 481, 484], "wa": [337, 345, 355, 480, 481], "kind": [337, 345, 355, 481, 484], "previou": [337, 345, 355], "urlencod": 337, "suitabl": [337, 481], "url_plain": 337, "plain": [337, 481], "entry_vers": [338, 481], "sequence_vers": [338, 481], "entry_nam": [338, 481], "replaced_bi": [338, 481], "archiv": [339, 436, 437], "delet": [339, 439, 440, 480, 481, 483], "secondari": [340, 403, 412, 480, 481], "primari": [340, 403, 412, 480, 481], "site": [342, 481, 483], "insert": 342, "confirm": [344, 346], "swissprot": [345, 357, 364, 365, 366, 367, 368, 369, 385, 386, 480, 481], "homo": [345, 481], "sapien": [345, 481], "trembl": [345, 367, 368, 369, 386, 480, 481], "cover": [345, 480, 481], "uniprotqueri": [345, 355, 481], "histori": [348, 479], "recent": [348, 480, 481], "oldest": [348, 480], "fit": [360, 481], "tell": [367, 368, 369, 481, 484], "consid": [369, 396, 481], "mappinginput": [374, 375, 376, 377, 380, 381, 382, 384, 385, 386], "pro_id_type_a": [374, 381], "pro": [374, 381, 481], "automat": [374, 381, 385, 480, 481, 483], "give": [374, 381, 385, 453, 481], "overrid": [374, 381, 385, 386], "pro_id_type_b": [374, 381], "just": [374, 381, 385, 479], "biomart_id_type_a": 375, "biomart_id_type_b": 375, "input_": 376, "col_a": 376, "col_b": 376, "paramat": [377, 382, 384], "metabolom": [377, 479, 480], "type_": 378, "resource_id_type_a": [378, 481], "resource_id_type_b": [378, 481], "input_method": [378, 398, 399, 481], "id_col_a": [379, 481], "id_col_b": [379, 481], "entity_type_a": 379, "entity_type_b": 379, "is_direct": [379, 481], "sign": [379, 420], "input": [379, 383, 386, 398, 479, 480, 483], "extra_edge_attr": [379, 481], "extra_node_attrs_a": 379, "extra_node_attrs_b": 379, "taxon_a": 379, "taxon_b": 379, "post_transl": [379, 412, 481], "positive_filt": 379, "negative_filt": 379, "mark_sourc": 379, "mark_target": 379, "input_arg": [379, 398, 422], "curl_arg": 379, "must_have_refer": 379, "huge": [379, 481, 482], "unique_field": 379, "expand_complex": 379, "allow_loop": [379, 481], "only_default_organ": 379, "creat": [379, 412, 436, 453, 480], "vertex": [379, 463, 467, 468, 469, 470, 471, 472, 481], "particular": [379, 388, 481], "vertic": [379, 463, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 481], "fname": [380, 481], "consortium": [381, 481], "ramp": [382, 479], "id_col": 383, "extra_attr": [383, 399, 481], "unichem": [384, 481, 483], "uniprot_id_type_a": 385, "uniprot_id_type_b": 385, "upload": 385, "webservic": [385, 479], "would": [386, 481, 482], "interest": [386, 479, 480, 482], "directli": [386, 403, 460, 479, 480, 484], "ye": 386, "To": [386, 481, 484], "programmat": [386, 481], "interfac": [386, 480, 481], "slightli": [386, 412], "capabl": 386, "some": [386, 401, 446, 451, 480, 481, 484], "former": [386, 481, 483], "latter": [386, 481], "static": 386, "resource_id_typ": 386, "known": [386, 481, 484], "full_nam": [388, 481], "purpos": [388, 412, 481], "attrib": [388, 412], "enabl": [388, 481], "academ": [388, 412, 481], "redistribut": [388, 412, 481, 483], "compat": [388, 412, 483], "alik": [388, 412], "licensefeatur": [389, 391, 392], "classmethod": [389, 390, 391, 392, 436], "check_level": [389, 390, 391, 392], "int_to_level": [389, 390, 391, 392], "nearest": [389, 390, 391, 392], "ordin": [389, 390, 391, 392], "scale": [389, 390, 391, 392, 475, 477, 478, 481], "level_to_int": [389, 390, 391, 392], "to_int": [389, 390, 391, 392], "featur": [389, 390, 391, 392, 479, 481], "pp": 396, "htp_threshold": 396, "20": [396, 481], "studi": [396, 480, 481], "high": [396, 481], "data_attr_nam": 398, "logger": [398, 412, 425, 436, 437, 459], "load_data": 398, "_process_method": 398, "set_method": 398, "evidence_typ": [399, 402, 404], "via": [399, 400, 402, 403], "id_type_enzym": [399, 481], "id_type_substr": 399, "organisms_support": 399, "resource_attr": 399, "resourceattribut": [399, 402], "get_via": 399, "copi": [399, 480, 481], "origin": [399, 479, 480, 483], "come": [399, 480, 481, 484], "data_typ": [400, 403, 404], "mutablemap": 401, "formerli": [401, 481], "thin": 401, "solut": [401, 481], "organis": 401, "clear": [401, 481], "d": [401, 422, 481], "k": [401, 481], "view": [401, 480], "pop": 401, "v": [401, 481], "found": [401, 481], "keyerror": 401, "popitem": 401, "setdefault": 401, "f": 401, "lack": [401, 416], "networkresourcekeybas": 403, "last": [403, 481], "came": 403, "brows": [409, 479], "logfil": [409, 481], "resource_info_path": 412, "posixpath": 412, "home": [412, 481], "runner": 412, "use_package_path": 412, "aim": [412, 480, 481], "central": [412, 481], "commun": [412, 479, 480, 483], "14": [412, 479, 481], "01": [412, 481], "2020": [412, 481], "initi": [412, 453, 481, 483], "step": [412, 448, 453, 481], "develop": [412, 480, 481], "info": [412, 479, 484], "02": [412, 481], "inherit": [412, 481], "make": [412, 425, 436, 437, 444, 450, 451, 459, 481, 484], "prepend": [412, 425, 436, 437, 459], "messag": [412, 425, 436, 437, 440, 443, 444, 459, 479, 484], "add_resource_attr": 412, "abstractresourc": 412, "It": [412, 430, 436, 437, 460, 480, 481, 484], "modifi": [412, 443], "place": [412, 481], "noth": [412, 440], "collect_interact": 412, "pathway_noref": [412, 481], "pathway_al": [412, 481], "activity_flow": [412, 481], "mirna_target": [412, 481], "dorothea": [412, 483, 484], "tfregulon": [412, 422], "omnipath": [412, 417, 419, 420, 479, 483, 484], "reaction_pc": 412, "enzyme_substr": [412, 481], "extra_direct": 412, "small_molecule_protein": [412, 481], "tf_mirna": [412, 481], "pathwaycommon": [412, 481, 483], "pathwaycommons_transcript": 412, "interaction_htp": 412, "interaction_misc": [412, 481], "ligand_receptor": [412, 481, 483], "lncrna_target": 412, "transcription_onebyon": [412, 481], "transcription_dorothea": 412, "ptm_noref": [412, 481], "ptm_all": [412, 481], "reaction_misc": [412, 481], "post_transcript": 412, "process_descript": 412, "drug_target": 412, "license_purpos": [412, 481], "commerci": 412, "profit": [412, 481], "license_shar": 412, "noderiv": 412, "noshar": 412, "deriv": [412, 467, 477, 481, 484], "license_attrib": 412, "noattrib": 412, "composit": [412, 481, 484], "incld": 412, "mani": [412, 436, 480, 481, 483, 484], "overlap": [412, 467, 468, 469, 470, 471, 472, 481], "among": [412, 481, 484], "while": [412, 436, 453, 480, 481], "safest": 412, "sequenti": 412, "legal": [412, 481], "desir": [412, 453, 467, 468, 469, 470, 471, 472], "condit": [412, 481], "alter": [412, 481], "even": [412, 441, 481, 483, 484], "mention": [412, 481], "who": 412, "networkinput": [412, 415, 416, 417, 418, 419, 420, 421, 422, 481], "__resource__": 412, "whole": [412, 481], "networkresourc": [412, 481], "equal": 412, "incid": 412, "flexibl": [412, 481], "collect_network": [412, 481], "license_filt": 412, "secondary_resourc": 412, "postfix": [412, 481], "tfacts_collectri": 412, "forc": [412, 453, 481], "remove_old": 412, "py": 412, "befor": [412, 453, 481], "potenti": [412, 481], "overwrit": 412, "adhesom": [415, 481], "intern": [415, 416, 417, 418, 419, 420, 421, 422, 481, 483], "input_format": [415, 416, 417, 418, 419, 420, 421, 422, 480, 481], "arn": [415, 481], "baccin2019": [415, 481], "ca1": [415, 481], "cellchatdb": [415, 481], "cellink": [415, 481], "cellphonedb": [415, 479], "celltalkdb": [415, 481], "connectomedb": [415, 481], "death": [415, 481], "guide2pharma": [415, 481], "hpmr": [415, 481], "icellnet": [415, 481], "lrdb": [415, 481], "macrophag": [415, 481], "pdz": [415, 481], "ramilowski2015": [415, 481], "scconnect": [415, 481], "signalink3": [415, 481, 484], "signor": [415, 422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481, 484], "spike": [415, 481, 484], "talklr": [415, 481], "trip": [415, 481], "flow": [415, 484], "dbptm": [416, 481], "depod": [416, 481], "domino": 416, "hprd_p": 416, "iptmnet": [416, 481], "kea": [416, 481], "lmpid": 416, "phelm": 416, "psite": 416, "alz": 417, "ccmap": [417, 418], "dip": [417, 418], "innatedb": [417, 418], "lit17": 417, "matrixdb": [417, 418, 481], "mppi": [417, 418], "netpath": [417, 481], "regulatori": [418, 480, 483], "laudanna_direct": 419, "laudanna_effect": 419, "subset": 419, "undirect": [419, 467, 468, 469, 470, 471, 472, 481], "oreganno_old": 421, "ab": 422, "encode_dist": 422, "encode_prox": 422, "htri": 422, "medicu": 422, "oreganno": 422, "pazar": 422, "trrust": 422, "suffici": 422, "pa": [422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481], "init_network": [422, 481], "b": [422, 481], "c": [422, 467, 468, 469, 470, 471, 472, 481], "reload": [423, 481], "instanti": [423, 481], "onc": [423, 436, 480, 481], "demand": [423, 481], "license_dir": 425, "actual": [430, 463, 481, 482], "typic": [430, 480, 481], "quicker": 430, "uniqu": [431, 481, 484], "similar": [431, 480, 481, 484], "cache_item": 431, "md5": 431, "hash": [431, 481], "anyth": [431, 439, 442, 463, 475, 478, 481], "cachedir": 432, "ensur": [432, 480, 481], "silent": 436, "post": 436, "req_head": [436, 481], "debug": [436, 445, 446, 451], "outf": [436, 458], "compr": [436, 437], "files_need": [436, 437], "connect_timeout": 436, "ignore_content_length": 436, "init_fun": 436, "get_jsessionid": 436, "init_use_cach": 436, "default_mod": [436, 437], "r": [436, 437, 480, 481, 484], "override_post": 436, "init_head": 436, "return_head": 436, "compress": [436, 437], "write_cach": 436, "force_quot": 436, "sftp_user": 436, "sftp_passwd": 436, "sftp_passwd_fil": 436, "sftp_port": 436, "22": [436, 438, 481, 484], "sftp_host": 436, "sftp_ask": 436, "setup": [436, 448, 481], "cache_dir": 436, "bypass_url_encod": 436, "empty_attempt_again": 436, "keep_fail": 436, "alpn": 436, "slow": [436, 481], "http2": 436, "fileopen": 436, "pycurl": [436, 481], "vast": [436, 481], "amount": [436, 481], "cooki": 436, "param": [436, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478], "multipart": 436, "quot": 436, "redirect": 436, "pointer": [436, 437], "gzip": [436, 437], "tar": [436, 437], "gz": [436, 437], "zip": [436, 437], "abl": [436, 480, 481], "show": [436, 481, 484], "progress": 436, "cache_path": 436, "close": [436, 481], "construct_binary_data": 436, "byte": 436, "is_quot": 436, "stackoverflow": 436, "question": [436, 480], "1637762": 436, "php": [436, 481], "open_tgz": [436, 437], "replace_forbidden": 436, "repl": 436, "_": 436, "charact": [436, 481], "forbidden": 436, "certain": [436, 437, 479], "slash": 436, "unix": 436, "window": 436, "environ": [436, 481], "set_binary_data": 436, "transmit": 436, "attach": [436, 467, 468, 469, 470, 471, 472], "filenam": [436, 438, 459, 481], "url_fix": 436, "charset": 436, "utf": [436, 437], "8": [436, 437, 479, 480, 481], "121017": 436, "854988": 436, "file_param": 437, "_open": 437, "set_fileobj": 437, "bz2": 437, "select": [437, 479, 484], "multifil": 437, "examin": 437, "host": [438, 481, 483], "port": 438, "rownam": 438, "_global_context_off": [439, 441, 443, 445, 447, 450], "context": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 463, 467, 468, 469, 470, 471, 472, 475, 478, 481], "handler": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451], "behaviour": [439, 442, 443, 447, 481], "won": [439, 442, 443, 481], "behind": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481], "scene": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481], "cachedel": [439, 440], "data_format": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481, 483], "load_resourc": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 481], "_global_context_on": [440, 442, 444, 446, 448, 451], "Then": [440, 481], "dryrun": [440, 447, 448], "turn": [440, 441, 442], "upon": [440, 481], "let": [440, 481], "know": [440, 481], "cache_on": 441, "As": [442, 443, 481, 484], "probabl": [442, 481], "cacheprint": [443, 444], "avoid": [445, 450, 467, 468, 469, 470, 471, 472, 480, 481], "restor": [445, 447, 450], "cache_debug_off": 445, "issu": [446, 451, 480], "want": [446, 451, 479, 480, 484], "cache_debug_on": 446, "cache_dryrun_off": 447, "cache_dryrun_on": 448, "itself": [450, 451, 481], "lastcurl": [450, 451, 481], "preserv": [450, 451, 481], "cache_preserve_off": 450, "cache_preserve_on": 451, "percent": 453, "done": [453, 480], "init": 453, "unit": 453, "had": 453, "my": [453, 480], "progressbar": 453, "now": [453, 481], "great": [453, 481], "tqdm": 453, "move": [453, 483], "oldprogress": 453, "get_desc": 453, "suppos": 453, "someth": [453, 480, 481], "constant": [453, 467, 468, 469, 470, 471, 472], "life": 453, "stage": [453, 481], "task": 453, "init_tqdm": 453, "set_don": 453, "posit": [453, 467, 468, 469, 470, 471, 472, 481], "bar": 453, "set_statu": 453, "set_tot": 453, "msg": [453, 481], "busi": 453, "termin": [453, 481], "finish": [453, 481], "destroi": 453, "xsize": 458, "intersect": 458, "cairotest": 458, "pdf": [458, 459], "width": 458, "1024": 458, "height": 458, "bgcol": 458, "embl_gray125": 458, "interscol": 458, "ysize": 458, "ycol": 458, "margin": [458, 459, 481], "24": [458, 481], "mincircl": 458, "cellpad": 458, "graph": [459, 460, 463, 466, 473, 475, 477, 478, 481, 483], "graphix_dir": 459, "graphix_format": 459, "title_text": 459, "title_font_famili": 459, "title_font_s": 459, "title_color": 459, "646567": 459, "layout": [459, 463, 475, 477, 478], "fruchterman_reingold": 459, "layout_param": 459, "vertex_label": 459, "vertex_s": [459, 481], "vertex_label_s": [459, 481], "degree_label_s": 459, "edge_width": [459, 481], "vertex_color": [459, 481], "6ea945": 459, "vertex_label_color": [459, 481], "007b7f": 459, "vertex_alpha": 459, "aa": [459, 481], "vertex_frame_color": 459, "ffffff00": 459, "vertex_frame_width": [459, 481], "edge_label": 459, "edge_label_s": 459, "edge_label_color": 459, "edge_curv": 459, "edge_color": [459, 481], "818284": 459, "edge_alpha": 459, "autocurv": 459, "vertex_label_font": 459, "san": 459, "serif": 459, "edge_label_font": 459, "edge_arrow_s": 459, "edge_arrow_width": 459, "palett": [459, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478], "bbox": [459, 463, 475, 478], "dimens": 459, "1280": 459, "draw": [460, 463, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "routin": [460, 473], "cairo": [460, 463, 467, 468, 469, 470, 471, 472, 475, 478, 481], "surfac": [460, 481], "l": [460, 463, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "defaultgraphdraw": [460, 475, 477, 478], "ubigraph": 460, "displai": [460, 481], "ubigraphdraw": 460, "u": [460, 480, 481], "ubietylab": 460, "net": [460, 481], "igraph": [460, 463, 475, 477, 478, 479, 480, 483], "cytoscap": [460, 480, 481], "cytoscaperpc": 460, "plugin": 460, "gforg": 460, "nbic": 460, "nl": 460, "project": 460, "cytoscapegraphdraw": 460, "abstractcairographdraw": [462, 463, 464, 465], "vertex_drawer_factori": 463, "edge_drawer_factori": 463, "label_drawer_factori": 463, "visualis": 463, "2d": 463, "plane": 463, "straight": [463, 467, 468, 469, 470, 471, 472, 481], "curv": 463, "connect": [463, 480, 483, 484], "when": [463, 467, 468, 469, 470, 471, 472, 475, 477, 478, 480, 481], "invok": 463, "plot": [463, 466, 479, 483], "__plot__": 463, "drawer": [463, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478], "boundingbox": [463, 475, 478], "bound": [463, 475, 477, 478, 481], "box": [463, 475, 477, 478], "constructor": [463, 475, 478], "factori": 463, "abstractcairovertexdraw": [463, 478], "area": 463, "color": [463, 467, 468, 469, 470, 471, 472, 475, 477, 478], "defaultvertexdraw": 463, "abstractedgedraw": [463, 468, 469, 472], "style": [463, 466, 483, 484], "drawn": [463, 467, 468, 469, 470, 471, 472, 475, 477, 478], "arrowedgedraw": 463, "textdraw": 463, "abstract": [467, 475, 477], "concret": [467, 477], "draw_directed_edg": [467, 468, 469, 470, 471, 472], "src_vertex": [467, 468, 469, 470, 471, 472], "dest_vertex": [467, 468, 469, 470, 471, 472], "draw_loop_edg": [467, 468, 469, 470, 471, 472], "loop": [467, 468, 469, 470, 471, 472, 479], "circl": [467, 468, 469, 470, 471, 472], "draw_undirected_edg": [467, 468, 469, 470, 471, 472], "get_label_posit": [467, 468, 469, 470, 471, 472], "midpoint": [467, 468, 469, 470, 471, 472], "align": [467, 468, 469, 470, 471, 472], "tri": [467, 468, 469, 470, 471, 472], "x": [467, 468, 469, 470, 471, 472, 475, 477, 478], "y": [467, 468, 469, 470, 471, 472, 475, 477, 478, 481], "horizont": [467, 468, 469, 470, 471, 472], "taken": [467, 468, 469, 470, 471, 472], "textalign": [467, 468, 469, 470, 471, 472], "alpha_at_src": 468, "alpha_at_dest": 468, "vari": 468, "alpha": [468, 470, 471, 481], "destin": [468, 470, 471, 472], "arrow": 469, "alphavaryingedgedraw": [470, 471], "opac": [470, 471], "zero": [470, 471], "transpar": [470, 471], "interpol": [470, 471], "taper": 472, "wider": 472, "narrow": 472, "abstractvertexdraw": 475, "abstractcairodraw": 475, "canva": 475, "visual_vertex": [475, 477, 478], "coord": [475, 477, 478], "Its": [475, 477, 478, 481], "visualvertexbuild": [475, 477, 478], "coordin": [475, 477, 478, 480, 481], "algorithm": [475, 477, 478], "abstractdraw": 477, "welcom": [479, 481], "pypath": [479, 483, 484], "instal": 479, "doc": [479, 483], "manag": 479, "faq": 479, "contact": [479, 481], "impressum": 479, "releas": [479, 481], "mous": [479, 480, 481], "rat": 479, "role": [479, 480], "inter": [479, 480], "cellular": [479, 480], "explor": [479, 481], "32": [479, 481], "31": [479, 481], "74": [479, 481], "93": 479, "110": [479, 481], "11": [479, 481], "13": [479, 481], "upcom": 479, "how": [479, 480], "navig": 479, "introduct": 479, "app": [479, 480], "hmdb": 479, "swisslipid": 479, "lipid": 479, "self": 479, "sanit": 479, "intercellular": [479, 480, 483], "quantit": 479, "overview": 479, "intercel": [479, 480, 483, 484], "log": [479, 480, 483], "disabl": 479, "write": [479, 480], "bel": [479, 480, 483], "export": [479, 480, 483], "legaci": 479, "quickli": 479, "plai": 479, "causal": [479, 484], "out": [480, 481], "packag": [480, 481], "omnipathr": [480, 481], "popular": 480, "versatil": [480, 481, 483], "150": [480, 481], "don": [480, 481, 482, 484], "yourself": 480, "try": [480, 481], "builder": 480, "peopl": [480, 481], "satisfi": 480, "realli": [480, 481], "fresh": [480, 481], "pypi": [480, 481], "pip": 480, "git": 480, "github": [480, 481], "saezlab": 480, "comprehens": [480, 481, 483, 484], "guid": [480, 481], "experienc": 480, "well": [480, 481], "platform": 480, "biolog": [480, 481], "languag": [480, 481], "major": [480, 481, 483, 484], "distinguish": 480, "overal": [480, 481], "core": [480, 481, 483], "downlad": 480, "applic": [480, 481], "stand": 480, "alon": 480, "processor": 480, "begin": 480, "fundament": [480, 481], "design": [480, 481], "principl": 480, "todai": 480, "expos": 480, "rich": [480, 481], "five": [480, 481], "enz_sub": [480, 481, 484], "howev": [480, 481], "often": [480, 481], "get_db": [480, 481], "But": [480, 481], "subsequ": [480, 481], "easi": [480, 481], "mb": [480, 481], "gb": [480, 481], "long": [480, 481], "prone": 480, "truncat": [480, 481], "due": [480, 481], "interrupt": 480, "problemat": 480, "possibli": [480, 481], "anoth": [480, 481, 484], "sometim": [480, 481, 483, 484], "offlin": 480, "encount": 480, "fix": [480, 481, 483], "much": [480, 481, 483, 484], "faster": [480, 481], "still": [480, 481], "standalon": [480, 481], "script": [480, 481], "varieti": [480, 481, 484], "predefin": [480, 481], "map_nam": [480, 481], "p00533": [480, 481, 484], "genesymbol": [480, 481, 484], "egfr": [480, 481, 484], "homologen": [480, 481, 483, 484], "q01279": [480, 481], "run": [480, 481, 484], "doesn": [480, 481], "pyproject": 480, "toml": 480, "besid": [480, 481], "privat": 480, "sensit": 480, "matter": [480, 481], "feel": [480, 481], "omnipathdb": [480, 481, 484], "gmail": 480, "d\u00e9ne": 480, "t\u00fcrei": 480, "saez": 480, "contribut": 480, "scientist": 480, "erva": 480, "ulusoi": 480, "melih": 480, "darcan": 480, "\u00f6mer": 480, "kaan": 480, "vural": 480, "tennur": 480, "k\u0131l\u0131\u00e7": 480, "elif": 480, "\u00e7evrim": 480, "b\u00fcnyamin": 480, "\u015fen": 480, "atabei": 480, "\u00fcnl\u00fc": 480, "mert": 480, "erg\u00fcn": 480, "hu": [480, 481], "scienc": 480, "pi": [480, 481], "tunca": 480, "do\u011fan": 480, "leila": 480, "gul": 480, "dezs\u0151": 480, "m\u00f3do": 480, "m\u00e1rton": 480, "\u00f6lbei": 480, "tam\u00e1": 480, "korcsm\u00e1ro": 480, "korcsmaro": 480, "michael": 480, "klein": 480, "fabian": 480, "charl": 480, "taplei": 480, "hoyt": 480, "daniel": 480, "domingo": 480, "fern\u00e1ndez": 480, "ad": [480, 481], "olga": 480, "ivanova": 480, "introduc": 480, "sophia": 480, "m\u00fcller": 480, "dott": 480, "collectri": [480, 481], "nicol\u00e0": 480, "palacio": 480, "sebastian": 480, "lobentanz": 480, "ahmet": 480, "rifaioglu": 480, "mainten": [480, 481], "refactor": 480, "aurelien": 480, "dugourd": 480, "christina": 480, "schmidt": 480, "maintain": [480, 481], "francesco": 480, "ceccarelli": 480, "attila": 480, "g\u00e1bor": 480, "alberto": 480, "valdeoliva": 480, "logo": 480, "jakob": 480, "wirbel": 480, "graphic": 480, "spencer": 480, "phillip": 480, "embl": [480, 481], "bird": 480, "ey": 480, "15": 481, "16": 481, "17": 481, "18": 481, "19": 481, "21": 481, "segment": 481, "bioconductor": 481, "furthermor": 481, "enjoi": 481, "almost": [481, 483], "unlimit": 481, "tour": 481, "chanc": 481, "hesit": 481, "__version__": 481, "execut": 481, "0m": 481, "49": 481, "47": 481, "2023": 481, "03": 481, "09": 481, "39": 481, "36": 481, "easiest": 481, "henc": [481, 483, 484], "quick": 481, "34": 481, "27": 481, "2022": 481, "lt": 481, "databasemanag": 481, "0x602fb851cd90": 481, "gt": 481, "tf_target": [481, 484], "small_molecul": 481, "mirna_mrna": 481, "lncrna_mrna": 481, "offer": [481, 483], "cu": 481, "83": 481, "7980": 481, "35551": 481, "1m": 481, "55": 481, "18558": 481, "94358": 481, "tft": 481, "2m": 481, "72": 481, "54": 481, "18986": 481, "326708": 481, "mi": 481, "28": 481, "1264": 481, "3288": 481, "tmi": 481, "41": 481, "1032": 481, "4960": 481, "lnc": 481, "33": 481, "243": 481, "217": 481, "alloster": 481, "metabolit": [481, 483], "experiment": 481, "extend": 481, "futur": [481, 484], "smol": 481, "94": 481, "57": 481, "1980": 481, "3147": 481, "26": 481, "41426": 481, "co": 481, "28173": 481, "quit": 481, "43": 481, "60": 481, "5490653": 481, "50872": 481, "68": 481, "heavi": 481, "ic": 481, "23": 481, "37": 481, "301527": 481, "48570": 481, "biomed": 481, "troublesom": 481, "broken": 481, "daili": 481, "after": [481, 484], "cytosig": 481, "signor_interact": 481, "_interact": 481, "_enz_sub": 481, "_complex": 481, "_annot": 481, "intend": 481, "respect": 481, "fulli": 481, "_raw": 481, "_map": 481, "bring": 481, "state": 481, "though": [481, 484], "mai": 481, "observ": 481, "repeat": 481, "pattern": 481, "arbitrarili": 481, "toward": 481, "straightforward": 481, "outsid": 481, "signor_complex": 481, "intera": 481, "complexaggreg": 481, "p23511_p25208_q13952": 481, "nfy": 481, "p68104_p85299_q6r327_q8tb45_q9bvc4": 481, "mtorc2": 481, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 481, "mtorc1": 481, "p63208_q13616_q9y297": 481, "scf": 481, "betatrcp": 481, "q09472_q92793": 481, "cbp": 481, "p300": 481, "q09472_q92793_q92831": 481, "pcaf": 481, "q13485_q15796": 481, "smad2": [481, 484], "smad4": 481, "p84022_q13485": 481, "smad3": 481, "p05412_q13485": 481, "jun": 481, "q15796_q9hau4": 481, "smurf2": 481, "o15105_q01094_q13547": 481, "smad7": 481, "hdac1": 481, "e2f": 481, "p19838_q04206": 481, "nfkb": 481, "p65": 481, "p50": 481, "o14920_o15111": 481, "ik": 481, "1000": 481, "17699": 481, "readabl": 481, "52": 481, "signorinteract": 481, "o15530": 481, "source_isoform": 481, "target_isoform": 481, "source_typ": 481, "target_typ": 481, "phosphoryl": 481, "10455013": 481, "ptm_type": 481, "ptm_residu": 481, "ser396": 481, "ptm_motif": 481, "sssssshslsasdtg": 481, "q9nq66": 481, "18035": 481, "smallmolecul": 481, "quantiti": 481, "23880553": 481, "catalysi": 481, "p62136": 481, "o15169": 481, "down": 481, "dephosphoryl": 481, "17318175": 481, "ser77": 481, "yepegsasptppylk": 481, "sou": 481, "3285": 481, "signor_enzyme_substr": 481, "easier": 481, "enzymesubstrateaggreg": 481, "58": 481, "typ": 481, "resnum": 481, "396": 481, "389": 481, "403": 481, "resaa": 481, "enzyme_isoform": 481, "substrate_isoform": 481, "77": 481, "70": 481, "84": 481, "final": 481, "assign": [481, 484], "signor_pathway_annot": 481, "practic": 481, "o14733": 481, "48": 481, "signorpathwai": 481, "tnf": 481, "toll": 481, "haven": 481, "four": 481, "signor_protein_famili": 481, "famili": 481, "own": [481, 483], "pf2": 481, "53": 481, "q9hbw0": 481, "q92633": 481, "q9uby5": 481, "showcas": 481, "metabol": 481, "enzymat": 481, "closer": 481, "mysql": [481, 483], "ramp_list_t": 481, "51": 481, "analyt": 481, "rampid": 481, "analytehasontologi": 481, "rampcompoundid": 481, "rampontologyid": 481, "analytehaspathwai": 481, "pathwayrampid": 481, "pathwaysourc": 481, "analytesynonym": 481, "geneorcompound": 481, "catalyz": 481, "rampgeneid": 481, "chem_prop": 481, "ramp_id": 481, "chem_data_sourc": 481, "chem_source_id": 481, "iso_smil": 481, "inchi_key_prefix": 481, "inchi_kei": 481, "mw": 481, "monoisotop_mass": 481, "common_nam": 481, "mol_formula": 481, "db_version": 481, "ramp_vers": 481, "load_timestamp": 481, "version_not": 481, "met_intersects_json": 481, "gene_intersects_json": 481, "met_intersects_json_pw_map": 481, "gene_intersects_json_pw_map": 481, "db_sql_url": 481, "entity_status_info": 481, "status_categori": 481, "entity_source_id": 481, "entity_source_nam": 481, "entity_count": 481, "metabolite_class": 481, "class_source_id": 481, "class_level_nam": 481, "class_nam": 481, "commonnam": 481, "hmdbontologytyp": 481, "metcount": 481, "pathwayr": 481, "1368": 481, "ramp_raw": 481, "sqlite": 481, "conveni": 481, "At": 481, "bottleneck": 481, "thank": 481, "happen": 481, "25": [481, 484], "sourceid": 481, "idtyp": 481, "priorityhmdbstatu": 481, "datasourc": 481, "pathwaycount": 481, "hmdb0000001": 481, "ramp_c_000000001": 481, "methylhistidin": 481, "quantifi": 481, "hmdb0000479": 481, "50599": 481, "chemspid": 481, "83153": 481, "c01152": 481, "hmdb_kegg": 481, "756552": 481, "h0ydb7": 481, "ramp_g_000009307": 481, "rab38": 481, "null": 481, "wiki": 481, "756553": 481, "a0a024r191": 481, "756554": 481, "h0yea4": 481, "756555": 481, "entrez": 481, "23682": 481, "756556": 481, "gene_symbol": 481, "756557": 481, "physicochem": 481, "00": 481, "46": 481, "h": 481, "oc": 481, "o": 481, "n": 481, "c1": 481, "brmwtnujhumwm": 481, "lurjtmiesa": 481, "c7h11n3o2": 481, "169": 481, "181": 481, "085": 481, "cc1": 481, "cn": 481, "cn1c": 481, "jdhildinmrgul": 481, "27596": 481, "cn1cncc1c": 481, "methyl": 481, "histidin": 481, "cn1cnc": 481, "tele": 481, "ramp_c_000000002": 481, "hmdb0000002": 481, "ncccn": 481, "xfnjvjplkcpibv": 481, "uhfffaoysa": 481, "c3h10n2": 481, "c4": 481, "h1": 481, "5h2": 481, "1249": 481, "0844": 481, "diaminopropan": 481, "275898": 481, "ramp_c_000258279": 481, "lipidmap": 481, "lmpk15050003": 481, "ccccccccccccc": 481, "uxlmjhnfdrmgpw": 481, "ljqanchmsa": 481, "c24h38o6": 481, "422": 481, "267": 481, "hydroxi": 481, "methoxi": 481, "2r": 481, "acetoxi": 481, "pentadecyl": 481, "275899": 481, "ramp_c_000258280": 481, "lmpk15050004": 481, "cc": 481, "cvznklnahbtint": 481, "jochjyfzsa": 481, "c24h38o5": 481, "406": 481, "272": 481, "benzoq": 481, "275900": 481, "ramp_c_000226089": 481, "lmpk15050005": 481, "ccccccccccc": 481, "jiugzsypfredlg": 481, "hxuwfjfhsa": 481, "c22h34o5": 481, "378": 481, "241": 481, "tridecyl": 481, "benzoqui": 481, "275901": 481, "ramp_c_000258283": 481, "lmpk15050008": 481, "ccccccccccccccc": 481, "gxdurrguxldzkn": 481, "c21h34o4": 481, "350": 481, "246": 481, "suberonon": 481, "275902": 481, "ramp_c_000258284": 481, "lmpk15050009": 481, "amknobhckrzhio": 481, "c19h30o4": 481, "322": 481, "214": 481, "rapanon": 481, "275903": 481, "advantag": 481, "vice": 481, "versa": 481, "alwai": 481, "con": 481, "your": [481, 484], "disk": 481, "56": 481, "07": 481, "sqlite3": 481, "0x6fa1e9e4e940": 481, "big": 481, "enough": 481, "short": [481, 484], "period": 481, "format_byt": 481, "python_memory_usag": 481, "44": 481, "list_column": 481, "sql": 481, "subqueri": 481, "order": [481, 484], "distinct": 481, "ON": 481, "read_sql_queri": 481, "hmdb00001": 481, "104129": 481, "hmdb0126033": 481, "25882": 481, "104130": 481, "hmdb0141947": 481, "180150": 481, "104131": 481, "hmdb0128505": 481, "7870": 481, "104132": 481, "hmdb0130984": 481, "8227": 481, "104133": 481, "hmdb0130987": 481, "8630": 481, "104134": 481, "Such": 481, "easili": [481, 484], "ramp_map": 481, "ramp_id_typ": 481, "45": 481, "brenda": 481, "kegg_glycan": 481, "lipidbank": 481, "ncbiprotein": 481, "plantfa": 481, "wikidata": 481, "29": 481, "lmfa00000008": 481, "slm": 481, "000390048": 481, "lmfa01010001": 481, "000000510": 481, "lmfa01010002": 481, "000000449": 481, "lmfa01010003": 481, "000001194": 481, "lmfa01010004": 481, "000001195": 481, "lmfa01010005": 481, "000389552": 481, "lmfa01010006": 481, "000001196": 481, "lmfa01010007": 481, "000389947": 481, "lmfa01010008": 481, "000000853": 481, "lmfa01010010": 481, "000000855": 481, "lmfa01010011": 481, "000389946": 481, "lmfa01010012": 481, "000000719": 481, "lmfa01010013": 481, "000001198": 481, "lmfa01010014": 481, "000000825": 481, "lmfa01010015": 481, "000001199": 481, "lmfa01010017": 481, "000001095": 481, "lmfa01010019": 481, "000001205": 481, "lmfa01010020": 481, "000000829": 481, "lmfa01010021": 481, "000001207": 481, "lmfa01010022": 481, "000000827": 481, "lmfa01010023": 481, "000001128": 481, "lmfa01010024": 481, "000000414": 481, "lmfa01010026": 481, "000000539": 481, "lmfa01010027": 481, "000000980": 481, "lmfa01010028": 481, "000000540": 481, "lmfa01010030": 481, "000000543": 481, "lmfa01010032": 481, "000000544": 481, "lmfa01010034": 481, "00000": 481, "44684": 481, "got": 481, "63": 481, "30": 481, "lmst02030086": 481, "000485328": 481, "lmst02030087": 481, "000485330": 481, "lmsp06020013": 481, "000000534": 481, "lmst02020001": 481, "000001055": 481, "000485315": 481, "35218": 481, "lmpr0104010007": 481, "000389242": 481, "35219": 481, "lmpr0104030005": 481, "000390232": 481, "35220": 481, "lmpr0104030006": 481, "000390227": 481, "35221": 481, "lmpr01070626": 481, "000000432": 481, "35222": 481, "lmpr01090015": 481, "000389419": 481, "35223": 481, "get_mapp": 481, "38": 481, "medchemexpress": 481, "actor": 481, "affymetrix": 481, "alzforum": 481, "alzforum_mut": 481, "araport": 481, "atla": [481, 484], "bindingdb": 481, "carotenoiddb": 481, "cas_id": 481, "cgnc": 481, "chemicalbook": 481, "clinicaltri": 481, "clinic": 481, "7422": 481, "35": 481, "mapping_t": 481, "mappingtabledefinit": 481, "input_class": 481, "rampmap": 481, "3238": 481, "insight": 481, "99": 481, "131431": 481, "hmdb0094709": 481, "lxml": 481, "etre": 481, "minim": 481, "iter_metabolit": 481, "04": 481, "0x60b1846262c0": 481, "On": 481, "schema": 481, "instruct": 481, "metabolites_schema": 481, "direct_par": 481, "kingdom": 481, "sub_class": 481, "molecular_framework": 481, "alternative_par": 481, "findal": 481, "substitu": 481, "spectra": 481, "spectrum": 481, "spectrum_id": 481, "biological_properti": 481, "cellular_loc": 481, "biospecimen_loc": 481, "biospecimen": 481, "tissue_loc": 481, "tissu": [481, 484], "kegg_map_id": 481, "smpdb_id": 481, "experimental_properti": 481, "4037": 481, "proteins_schema": 481, "gene_properti": 481, "chromosome_loc": 481, "locu": 481, "gene_sequ": 481, "protein_properti": 481, "residue_numb": 481, "molecular_weight": 481, "theoretical_pi": 481, "polypeptide_sequ": 481, "transmembrane_region": 481, "region": 481, "signal_region": 481, "pfam": 481, "pfam_id": 481, "metabolite_associ": 481, "go_classif": 481, "go_class": 481, "go_id": 481, "general_refer": 481, "general_": 481, "2072": 481, "metabolites_raw": 481, "proteins_raw": 481, "head": 481, "peek": 481, "belong": 481, "cystein": 481, "thereof": 481, "amino": 481, "carboxi": 481, "hydrogen": 481, "glycin": 481, "heteroatom": 481, "carboxyl": 481, "acid": 481, "analogu": 481, "aromat": 481, "heteromonocycl": 481, "aralkylamin": 481, "azacycl": 481, "carbonyl": 481, "heteroaromat": 481, "hydrocarbon": 481, "imidazolyl": 481, "monoalkylamin": 481, "monocarboxyl": 481, "substitut": 481, "imidazol": 481, "oxid": 481, "132354": 481, "hmdb0000005": 481, "ketobutyr": 481, "hmdb0000008": 481, "hydroxybutyr": 481, "hmdb0000010": 481, "methoxyestron": 481, "hmdb0000011": 481, "hmdb0000012": 481, "deoxyuridin": 481, "hmdb0000014": 481, "deoxycytidin": 481, "hmdb0000015": 481, "cortexolon": 481, "hmdb0000016": 481, "deoxycorticosteron": 481, "hmdb0000017": 481, "pyridox": 481, "hmdb0000019": 481, "ketoisovaler": 481, "hmdb0000020": 481, "p": 481, "hydroxyphenylacet": 481, "hmdb0000021": 481, "iodotyrosin": 481, "hmdb0000022": 481, "methoxytyramin": 481, "hmdb0000023": 481, "hydroxyisobutyr": 481, "hmdb00": 481, "1291": 481, "gene_nam": 481, "nucleotidas": 481, "nt5e": 481, "deoxycytidyl": 481, "deaminas": 481, "dctd": 481, "ump": 481, "cmp": 481, "cmpk1": 481, "cytosol": 481, "1b": 481, "nt5c1b": 481, "1a": 481, "nt5c1a": 481, "deoxyribonucleotidas": 481, "nt5c": 481, "dck": 481, "mitochondri": 481, "nt5m": 481, "hydroxymethylglutaryl": 481, "coa": 481, "lyas": 481, "hmgcl": 481, "atp": 481, "citrat": 481, "synthas": 481, "acli": 481, "histon": 481, "acetyltransferas": 481, "ep300": 481, "pyruv": 481, "dehydrogenas": 481, "e1": 481, "subunit": 481, "beta": 481, "pdhb": 481, "acetyl": [481, 484], "acat2": 481, "creb": 481, "crebbp": 481, "diamin": 481, "acetyltransf": 481, "1478": 481, "metabolites_t": 481, "proteins_t": 481, "nameless": 481, "notat": 481, "_tabl": 481, "nc": 481, "ccc": 481, "tyeybosbbbhjiv": 481, "afendnxgafykqo": 481, "vkhmyheasa": 481, "12ccc": 481, "c3": 481, "wheuwnkscxykbu": 481, "qpwughhjsa": 481, "whbmmwsbfzvssr": 481, "gsvougtgsa": 481, "1o": 481, "n1c": 481, "nc1": 481, "mxhrcpnrjammim": 481, "shyzeuofsa": 481, "1c": 481, "o1": 481, "cktsbutuhbmzgz": 481, "12cc": 481, "whbhbvvogneclv": 481, "obqkjfggsa": 481, "zesrjspzrdmnhi": 481, "yfwfahhusa": 481, "c1o": 481, "hxacouqixzgnbf": 481, "1h": 481, "yl": 481, "propanediamin": 481, "propylenediamin": 481, "ketobutano": 481, "oxobutyr": 481, "met": 481, "hydroxybutano": 481, "meth": 481, "hydro": 481, "du": 481, "deo": 481, "5r": 481, "hydroxymet": 481, "desoxi": 481, "hydroxycorticosteron": 481, "cortodoxo": 481, "pregnen": 481, "dion": 481, "hydroxyp": 481, "hydroxymethylp": 481, "hmdb_synonym": 481, "propano": 481, "mhi": 481, "n1": 481, "dihydrochlorid": 481, "expand": 481, "prop": 481, "291": 481, "hydroxymethyl": 481, "isonicotin": 481, "292": 481, "pyridoxin": 481, "293": 481, "pyridoxinecarboxyl": 481, "294": 481, "pyridoxyl": 481, "295": 481, "296": 481, "300": 481, "care": 481, "combinatori": 481, "grow": 481, "taxonomy__alternative_par": 481, "taxonomy__class": 481, "taxonomy__descript": 481, "taxonomy__direct_par": 481, "taxonomy__kingdom": 481, "taxonomy__molecular_framework": 481, "taxonomy__sub_class": 481, "taxonomy__substitu": 481, "compoun": 481, "kno": 481, "amin": 481, "aralkyla": 481, "organopnictogen": 481, "comp": 481, "organonitrogen": 481, "aliphat": 481, "acycl": 481, "keton": 481, "keto": 481, "ket": 481, "fatti": 481, "alcohol": 481, "hy": 481, "unsubstitut": 481, "benzenoid": 481, "oxo": 481, "steroid": 481, "estrogen": 481, "homopolycycl": 481, "estran": 481, "oxost": 481, "hyd": 481, "pyrimidin": 481, "nucleosid": 481, "deoxyribonucleosid": 481, "aminopyrimidin": 481, "hydroxysteroid": 481, "oxosteroid": 481, "del": 481, "delta": 481, "carbo": 481, "pyridin": 481, "pyridinecarboxyl": 481, "heteromon": 481, "gave": 481, "birth": 481, "000": [481, 484], "2235": 481, "vinylog": 481, "organooxygen": 481, "2236": 481, "2237": 481, "2238": 481, "2239": 481, "2240": 481, "metabolites_map": 481, "proteins_map": 481, "c00109": 481, "c00526": 481, "c00847": 481, "c00881": 481, "c00986": 481, "c01089": 481, "c03205": 481, "ccc2": 481, "12c": 481, "c05299": 481, "c05488": 481, "c05984": 481, "pretti": 481, "fast": 481, "h3": 481, "6h": 481, "8h2": 481, "1h3": 481, "t6": 481, "m0": 481, "s1": 481, "constitut": 481, "isom": 481, "hydrid": 481, "tau": 481, "n3": 481, "81": 481, "figur": [481, 483], "hmdb_name": 481, "2024": 481, "06": 481, "swisslipids_tissu": 481, "0x6a4f241d0230": 481, "000056561": 481, "phosphatidylcholin": 481, "40": 481, "cell": [481, 484], "uberon": 481, "0001969": 481, "blood": 481, "plasma": [481, 484], "6814": 481, "lipids2uniprot": 481, "000056510": 481, "6806": 481, "000056525": 481, "6809": 481, "000056524": 481, "6808": 481, "000056509": 481, "6805": 481, "934": 481, "000098542": 481, "phosphatidylethanolamin": 481, "0000468": 481, "6239": 481, "caenorhabd": 481, "elegan": 481, "15918": 481, "935": 481, "000098543": 481, "15917": 481, "936": 481, "000098546": 481, "15916": 481, "937": 481, "000098549": 481, "15913": 481, "938": 481, "000098557": 481, "15910": 481, "939": 481, "tool": 481, "research": 481, "lmsd": 481, "sdf": 481, "lmsd_sdf": 481, "42": 481, "lmfa00000001": 481, "lipid_maps_structure_databas": 481, "comment": 481, "mol": 481, "lm_id": 481, "systematic_nam": 481, "methyloctadec": 481, "ynoyl": 481, "anhydrid": 481, "c40h66o5": 481, "vogbkcaaniaxci": 481, "h7": 481, "38h": 481, "34h2": 481, "6h3": 481, "ccccccc": 481, "ccccc": 481, "fa": 481, "o3": 481, "acetylen": 481, "10930192": 481, "chebi_id": 481, "178363": 481, "acyl": 481, "main_class": 481, "fa00": 481, "exact_mass": 481, "626": 481, "491025": 481, "48116": 481, "len": 481, "1803": 481, "And": [481, 484], "pc": 481, "lmgp01010888": 481, "9z": 481, "octadecenoyl": 481, "octadecanoyl": 481, "sn": 481, "glycero": 481, "phosphocholin": 481, "c44h86no8p": 481, "nmjcstnqfypvor": 481, "vhonouadsa": 481, "50": 481, "h20": 481, "42h": 481, "41h2": 481, "5h3": 481, "b22": 481, "t42": 481, "m1": 481, "cop": 481, "occ": 481, "ccccccccccccccccc": 481, "coc": 481, "cccccccc": 481, "cholin": 481, "phosphat": 481, "ester": 481, "oleo": 481, "stearin": 481, "oleoyl": 481, "stearoyl": 481, "lecithin": 481, "ospc": 481, "0_18": 481, "24778936": 481, "hmdb_id": 481, "hmdb0008102": 481, "76073": 481, "swisslipids_id": 481, "000012": 481, "2352": 481, "08": 481, "000012332": 481, "na": 481, "2290": 481, "esummari": 481, "eutil": 481, "6063": 481, "uid": 481, "gd": 481, "gpl": 481, "erank": 481, "8esiq": 481, "evalu": 481, "joaz": 481, "titl": 481, "diurnal": 481, "circadian": 481, "arabidopsi": 481, "thaliana": 481, "gdstype": 481, "profil": 481, "valtyp": 481, "ratio": 481, "idref": 481, "genenam": 481, "genedesc": 481, "ugnam": 481, "at4g11560": 481, "ugdesc": 481, "bromo": 481, "adjac": 481, "bah": 481, "nucdesc": 481, "9366": 481, "lambda": 481, "prl2": 481, "cdna": 481, "clone": 481, "135j10t7": 481, "entrez_gene_id": 481, "gbacc": 481, "t46103": 481, "ptacc": 481, "cloneid": 481, "orf": 481, "spotid": 481, "vmin": 481, "395000": 481, "vmax": 481, "201000": 481, "a1b3c1": 481, "abscal": 481, "aflag": 481, "aoutl": 481, "rstd": 481, "rmean": 481, "get_pubm": 481, "33209674": 481, "pubdat": 481, "oct": 481, "epubd": 481, "transl": 481, "androl": 481, "urol": 481, "kim": 481, "authtyp": 481, "clusterid": 481, "lee": 481, "sh": 481, "dh": 481, "jy": 481, "hong": 481, "ih": 481, "lastauthor": 481, "gemcitabin": 481, "versu": 481, "chemotherapi": 481, "patient": 481, "metastat": 481, "urotheli": 481, "carcinoma": 481, "retrospect": 481, "sorttitl": 481, "volum": 481, "2113": 481, "2121": 481, "lang": 481, "eng": 481, "2263": 481, "1956": 481, "epiderm": 481, "growth": 481, "factor": [481, 484], "currentid": 481, "chromosom": 481, "geneticsourc": 481, "genom": 481, "maploc": 481, "7p11": 481, "otheralias": 481, "erbb": 481, "erbb1": 481, "errp": 481, "her1": 481, "nisbd2": 481, "pig61": 481, "mena": 481, "otherdesign": 481, "viii": 481, "avian": 481, "erythroblast": 481, "leukemia": 481, "viral": 481, "erb": 481, "oncogen": 481, "homolog": [481, 484], "prolifer": 481, "induc": 481, "61": 481, "tyrosin": 481, "b2": 481, "proto": 481, "nomenclaturesymbol": 481, "nomenclaturenam": 481, "nomenclaturestatu": 481, "mim": 481, "131550": 481, "genomicinfo": 481, "chrloc": 481, "chraccver": 481, "nc_000007": 481, "chrstart": 481, "55019016": 481, "chrstop": 481, "55211627": 481, "exoncount": 481, "geneweight": 481, "580393": 481, "5417": 481, "90": 481, "min": 481, "awar": 481, "hundr": 481, "dozen": [481, 484], "sooner": 481, "later": 481, "accid": 481, "recommend": 481, "remain": 481, "cache_delete_on": 481, "depod_enzyme_substr": 481, "59": 481, "cache_off": 481, "cache_print_on": 481, "dry_run_on": 481, "wrong": 481, "debug_on": 481, "curl_connect_timeout": 481, "establish": 481, "curl_extended_timeout": 481, "exception": 481, "curl_retri": 481, "curl_timeout": 481, "360": 481, "deep": 481, "stack": 481, "investig": 481, "difficult": 481, "preserve_on": 481, "kept": 481, "depod_curl": 481, "0x6947386dc8b0": 481, "fileobj": 481, "bioss": 481, "uni": 481, "freiburg": 481, "de": 481, "depod_201405_human_phosphatas": 481, "mitab": 481, "_io": 481, "textiowrapp": 481, "dene": 481, "6a711369ecf9dcff8c5ed88996685b54": 481, "mode": 481, "iso": 481, "8859": 481, "okai": 481, "wether": 481, "successfulli": 481, "night": 481, "transient": 481, "disappear": 481, "dai": 481, "perman": 481, "mayb": 481, "third": 481, "parti": 481, "lot": [481, 483], "notebook": 481, "pypath_log": 481, "s3e92": 481, "535b06d53a59e75bb693369bc5fdc556": 481, "112963": 481, "verifi": 481, "certif": 481, "invalid": 481, "expir": 481, "miss": 481, "softwar": 481, "encrypt": 481, "trust": 481, "reach": [481, 482], "root": [481, 483], "global": 481, "everi": [481, 483], "comput": 481, "program": 481, "correctli": 481, "admin": 481, "duti": 481, "procedur": 481, "97": 481, "scan": 481, "cipher": 481, "libcurl": 481, "anaconda": 481, "java": 481, "mozilla": 481, "firefox": 481, "seriou": 481, "strong": 481, "think": 481, "written": 481, "rc": 481, "get_control": 481, "resourcecontrol": 481, "0x6cc25e25dcf0": 481, "BY": 481, "sa": 481, "aspect": [481, 484], "pw_academ": 481, "pw_commerci": 481, "pdzbase": 481, "No": 481, "nar": 481, "gplv3": 481, "mit": 481, "net_academ": 481, "net_commerci": 481, "79": 481, "6833": 481, "25607": 481, "6429": 481, "23288": 481, "usabl": 481, "400": 481, "fine": 481, "grain": 481, "analysi": [481, 483], "expert": 481, "thought": 481, "owner": 481, "permiss": 481, "pai": 481, "fee": 481, "product": 481, "yearusedreleas": 481, "2015": 481, "2009": 481, "2011": 481, "bioinformat": 481, "oxfordjourn": 481, "690": 481, "d1": 481, "d321": 481, "suppl_1": 481, "d235": 481, "univ": 481, "lyon1": 481, "fr": 481, "omictool": 481, "19147664": 481, "20852260": 481, "25378329": 481, "mammalia": 481, "extracellular": [481, 484], "bairoch": 481, "partner": [481, 484], "repor": 481, "4479": 481, "197": 481, "collect_enzyme_substr": 481, "enzymesubstrateresourc": 481, "phosphoelm": 481, "li2012": 481, "phosphonetwork": [481, 484], "mimp": 481, "protmapp": 481, "202": 481, "phosphoelm_enzyme_substr": 481, "larger": 481, "netr": 481, "deathdomain": 481, "1864": 481, "05": 481, "7979": 481, "35550": 481, "8002": 481, "35748": 481, "older": 481, "mentin": 481, "focu": 481, "sinc": 481, "constraint": 481, "unbias": 481, "interactom": 481, "screen": 481, "vidal": 481, "lncrna_protein": 481, "guarante": 481, "moment": 481, "dict_kei": 481, "connectomedb2020": 481, "popul": 481, "trpc1": 481, "kcnma1": 481, "ppp3ca": 481, "calm2": 481, "calm3": 481, "calm1": 481, "casp1": 481, "casp4": 481, "cacna1c": 481, "cav1": 481, "ev": 481, "118492": 481, "sync": 481, "facilit": 481, "p48995": 481, "q12791": 481, "q08209": 481, "p0dp24": 481, "p0dp25": 481, "p0dp23": 481, "p29466": 481, "p49662": 481, "q13936": 481, "q03135": 481, "p56539": 481, "cav3": 481, "q14247": 481, "cttn": 481, "p14416": 481, "drd2": 481, "p11532": 481, "dmd": 481, "p11362": 481, "fgfr1": 481, "q02790": 481, "fkbp4": 481, "q86ym7": 481, "homer1": 481, "q9nsc5": 481, "homer3": 481, "q99750": 481, "mdfi": 481, "q14571": 481, "itpr2": 481, "q14573": 481, "itpr3": 481, "p29966": 481, "marck": 481, "q13255": 481, "grm1": 481, "p20591": 481, "mx1": 481, "p62166": 481, "ncs1": 481, "q96d31": 481, "orai1": 481, "q96sn7": 481, "orai2": 481, "q9brq5": 481, "orai3": 481, "p11171": 481, "epb41": 481, "p61586": 481, "rhoa": 481, "q9y225": 481, "rnf24": 481, "p21817": 481, "ryr1": 481, "p16615": 481, "atp2a2": 481, "q93084": 481, "atp2a3": 481, "p60880": 481, "snap25": 481, "q13586": 481, "sti": 481, "30573": 481, "egf": 481, "fantom5": 481, "cellsign": 481, "similarli": 481, "ia": 481, "get_resource_nam": 481, "get_refer": 481, "10085134": 481, "10209155": 481, "10788520": 481, "12093292": 481, "12297050": 481, "12620237": 481, "12648462": 481, "15620700": 481, "16274239": 481, "17145710": 481, "19531499": 481, "20458382": 481, "21071413": 481, "23331499": 481, "3494473": 481, "6289330": 481, "8639530": 481, "get_direct": 481, "opposit": 481, "get_sign": 481, "get_": 481, "get_interaction_typ": 481, "_by_": 481, "references_by_resourc": 481, "get_interactions_posit": 481, "Or": [481, 484], "make_df": 481, "type_a": 481, "type_b": 481, "dmodel": 481, "nan": 481, "44033": 481, "q14289": 481, "q9ulz3": 481, "44034": 481, "p54646": 481, "q9y2i7": 481, "44035": 481, "q9bxm7": 481, "q9y2n7": 481, "44036": 481, "p49137": 481, "q9y385": 481, "44037": 481, "q9uhc7": 481, "p04637": 481, "44038": 481, "unique_pair": 481, "65": 481, "source_genesymbol": 481, "target_genesymbol": 481, "is_stimul": 481, "is_inhibit": 481, "consensus_direct": 481, "consensus_stimul": 481, "consensus_inhibit": 481, "19168436": 481, "25139746": 481, "23228564": 481, "11290752": 481, "11983166": 481, "12601176": 481, "36729": 481, "ptk2b": 481, "pycard": 481, "27796369": 481, "36730": 481, "prkaa2": 481, "pikfyv": 481, "24070423": 481, "36731": 481, "pink1": 481, "hif3a": 481, "27551449": 481, "36732": 481, "mapkapk2": 481, "ube2j1": 481, "24020373": 481, "36733": 481, "mkrn1": 481, "tp53": 481, "19536131": 481, "36734": 481, "extra_node_attr": 481, "customis": 481, "webservice_interactions_df": 481, "dorothea_tfb": 481, "dorothea_coexp": 481, "dorothea_level": [481, 484], "curation_effort": 481, "ncbi_tax_id_sourc": 481, "entity_type_sourc": 481, "ncbi_tax_id_target": 481, "entity_type_target": 481, "trip_method": 481, "immunoprecipit": 481, "fluoresc": 481, "downstream": 481, "benefici": 481, "undesir": 481, "grn": 481, "network_allow_loop": 481, "wish": 481, "pw": 481, "gr": 481, "count_loop": 481, "149": 481, "count_interactions_by_interaction_typ": 481, "33571": 481, "281262": 481, "soon": 481, "nucleic": 481, "mandatori": [481, 483, 484], "topologi": [481, 484], "network_expand_complex": 481, "pharmacologi": 481, "count_complex": 481, "get_complex": 481, "fos_jun": 481, "fos_junb": 481, "fos_jund": 481, "fosl1_jun": 481, "fosl2_jun": 481, "jun_junb": 481, "jun_jund": 481, "fosb_jun": 481, "fosl1_junb": 481, "fosl1_jund": 481, "fosl2_junb": 481, "fosl2_jund": 481, "junb": 481, "junb_jund": 481, "fosb_junb": 481, "jund": 481, "fosb_jund": 481, "nfkb1": 481, "nfkb1_nfkb2": 481, "nfkb1_relb": 481, "nfkb1_rela": 481, "nfkb1_rel": 481, "nfkb2": 481, "nfkb2_relb": 481, "nfkb2_rela": 481, "nfkb2_rel": 481, "relb": 481, "rela_relb": 481, "rel_relb": 481, "rela": 481, "rel_rela": 481, "rel": 481, "cplex_ent": 481, "q04206_q04864": 481, "isinst": 481, "p17535": 481, "p15407": 481, "p04040": 481, "cat": 481, "extri_collectri": 481, "10022519": 481, "10329043": 481, "collectr": 481, "p05412": 481, "p15408": 481, "p17275": 481, "54980": 481, "p01100": 481, "p01270": 481, "pth": 481, "9989817": 481, "54981": 481, "54982": 481, "p53539": 481, "54983": 481, "54984": 481, "23235": 481, "iloc": 481, "p15407_p17535": 481, "p01106": 481, "o14746": 481, "myc": 481, "tert": 481, "75": 481, "67945": 481, "q01196": 481, "q13094": 481, "runx1": 481, "lcp2": 481, "67946": 481, "q6mzq0": 481, "prr5l": 481, "67947": 481, "q15672": 481, "p08151": 481, "twist1": 481, "gli1": 481, "67948": 481, "p22415": 481, "q5sre5": 481, "usf1": 481, "nup188": 481, "67949": 481, "q9uqr1": 481, "q5vyx0": 481, "znf148": 481, "rnl": 481, "67950": 481, "familiar": 481, "to_csv": 481, "kinaseextra": [481, 484], "ligrecextra": [481, 484], "pathwayextra": [481, 484], "mirnatarget": [481, 484], "dorothea_cur": 481, "dorothea_chipseq": 481, "ncomplex": 481, "12036993": 481, "12538496": 481, "17935786": 481, "7489329": 481, "7651432": 481, "7818486": 481, "8867782": 481, "9030359": 481, "9136992": 481, "9142914": 481, "9168892": 481, "9687385": 481, "p05412_p15408": 481, "extri_c": 481, "1004": 481, "ambigu": 481, "unambigu": 481, "map_name0": 481, "random": 481, "gabarapl3": 481, "q9by60": 481, "shortcut": 481, "id_from_label": 481, "o75385": 481, "ulk1": [481, 484], "id_from_label0": 481, "certainli": 481, "q15796": 481, "effici": 481, "q62432": 481, "8408": 481, "chain_map": 481, "by_id_typ": 481, "autumn": 481, "uniprotmap": 481, "uploadlist": 481, "outdat": 481, "inputs_format": 481, "uniprotlistmap": 481, "biomartmap": 481, "arraymap": 481, "promap": 481, "unichemmap": 481, "filemap": 481, "mirbas": 481, "hmdbmap": 481, "fly": 481, "mapread": 481, "mappingt": 481, "mapper": 481, "dispatch": 481, "geneid": 481, "hgnc": 481, "refseqp": 481, "input_cl": 481, "29850": 481, "eas": 481, "ac_queri": 481, "ac_map": 481, "biomart_map": 481, "pro_map": 481, "array_map": 481, "bigg": 481, "biocyc": 481, "cas_registry_numb": 481, "ch": 481, "8561": 481, "tbl": 481, "translation_dict": 481, "20243": 481, "q00604": 481, "ndp": 481, "q9hb19": 481, "plekha2": 481, "q16718": 481, "ndufa5": 481, "p55769": 481, "snu13": 481, "q92886": 481, "neurog1": 481, "q6t4r5": 481, "nh": 481, "p80188": 481, "lcn2": 481, "q86xr2": 481, "fam129c": 481, "q5t2w1": 481, "pdzk1": 481, "q9bsh3": 481, "nicn1": 481, "translation_df": 481, "20375": 481, "q96l92": 481, "snx27": 481, "20376": 481, "q9unh6": 481, "snx7": 481, "20377": 481, "q5vwj9": 481, "snx30": 481, "20378": 481, "q9bzz2": 481, "siglec1": 481, "20379": 481, "q96bd0": 481, "slco4a1": 481, "20380": 481, "matrix": [481, 484], "oma": 481, "ensembl_hc": 481, "ensembl_typ": 481, "one2on": 481, "human_mouse_genesymbol": 481, "get_dict": 481, "confdenc": 481, "full_record": 481, "omaortholog": 481, "rel_typ": 481, "12704": 481, "5703125": 481, "get_df": 481, "h4c3": 481, "h4c1": 481, "1262": 481, "050049": 481, "h4c12": 481, "h4c11": 481, "h4c9": 481, "18446": 481, "gdap2": 481, "5553": 481, "779785": 481, "18447": 481, "itga8": 481, "10772": 481, "969727": 481, "18448": 481, "sema3f": 481, "9121": 481, "080078": 481, "18449": 481, "eepd1": 481, "5874": 481, "350098": 481, "18450": 481, "drg2": 481, "4423": 481, "589844": 481, "18451": 481, "everywher": 481, "deal": 481, "hsapien": 481, "ensmebl": 481, "genu": 481, "space": 481, "hsa": 481, "ensure_ncbi_tax_id": 481, "ensure_latin_nam": 481, "cow": 481, "bo": 481, "tauru": 481, "ensure_common_nam": 481, "erithacu": 481, "rubecula": 481, "european": 481, "robin": 481, "uniprot_taxid": 481, "unfortun": 481, "p53104": 481, "saccharomyc": 481, "cerevisia": 481, "divers": 481, "essenti": 481, "proteom": 481, "averag": 481, "harbor": 481, "littl": 481, "unload": 481, "119": 481, "iuniprot": 481, "all_swissprot": 481, "all_trembl": 481, "3m": 481, "86440": 481, "17131": 481, "69300": 481, "against": [481, 484], "124": 481, "valid_uniprot": 481, "a0a8d0h0c2": 481, "inde": 481, "125": 481, "is_uniprot": 481, "122": 481, "is_swissprot": 481, "123": 481, "126": 481, "protein_datasheet": 481, "egfr_human": 481, "1210": 481, "o00688": 481, "o00732": 481, "p06268": 481, "q14225": 481, "q68gs5": 481, "q92795": 481, "q9bzs2": 481, "q9gzx1": 481, "q9h2c9": 481, "q9h3c9": 481, "q9umd7": 481, "q9umd8": 481, "q9umg5": 481, "dt": 481, "jul": 481, "1986": 481, "nov": 481, "1997": 481, "283": 481, "recnam": 481, "eco": 481, "0000305": 481, "altnam": 481, "flag": 481, "precursor": 481, "gn": 481, "0000312": 481, "3236": 481, "eukaryota": 481, "metazoa": 481, "chordata": 481, "craniata": 481, "vertebrata": 481, "euteleostomi": 481, "eutheria": 481, "euarchontoglir": 481, "primat": 481, "haplorrhini": 481, "catarrhini": 481, "hominida": 481, "ox": 481, "ncbi_taxid": 481, "rn": 481, "rp": 481, "nucleotid": 481, "isoform": [481, 484], "58080": 481, "131": 481, "egfr_histori": 481, "uniprot_histori": 481, "uniprotrecordhistori": 481, "2022_04": 481, "282": 481, "2022_03": 481, "281": 481, "2022_02": 481, "280": 481, "2022_01": 481, "279": 481, "2021_04": 481, "2021": 481, "278": 481, "50933": 481, "132": 481, "uniprot_recent_vers": 481, "133": 481, "uniprot_history_recent_datasheet": 481, "deploi": 481, "transit": 481, "uniprot_data": 481, "uniprot_queri": 481, "situat": 481, "uniprot_preprocess": 481, "clutter": 481, "transmembran": [481, 484], "a0a087x1c5": 481, "cytochrom": 481, "p450": 481, "a0a0b4j2f2": 481, "superfamili": 481, "camk": 481, "ser": 481, "thr": 481, "ampk": 481, "subfamili": 481, "a0a0k2s4q6": 481, "cd300": 481, "a0a1b0gtw7": 481, "peptidas": 481, "m8": 481, "a0av02": 481, "slc12a": 481, "transport": 481, "a0av96": 481, "rrm": 481, "rbm47": 481, "a0avf1": 481, "ift56": 481, "a0avi4": 481, "tmem129": 481, "a0avk6": 481, "dp": 481, "a0avt1": 481, "ubiquitin": [481, 484], "a0fgr8": 481, "synaptotagmin": 481, "a0fgr9": 481, "a0jlt2": 481, "mediat": 481, "a0jp26": 481, "pote": 481, "a0mz66": 481, "shootin": 481, "a0pjk1": 481, "sodium": 481, "symport": 481, "ssf": 481, "tc": 481, "a0pjy2": 481, "krueppel": 481, "c2h2": 481, "zinc": 481, "finger": 481, "a0pk00": 481, "tmem120": 481, "a0pk11": 481, "clarin": 481, "a1a4y4": 481, "trafac": 481, "dynamin": 481, "gtpase": 481, "irg": 481, "a1a519": 481, "fam170": 481, "a1a5b4": 481, "anoctamin": 481, "a1a5c7": 481, "orga": 481, "510530": 481, "uiprot": 481, "funcion": 481, "up000004102": 481, "d1ym56": 481, "d1ymj2": 481, "d1yn32": 481, "d1ynb3": 481, "d1ypz1": 481, "d1yr07": 481, "d1yr15": 481, "d1yr93": 481, "d1yrb4": 481, "d1yrb7": 481, "cleaner": 481, "imperfect": 481, "job": 481, "badli": 481, "fragment": 481, "136": 481, "uniprot_taxonomi": 481, "p00521": 481, "abelson": 481, "murin": 481, "viru": 481, "p03333": 481, "h8zm73": 481, "abi": 481, "balsamea": 481, "balsam": 481, "fir": 481, "pinu": 481, "h8zm71": 481, "q9mv51": 481, "firma": 481, "momi": 481, "o81086": 481, "grandi": 481, "grand": 481, "o24474": 481, "o24475": 481, "o64404": 481, "o64405": 481, "q948z0": 481, "q9m7d1": 481, "q9m7d0": 481, "o22340": 481, "q9m7c9": 481, "q5k3v1": 481, "homolepi": 481, "nikko": 481, "p21715": 481, "abrothrix": 481, "jelskii": 481, "akodon": 481, "jelski": 481, "altiplano": 481, "p11140": 481, "abru": 481, "56985": 481, "139": 481, "uniprot_ncbi_taxids_2": 481, "648330": 481, "aed": 481, "albopictu": 481, "densoviru": 481, "isol": 481, "boublik": 481, "1994": 481, "aaldnv": 481, "10804": 481, "adeno": 481, "aav": 481, "648242": 481, "srivastava": 481, "1982": 481, "118452": 481, "abacion": 481, "magnum": 481, "milliped": 481, "72259": 481, "abaei": 481, "nicipp": 481, "sleepi": 481, "orang": 481, "butterfli": 481, "eurema": 481, "102642": 481, "abax": 481, "parallelepipedu": 481, "ground": 481, "beetl": 481, "392897": 481, "abalist": 481, "stellari": 481, "starri": 481, "triggerfish": 481, "balist": 481, "75332": 481, "abbottina": 481, "rivulari": 481, "chines": 481, "gudgeon": 481, "gobio": 481, "515833": 481, "abdopu": 481, "aculeatu": 481, "engl": 481, "118050": 481, "140": 481, "uniprot_loc": 481, "q96ec8": 481, "uniprotloc": 481, "golgi": 481, "apparatu": 481, "membran": [481, 484], "q6zms4": 481, "nucleu": 481, "q8n8l2": 481, "q15916": 481, "q3mis6": 481, "q6p280": 481, "q969w1": 481, "endoplasm": 481, "reticulum": 481, "o14978": 481, "q66k41": 481, "q15937": 481, "q9p2j8": 481, "q8nd82": 481, "q9np64": 481, "nucleolu": 481, "143466": 481, "141": 481, "uniprot_keyword": 481, "p63120": 481, "uniprotkeyword": 481, "aspartyl": 481, "proteas": 481, "autocatalyt": 481, "cleavag": 481, "erv": 481, "hydrolas": 481, "ribosom": 481, "frameshift": 481, "transpos": 481, "splice": 481, "helix": 481, "metal": 481, "unipro": 481, "445111": 481, "142": 481, "uniprot_famili": 481, "uniprotfamili": 481, "a2": 481, "herv": 481, "ii": 481, "hml": 481, "yip1": 481, "q86uk7": 481, "znf598": 481, "dhhc": 481, "palmitoyltransferas": 481, "q8iuh4": 481, "77892": 481, "143": 481, "uniprot_tissu": 481, "uniprottissu": 481, "brain": 481, "wide": 481, "undefin": 481, "colon": 481, "heart": 481, "kidnei": 481, "leukocyt": 481, "liver": 481, "lung": 481, "ovari": 481, "pancrea": 481, "placenta": 481, "prostat": 481, "skelet": 481, "muscl": [481, 484], "intestin": 481, "spleen": 481, "testi": 481, "318790": 481, "144": 481, "uniprot_topologi": 481, "uniprottopologi": 481, "cytoplasm": 481, "137": 481, "146": 481, "206": 481, "212": 481, "lumen": 481, "106": 481, "115": 481, "168": 481, "184": 481, "234": 481, "236": 481, "85": 481, "105": 481, "116": 481, "147": 481, "167": 481, "185": 481, "205": 481, "213": 481, "233": 481, "138": 481, "198": 481, "288": 481, "377": 481, "220": 481, "544230": 481, "bulk": 481, "153": 481, "q14457": 481, "becn1": 481, "154": 481, "156": 481, "weight": 481, "subcellular_loc": 481, "112631": 481, "1050": 481, "preautophagosom": 481, "starvat": 481, "puncat": 481, "primarili": 481, "sequest": 481, "portion": 481, "autophagosom": 481, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 481, "1329": 481, "ineffici": 481, "hand": 481, "158": 481, "ordereddict": 481, "134277": 481, "51896": 481, "450": 481, "tabular": [481, 484], "159": 481, "print_featur": 481, "There": 481, "character": 481, "160": 481, "function_o": 481, "subcellula": 481, "r_genecard": 481, "r_locat": 481, "3d": 481, "alternativ": 481, "20254": 481, "unless": 481, "uniprot_cleanup": 481, "exploit": 481, "162": 481, "q9uq28": 481, "8m": 481, "acquir": 481, "mtor": [481, 484], "akt1": 481, "s473": 481, "sparser": 481, "t450": 481, "t308": 481, "domainmotif": 481, "e_ptm": 481, "p31749": 481, "473": 481, "14761976": 481, "15047712": 481, "15364915": 481, "15718470": 481, "15899889": 481, "16221682": 481, "17013611": 481, "19844585": 481, "20333297": 481, "20489726": 481, "21157483": 481, "21592956": 481, "23006971": 481, "8978681": 481, "9736715": 481, "dabas": 481, "enzyme_genesymbol": 481, "substrate_genesymbol": 481, "residue_typ": 481, "residue_offset": 481, "p63104": 481, "ywhaz": 481, "hprd_mimp": 481, "11956222": 481, "12861023": 481, "phosphosite_mimp": 481, "phosp": 481, "15071501": 481, "p45983": 481, "mapk8": 481, "phosph": 481, "15696159": 481, "p06493": 481, "cdk1": 481, "712": 481, "rea": 481, "15525677": 481, "18220": 481, "2171679": 481, "41421": 481, "p29597": 481, "tyk2": 481, "p51692": 481, "stat5b": 481, "699": 481, "10830280": 481, "11751923": 481, "12411494": 481, "41422": 481, "q06418": 481, "tyro3": 481, "p19174": 481, "plcg1": 481, "771": 481, "12601080": 481, "15144186": 481, "15592455": 481, "41423": 481, "q9h4a3": 481, "wnk1": 481, "q8tax0": 481, "osr1": 481, "18270262": 481, "41424": 481, "q96j92": 481, "wnk4": 481, "335": 481, "15883153": 481, "41425": 481, "q9nyl2": 481, "map3k20": 481, "q92903": 481, "cds1": 481, "10973490": 481, "ve": 481, "never": 481, "nice": 481, "power": 481, "believ": 481, "ever": 481, "topic": 481, "186": 481, "seqc": 481, "sequencecontain": 481, "preload_seq": 481, "get_seq": 481, "get_region": 481, "tfiirclqwt": 481, "187": 481, "seq": 481, "human_proteom": 481, "swissprot_seq": 481, "0x689900d45cc0": 481, "0x689908ea8f70": 481, "0x689908eaa4a0": 481, "0x6899223538b0": 481, "0x689922353c70": 481, "o60384": 481, "0x689922350730": 481, "0x689922353310": 481, "0x689922353760": 481, "0x689922353190": 481, "0x689922350d90": 481, "0x689922353220": 481, "p61129": 481, "0x689922353370": 481, "0x6899223534f0": 481, "0x689922350c70": 481, "0x689922351450": 481, "0x689922353910": 481, "0x6899223502b0": 481, "p98182": 481, "0x689922350280": 481, "0x68992235": 481, "53045": 481, "191": 481, "ygct": 481, "seqlookup": 481, "625": 481, "annotationt": 481, "3788067": 481, "51636": 481, "78": 481, "cpad": 481, "2308": 481, "1358": 481, "annotationbas": 481, "get_nam": 481, "regulator_typ": 481, "effect_on_pathwai": 481, "effect_on_canc": 481, "effect_on_cancer_outcom": 481, "cancer": 481, "pathway_categori": 481, "get_valu": 481, "acut": 481, "lymphoblast": 481, "myeloid": 481, "aml": 481, "basal": 481, "bladder": 481, "breast": 481, "cervic": 481, "cholangiocarcinoma": 481, "choriocarcinoma": 481, "chronic": 481, "lymphocyt": 481, "cll": 481, "cml": 481, "colorect": 481, "endometri": 481, "esophag": 481, "ew": 481, "sarcoma": 481, "gallbladd": 481, "gastric": 481, "glioma": 481, "hepatocellular": 481, "hodgkin": 481, "lymphoma": 481, "infantil": 481, "hemangioma": 481, "laryng": 481, "malign": 481, "melanoma": 481, "pleural": 481, "mesothelioma": 481, "mantl": 481, "myeloma": 481, "nasopharyng": 481, "neuroblastoma": 481, "oral": 481, "osteosarcoma": 481, "ovarian": 481, "pancreat": 481, "pituitari": 481, "adenoma": 481, "renal": 481, "squamou": 481, "synovi": 481, "testicular": 481, "thyroid": 481, "a6ndv4": 481, "o14745": 481, "o14862": 481, "o15169_p25054": 481, "o94813": 481, "o94953": 481, "p06733": 481, "glucos": 481, "p11166": 481, "p25054": 481, "p40261": 481, "p49327": 481, "p54687": 481, "pten": 481, "phosphatas": 481, "p60484": 481, "q01973": 481, "q12888": 481, "q13620": 481, "q96cx2": 481, "q99558": 481, "mimat0000069": 481, "mimat0000089": 481, "mimat0000093": 481, "mimat0000262": 481, "mimat0000274": 481, "mimat0000422": 481, "mimat0000427": 481, "mimat0000437": 481, "mimat0000449": 481, "mimat0000455": 481, "mimat0000460": 481, "mimat0000461": 481, "mimat0000617": 481, "mimat0003266": 481, "mimat0003320": 481, "o75473": 481, "o75888": 481, "o76041": 481, "p06756": 481, "p13631": 481, "p22676": 481, "p25791": 481, "p546": 481, "1279": 481, "usual": 481, "215": 481, "celltypist": 481, "927": 481, "integrin": 481, "62": 481, "cellcellinteract": 481, "5544": 481, "panglaodb": 481, "8479": 481, "4813": 481, "lambert2018": 481, "3281": 481, "3277": 481, "cancersea": 481, "2515": 481, "1992": 481, "phobiu": 481, "35382": 481, "go_intercel": 481, "48799": 481, "18377": 481, "18127": 481, "15903": 481, "surfaceom": 481, "3558": 481, "matrisom": 481, "1514": 481, "hpa_secretom": 481, "3568": 481, "1748": 481, "1695": 481, "annotati": 481, "5842": 481, "exempl": 481, "mainclass": 481, "subclass": 481, "subsubclass": 481, "collagen": 481, "ecm": [481, 484], "glycoprotein": 481, "affili": 481, "proteoglycan": 481, "get_subset": 481, "a6nmz7": 481, "a8tx70": 481, "b4dz39": 481, "homotrim": 481, "p02452": 481, "ht_dm_cluster278": 481, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 481, "trimer": 481, "p02452_p08123": 481, "p02458": 481, "xi": 481, "p02458_p12107_p13942": 481, "p02458_p20908_p25067": 481, "p02458_p20908_p25067_p29400": 481, "p02458_p25067_p29400": 481, "iii": 481, "p02461": 481, "p02462": 481, "iv": 481, "p02462_p08572": 481, "p05997_p12107": 481, "p05997_p12107_p20908": 481, "p05997_p20908": 481, "p05997_p20908_p25940": 481, "p08572": 481, "p12109_p12110": 481, "3072": 481, "membership": 481, "signalink": [481, 484], "protein_sourc": 481, "signalinkpathwai": 481, "keggpathwai": 481, "netpathpathwai": 481, "complex_sourc": 481, "28745": 481, "6762": 481, "all_annot": 481, "jak": 481, "stat": 481, "actin": 481, "cytoskeleton": 481, "oxytocin": 481, "phospholipas": 481, "inhibitor": 481, "resist": 481, "papillomaviru": 481, "infect": 481, "carbon": 481, "endocytosi": 481, "parathyroid": 481, "hormon": 481, "synthesi": 481, "2540": 481, "record_id": [481, 484], "q16181": 481, "sept7": 481, "upregul": 481, "migrat": 481, "14396": 481, "p30990": 481, "nt": 481, "2306": 481, "14397": 481, "2307": 481, "14398": 481, "erk": 481, "14399": 481, "14400": 481, "14401": 481, "convent": 481, "tidyvers": 481, "tidyr": [481, 484], "pivot_wid": 481, "unintuit": 481, "index_col": 481, "drop": 481, "axi": 481, "set_index": 481, "unstack": 481, "droplevel": 481, "reset_index": 481, "mimat0000431": 481, "mir": 481, "suppress": 481, "tumor": 481, "invas": 481, "adam10": 481, "notch1": [481, 484], "notch": 481, "mimat0005886": 481, "1297": 481, "aeg1": 481, "wnt": 481, "q9up65": 481, "pla2g4c": 481, "chemotaxi": 481, "downregul": 481, "akt": 481, "pi3k": 481, "q92600": 481, "cnot9": 481, "2303": 481, "p16422": 481, "epcam": 481, "2304": 481, "q9y6y0": 481, "ivns1abp": 481, "2305": 481, "kctd12": 481, "catenin": 481, "goe": 481, "customannot": 481, "anyon": 481, "intercellannot": 481, "310033": 481, "43617": 481, "intercell_annot": 481, "annot_combined_class": 481, "revis": 481, "scope": [481, 484], "tgf": 481, "annotdefkei": 481, "annotationgroup": 481, "5150": 481, "5760": 481, "7041": 481, "transmembrane_predict": 481, "6444": 481, "transmembrane_phobiu": 481, "almen2009": 481, "transmembrane_sosui": 481, "1663": 481, "tran": 481, "143945": 481, "behav": 481, "gaba_receptor": 481, "gaba": 481, "a8mpy1": 481, "gabra1": 481, "gabrb2": 481, "gabrd": 481, "o14764_p14867_p47870": 481, "o14764_p28472_p48169": 481, "o14764_p28472_q16445": 481, "o14764_p47870_p48169": 481, "o14764_p47870_q16445": 481, "gabbr1": 481, "gabbr2": 481, "o75899_q9ubs5": 481, "p14867": 481, "gamma": 481, "p14867_p18507_p28472": 481, "gabrg2": 481, "p14867_p18507_p47870": 481, "p18507_p28472_p31644": 481, "p18507_p28472_p34903": 481, "p18507_p28472_p47869": 481, "p18507_p28472_q16445": 481, "p18507_q8n1c3": 481, "register_network": 481, "statist": 481, "counts_df": 481, "consensus_scor": 481, "transmitt": [481, 484], "receiv": [481, 484], "plasma_membrane_transmembran": 481, "plasma_membrane_peripher": 481, "n_uniprot": 481, "resource_specif": [481, 484], "1120": 481, "parin_adhesion_regul": 481, "intracellular_intercellular_rel": 481, "1121": 481, "plakophilin_adhesion_regul": 481, "1122": 481, "actin_regulation_adhesom": 481, "1123": 481, "adhesion_cytoskeleton_adaptor": 481, "118": 481, "1124": 481, "1125": 481, "q96jp9": 481, "cdhr1": 481, "q9p126": 481, "clec1b": 481, "q13585": 481, "gpr50": 481, "q8n9i0": 481, "syt2": 481, "o43614": 481, "hcrtr2": 481, "a6njy1": 481, "slc9b1p1": 481, "q5ri15": 481, "cox20": 481, "q13948": 481, "cux1": 481, "q8ngk4": 481, "or52k1": 481, "q8iys2": 481, "kiaa2013": 481, "neurotensin": 481, "recom": 481, "o95665": 481, "ntsr2": 481, "410": 481, "45385": 481, "neurotensi": 481, "tr": 481, "idecapepti": 481, "disulfid": 481, "7598": 481, "tree": [481, 483], "geneontologi": 481, "goannot": 481, "80": 481, "goa": 481, "0x689946b55570": 481, "82": 481, "0x68991cdc9b40": 481, "NOT": 481, "p21333": 481, "p80108": 481, "p62258": 481, "q9nrx4": 481, "p54710": 481, "q8ner1": 481, "p01303": 481, "get_all_descend": 481, "0005576": 481, "0001507": 481, "0001527": 481, "0003351": 481, "0003355": 481, "0005201": 481, "0005577": 481, "0005582": 481, "0005583": 481, "0005584": 481, "0005585": 481, "0005586": 481, "0005587": 481, "0005588": 481, "0005590": 481, "0005591": 481, "0005592": 481, "0005595": 481, "0005596": 481, "0005599": 481, "0005601": 481, "0005602": 481, "0005604": 481, "0005606": 481, "0005607": 481, "0005608": 481, "0005609": 481, "0005610": 481, "0005611": 481, "0005612": 481, "0005614": 481, "0005615": 481, "0005616": 481, "0006858": 481, "0006859": 481, "0006860": 481, "0009519": 481, "0010367": 481, "0016914": 481, "0016942": 481, "0020003": 481, "0020004": 481, "0020005": 481, "0020006": 481, "0030020": 481, "0030021": 481, "0030023": 481, "0030197": 481, "0030345": 481, "0030934": 481, "0030935": 481, "0030938": 481, "0031012": 481, "0031395": 481, "0032311": 481, "0032579": 481, "0033165": 481, "0033166": 481, "0034358": 481, "0034359": 481, "0034360": 481, "0034361": 481, "0034362": 481, "0034363": 481, "0034364": 481, "0034365": 481, "00343": 481, "3104": 481, "redund": 481, "homomultim": 481, "update_index": 481, "91": 481, "p42345": [481, 484], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 481, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 481, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 481, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 481, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 481, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 481, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 481, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 481, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 481, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 481, "5348": 481, "equival": 481, "represent": 481, "alphabet": 481, "sort": [481, 483], "despit": [481, 483], "fact": 481, "98": 481, "q92793": 481, "q09472": 481, "components_genesymbol": 481, "nfya_nfyb_nfyc": 481, "corum": [481, 484], "compleat": 481, "complexport": 481, "15243141": 481, "14755292": 481, "9372932": 481, "4478": 481, "hc1449": 481, "deptor_eef1a1_mlst8_prr5_rictor": 481, "c2": 481, "akt1s1_deptor_mlst8_mtor_rptor": 481, "btrc_cul1_skp1": 481, "9990852": 481, "c5": 481, "227": 481, "hc757": 481, "crebbp_ep300": 481, "c6": 481, "28168": 481, "npnt": 481, "q5szk8_q6uxi9_q86xx4": 481, "fras1_frem2_npnt": 481, "28169": 481, "nrp1_nrp2": 481, "o14786_o60462_q9y4d7": 481, "nrp1_nrp2_plxnd1": 481, "28170": 481, "nrp2_plxna2": 481, "o60462_o75051": 481, "28171": 481, "nrp2_plxna4": 481, "o60462_q9hcm2": 481, "28172": 481, "ptch2_smo": 481, "q99835_q9y6c5": 481, "compil": [481, 482], "longer": 481, "good": 481, "reli": 481, "save_to_pickl": 481, "myannot": 481, "pickle_fil": 481, "complexdb": 481, "mycomplex": 481, "char": 481, "xxxxx": 481, "ten": 481, "l0n17": 481, "disclaim": 481, "annoi": 481, "101": 481, "least": 481, "educ": 481, "credit": 481, "publish": 481, "gnu": 481, "104": 481, "prioriti": 481, "107": 481, "console_level": 481, "si": 481, "uniroma2": 481, "download_complex": 481, "d7b8673e83e43a01c533f9de5a2b04b9": 481, "1046": 481, "creation": 481, "builtin": 481, "shell": 481, "dev": 481, "108": 481, "devnul": 481, "notic": 481, "109": 481, "greet": 481, "Not": 481, "childoflogg": 481, "def": 481, "say_someth": 481, "_log": 481, "anywher": 481, "111": 481, "_logger": 481, "mylogg": 481, "strai": 481, "flood": 481, "112": 481, "hasn": 481, "thoroughli": 481, "scai": 481, "fraunhof": 481, "captur": 481, "span": 481, "rang": 481, "ptmaggreg": 481, "belgraph": 481, "bel_graph": 481, "summar": 481, "export_relationship": 481, "omnipath_pathwai": 481, "fp": 481, "bel_str": 481, "333": 481, "interaction_input": 481, "singnalink": 481, "interaction_datafram": 481, "peripher": [481, 484], "protein_datafram": 481, "along": 481, "load_omnipath": 481, "entir": 481, "sai": 481, "worri": 481, "network1": 481, "entreza": 481, "entrezb": 481, "1950": 481, "5290": 481, "207": 481, "2932": 481, "network2": 481, "pik3ca": 481, "sos1": 481, "rac1": 481, "map3k1": 481, "hra": 481, "gsk3b": 481, "iinput_format": 481, "input1": 481, "readset": 481, "egf1": 481, "input2": 481, "egf2": 481, "lst": 481, "ecount": 481, "vcount": 481, "dgraph": 481, "3241": 481, "dir": 481, "agre": 481, "p17252": 481, "q15139": 481, "stimulatori": 481, "revers": 481, "get_dir": 481, "inhibitori": 481, "contradict": 481, "decid": 481, "rid": 481, "consensu": 481, "consensus_edg": 481, "helper": 481, "esr1": 481, "plural": 481, "gss": 481, "atg16l2": 481, "mix": [481, 484], "could": 481, "affect": 481, "gs_stimulated_bi": 481, "_namedvertexseq": 481, "seri": 481, "bit": 481, "contraintuit": 481, "gs_stimul": 481, "affected_bi": 481, "similari": 481, "inhibited_bi": 481, "gs_": 481, "up_": 481, "neighbor": 481, "neighborhood": 481, "increas": 481, "rapidli": 481, "atg3": [481, 484], "get_edg": 481, "map1lc3b": [481, 484], "sqstm1": [481, 484], "refs_by_sourc": 481, "abil": 481, "librari": 481, "egf_network": 481, "png": 481, "777777": 481, "97be73": 481, "ffffff": 481, "bug": 481, "ipython": 481, "visibl": 481, "inlin": 481, "120": 481, "imag": 481, "click": 482, "changelog": 483, "improv": 483, "remot": 483, "partial": 483, "pyreact": 483, "biopaxread": 483, "rule": [483, 484], "workflow": 483, "mysql_connect": 483, "python3": 483, "mrna": [483, 484], "websrvtab": 483, "dataio": 483, "docstr": 483, "focus": 483, "rewritten": 483, "workaround": 483, "terribl": 483, "reflist": 483, "becam": 483, "paremet": 483, "reorgan": 483, "redesign": 483, "src": 483, "yml": 483, "rna": 483, "neo4j": 483, "backend": 483, "biocyph": 483, "dlmanag": 483, "protocol": 484, "wget": 484, "whatev": 484, "recogn": 484, "webserv": 484, "optimum": 484, "qualiti": 484, "interacion": 484, "rodent": 484, "counterpart": 484, "omic": 484, "highest": 484, "regulon": 484, "arget": 484, "source_target": 484, "atg7": 484, "atg4b": 484, "map1lc3a": 484, "map1lc3c": 484, "q9h0r8": 484, "gabarap": 484, "gabarapl2": 484, "appear": 484, "fyn": 484, "ens_sub": 484, "phosphosite_noref": 484, "hearth": 484, "dplyr": 484, "signalink_pathwai": 484, "bmp7": 484, "hpa_tissu": 484, "funtion": 484, "ion": 484, "interleukin": 484, "deliv": 484, "exact": 484, "atg4a": 484, "bmp8b": 484, "intuit": 484, "repli": 484}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [372, 0, 0, "-", "internals"], [405, 0, 0, "-", "legacy"], [409, 3, 1, "", "log"], [410, 0, 0, "-", "resources"], [428, 0, 0, "-", "share"], [456, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "abs"], [12, 0, 0, "-", "acsn"], [15, 0, 0, "-", "adrecs"], [25, 0, 0, "-", "biogrid"], [28, 0, 0, "-", "biomart"], [34, 0, 0, "-", "biomodels"], [40, 0, 0, "-", "ca1"], [42, 0, 0, "-", "cancercellmap"], [44, 0, 0, "-", "cell"], [46, 0, 0, "-", "chembl"], [54, 0, 0, "-", "clinvar"], [57, 0, 0, "-", "common"], [64, 0, 0, "-", "compath"], [66, 0, 0, "-", "cpdb"], [69, 0, 0, "-", "credentials"], [71, 0, 0, "-", "ctdbase"], [74, 0, 0, "-", "ddinter"], [80, 0, 0, "-", "deathdomain"], [83, 0, 0, "-", "dip"], [86, 0, 0, "-", "diseases"], [94, 0, 0, "-", "drugbank"], [101, 0, 0, "-", "ebi"], [103, 0, 0, "-", "elm"], [108, 0, 0, "-", "embopress"], [110, 0, 0, "-", "encode"], [112, 0, 0, "-", "ensembl"], [114, 0, 0, "-", "eutils"], [116, 0, 0, "-", "expasy"], [119, 0, 0, "-", "genecards"], [123, 3, 1, "", "get_method"], [124, 0, 0, "-", "graphviz"], [126, 0, 0, "-", "hprd"], [131, 0, 0, "-", "htri"], [133, 0, 0, "-", "humsavar"], [135, 0, 0, "-", "ielm"], [138, 0, 0, "-", "imweb"], [141, 0, 0, "-", "innatedb"], [143, 0, 0, "-", "instruct"], [146, 0, 0, "-", "intact"], [148, 0, 0, "-", "interpro"], [153, 0, 0, "-", "ipi"], [155, 0, 0, "-", "kegg_api"], [172, 0, 0, "-", "kirouac2010"], [174, 0, 0, "-", "laudanna"], [177, 0, 0, "-", "lincs"], [179, 0, 0, "-", "macrophage"], [181, 0, 0, "-", "main"], [182, 0, 0, "-", "mimp"], [186, 0, 0, "-", "mir2disease"], [188, 0, 0, "-", "mirdeathdb"], [190, 0, 0, "-", "mitab"], [193, 0, 0, "-", "mppi"], [195, 0, 0, "-", "ncrdeathdb"], [197, 0, 0, "-", "negatome"], [199, 0, 0, "-", "netbiol"], [202, 0, 0, "-", "offsides"], [204, 0, 0, "-", "ontology"], [207, 0, 0, "-", "opentargets"], [213, 0, 0, "-", "pathophenodb"], [216, 0, 0, "-", "pathwaycommons"], [233, 0, 0, "-", "pazar"], [235, 0, 0, "-", "pepcyber"], [238, 0, 0, "-", "pharos"], [247, 0, 0, "-", "phobius"], [249, 0, 0, "-", "phosphonetworks"], [252, 0, 0, "-", "phosphopoint"], [255, 0, 0, "-", "pro"], [258, 0, 0, "-", "protmapper"], [262, 0, 0, "-", "pubchem"], [264, 0, 0, "-", "pubmed"], [271, 0, 0, "-", "rdata"], [272, 0, 0, "-", "reaction"], [292, 0, 0, "-", "reactome"], [297, 0, 0, "-", "science"], [299, 0, 0, "-", "sider"], [308, 0, 0, "-", "stitch"], [311, 0, 0, "-", "string"], [316, 0, 0, "-", "swisslipids"], [317, 0, 0, "-", "switches_elm"], [319, 0, 0, "-", "transmir"], [321, 0, 0, "-", "trip"], [328, 0, 0, "-", "twosides"], [330, 0, 0, "-", "unichem"], [335, 0, 0, "-", "uniprot"], [361, 0, 0, "-", "uniprot_db"], [370, 0, 0, "-", "uniprot_idmapping"]], "pypath.inputs.abs": [[11, 3, 1, "", "abs_interactions"]], "pypath.inputs.acsn": [[13, 3, 1, "", "acsn_interactions"], [14, 3, 1, "", "acsn_interactions_sif"]], "pypath.inputs.adrecs": [[16, 1, 1, "", "AdrecsAdr"], [17, 1, 1, "", "AdrecsChildParent"], [18, 1, 1, "", "AdrecsDrug"], [19, 1, 1, "", "AdrecsDrugAdr"], [20, 1, 1, "", "AdrecsTerm"], [21, 3, 1, "", "adrecs_adr_ontology"], [22, 3, 1, "", "adrecs_drug_adr"], [23, 3, 1, "", "adrecs_drug_identifiers"], [24, 3, 1, "", "adrecs_hierarchy"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "adr_class"], [16, 4, 1, "", "badd"], [16, 2, 1, "", "count"], [16, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "child"], [17, 2, 1, "", "count"], [17, 2, 1, "", "index"], [17, 4, 1, "", "parent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, 2, 1, "", "__init__"], [18, 4, 1, "", "badd"], [18, 2, 1, "", "count"], [18, 4, 1, "", "drug"], [18, 4, 1, "", "drugbank"], [18, 2, 1, "", "index"], [18, 4, 1, "", "kegg"], [18, 4, 1, "", "mesh"], [18, 4, 1, "", "pubchem_cid"], [18, 4, 1, "", "synonyms"], [18, 4, 1, "", "tdd"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "adr"], [19, 4, 1, "", "adr_badd"], [19, 2, 1, "", "count"], [19, 4, 1, "", "drug"], [19, 4, 1, "", "drug_badd"], [19, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, 2, 1, "", "__init__"], [20, 4, 1, "", "adrecs_class"], [20, 4, 1, "", "badd"], [20, 2, 1, "", "count"], [20, 2, 1, "", "index"], [20, 4, 1, "", "meddra"], [20, 4, 1, "", "name"], [20, 4, 1, "", "synonyms"]], "pypath.inputs.biogrid": [[26, 3, 1, "", "biogrid_all_interactions"], [27, 3, 1, "", "biogrid_interactions"]], "pypath.inputs.biomart": [[29, 3, 1, "", "biomart_homology"], [30, 3, 1, "", "biomart_microarray"], [31, 3, 1, "", "biomart_microarray_types"], [32, 3, 1, "", "biomart_microarrays"], [33, 3, 1, "", "biomart_query"]], "pypath.inputs.biomodels": [[35, 3, 1, "", "download_single_model"], [36, 3, 1, "", "get_all_models"], [37, 3, 1, "", "get_biomodels"], [38, 3, 1, "", "get_biomodels_req"], [39, 3, 1, "", "get_single_model"]], "pypath.inputs.ca1": [[41, 3, 1, "", "ca1_interactions"]], "pypath.inputs.cancercellmap": [[43, 3, 1, "", "ccmap_interactions"]], "pypath.inputs.cell": [[45, 3, 1, "", "cell_supplementary"]], "pypath.inputs.chembl": [[47, 3, 1, "", "chembl_activities"], [48, 3, 1, "", "chembl_assays"], [49, 3, 1, "", "chembl_documents"], [50, 3, 1, "", "chembl_drug_indications"], [51, 3, 1, "", "chembl_mechanisms"], [52, 3, 1, "", "chembl_molecules"], [53, 3, 1, "", "chembl_targets"]], "pypath.inputs.clinvar": [[55, 3, 1, "", "clinvar_citations"], [56, 3, 1, "", "clinvar_raw"]], "pypath.inputs.common": [[58, 3, 1, "", "csv_sep_change"], [59, 3, 1, "", "glom_fields"], [60, 3, 1, "", "json_extract"], [61, 3, 1, "", "json_read"], [62, 3, 1, "", "read_table"], [63, 3, 1, "", "read_xls"]], "pypath.inputs.compath": [[65, 3, 1, "", "compath_mappings"]], "pypath.inputs.cpdb": [[67, 3, 1, "", "cpdb_interactions"], [68, 3, 1, "", "cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[70, 3, 1, "", "credentials"]], "pypath.inputs.ctdbase": [[72, 3, 1, "", "ctdbase_relations"], [73, 3, 1, "", "ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[75, 3, 1, "", "ddinter_drug_interactions"], [76, 3, 1, "", "ddinter_identifiers"], [77, 3, 1, "", "ddinter_interactions"], [78, 3, 1, "", "ddinter_mappings"], [79, 3, 1, "", "ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[81, 3, 1, "", "deathdomain_interactions"], [82, 3, 1, "", "deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[84, 3, 1, "", "dip_interactions"], [85, 3, 1, "", "dip_login"]], "pypath.inputs.diseases": [[87, 3, 1, "", "diseases_general"], [88, 3, 1, "", "experiments_filtered"], [89, 3, 1, "", "experiments_full"], [90, 3, 1, "", "knowledge_filtered"], [91, 3, 1, "", "knowledge_full"], [92, 3, 1, "", "textmining_filtered"], [93, 3, 1, "", "textmining_full"]], "pypath.inputs.drugbank": [[95, 1, 1, "", "DrugbankFull"], [96, 3, 1, "", "drugbank_annotations"], [97, 3, 1, "", "drugbank_drugs"], [98, 3, 1, "", "drugbank_interactions"], [99, 3, 1, "", "drugbank_mapping"], [100, 3, 1, "", "drugbank_raw_interactions"]], "pypath.inputs.drugbank.DrugbankFull": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "drugbank_drugs_full"], [95, 2, 1, "", "drugbank_external_ids_full"], [95, 2, 1, "", "drugbank_properties_full"], [95, 2, 1, "", "drugbank_targets_full"]], "pypath.inputs.ebi": [[102, 3, 1, "", "ebi_rest"]], "pypath.inputs.elm": [[104, 3, 1, "", "elm_classes"], [105, 3, 1, "", "elm_domains"], [106, 3, 1, "", "elm_instances"], [107, 3, 1, "", "elm_interactions"]], "pypath.inputs.embopress": [[109, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.encode": [[111, 3, 1, "", "encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[113, 3, 1, "", "ensembl_organisms"]], "pypath.inputs.eutils": [[115, 3, 1, "", "esummary"]], "pypath.inputs.expasy": [[117, 3, 1, "", "expasy_enzyme_classes"], [118, 3, 1, "", "expasy_enzymes"]], "pypath.inputs.genecards": [[120, 3, 1, "", "genecards_datasheet"], [121, 3, 1, "", "genecards_soup"], [122, 3, 1, "", "genecards_summaries"]], "pypath.inputs.graphviz": [[125, 3, 1, "", "graphviz_attrs"]], "pypath.inputs.hprd": [[127, 3, 1, "", "get_hprd"], [128, 3, 1, "", "hprd_enzyme_substrate"], [129, 3, 1, "", "hprd_interactions"], [130, 3, 1, "", "hprd_interactions_htp"]], "pypath.inputs.htri": [[132, 3, 1, "", "htri_interactions"]], "pypath.inputs.humsavar": [[134, 3, 1, "", "uniprot_variants"]], "pypath.inputs.ielm": [[136, 3, 1, "", "get_ielm"], [137, 3, 1, "", "get_ielm_huge"]], "pypath.inputs.imweb": [[139, 3, 1, "", "get_imweb"], [140, 3, 1, "", "get_imweb_req"]], "pypath.inputs.innatedb": [[142, 3, 1, "", "innatedb_interactions"]], "pypath.inputs.instruct": [[144, 3, 1, "", "get_instruct"], [145, 3, 1, "", "get_instruct_offsets"]], "pypath.inputs.intact": [[147, 3, 1, "", "intact_interactions"]], "pypath.inputs.interpro": [[149, 3, 1, "", "interpro2go_annotations"], [150, 3, 1, "", "interpro_annotations"], [151, 3, 1, "", "interpro_entries"], [152, 3, 1, "", "interpro_xrefs"]], "pypath.inputs.ipi": [[154, 3, 1, "", "ipi_uniprot"]], "pypath.inputs.kegg_api": [[156, 3, 1, "", "disease_to_drug"], [157, 3, 1, "", "disease_to_gene"], [158, 3, 1, "", "disease_to_pathway"], [159, 3, 1, "", "drug_to_disease"], [160, 3, 1, "", "drug_to_drug"], [161, 3, 1, "", "drug_to_gene"], [162, 3, 1, "", "drug_to_pathway"], [163, 3, 1, "", "gene_to_disease"], [164, 3, 1, "", "gene_to_drug"], [165, 3, 1, "", "gene_to_pathway"], [166, 3, 1, "", "kegg_drug_to_chebi"], [167, 3, 1, "", "kegg_gene_to_ncbi_geneid"], [168, 3, 1, "", "kegg_gene_to_uniprot"], [169, 3, 1, "", "pathway_to_disease"], [170, 3, 1, "", "pathway_to_drug"], [171, 3, 1, "", "pathway_to_gene"]], "pypath.inputs.kirouac2010": [[173, 3, 1, "", "kirouac2010_interactions"]], "pypath.inputs.laudanna": [[175, 3, 1, "", "laudanna_directions"], [176, 3, 1, "", "laudanna_effects"]], "pypath.inputs.lincs": [[178, 3, 1, "", "lincs_compounds"]], "pypath.inputs.macrophage": [[180, 3, 1, "", "macrophage_interactions"]], "pypath.inputs.mimp": [[183, 3, 1, "", "get_kinase_class"], [184, 3, 1, "", "mimp_enzyme_substrate"], [185, 3, 1, "", "mimp_interactions"]], "pypath.inputs.mir2disease": [[187, 3, 1, "", "mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[189, 3, 1, "", "mirdeathdb_interactions"]], "pypath.inputs.mitab": [[191, 3, 1, "", "mitab_field_list"], [192, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.mppi": [[194, 3, 1, "", "mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[196, 3, 1, "", "ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[198, 3, 1, "", "negatome_interactions"]], "pypath.inputs.netbiol": [[200, 3, 1, "", "arn_interactions"], [201, 3, 1, "", "nrf2ome_interactions"]], "pypath.inputs.offsides": [[203, 3, 1, "", "offsides_side_effects"]], "pypath.inputs.ontology": [[205, 3, 1, "", "listof_ontologies"], [206, 3, 1, "", "ontology"]], "pypath.inputs.opentargets": [[208, 3, 1, "", "opentargets_adverse_reactions"], [209, 3, 1, "", "opentargets_baseline_expression"], [210, 3, 1, "", "opentargets_direct_score"], [211, 3, 1, "", "opentargets_general"], [212, 3, 1, "", "opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[214, 1, 1, "", "DiseasePathogen"], [215, 3, 1, "", "disease_pathogen_interactions"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "count"], [214, 4, 1, "", "disease"], [214, 4, 1, "", "disease_id"], [214, 4, 1, "", "evidence"], [214, 2, 1, "", "index"], [214, 4, 1, "", "pathogen"], [214, 4, 1, "", "pathogen_taxid"]], "pypath.inputs.pathwaycommons": [[217, 1, 1, "", "PathwayCommonsInteraction"], [218, 1, 1, "", "PathwayCommonsResource"], [219, 3, 1, "", "pathwaycommons_bind_interactions"], [220, 3, 1, "", "pathwaycommons_biogrid_interactions"], [221, 3, 1, "", "pathwaycommons_corum_interactions"], [222, 3, 1, "", "pathwaycommons_dip_interactions"], [223, 3, 1, "", "pathwaycommons_hprd_interactions"], [224, 3, 1, "", "pathwaycommons_inoh_interactions"], [225, 3, 1, "", "pathwaycommons_intact_interactions"], [226, 3, 1, "", "pathwaycommons_interactions"], [227, 3, 1, "", "pathwaycommons_kegg_interactions"], [228, 3, 1, "", "pathwaycommons_netpath_interactions"], [229, 3, 1, "", "pathwaycommons_panther_interactions"], [230, 3, 1, "", "pathwaycommons_phosphosite_interactions"], [231, 3, 1, "", "pathwaycommons_reactome_interactions"], [232, 3, 1, "", "pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, 2, 1, "", "__init__"], [217, 2, 1, "", "count"], [217, 4, 1, "", "id_a"], [217, 4, 1, "", "id_b"], [217, 2, 1, "", "index"], [217, 4, 1, "", "interaction_type"], [217, 4, 1, "", "resource"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "count"], [218, 2, 1, "", "index"], [218, 4, 1, "", "name"], [218, 4, 1, "", "pc_label"], [218, 4, 1, "", "version"]], "pypath.inputs.pazar": [[234, 3, 1, "", "pazar_interactions"]], "pypath.inputs.pepcyber": [[236, 3, 1, "", "pepcyber_details"], [237, 3, 1, "", "pepcyber_interactions"]], "pypath.inputs.pharos": [[239, 3, 1, "", "pharos_diseases"], [240, 3, 1, "", "pharos_expression"], [241, 3, 1, "", "pharos_general"], [242, 3, 1, "", "pharos_gtex"], [243, 3, 1, "", "pharos_ligands"], [244, 3, 1, "", "pharos_orthologs"], [245, 3, 1, "", "pharos_targets"], [246, 3, 1, "", "pharos_xrefs"]], "pypath.inputs.phobius": [[248, 3, 1, "", "phobius_annotations"]], "pypath.inputs.phosphonetworks": [[250, 3, 1, "", "phosphonetworks_enzyme_substrate"], [251, 3, 1, "", "phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[253, 3, 1, "", "phosphopoint_directions"], [254, 3, 1, "", "phosphopoint_interactions"]], "pypath.inputs.pro": [[256, 3, 1, "", "get_pro"], [257, 3, 1, "", "pro_mapping"]], "pypath.inputs.protmapper": [[259, 3, 1, "", "get_protmapper"], [260, 3, 1, "", "protmapper_enzyme_substrate"], [261, 3, 1, "", "protmapper_interactions"]], "pypath.inputs.pubchem": [[263, 3, 1, "", "pubchem_mapping"]], "pypath.inputs.pubmed": [[265, 3, 1, "", "get_pmid"], [266, 3, 1, "", "get_pubmeds"], [267, 3, 1, "", "only_pmids"], [268, 3, 1, "", "open_pubmed"], [269, 3, 1, "", "pmids_dict"], [270, 3, 1, "", "pmids_list"]], "pypath.inputs.reaction": [[273, 3, 1, "", "acsn_biopax"], [274, 3, 1, "", "acsn_interactions_2"], [275, 3, 1, "", "get_acsn_effects"], [276, 3, 1, "", "get_controls"], [277, 3, 1, "", "get_interactions"], [278, 3, 1, "", "get_reactions"], [279, 3, 1, "", "get_soup"], [280, 3, 1, "", "panther_biopax"], [281, 3, 1, "", "panther_interactions"], [282, 3, 1, "", "pid_biopax"], [283, 3, 1, "", "pid_interactions"], [284, 3, 1, "", "process_complex"], [285, 3, 1, "", "process_controls"], [286, 3, 1, "", "process_reactions"], [287, 3, 1, "", "reactions_biopax"], [288, 3, 1, "", "reactome_biopax"], [289, 3, 1, "", "reactome_bs"], [290, 3, 1, "", "reactome_interactions"], [291, 3, 1, "", "reactome_sbml"]], "pypath.inputs.reactome": [[293, 3, 1, "", "reactome_chebis"], [294, 3, 1, "", "reactome_pathway_relations"], [295, 3, 1, "", "reactome_pathways"], [296, 3, 1, "", "reactome_uniprots"]], "pypath.inputs.science": [[298, 3, 1, "", "science_download"]], "pypath.inputs.sider": [[300, 1, 1, "", "SiderDrug"], [301, 1, 1, "", "SiderSideeffect"], [302, 1, 1, "", "SiderSideeffectMeddra"], [303, 1, 1, "", "SiderSideeffetFrequency"], [304, 3, 1, "", "sider_drug_names"], [305, 3, 1, "", "sider_meddra_side_effects"], [306, 3, 1, "", "sider_side_effect_frequencies"], [307, 3, 1, "", "sider_side_effects"]], "pypath.inputs.sider.SiderDrug": [[300, 2, 1, "", "__init__"], [300, 4, 1, "", "atc"], [300, 2, 1, "", "count"], [300, 2, 1, "", "index"], [300, 4, 1, "", "name"]], "pypath.inputs.sider.SiderSideeffect": [[301, 2, 1, "", "__init__"], [301, 2, 1, "", "count"], [301, 2, 1, "", "index"], [301, 4, 1, "", "side_effect"], [301, 4, 1, "", "umls_concept_in_meddra"], [301, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[302, 2, 1, "", "__init__"], [302, 4, 1, "", "cid"], [302, 2, 1, "", "count"], [302, 2, 1, "", "index"], [302, 4, 1, "", "meddra_id"], [302, 4, 1, "", "side_effect_name"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[303, 2, 1, "", "__init__"], [303, 2, 1, "", "count"], [303, 4, 1, "", "frequency"], [303, 2, 1, "", "index"], [303, 4, 1, "", "side_effect"], [303, 4, 1, "", "umls_concept_in_meddra"], [303, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.stitch": [[309, 3, 1, "", "stitch_actions_interactions"], [310, 3, 1, "", "stitch_links_interactions"]], "pypath.inputs.string": [[312, 3, 1, "", "string_effects"], [313, 3, 1, "", "string_links_interactions"], [314, 3, 1, "", "string_physical_interactions"], [315, 3, 1, "", "string_species"]], "pypath.inputs.switches_elm": [[318, 3, 1, "", "get_switches_elm"]], "pypath.inputs.transmir": [[320, 3, 1, "", "transmir_interactions"]], "pypath.inputs.trip": [[322, 3, 1, "", "take_a_trip"], [323, 3, 1, "", "trip_find_uniprot"], [324, 3, 1, "", "trip_get_uniprot"], [325, 3, 1, "", "trip_interactions"], [326, 3, 1, "", "trip_process"], [327, 3, 1, "", "trip_process_table"]], "pypath.inputs.twosides": [[329, 3, 1, "", "twosides_interactions"]], "pypath.inputs.unichem": [[331, 3, 1, "", "info"], [332, 3, 1, "", "unichem_info"], [333, 3, 1, "", "unichem_mapping"], [334, 3, 1, "", "unichem_sources"]], "pypath.inputs.uniprot": [[336, 1, 1, "", "Taxon"], [337, 1, 1, "", "UniprotQuery"], [338, 1, 1, "", "UniprotRecordHistory"], [339, 3, 1, "", "deleted_uniprot_genesymbol"], [340, 3, 1, "", "get_uniprot_sec"], [341, 3, 1, "", "protein_datasheet"], [342, 3, 1, "", "query_builder"], [343, 3, 1, "", "swissprot_deleted"], [344, 3, 1, "", "trembl_deleted"], [345, 3, 1, "", "uniprot_data"], [346, 3, 1, "", "uniprot_deleted"], [347, 3, 1, "", "uniprot_families"], [348, 3, 1, "", "uniprot_history"], [349, 3, 1, "", "uniprot_history_recent_datasheet"], [350, 3, 1, "", "uniprot_keywords"], [351, 3, 1, "", "uniprot_locations"], [352, 3, 1, "", "uniprot_ncbi_taxids"], [353, 3, 1, "", "uniprot_ncbi_taxids_2"], [354, 3, 1, "", "uniprot_preprocess"], [355, 3, 1, "", "uniprot_query"], [356, 3, 1, "", "uniprot_recent_version"], [357, 3, 1, "", "uniprot_taxonomy"], [358, 3, 1, "", "uniprot_tissues"], [359, 3, 1, "", "uniprot_topology"], [360, 3, 1, "", "valid_uniprot"]], "pypath.inputs.uniprot.Taxon": [[336, 2, 1, "", "__init__"], [336, 2, 1, "", "count"], [336, 4, 1, "", "english"], [336, 2, 1, "", "index"], [336, 4, 1, "", "latin"], [336, 4, 1, "", "latin_synonym"], [336, 4, 1, "", "ncbi_id"]], "pypath.inputs.uniprot.UniprotQuery": [[337, 2, 1, "", "__init__"], [337, 2, 1, "", "__iter__"], [337, 4, 1, "", "fail_on_empty"], [337, 4, 1, "", "name_process"], [337, 2, 1, "", "perform"], [337, 5, 1, "", "url"], [337, 5, 1, "", "url_plain"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[338, 2, 1, "", "__init__"], [338, 2, 1, "", "count"], [338, 4, 1, "", "database"], [338, 4, 1, "", "date"], [338, 4, 1, "", "entry_name"], [338, 4, 1, "", "entry_version"], [338, 2, 1, "", "index"], [338, 4, 1, "", "number"], [338, 4, 1, "", "replaced_by"], [338, 4, 1, "", "replaces"], [338, 4, 1, "", "sequence_version"]], "pypath.inputs.uniprot_db": [[362, 3, 1, "", "all_swissprots"], [363, 3, 1, "", "all_trembls"], [364, 3, 1, "", "all_uniprots"], [365, 3, 1, "", "get_db"], [366, 3, 1, "", "init_db"], [367, 3, 1, "", "is_swissprot"], [368, 3, 1, "", "is_trembl"], [369, 3, 1, "", "is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[371, 3, 1, "", "idtypes"]], "pypath.internals": [[373, 0, 0, "-", "input_formats"], [387, 0, 0, "-", "license"], [393, 0, 0, "-", "maps"], [394, 0, 0, "-", "refs"], [397, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[374, 1, 1, "", "ArrayMapping"], [375, 1, 1, "", "BiomartMapping"], [376, 1, 1, "", "FileMapping"], [377, 1, 1, "", "HmdbMapping"], [378, 1, 1, "", "MappingInput"], [379, 1, 1, "", "NetworkInput"], [380, 1, 1, "", "PickleMapping"], [381, 1, 1, "", "ProMapping"], [382, 1, 1, "", "RampMapping"], [383, 1, 1, "", "ReadList"], [384, 1, 1, "", "UnichemMapping"], [385, 1, 1, "", "UniprotListMapping"], [386, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[374, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[375, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[376, 2, 1, "", "__init__"]], "pypath.internals.input_formats.HmdbMapping": [[377, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[378, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[379, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[380, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[381, 2, 1, "", "__init__"]], "pypath.internals.input_formats.RampMapping": [[382, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[383, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[384, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[385, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[386, 2, 1, "", "__init__"], [386, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[388, 1, 1, "", "License"], [389, 1, 1, "", "LicenseAttrib"], [390, 1, 1, "", "LicenseFeature"], [391, 1, 1, "", "LicensePurpose"], [392, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[388, 2, 1, "", "__init__"], [388, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[389, 2, 1, "", "__init__"], [389, 2, 1, "", "check_level"], [389, 2, 1, "", "int_to_level"], [389, 2, 1, "", "level_to_int"], [389, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[390, 2, 1, "", "__init__"], [390, 2, 1, "", "check_level"], [390, 2, 1, "", "int_to_level"], [390, 2, 1, "", "level_to_int"], [390, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[391, 2, 1, "", "__init__"], [391, 2, 1, "", "check_level"], [391, 2, 1, "", "int_to_level"], [391, 2, 1, "", "level_to_int"], [391, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[392, 2, 1, "", "__init__"], [392, 2, 1, "", "check_level"], [392, 2, 1, "", "int_to_level"], [392, 2, 1, "", "level_to_int"], [392, 2, 1, "", "to_int"]], "pypath.internals.refs": [[395, 1, 1, "", "Reference"], [396, 3, 1, "", "get_pubmed_data"]], "pypath.internals.refs.Reference": [[395, 2, 1, "", "__init__"]], "pypath.internals.resource": [[398, 1, 1, "", "AbstractResource"], [399, 1, 1, "", "EnzymeSubstrateResource"], [400, 1, 1, "", "EnzymeSubstrateResourceKey"], [401, 1, 1, "", "NetworkDataset"], [402, 1, 1, "", "NetworkResource"], [403, 1, 1, "", "NetworkResourceKey"], [404, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[398, 2, 1, "", "__init__"], [398, 2, 1, "", "load_data"], [398, 2, 1, "", "process"], [398, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[399, 2, 1, "", "__init__"], [399, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[400, 2, 1, "", "__init__"], [400, 2, 1, "", "count"], [400, 4, 1, "", "data_type"], [400, 2, 1, "", "index"], [400, 4, 1, "", "name"], [400, 4, 1, "", "via"]], "pypath.internals.resource.NetworkDataset": [[401, 2, 1, "", "__init__"], [401, 2, 1, "", "clear"], [401, 2, 1, "", "get"], [401, 2, 1, "", "items"], [401, 2, 1, "", "keys"], [401, 2, 1, "", "pop"], [401, 2, 1, "", "popitem"], [401, 2, 1, "", "setdefault"], [401, 2, 1, "", "update"], [401, 2, 1, "", "values"]], "pypath.internals.resource.NetworkResource": [[402, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[403, 2, 1, "", "__init__"], [403, 2, 1, "", "count"], [403, 4, 1, "", "data_model"], [403, 4, 1, "", "data_type"], [403, 2, 1, "", "index"], [403, 4, 1, "", "interaction_type"], [403, 5, 1, "", "label"], [403, 5, 1, "", "last"], [403, 4, 1, "", "name"], [403, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[404, 2, 1, "", "__init__"]], "pypath.legacy": [[406, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[407, 3, 1, "", "get_categories"], [408, 3, 1, "", "get_category"]], "pypath.resources": [[411, 0, 0, "-", "controller"], [413, 0, 0, "-", "data"], [414, 0, 0, "-", "data_formats"], [423, 3, 1, "", "get_controller"], [424, 0, 0, "-", "licenses"], [426, 0, 0, "-", "network"], [427, 0, 0, "-", "urls"]], "pypath.resources.controller": [[412, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[412, 2, 1, "", "__init__"], [412, 2, 1, "", "add_resource_attrs"], [412, 2, 1, "", "collect_interaction"], [412, 2, 1, "", "collect_network"], [412, 2, 1, "", "license_filter"], [412, 2, 1, "", "secondary_resources"], [412, 2, 1, "", "update"]], "pypath.resources.data_formats": [[415, 6, 1, "", "activity_flow"], [416, 6, 1, "", "enzyme_substrate"], [417, 6, 1, "", "interaction"], [418, 6, 1, "", "interaction_htp"], [419, 6, 1, "", "pathway_bad"], [420, 6, 1, "", "reaction_pc"], [421, 6, 1, "", "transcription_deprecated"], [422, 6, 1, "", "transcription_onebyone"]], "pypath.resources.licenses": [[425, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[425, 2, 1, "", "__init__"]], "pypath.share": [[429, 0, 0, "-", "cache"], [433, 0, 0, "-", "common"], [434, 0, 0, "-", "constants"], [435, 0, 0, "-", "curl"], [452, 0, 0, "-", "progress"], [454, 0, 0, "-", "session"], [455, 0, 0, "-", "settings"]], "pypath.share.cache": [[430, 3, 1, "", "cache_item"], [431, 3, 1, "", "cache_path"], [432, 3, 1, "", "get_cachedir"]], "pypath.share.curl": [[436, 1, 1, "", "Curl"], [437, 1, 1, "", "FileOpener"], [438, 1, 1, "", "RemoteFile"], [439, 1, 1, "", "cache_delete_off"], [440, 1, 1, "", "cache_delete_on"], [441, 1, 1, "", "cache_off"], [442, 1, 1, "", "cache_on"], [443, 1, 1, "", "cache_print_off"], [444, 1, 1, "", "cache_print_on"], [445, 1, 1, "", "debug_off"], [446, 1, 1, "", "debug_on"], [447, 1, 1, "", "dryrun_off"], [448, 1, 1, "", "dryrun_on"], [449, 3, 1, "", "is_url"], [450, 1, 1, "", "preserve_off"], [451, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[436, 2, 1, "", "__init__"], [436, 2, 1, "", "cache_path"], [436, 2, 1, "", "close"], [436, 2, 1, "", "construct_binary_data"], [436, 2, 1, "", "extract"], [436, 2, 1, "", "is_quoted"], [436, 2, 1, "", "open"], [436, 2, 1, "", "open_tgz"], [436, 2, 1, "", "replace_forbidden"], [436, 2, 1, "", "set_binary_data"], [436, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[437, 2, 1, "", "__init__"], [437, 2, 1, "", "extract"], [437, 2, 1, "", "open"], [437, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[438, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[439, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[440, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[441, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[442, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[443, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[444, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[445, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[446, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[447, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[448, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[450, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[451, 2, 1, "", "__init__"]], "pypath.share.progress": [[453, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[453, 2, 1, "", "__init__"], [453, 2, 1, "", "get_desc"], [453, 2, 1, "", "init_tqdm"], [453, 2, 1, "", "set_done"], [453, 2, 1, "", "set_status"], [453, 2, 1, "", "set_total"], [453, 2, 1, "", "step"], [453, 2, 1, "", "terminate"]], "pypath.visual": [[457, 0, 0, "-", "drawing"], [460, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[458, 1, 1, "", "InterSet"], [459, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[458, 2, 1, "", "__init__"], [458, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[459, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[461, 1, 1, "", "AbstractCairoGraphDrawer"], [462, 4, 1, "", "ArrowEdgeDrawer"], [463, 1, 1, "", "DefaultGraphDrawerFFsupport"], [464, 4, 1, "", "DefaultVertexDrawer"], [465, 4, 1, "", "TextDrawer"], [466, 0, 0, "-", "edge"], [473, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[461, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[463, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[467, 1, 1, "", "AbstractEdgeDrawer"], [468, 1, 1, "", "AlphaVaryingEdgeDrawer"], [469, 1, 1, "", "ArrowEdgeDrawer"], [470, 1, 1, "", "DarkToLightEdgeDrawer"], [471, 1, 1, "", "LightToDarkEdgeDrawer"], [472, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[467, 2, 1, "", "__init__"], [467, 2, 1, "", "draw_directed_edge"], [467, 2, 1, "", "draw_loop_edge"], [467, 2, 1, "", "draw_undirected_edge"], [467, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "draw_directed_edge"], [468, 2, 1, "", "draw_loop_edge"], [468, 2, 1, "", "draw_undirected_edge"], [468, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "draw_directed_edge"], [469, 2, 1, "", "draw_loop_edge"], [469, 2, 1, "", "draw_undirected_edge"], [469, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[470, 2, 1, "", "__init__"], [470, 2, 1, "", "draw_directed_edge"], [470, 2, 1, "", "draw_loop_edge"], [470, 2, 1, "", "draw_undirected_edge"], [470, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "draw_directed_edge"], [471, 2, 1, "", "draw_loop_edge"], [471, 2, 1, "", "draw_undirected_edge"], [471, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "draw_directed_edge"], [472, 2, 1, "", "draw_loop_edge"], [472, 2, 1, "", "draw_undirected_edge"], [472, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[474, 1, 1, "", "AbstractCairoDrawer"], [475, 1, 1, "", "AbstractCairoVertexDrawer"], [476, 1, 1, "", "AbstractDrawer"], [477, 1, 1, "", "AbstractVertexDrawer"], [478, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[474, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[476, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pypathcore": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 57, 58, 59, 60, 61, 62, 63, 433, 481], "filter_network_df": 5, "data": [6, 413, 481], "disclaim": 7, "info": [8, 331, 481], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 481], "ab": [10, 11], "abs_interact": 11, "acsn": [12, 13, 14], "acsn_interact": 13, "acsn_interactions_sif": 14, "adrec": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "adrecsadr": 16, "adrecschildpar": 17, "adrecsdrug": 18, "adrecsdrugadr": 19, "adrecsterm": 20, "adrecs_adr_ontologi": 21, "adrecs_drug_adr": 22, "adrecs_drug_identifi": 23, "adrecs_hierarchi": 24, "biogrid": [25, 26, 27], "biogrid_all_interact": 26, "biogrid_interact": 27, "biomart": [28, 29, 30, 31, 32, 33], "biomart_homologi": 29, "biomart_microarrai": [30, 32], "biomart_microarray_typ": 31, "biomart_queri": 33, "biomodel": [34, 35, 36, 37, 38, 39], "download_single_model": 35, "get_all_model": 36, "get_biomodel": 37, "get_biomodels_req": 38, "get_single_model": 39, "ca1": [40, 41], "ca1_interact": 41, "cancercellmap": [42, 43], "ccmap_interact": 43, "cell": [44, 45], "cell_supplementari": 45, "chembl": [46, 47, 48, 49, 50, 51, 52, 53], "chembl_act": 47, "chembl_assai": 48, "chembl_docu": 49, "chembl_drug_ind": 50, "chembl_mechan": 51, "chembl_molecul": 52, "chembl_target": 53, "clinvar": [54, 55, 56], "clinvar_cit": 55, "clinvar_raw": 56, "csv_sep_chang": 58, "glom_field": 59, "json_extract": 60, "json_read": 61, "read_tabl": 62, "read_xl": 63, "compath": [64, 65], "compath_map": 65, "cpdb": [66, 67, 68], "cpdb_interact": 67, "cpdb_interactions_ltp": 68, "credenti": [69, 70], "ctdbase": [71, 72, 73], "ctdbase_rel": 72, "ctdbase_vocabulari": 73, "ddinter": [74, 75, 76, 77, 78, 79], "ddinter_drug_interact": 75, "ddinter_identifi": 76, "ddinter_interact": 77, "ddinter_map": 78, "ddinter_n_drug": 79, "deathdomain": [80, 81, 82], "deathdomain_interact": 81, "deathdomain_interactions_rescu": 82, "dip": [83, 84, 85], "dip_interact": 84, "dip_login": 85, "diseas": [86, 87, 88, 89, 90, 91, 92, 93], "diseases_gener": 87, "experiments_filt": 88, "experiments_ful": 89, "knowledge_filt": 90, "knowledge_ful": 91, "textmining_filt": 92, "textmining_ful": 93, "drugbank": [94, 95, 96, 97, 98, 99, 100], "drugbankful": 95, "drugbank_annot": 96, "drugbank_drug": 97, "drugbank_interact": 98, "drugbank_map": 99, "drugbank_raw_interact": 100, "ebi": [101, 102], "ebi_rest": 102, "elm": [103, 104, 105, 106, 107], "elm_class": 104, "elm_domain": 105, "elm_inst": 106, "elm_interact": 107, "embopress": [108, 109], "embopress_supplementari": 109, "encod": [110, 111], "encode_tf_mirna_interact": 111, "ensembl": [112, 113], "ensembl_organ": 113, "eutil": [114, 115], "esummari": 115, "expasi": [116, 117, 118], "expasy_enzyme_class": 117, "expasy_enzym": 118, "genecard": [119, 120, 121, 122], "genecards_datasheet": 120, "genecards_soup": 121, "genecards_summari": 122, "get_method": 123, "graphviz": [124, 125], "graphviz_attr": 125, "hprd": [126, 127, 128, 129, 130], "get_hprd": 127, "hprd_enzyme_substr": 128, "hprd_interact": 129, "hprd_interactions_htp": 130, "htri": [131, 132], "htri_interact": 132, "humsavar": [133, 134], "uniprot_vari": 134, "ielm": [135, 136, 137], "get_ielm": 136, "get_ielm_hug": 137, "imweb": [138, 139, 140], "get_imweb": 139, "get_imweb_req": 140, "innatedb": [141, 142], "innatedb_interact": 142, "instruct": [143, 144, 145], "get_instruct": 144, "get_instruct_offset": 145, "intact": [146, 147], "intact_interact": 147, "interpro": [148, 149, 150, 151, 152], "interpro2go_annot": 149, "interpro_annot": 150, "interpro_entri": 151, "interpro_xref": 152, "ipi": [153, 154], "ipi_uniprot": 154, "kegg_api": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "disease_to_drug": 156, "disease_to_gen": 157, "disease_to_pathwai": 158, "drug_to_diseas": 159, "drug_to_drug": 160, "drug_to_gen": 161, "drug_to_pathwai": 162, "gene_to_diseas": 163, "gene_to_drug": 164, "gene_to_pathwai": 165, "kegg_drug_to_chebi": 166, "kegg_gene_to_ncbi_geneid": 167, "kegg_gene_to_uniprot": 168, "pathway_to_diseas": 169, "pathway_to_drug": 170, "pathway_to_gen": 171, "kirouac2010": [172, 173], "kirouac2010_interact": 173, "laudanna": [174, 175, 176], "laudanna_direct": 175, "laudanna_effect": 176, "linc": [177, 178], "lincs_compound": 178, "macrophag": [179, 180], "macrophage_interact": 180, "main": 181, "mimp": [182, 183, 184, 185], "get_kinase_class": 183, "mimp_enzyme_substr": 184, "mimp_interact": 185, "mir2diseas": [186, 187], "mir2disease_interact": 187, "mirdeathdb": [188, 189], "mirdeathdb_interact": 189, "mitab": [190, 191, 192], "mitab_field_list": 191, "mitab_field_uniprot": 192, "mppi": [193, 194], "mppi_interact": 194, "ncrdeathdb": [195, 196], "ncrdeathdb_interact": 196, "negatom": [197, 198], "negatome_interact": 198, "netbiol": [199, 200, 201], "arn_interact": 200, "nrf2ome_interact": 201, "offsid": [202, 203], "offsides_side_effect": 203, "ontologi": [204, 205, 206, 481], "listof_ontologi": 205, "opentarget": [207, 208, 209, 210, 211, 212], "opentargets_adverse_react": 208, "opentargets_baseline_express": 209, "opentargets_direct_scor": 210, "opentargets_gener": 211, "opentargets_indirect_scor": 212, "pathophenodb": [213, 214, 215], "diseasepathogen": 214, "disease_pathogen_interact": 215, "pathwaycommon": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "pathwaycommonsinteract": 217, "pathwaycommonsresourc": 218, "pathwaycommons_bind_interact": 219, "pathwaycommons_biogrid_interact": 220, "pathwaycommons_corum_interact": 221, "pathwaycommons_dip_interact": 222, "pathwaycommons_hprd_interact": 223, "pathwaycommons_inoh_interact": 224, "pathwaycommons_intact_interact": 225, "pathwaycommons_interact": 226, "pathwaycommons_kegg_interact": 227, "pathwaycommons_netpath_interact": 228, "pathwaycommons_panther_interact": 229, "pathwaycommons_phosphosite_interact": 230, "pathwaycommons_reactome_interact": 231, "pathwaycommons_wikipathways_interact": 232, "pazar": [233, 234], "pazar_interact": 234, "pepcyb": [235, 236, 237], "pepcyber_detail": 236, "pepcyber_interact": 237, "pharo": [238, 239, 240, 241, 242, 243, 244, 245, 246], "pharos_diseas": 239, "pharos_express": 240, "pharos_gener": 241, "pharos_gtex": 242, "pharos_ligand": 243, "pharos_ortholog": 244, "pharos_target": 245, "pharos_xref": 246, "phobiu": [247, 248], "phobius_annot": 248, "phosphonetwork": [249, 250, 251], "phosphonetworks_enzyme_substr": 250, "phosphonetworks_interact": 251, "phosphopoint": [252, 253, 254], "phosphopoint_direct": 253, "phosphopoint_interact": 254, "pro": [255, 256, 257], "get_pro": 256, "pro_map": 257, "protmapp": [258, 259, 260, 261], "get_protmapp": 259, "protmapper_enzyme_substr": 260, "protmapper_interact": 261, "pubchem": [262, 263], "pubchem_map": 263, "pubm": [264, 265, 266, 267, 268, 269, 270], "get_pmid": 265, "get_pubm": 266, "only_pmid": 267, "open_pubm": 268, "pmids_dict": 269, "pmids_list": 270, "rdata": 271, "reaction": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "acsn_biopax": 273, "acsn_interactions_2": 274, "get_acsn_effect": 275, "get_control": [276, 423], "get_interact": 277, "get_react": 278, "get_soup": 279, "panther_biopax": 280, "panther_interact": 281, "pid_biopax": 282, "pid_interact": 283, "process_complex": 284, "process_control": 285, "process_react": 286, "reactions_biopax": 287, "reactome_biopax": 288, "reactome_b": 289, "reactome_interact": 290, "reactome_sbml": 291, "reactom": [292, 293, 294, 295, 296], "reactome_chebi": 293, "reactome_pathway_rel": 294, "reactome_pathwai": 295, "reactome_uniprot": 296, "scienc": [297, 298], "science_download": 298, "sider": [299, 300, 301, 302, 303, 304, 305, 306, 307], "siderdrug": 300, "sidersideeffect": 301, "sidersideeffectmeddra": 302, "sidersideeffetfrequ": 303, "sider_drug_nam": 304, "sider_meddra_side_effect": 305, "sider_side_effect_frequ": 306, "sider_side_effect": 307, "stitch": [308, 309, 310], "stitch_actions_interact": 309, "stitch_links_interact": 310, "string": [311, 312, 313, 314, 315], "string_effect": 312, "string_links_interact": 313, "string_physical_interact": 314, "string_speci": 315, "swisslipid": [316, 481], "switches_elm": [317, 318], "get_switches_elm": 318, "transmir": [319, 320], "transmir_interact": 320, "trip": [321, 322, 323, 324, 325, 326, 327], "take_a_trip": 322, "trip_find_uniprot": 323, "trip_get_uniprot": 324, "trip_interact": 325, "trip_process": 326, "trip_process_t": 327, "twosid": [328, 329], "twosides_interact": 329, "unichem": [330, 331, 332, 333, 334], "unichem_info": 332, "unichem_map": 333, "unichem_sourc": 334, "uniprot": [335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 481], "taxon": 336, "uniprotqueri": 337, "uniprotrecordhistori": 338, "deleted_uniprot_genesymbol": 339, "get_uniprot_sec": 340, "protein_datasheet": 341, "query_build": 342, "swissprot_delet": 343, "trembl_delet": 344, "uniprot_data": 345, "uniprot_delet": 346, "uniprot_famili": 347, "uniprot_histori": 348, "uniprot_history_recent_datasheet": 349, "uniprot_keyword": 350, "uniprot_loc": 351, "uniprot_ncbi_taxid": 352, "uniprot_ncbi_taxids_2": 353, "uniprot_preprocess": 354, "uniprot_queri": 355, "uniprot_recent_vers": 356, "uniprot_taxonomi": 357, "uniprot_tissu": 358, "uniprot_topologi": 359, "valid_uniprot": 360, "uniprot_db": [361, 362, 363, 364, 365, 366, 367, 368, 369], "all_swissprot": 362, "all_trembl": 363, "all_uniprot": 364, "get_db": 365, "init_db": 366, "is_swissprot": 367, "is_trembl": 368, "is_uniprot": 369, "uniprot_idmap": [370, 371], "idtyp": 371, "intern": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "input_format": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "arraymap": 374, "biomartmap": 375, "filemap": 376, "hmdbmap": 377, "mappinginput": 378, "networkinput": 379, "picklemap": 380, "promap": 381, "rampmap": 382, "readlist": 383, "unichemmap": 384, "uniprotlistmap": 385, "uniprotmap": 386, "licens": [387, 388, 389, 390, 391, 392, 424, 425, 481], "licenseattrib": 389, "licensefeatur": 390, "licensepurpos": 391, "licenseshar": 392, "map": [393, 481], "ref": [394, 395, 396], "refer": [395, 481, 482], "get_pubmed_data": 396, "resourc": [397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 481], "abstractresourc": 398, "enzymesubstrateresourc": 399, "enzymesubstrateresourcekei": 400, "networkdataset": 401, "networkresourc": 402, "networkresourcekei": 403, "resourceattribut": 404, "legaci": [405, 406, 407, 408, 481], "db_categori": [406, 407, 408], "get_categori": [407, 408], "log": [409, 481], "control": [411, 412], "resourcecontrol": 412, "data_format": [414, 415, 416, 417, 418, 419, 420, 421, 422], "activity_flow": 415, "enzyme_substr": 416, "interact": [417, 481, 484], "interaction_htp": 418, "pathway_bad": 419, "reaction_pc": 420, "transcription_deprec": 421, "transcription_onebyon": 422, "network": [426, 481, 484], "url": 427, "share": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "cach": [429, 430, 431, 432, 481], "cache_item": 430, "cache_path": 431, "get_cachedir": 432, "constant": 434, "curl": [435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 481], "fileopen": 437, "remotefil": 438, "cache_delete_off": 439, "cache_delete_on": 440, "cache_off": 441, "cache_on": 442, "cache_print_off": 443, "cache_print_on": 444, "debug_off": 445, "debug_on": 446, "dryrun_off": 447, "dryrun_on": 448, "is_url": 449, "preserve_off": 450, "preserve_on": 451, "progress": [452, 453], "session": [454, 481], "set": 455, "visual": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "draw": [457, 458, 459], "interset": 458, "plot": [459, 481], "igraph_draw": [460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "abstractcairographdraw": 461, "arrowedgedraw": [462, 469], "defaultgraphdrawerffsupport": 463, "defaultvertexdraw": [464, 478], "textdraw": 465, "edg": [466, 467, 468, 469, 470, 471, 472, 481], "abstractedgedraw": 467, "alphavaryingedgedraw": 468, "darktolightedgedraw": 470, "lighttodarkedgedraw": 471, "taperededgedraw": 472, "vertex": [473, 474, 475, 476, 477, 478], "abstractcairodraw": 474, "abstractcairovertexdraw": 475, "abstractdraw": 476, "abstractvertexdraw": 477, "content": [479, 481], "welcom": 480, "omnipath": [480, 481], "do": [480, 481], "you": [480, 481], "need": 480, "instal": 480, "doc": 480, "get": 480, "help": 480, "featur": 480, "integr": 480, "databas": [480, 481], "manag": [480, 481], "further": 480, "modul": [480, 481], "id": [480, 481], "convers": 480, "homologi": 480, "translat": [480, 481], "faq": 480, "contact": 480, "impressum": 480, "histori": [480, 481, 483], "releas": [480, 483], "The": 481, "book": 481, "introduct": 481, "build": 481, "load": 481, "save": 481, "app": 481, "built": 481, "definit": 481, "strictli": 481, "literatur": 481, "curat": 481, "extra": 481, "activ": 481, "flow": 481, "enzym": [481, 484], "substrat": [481, 484], "ligand": 481, "receptor": 481, "transcript": 481, "regul": 481, "from": 481, "dorothea": 481, "other": 481, "mirna": 481, "post": 481, "lncrna": 481, "mrna": 481, "small": 481, "molecul": 481, "protein": 481, "relationship": 481, "complex": [481, 484], "annot": [481, 484], "inter": [481, 484], "cellular": [481, 484], "commun": [481, 484], "role": [481, 484], "directli": 481, "origin": 481, "interest": 481, "ramp": 481, "tl": 481, "dr": 481, "hmdb": 481, "human": 481, "metabolom": 481, "direct": 481, "access": 481, "higher": 481, "level": 481, "lipid": 481, "ncbi": 481, "e": 481, "util": 481, "download": 481, "custom": 481, "failur": 481, "corrupt": 481, "issu": 481, "look": 481, "debug": 481, "timeout": 481, "inspect": 481, "object": 481, "i": 481, "fail": 481, "onli": 481, "read": 481, "ssl": 481, "http": 481, "error": 481, "exampl": [481, 484], "commerci": 481, "us": 481, "inform": 481, "certain": 481, "dataset": [481, 484], "which": 481, "ar": 481, "pre": 481, "defin": 481, "panda": 481, "datafram": 481, "self": 481, "loop": 481, "molecular": [481, 484], "identifi": 481, "tabl": 481, "orthologi": 481, "dictionari": 481, "frame": 481, "taxonomi": 481, "scientif": 481, "name": 481, "organ": 481, "all": 481, "one": 481, "format": 481, "valid": 481, "singl": 481, "datasheet": 481, "record": 481, "rest": 481, "api": 481, "process": 481, "sanit": 481, "sequenc": 481, "full": 481, "select": 481, "signal": 481, "an": 481, "intercellular": 481, "quantit": 481, "overview": 481, "intercel": 481, "brows": 481, "categori": 481, "gene": 481, "pickl": 481, "messag": 481, "basic": 481, "about": 481, "file": 481, "consol": 481, "disabl": 481, "write": 481, "send": 481, "connect": 481, "class": 481, "logger": 481, "bel": 481, "export": 481, "cellphonedb": 481, "igraph": 481, "base": 481, "just": 481, "want": 481, "quickli": 481, "plai": 481, "around": 481, "how": [481, 482], "ani": 481, "creat": 481, "2": [481, 483], "test": 481, "structur": 481, "sign": 481, "node": 481, "queri": [481, 484], "our": 481, "without": 481, "causal": 481, "navig": 482, "0": 483, "1": 483, "3": 483, "4": 483, "5": 483, "32": 483, "6": 483, "31": 483, "7": 483, "74": 483, "93": 483, "110": 483, "8": 483, "9": 483, "10": 483, "11": 483, "12": 483, "13": 483, "14": 483, "upcom": 483, "webservic": 484, "type": 484, "mous": 484, "rat": 484, "explor": 484, "possibl": 484, "paramet": 484}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "pypath.inputs.abs.abs_interactions": [[11, "pypath-inputs-abs-abs-interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "pypath.inputs.acsn.acsn_interactions": [[13, "pypath-inputs-acsn-acsn-interactions"]], "pypath.inputs.acsn.acsn_interactions_sif": [[14, "pypath-inputs-acsn-acsn-interactions-sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, "pypath-inputs-adrecs-adrecsadr"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, "pypath-inputs-adrecs-adrecschildparent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, "pypath-inputs-adrecs-adrecsdrug"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, "pypath-inputs-adrecs-adrecsdrugadr"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, "pypath-inputs-adrecs-adrecsterm"]], "pypath.inputs.adrecs.adrecs_adr_ontology": [[21, "pypath-inputs-adrecs-adrecs-adr-ontology"]], "pypath.inputs.adrecs.adrecs_drug_adr": [[22, "pypath-inputs-adrecs-adrecs-drug-adr"]], "pypath.inputs.adrecs.adrecs_drug_identifiers": [[23, "pypath-inputs-adrecs-adrecs-drug-identifiers"]], "pypath.inputs.adrecs.adrecs_hierarchy": [[24, "pypath-inputs-adrecs-adrecs-hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "pypath.inputs.biogrid.biogrid_all_interactions": [[26, "pypath-inputs-biogrid-biogrid-all-interactions"]], "pypath.inputs.biogrid.biogrid_interactions": [[27, "pypath-inputs-biogrid-biogrid-interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "pypath.inputs.biomart.biomart_homology": [[29, "pypath-inputs-biomart-biomart-homology"]], "pypath.inputs.biomart.biomart_microarray": [[30, "pypath-inputs-biomart-biomart-microarray"]], "pypath.inputs.biomart.biomart_microarray_types": [[31, "pypath-inputs-biomart-biomart-microarray-types"]], "pypath.inputs.biomart.biomart_microarrays": [[32, "pypath-inputs-biomart-biomart-microarrays"]], "pypath.inputs.biomart.biomart_query": [[33, "pypath-inputs-biomart-biomart-query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "pypath.inputs.biomodels.download_single_model": [[35, "pypath-inputs-biomodels-download-single-model"]], "pypath.inputs.biomodels.get_all_models": [[36, "pypath-inputs-biomodels-get-all-models"]], "pypath.inputs.biomodels.get_biomodels": [[37, "pypath-inputs-biomodels-get-biomodels"]], "pypath.inputs.biomodels.get_biomodels_req": [[38, "pypath-inputs-biomodels-get-biomodels-req"]], "pypath.inputs.biomodels.get_single_model": [[39, "pypath-inputs-biomodels-get-single-model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "pypath.inputs.ca1.ca1_interactions": [[41, "pypath-inputs-ca1-ca1-interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "pypath.inputs.cancercellmap.ccmap_interactions": [[43, "pypath-inputs-cancercellmap-ccmap-interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[45, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "pypath.inputs.chembl.chembl_activities": [[47, "pypath-inputs-chembl-chembl-activities"]], "pypath.inputs.chembl.chembl_assays": [[48, "pypath-inputs-chembl-chembl-assays"]], "pypath.inputs.chembl.chembl_documents": [[49, "pypath-inputs-chembl-chembl-documents"]], "pypath.inputs.chembl.chembl_drug_indications": [[50, "pypath-inputs-chembl-chembl-drug-indications"]], "pypath.inputs.chembl.chembl_mechanisms": [[51, "pypath-inputs-chembl-chembl-mechanisms"]], "pypath.inputs.chembl.chembl_molecules": [[52, "pypath-inputs-chembl-chembl-molecules"]], "pypath.inputs.chembl.chembl_targets": [[53, "pypath-inputs-chembl-chembl-targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "pypath.inputs.clinvar.clinvar_citations": [[55, "pypath-inputs-clinvar-clinvar-citations"]], "pypath.inputs.clinvar.clinvar_raw": [[56, "pypath-inputs-clinvar-clinvar-raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[58, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[59, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[60, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[61, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[62, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[63, "pypath-inputs-common-read-xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "pypath.inputs.compath.compath_mappings": [[65, "pypath-inputs-compath-compath-mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "pypath.inputs.cpdb.cpdb_interactions": [[67, "pypath-inputs-cpdb-cpdb-interactions"]], "pypath.inputs.cpdb.cpdb_interactions_ltp": [[68, "pypath-inputs-cpdb-cpdb-interactions-ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[70, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "pypath.inputs.ctdbase.ctdbase_relations": [[72, "pypath-inputs-ctdbase-ctdbase-relations"]], "pypath.inputs.ctdbase.ctdbase_vocabulary": [[73, "pypath-inputs-ctdbase-ctdbase-vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "pypath.inputs.ddinter.ddinter_drug_interactions": [[75, "pypath-inputs-ddinter-ddinter-drug-interactions"]], "pypath.inputs.ddinter.ddinter_identifiers": [[76, "pypath-inputs-ddinter-ddinter-identifiers"]], "pypath.inputs.ddinter.ddinter_interactions": [[77, "pypath-inputs-ddinter-ddinter-interactions"]], "pypath.inputs.ddinter.ddinter_mappings": [[78, "pypath-inputs-ddinter-ddinter-mappings"]], "pypath.inputs.ddinter.ddinter_n_drugs": [[79, "pypath-inputs-ddinter-ddinter-n-drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "pypath.inputs.deathdomain.deathdomain_interactions": [[81, "pypath-inputs-deathdomain-deathdomain-interactions"]], "pypath.inputs.deathdomain.deathdomain_interactions_rescued": [[82, "pypath-inputs-deathdomain-deathdomain-interactions-rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "pypath.inputs.dip.dip_interactions": [[84, "pypath-inputs-dip-dip-interactions"]], "pypath.inputs.dip.dip_login": [[85, "pypath-inputs-dip-dip-login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "pypath.inputs.diseases.diseases_general": [[87, "pypath-inputs-diseases-diseases-general"]], "pypath.inputs.diseases.experiments_filtered": [[88, "pypath-inputs-diseases-experiments-filtered"]], "pypath.inputs.diseases.experiments_full": [[89, "pypath-inputs-diseases-experiments-full"]], "pypath.inputs.diseases.knowledge_filtered": [[90, "pypath-inputs-diseases-knowledge-filtered"]], "pypath.inputs.diseases.knowledge_full": [[91, "pypath-inputs-diseases-knowledge-full"]], "pypath.inputs.diseases.textmining_filtered": [[92, "pypath-inputs-diseases-textmining-filtered"]], "pypath.inputs.diseases.textmining_full": [[93, "pypath-inputs-diseases-textmining-full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "pypath.inputs.drugbank.DrugbankFull": [[95, "pypath-inputs-drugbank-drugbankfull"]], "pypath.inputs.drugbank.drugbank_annotations": [[96, "pypath-inputs-drugbank-drugbank-annotations"]], "pypath.inputs.drugbank.drugbank_drugs": [[97, "pypath-inputs-drugbank-drugbank-drugs"]], "pypath.inputs.drugbank.drugbank_interactions": [[98, "pypath-inputs-drugbank-drugbank-interactions"]], "pypath.inputs.drugbank.drugbank_mapping": [[99, "pypath-inputs-drugbank-drugbank-mapping"]], "pypath.inputs.drugbank.drugbank_raw_interactions": [[100, "pypath-inputs-drugbank-drugbank-raw-interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[102, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "pypath.inputs.elm.elm_classes": [[104, "pypath-inputs-elm-elm-classes"]], "pypath.inputs.elm.elm_domains": [[105, "pypath-inputs-elm-elm-domains"]], "pypath.inputs.elm.elm_instances": [[106, "pypath-inputs-elm-elm-instances"]], "pypath.inputs.elm.elm_interactions": [[107, "pypath-inputs-elm-elm-interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[109, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "pypath.inputs.encode.encode_tf_mirna_interactions": [[111, "pypath-inputs-encode-encode-tf-mirna-interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "pypath.inputs.ensembl.ensembl_organisms": [[113, "pypath-inputs-ensembl-ensembl-organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "pypath.inputs.eutils.esummary": [[115, "pypath-inputs-eutils-esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "pypath.inputs.expasy.expasy_enzyme_classes": [[117, "pypath-inputs-expasy-expasy-enzyme-classes"]], "pypath.inputs.expasy.expasy_enzymes": [[118, "pypath-inputs-expasy-expasy-enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "pypath.inputs.genecards.genecards_datasheet": [[120, "pypath-inputs-genecards-genecards-datasheet"]], "pypath.inputs.genecards.genecards_soup": [[121, "pypath-inputs-genecards-genecards-soup"]], "pypath.inputs.genecards.genecards_summaries": [[122, "pypath-inputs-genecards-genecards-summaries"]], "pypath.inputs.get_method": [[123, "pypath-inputs-get-method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "pypath.inputs.graphviz.graphviz_attrs": [[125, "pypath-inputs-graphviz-graphviz-attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "pypath.inputs.hprd.get_hprd": [[127, "pypath-inputs-hprd-get-hprd"]], "pypath.inputs.hprd.hprd_enzyme_substrate": [[128, "pypath-inputs-hprd-hprd-enzyme-substrate"]], "pypath.inputs.hprd.hprd_interactions": [[129, "pypath-inputs-hprd-hprd-interactions"]], "pypath.inputs.hprd.hprd_interactions_htp": [[130, "pypath-inputs-hprd-hprd-interactions-htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "pypath.inputs.htri.htri_interactions": [[132, "pypath-inputs-htri-htri-interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "pypath.inputs.humsavar.uniprot_variants": [[134, "pypath-inputs-humsavar-uniprot-variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "pypath.inputs.ielm.get_ielm": [[136, "pypath-inputs-ielm-get-ielm"]], "pypath.inputs.ielm.get_ielm_huge": [[137, "pypath-inputs-ielm-get-ielm-huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "pypath.inputs.imweb.get_imweb": [[139, "pypath-inputs-imweb-get-imweb"]], "pypath.inputs.imweb.get_imweb_req": [[140, "pypath-inputs-imweb-get-imweb-req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "pypath.inputs.innatedb.innatedb_interactions": [[142, "pypath-inputs-innatedb-innatedb-interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "pypath.inputs.instruct.get_instruct": [[144, "pypath-inputs-instruct-get-instruct"]], "pypath.inputs.instruct.get_instruct_offsets": [[145, "pypath-inputs-instruct-get-instruct-offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "pypath.inputs.intact.intact_interactions": [[147, "pypath-inputs-intact-intact-interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "pypath.inputs.interpro.interpro2go_annotations": [[149, "pypath-inputs-interpro-interpro2go-annotations"]], "pypath.inputs.interpro.interpro_annotations": [[150, "pypath-inputs-interpro-interpro-annotations"]], "pypath.inputs.interpro.interpro_entries": [[151, "pypath-inputs-interpro-interpro-entries"]], "pypath.inputs.interpro.interpro_xrefs": [[152, "pypath-inputs-interpro-interpro-xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "pypath.inputs.ipi.ipi_uniprot": [[154, "pypath-inputs-ipi-ipi-uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "pypath.inputs.kegg_api.disease_to_drug": [[156, "pypath-inputs-kegg-api-disease-to-drug"]], "pypath.inputs.kegg_api.disease_to_gene": [[157, "pypath-inputs-kegg-api-disease-to-gene"]], "pypath.inputs.kegg_api.disease_to_pathway": [[158, "pypath-inputs-kegg-api-disease-to-pathway"]], "pypath.inputs.kegg_api.drug_to_disease": [[159, "pypath-inputs-kegg-api-drug-to-disease"]], "pypath.inputs.kegg_api.drug_to_drug": [[160, "pypath-inputs-kegg-api-drug-to-drug"]], "pypath.inputs.kegg_api.drug_to_gene": [[161, "pypath-inputs-kegg-api-drug-to-gene"]], "pypath.inputs.kegg_api.drug_to_pathway": [[162, "pypath-inputs-kegg-api-drug-to-pathway"]], "pypath.inputs.kegg_api.gene_to_disease": [[163, "pypath-inputs-kegg-api-gene-to-disease"]], "pypath.inputs.kegg_api.gene_to_drug": [[164, "pypath-inputs-kegg-api-gene-to-drug"]], "pypath.inputs.kegg_api.gene_to_pathway": [[165, "pypath-inputs-kegg-api-gene-to-pathway"]], "pypath.inputs.kegg_api.kegg_drug_to_chebi": [[166, "pypath-inputs-kegg-api-kegg-drug-to-chebi"]], "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid": [[167, "pypath-inputs-kegg-api-kegg-gene-to-ncbi-geneid"]], "pypath.inputs.kegg_api.kegg_gene_to_uniprot": [[168, "pypath-inputs-kegg-api-kegg-gene-to-uniprot"]], "pypath.inputs.kegg_api.pathway_to_disease": [[169, "pypath-inputs-kegg-api-pathway-to-disease"]], "pypath.inputs.kegg_api.pathway_to_drug": [[170, "pypath-inputs-kegg-api-pathway-to-drug"]], "pypath.inputs.kegg_api.pathway_to_gene": [[171, "pypath-inputs-kegg-api-pathway-to-gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "pypath.inputs.kirouac2010.kirouac2010_interactions": [[173, "pypath-inputs-kirouac2010-kirouac2010-interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "pypath.inputs.laudanna.laudanna_directions": [[175, "pypath-inputs-laudanna-laudanna-directions"]], "pypath.inputs.laudanna.laudanna_effects": [[176, "pypath-inputs-laudanna-laudanna-effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "pypath.inputs.lincs.lincs_compounds": [[178, "pypath-inputs-lincs-lincs-compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "pypath.inputs.macrophage.macrophage_interactions": [[180, "pypath-inputs-macrophage-macrophage-interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "pypath.inputs.mimp.get_kinase_class": [[183, "pypath-inputs-mimp-get-kinase-class"]], "pypath.inputs.mimp.mimp_enzyme_substrate": [[184, "pypath-inputs-mimp-mimp-enzyme-substrate"]], "pypath.inputs.mimp.mimp_interactions": [[185, "pypath-inputs-mimp-mimp-interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "pypath.inputs.mir2disease.mir2disease_interactions": [[187, "pypath-inputs-mir2disease-mir2disease-interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "pypath.inputs.mirdeathdb.mirdeathdb_interactions": [[189, "pypath-inputs-mirdeathdb-mirdeathdb-interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[191, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[192, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "pypath.inputs.mppi.mppi_interactions": [[194, "pypath-inputs-mppi-mppi-interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions": [[196, "pypath-inputs-ncrdeathdb-ncrdeathdb-interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "pypath.inputs.negatome.negatome_interactions": [[198, "pypath-inputs-negatome-negatome-interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "pypath.inputs.netbiol.arn_interactions": [[200, "pypath-inputs-netbiol-arn-interactions"]], "pypath.inputs.netbiol.nrf2ome_interactions": [[201, "pypath-inputs-netbiol-nrf2ome-interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "pypath.inputs.offsides.offsides_side_effects": [[203, "pypath-inputs-offsides-offsides-side-effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "pypath.inputs.ontology.listof_ontologies": [[205, "pypath-inputs-ontology-listof-ontologies"]], "pypath.inputs.ontology.ontology": [[206, "pypath-inputs-ontology-ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "pypath.inputs.opentargets.opentargets_adverse_reactions": [[208, "pypath-inputs-opentargets-opentargets-adverse-reactions"]], "pypath.inputs.opentargets.opentargets_baseline_expression": [[209, "pypath-inputs-opentargets-opentargets-baseline-expression"]], "pypath.inputs.opentargets.opentargets_direct_score": [[210, "pypath-inputs-opentargets-opentargets-direct-score"]], "pypath.inputs.opentargets.opentargets_general": [[211, "pypath-inputs-opentargets-opentargets-general"]], "pypath.inputs.opentargets.opentargets_indirect_score": [[212, "pypath-inputs-opentargets-opentargets-indirect-score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, "pypath-inputs-pathophenodb-diseasepathogen"]], "pypath.inputs.pathophenodb.disease_pathogen_interactions": [[215, "pypath-inputs-pathophenodb-disease-pathogen-interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, "pypath-inputs-pathwaycommons-pathwaycommonsinteraction"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, "pypath-inputs-pathwaycommons-pathwaycommonsresource"]], "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions": [[219, "pypath-inputs-pathwaycommons-pathwaycommons-bind-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions": [[220, "pypath-inputs-pathwaycommons-pathwaycommons-biogrid-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions": [[221, "pypath-inputs-pathwaycommons-pathwaycommons-corum-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions": [[222, "pypath-inputs-pathwaycommons-pathwaycommons-dip-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions": [[223, "pypath-inputs-pathwaycommons-pathwaycommons-hprd-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions": [[224, "pypath-inputs-pathwaycommons-pathwaycommons-inoh-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions": [[225, "pypath-inputs-pathwaycommons-pathwaycommons-intact-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_interactions": [[226, "pypath-inputs-pathwaycommons-pathwaycommons-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions": [[227, "pypath-inputs-pathwaycommons-pathwaycommons-kegg-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions": [[228, "pypath-inputs-pathwaycommons-pathwaycommons-netpath-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions": [[229, "pypath-inputs-pathwaycommons-pathwaycommons-panther-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions": [[230, "pypath-inputs-pathwaycommons-pathwaycommons-phosphosite-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions": [[231, "pypath-inputs-pathwaycommons-pathwaycommons-reactome-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions": [[232, "pypath-inputs-pathwaycommons-pathwaycommons-wikipathways-interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pypath.inputs.pazar.pazar_interactions": [[234, "pypath-inputs-pazar-pazar-interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pypath.inputs.pepcyber.pepcyber_details": [[236, "pypath-inputs-pepcyber-pepcyber-details"]], "pypath.inputs.pepcyber.pepcyber_interactions": [[237, "pypath-inputs-pepcyber-pepcyber-interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pypath.inputs.pharos.pharos_diseases": [[239, "pypath-inputs-pharos-pharos-diseases"]], "pypath.inputs.pharos.pharos_expression": [[240, "pypath-inputs-pharos-pharos-expression"]], "pypath.inputs.pharos.pharos_general": [[241, "pypath-inputs-pharos-pharos-general"]], "pypath.inputs.pharos.pharos_gtex": [[242, "pypath-inputs-pharos-pharos-gtex"]], "pypath.inputs.pharos.pharos_ligands": [[243, "pypath-inputs-pharos-pharos-ligands"]], "pypath.inputs.pharos.pharos_orthologs": [[244, "pypath-inputs-pharos-pharos-orthologs"]], "pypath.inputs.pharos.pharos_targets": [[245, "pypath-inputs-pharos-pharos-targets"]], "pypath.inputs.pharos.pharos_xrefs": [[246, "pypath-inputs-pharos-pharos-xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "pypath.inputs.phobius.phobius_annotations": [[248, "pypath-inputs-phobius-phobius-annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate": [[250, "pypath-inputs-phosphonetworks-phosphonetworks-enzyme-substrate"]], "pypath.inputs.phosphonetworks.phosphonetworks_interactions": [[251, "pypath-inputs-phosphonetworks-phosphonetworks-interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "pypath.inputs.phosphopoint.phosphopoint_directions": [[253, "pypath-inputs-phosphopoint-phosphopoint-directions"]], "pypath.inputs.phosphopoint.phosphopoint_interactions": [[254, "pypath-inputs-phosphopoint-phosphopoint-interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "pypath.inputs.pro.get_pro": [[256, "pypath-inputs-pro-get-pro"]], "pypath.inputs.pro.pro_mapping": [[257, "pypath-inputs-pro-pro-mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "pypath.inputs.protmapper.get_protmapper": [[259, "pypath-inputs-protmapper-get-protmapper"]], "pypath.inputs.protmapper.protmapper_enzyme_substrate": [[260, "pypath-inputs-protmapper-protmapper-enzyme-substrate"]], "pypath.inputs.protmapper.protmapper_interactions": [[261, "pypath-inputs-protmapper-protmapper-interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pypath.inputs.pubchem.pubchem_mapping": [[263, "pypath-inputs-pubchem-pubchem-mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "pypath.inputs.pubmed.get_pmid": [[265, "pypath-inputs-pubmed-get-pmid"]], "pypath.inputs.pubmed.get_pubmeds": [[266, "pypath-inputs-pubmed-get-pubmeds"]], "pypath.inputs.pubmed.only_pmids": [[267, "pypath-inputs-pubmed-only-pmids"]], "pypath.inputs.pubmed.open_pubmed": [[268, "pypath-inputs-pubmed-open-pubmed"]], "pypath.inputs.pubmed.pmids_dict": [[269, "pypath-inputs-pubmed-pmids-dict"]], "pypath.inputs.pubmed.pmids_list": [[270, "pypath-inputs-pubmed-pmids-list"]], "pypath.inputs.rdata": [[271, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[272, "module-pypath.inputs.reaction"]], "pypath.inputs.reaction.acsn_biopax": [[273, "pypath-inputs-reaction-acsn-biopax"]], "pypath.inputs.reaction.acsn_interactions_2": [[274, "pypath-inputs-reaction-acsn-interactions-2"]], "pypath.inputs.reaction.get_acsn_effects": [[275, "pypath-inputs-reaction-get-acsn-effects"]], "pypath.inputs.reaction.get_controls": [[276, "pypath-inputs-reaction-get-controls"]], "pypath.inputs.reaction.get_interactions": [[277, "pypath-inputs-reaction-get-interactions"]], "pypath.inputs.reaction.get_reactions": [[278, "pypath-inputs-reaction-get-reactions"]], "pypath.inputs.reaction.get_soup": [[279, "pypath-inputs-reaction-get-soup"]], "pypath.inputs.reaction.panther_biopax": [[280, "pypath-inputs-reaction-panther-biopax"]], "pypath.inputs.reaction.panther_interactions": [[281, "pypath-inputs-reaction-panther-interactions"]], "pypath.inputs.reaction.pid_biopax": [[282, "pypath-inputs-reaction-pid-biopax"]], "pypath.inputs.reaction.pid_interactions": [[283, "pypath-inputs-reaction-pid-interactions"]], "pypath.inputs.reaction.process_complex": [[284, "pypath-inputs-reaction-process-complex"]], "pypath.inputs.reaction.process_controls": [[285, "pypath-inputs-reaction-process-controls"]], "pypath.inputs.reaction.process_reactions": [[286, "pypath-inputs-reaction-process-reactions"]], "pypath.inputs.reaction.reactions_biopax": [[287, "pypath-inputs-reaction-reactions-biopax"]], "pypath.inputs.reaction.reactome_biopax": [[288, "pypath-inputs-reaction-reactome-biopax"]], "pypath.inputs.reaction.reactome_bs": [[289, "pypath-inputs-reaction-reactome-bs"]], "pypath.inputs.reaction.reactome_interactions": [[290, "pypath-inputs-reaction-reactome-interactions"]], "pypath.inputs.reaction.reactome_sbml": [[291, "pypath-inputs-reaction-reactome-sbml"]], "pypath.inputs.reactome": [[292, "module-pypath.inputs.reactome"]], "pypath.inputs.reactome.reactome_chebis": [[293, "pypath-inputs-reactome-reactome-chebis"]], "pypath.inputs.reactome.reactome_pathway_relations": [[294, "pypath-inputs-reactome-reactome-pathway-relations"]], "pypath.inputs.reactome.reactome_pathways": [[295, "pypath-inputs-reactome-reactome-pathways"]], "pypath.inputs.reactome.reactome_uniprots": [[296, "pypath-inputs-reactome-reactome-uniprots"]], "pypath.inputs.science": [[297, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[298, "pypath-inputs-science-science-download"]], "pypath.inputs.sider": [[299, "module-pypath.inputs.sider"]], "pypath.inputs.sider.SiderDrug": [[300, "pypath-inputs-sider-siderdrug"]], "pypath.inputs.sider.SiderSideeffect": [[301, "pypath-inputs-sider-sidersideeffect"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[302, "pypath-inputs-sider-sidersideeffectmeddra"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[303, "pypath-inputs-sider-sidersideeffetfrequency"]], "pypath.inputs.sider.sider_drug_names": [[304, "pypath-inputs-sider-sider-drug-names"]], "pypath.inputs.sider.sider_meddra_side_effects": [[305, "pypath-inputs-sider-sider-meddra-side-effects"]], "pypath.inputs.sider.sider_side_effect_frequencies": [[306, "pypath-inputs-sider-sider-side-effect-frequencies"]], "pypath.inputs.sider.sider_side_effects": [[307, "pypath-inputs-sider-sider-side-effects"]], "pypath.inputs.stitch": [[308, "module-pypath.inputs.stitch"]], "pypath.inputs.stitch.stitch_actions_interactions": [[309, "pypath-inputs-stitch-stitch-actions-interactions"]], "pypath.inputs.stitch.stitch_links_interactions": [[310, "pypath-inputs-stitch-stitch-links-interactions"]], "pypath.inputs.string": [[311, "module-pypath.inputs.string"]], "pypath.inputs.string.string_effects": [[312, "pypath-inputs-string-string-effects"]], "pypath.inputs.string.string_links_interactions": [[313, "pypath-inputs-string-string-links-interactions"]], "pypath.inputs.string.string_physical_interactions": [[314, "pypath-inputs-string-string-physical-interactions"]], "pypath.inputs.string.string_species": [[315, "pypath-inputs-string-string-species"]], "pypath.inputs.swisslipids": [[316, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[317, "module-pypath.inputs.switches_elm"]], "pypath.inputs.switches_elm.get_switches_elm": [[318, "pypath-inputs-switches-elm-get-switches-elm"]], "pypath.inputs.transmir": [[319, "module-pypath.inputs.transmir"]], "pypath.inputs.transmir.transmir_interactions": [[320, "pypath-inputs-transmir-transmir-interactions"]], "pypath.inputs.trip": [[321, "module-pypath.inputs.trip"]], "pypath.inputs.trip.take_a_trip": [[322, "pypath-inputs-trip-take-a-trip"]], "pypath.inputs.trip.trip_find_uniprot": [[323, "pypath-inputs-trip-trip-find-uniprot"]], "pypath.inputs.trip.trip_get_uniprot": [[324, "pypath-inputs-trip-trip-get-uniprot"]], "pypath.inputs.trip.trip_interactions": [[325, "pypath-inputs-trip-trip-interactions"]], "pypath.inputs.trip.trip_process": [[326, "pypath-inputs-trip-trip-process"]], "pypath.inputs.trip.trip_process_table": [[327, "pypath-inputs-trip-trip-process-table"]], "pypath.inputs.twosides": [[328, "module-pypath.inputs.twosides"]], "pypath.inputs.twosides.twosides_interactions": [[329, "pypath-inputs-twosides-twosides-interactions"]], "pypath.inputs.unichem": [[330, "module-pypath.inputs.unichem"]], "pypath.inputs.unichem.info": [[331, "pypath-inputs-unichem-info"]], "pypath.inputs.unichem.unichem_info": [[332, "pypath-inputs-unichem-unichem-info"]], "pypath.inputs.unichem.unichem_mapping": [[333, "pypath-inputs-unichem-unichem-mapping"]], "pypath.inputs.unichem.unichem_sources": [[334, "pypath-inputs-unichem-unichem-sources"]], "pypath.inputs.uniprot": [[335, "module-pypath.inputs.uniprot"]], "pypath.inputs.uniprot.Taxon": [[336, "pypath-inputs-uniprot-taxon"]], "pypath.inputs.uniprot.UniprotQuery": [[337, "pypath-inputs-uniprot-uniprotquery"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[338, "pypath-inputs-uniprot-uniprotrecordhistory"]], "pypath.inputs.uniprot.deleted_uniprot_genesymbol": [[339, "pypath-inputs-uniprot-deleted-uniprot-genesymbol"]], "pypath.inputs.uniprot.get_uniprot_sec": [[340, "pypath-inputs-uniprot-get-uniprot-sec"]], "pypath.inputs.uniprot.protein_datasheet": [[341, "pypath-inputs-uniprot-protein-datasheet"]], "pypath.inputs.uniprot.query_builder": [[342, "pypath-inputs-uniprot-query-builder"]], "pypath.inputs.uniprot.swissprot_deleted": [[343, "pypath-inputs-uniprot-swissprot-deleted"]], "pypath.inputs.uniprot.trembl_deleted": [[344, "pypath-inputs-uniprot-trembl-deleted"]], "pypath.inputs.uniprot.uniprot_data": [[345, "pypath-inputs-uniprot-uniprot-data"]], "pypath.inputs.uniprot.uniprot_deleted": [[346, "pypath-inputs-uniprot-uniprot-deleted"]], "pypath.inputs.uniprot.uniprot_families": [[347, "pypath-inputs-uniprot-uniprot-families"]], "pypath.inputs.uniprot.uniprot_history": [[348, "pypath-inputs-uniprot-uniprot-history"]], "pypath.inputs.uniprot.uniprot_history_recent_datasheet": [[349, "pypath-inputs-uniprot-uniprot-history-recent-datasheet"]], "pypath.inputs.uniprot.uniprot_keywords": [[350, "pypath-inputs-uniprot-uniprot-keywords"]], "pypath.inputs.uniprot.uniprot_locations": [[351, "pypath-inputs-uniprot-uniprot-locations"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids": [[352, "pypath-inputs-uniprot-uniprot-ncbi-taxids"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids_2": [[353, "pypath-inputs-uniprot-uniprot-ncbi-taxids-2"]], "pypath.inputs.uniprot.uniprot_preprocess": [[354, "pypath-inputs-uniprot-uniprot-preprocess"]], "pypath.inputs.uniprot.uniprot_query": [[355, "pypath-inputs-uniprot-uniprot-query"]], "pypath.inputs.uniprot.uniprot_recent_version": [[356, "pypath-inputs-uniprot-uniprot-recent-version"]], "pypath.inputs.uniprot.uniprot_taxonomy": [[357, "pypath-inputs-uniprot-uniprot-taxonomy"]], "pypath.inputs.uniprot.uniprot_tissues": [[358, "pypath-inputs-uniprot-uniprot-tissues"]], "pypath.inputs.uniprot.uniprot_topology": [[359, "pypath-inputs-uniprot-uniprot-topology"]], "pypath.inputs.uniprot.valid_uniprot": [[360, "pypath-inputs-uniprot-valid-uniprot"]], "pypath.inputs.uniprot_db": [[361, "module-pypath.inputs.uniprot_db"]], "pypath.inputs.uniprot_db.all_swissprots": [[362, "pypath-inputs-uniprot-db-all-swissprots"]], "pypath.inputs.uniprot_db.all_trembls": [[363, "pypath-inputs-uniprot-db-all-trembls"]], "pypath.inputs.uniprot_db.all_uniprots": [[364, "pypath-inputs-uniprot-db-all-uniprots"]], "pypath.inputs.uniprot_db.get_db": [[365, "pypath-inputs-uniprot-db-get-db"]], "pypath.inputs.uniprot_db.init_db": [[366, "pypath-inputs-uniprot-db-init-db"]], "pypath.inputs.uniprot_db.is_swissprot": [[367, "pypath-inputs-uniprot-db-is-swissprot"]], "pypath.inputs.uniprot_db.is_trembl": [[368, "pypath-inputs-uniprot-db-is-trembl"]], "pypath.inputs.uniprot_db.is_uniprot": [[369, "pypath-inputs-uniprot-db-is-uniprot"]], "pypath.inputs.uniprot_idmapping": [[370, "module-pypath.inputs.uniprot_idmapping"]], "pypath.inputs.uniprot_idmapping.idtypes": [[371, "pypath-inputs-uniprot-idmapping-idtypes"]], "pypath.internals": [[372, "module-pypath.internals"]], "pypath.internals.input_formats": [[373, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[374, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[375, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[376, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.HmdbMapping": [[377, "pypath-internals-input-formats-hmdbmapping"]], "pypath.internals.input_formats.MappingInput": [[378, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[379, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[380, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[381, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.RampMapping": [[382, "pypath-internals-input-formats-rampmapping"]], "pypath.internals.input_formats.ReadList": [[383, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[384, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[385, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[386, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[387, "module-pypath.internals.license"]], "pypath.internals.license.License": [[388, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[389, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[390, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[391, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[392, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[393, "module-pypath.internals.maps"]], "pypath.internals.refs": [[394, "module-pypath.internals.refs"]], "pypath.internals.refs.Reference": [[395, "pypath-internals-refs-reference"]], "pypath.internals.refs.get_pubmed_data": [[396, "pypath-internals-refs-get-pubmed-data"]], "pypath.internals.resource": [[397, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[398, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[399, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[400, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkDataset": [[401, "pypath-internals-resource-networkdataset"]], "pypath.internals.resource.NetworkResource": [[402, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[403, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[404, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[405, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[406, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[407, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[408, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[409, "pypath-log"]], "pypath.resources": [[410, "module-pypath.resources"]], "pypath.resources.controller": [[411, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[412, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[413, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[414, "module-pypath.resources.data_formats"]], "pypath.resources.data_formats.activity_flow": [[415, "pypath-resources-data-formats-activity-flow"]], "pypath.resources.data_formats.enzyme_substrate": [[416, "pypath-resources-data-formats-enzyme-substrate"]], "pypath.resources.data_formats.interaction": [[417, "pypath-resources-data-formats-interaction"]], "pypath.resources.data_formats.interaction_htp": [[418, "pypath-resources-data-formats-interaction-htp"]], "pypath.resources.data_formats.pathway_bad": [[419, "pypath-resources-data-formats-pathway-bad"]], "pypath.resources.data_formats.reaction_pc": [[420, "pypath-resources-data-formats-reaction-pc"]], "pypath.resources.data_formats.transcription_deprecated": [[421, "pypath-resources-data-formats-transcription-deprecated"]], "pypath.resources.data_formats.transcription_onebyone": [[422, "pypath-resources-data-formats-transcription-onebyone"]], "pypath.resources.get_controller": [[423, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[424, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[425, "pypath-resources-licenses-licenses"]], "pypath.resources.network": [[426, "module-pypath.resources.network"]], "pypath.resources.urls": [[427, "module-pypath.resources.urls"]], "pypath.share": [[428, "module-pypath.share"]], "pypath.share.cache": [[429, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[430, "pypath-share-cache-cache-item"]], "pypath.share.cache.cache_path": [[431, "pypath-share-cache-cache-path"]], "pypath.share.cache.get_cachedir": [[432, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[433, "module-pypath.share.common"]], "pypath.share.constants": [[434, "module-pypath.share.constants"]], "pypath.share.curl": [[435, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[436, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[437, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[438, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[439, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[440, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[441, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[442, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[443, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[444, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[445, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[446, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[447, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[448, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[449, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[450, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[451, "pypath-share-curl-preserve-on"]], "pypath.share.progress": [[452, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[453, "pypath-share-progress-progress"]], "pypath.share.session": [[454, "module-pypath.share.session"]], "pypath.share.settings": [[455, "module-pypath.share.settings"]], "pypath.visual": [[456, "module-pypath.visual"]], "pypath.visual.drawing": [[457, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[458, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[459, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[460, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[461, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[462, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[463, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[464, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[465, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[466, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[467, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[468, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[469, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[470, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[471, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[472, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[473, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[474, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[475, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[476, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[477, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[478, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[479, "contents"]], "Welcome to pypath!": [[480, "welcome-to-pypath"]], "OmniPath": [[480, "omnipath"]], "Do you need pypath?": [[480, "do-you-need-pypath"]], "Installation": [[480, "installation"]], "Docs": [[480, "docs"]], "Get help": [[480, "get-help"]], "Features": [[480, "features"]], "Integrated databases": [[480, "integrated-databases"]], "Database management": [[480, "database-management"]], "Further modules in pypath": [[480, "further-modules-in-pypath"]], "ID conversion": [[480, "id-conversion"]], "Homology translation": [[480, "homology-translation"]], "FAQ": [[480, "faq"]], "Contact": [[480, "contact"]], "Impressum": [[480, "impressum"]], "History and releases": [[480, "history-and-releases"]], "The pypath book": [[481, "The-pypath-book"]], "Introduction": [[481, "Introduction"]], "Build, load and save databases": [[481, "Build,-load-and-save-databases"]], "The OmniPath app": [[481, "The-OmniPath-app"]], "Built-in database definitions": [[481, "Built-in-database-definitions"]], "Networks": [[481, "Networks"]], "Strictly literature curated network": [[481, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[481, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[481, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[481, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[481, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[481, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[481, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[481, "Enzyme-substrate-relationships"]], "Protein complexes": [[481, "Protein-complexes"], [481, "id2"]], "Annotations": [[481, "Annotations"], [481, "id1"], [484, "annotations"]], "Inter-cellular communication roles": [[481, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[481, "Data-directly-from-the-original-resources"]], "Interesting resources": [[481, "Interesting-resources"]], "RaMP": [[481, "RaMP"]], "TL;DR": [[481, "TL;DR"]], "HMDB (Human Metabolome Database)": [[481, "HMDB-(Human-Metabolome-Database)"]], "Direct access to HMDB data": [[481, "Direct-access-to-HMDB-data"]], "Higher level access to HMDB data": [[481, "Higher-level-access-to-HMDB-data"]], "ID translation with HMDB": [[481, "ID-translation-with-HMDB"]], "SwissLipids": [[481, "SwissLipids"]], "LIPID MAPS": [[481, "LIPID-MAPS"]], "NCBI E-Utils": [[481, "NCBI-E-Utils"]], "Download management": [[481, "Download-management"]], "Cache management and customization": [[481, "Cache-management-and-customization"]], "Download failures": [[481, "Download-failures"]], "Corrupted cache content": [[481, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[481, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[481, "Timeouts"]], "Access and inspect the Curl object": [[481, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[481, "Is-it-failing-only-for-you?"]], "Read the log": [[481, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[481, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[481, "Resources"]], "Licenses": [[481, "Licenses"]], "Example: build a network for commercial use": [[481, "Example:-build-a-network-for-commercial-use"]], "Resource information": [[481, "Resource-information"]], "Resource definitions for a certain database or dataset": [[481, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[481, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[481, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[481, "The-Network-object"]], "Network in pandas.DataFrame": [[481, "Network-in-pandas.DataFrame"]], "Self interactions (loop edges) in the network": [[481, "Self-interactions-(loop-edges)-in-the-network"]], "Molecular complexes in the network": [[481, "Molecular-complexes-in-the-network"]], "Translating identifiers": [[481, "Translating-identifiers"]], "Pre-defined ID translation tables": [[481, "Pre-defined-ID-translation-tables"]], "Direct access to ID translation tables": [[481, "Direct-access-to-ID-translation-tables"]], "Orthology translation": [[481, "Orthology-translation"]], "Orthology translation tables as dictionaries": [[481, "Orthology-translation-tables-as-dictionaries"]], "Orthology translation data frames": [[481, "Orthology-translation-data-frames"]], "Taxonomy": [[481, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[481, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[481, "Organism-from-UniProt-ID"]], "UniProt": [[481, "UniProt"]], "The UniProt input module": [[481, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[481, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[481, "UniProt-ID-format-validation"]], "UniProt ID validation": [[481, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[481, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[481, "History-of-UniProt-records"]], "UniProt REST API": [[481, "UniProt-REST-API"]], "Processed UniProt annotations": [[481, "Processed-UniProt-annotations"]], "The UniProt utils module": [[481, "The-UniProt-utils-module"]], "Datasheets": [[481, "Datasheets"]], "Tables": [[481, "Tables"]], "Sanitizing UniProt IDs": [[481, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[481, "Enzyme-substrate-interactions"], [484, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[481, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[481, "Enzyme-substrate-data-frame"]], "Protein sequences": [[481, "Protein-sequences"]], "Load a single annotation resource": [[481, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[481, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[481, "Load-only-selected-annotations"]], "Data frames of annotations": [[481, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[481, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[481, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[481, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[481, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[481, "Browse-intercell-categories"]], "Gene Ontology": [[481, "Gene-Ontology"]], "Protein complex objects": [[481, "Protein-complex-objects"]], "Protein complex data frame": [[481, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[481, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[481, "Log-messages-and-sessions"]], "Basic info about the session": [[481, "Basic-info-about-the-session"]], "Read the log file": [[481, "Read-the-log-file"]], "Logging to the console": [[481, "Logging-to-the-console"]], "Disable logging": [[481, "Disable-logging"]], "Write to the log": [[481, "Write-to-the-log"]], "Sending a single message": [[481, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[481, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[481, "BEL-export"]], "CellPhoneDB export": [[481, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[481, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[481, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[481, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[481, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[481, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[481, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[481, "Directions-and-signs"]], "Accessing nodes in the network": [[481, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[481, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[481, "Accessing-edges-by-identifiers"]], "Literature references": [[481, "Literature-references"]], "Plotting the network with igraph": [[481, "Plotting-the-network-with-igraph"]], "Reference": [[482, "reference"]], "How to navigate the reference?": [[482, "how-to-navigate-the-reference"]], "Release history": [[483, "release-history"]], "0.1.0": [[483, "id1"]], "0.2.0": [[483, "id2"]], "0.3.0": [[483, "id3"]], "0.4.0": [[483, "id4"]], "0.5.0": [[483, "id5"]], "0.5.32": [[483, "id6"]], "0.6.31": [[483, "id7"]], "0.7.0": [[483, "id8"]], "0.7.74": [[483, "id9"]], "0.7.93": [[483, "id10"]], "0.7.110": [[483, "id11"]], "0.8": [[483, "id12"]], "0.9": [[483, "id13"]], "0.10.0": [[483, "id14"]], "0.11.0": [[483, "id15"]], "0.12.0": [[483, "id16"]], "0.13.0": [[483, "id17"]], "0.14.0": [[483, "id18"]], "Upcoming": [[483, "upcoming"]], "Webservice": [[484, "webservice"]], "Query types": [[484, "query-types"]], "Interaction datasets": [[484, "interaction-datasets"]], "Mouse and rat": [[484, "mouse-and-rat"]], "Examples": [[484, "examples"]], "Molecular interaction network": [[484, "molecular-interaction-network"]], "Molecular complexes": [[484, "molecular-complexes"]], "Roles in inter-cellular communication": [[484, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[484, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.abs"], [12, "module-pypath.inputs.acsn"], [15, "module-pypath.inputs.adrecs"], [25, "module-pypath.inputs.biogrid"], [28, "module-pypath.inputs.biomart"], [34, "module-pypath.inputs.biomodels"], [40, "module-pypath.inputs.ca1"], [42, "module-pypath.inputs.cancercellmap"], [44, "module-pypath.inputs.cell"], [46, "module-pypath.inputs.chembl"], [54, "module-pypath.inputs.clinvar"], [57, "module-pypath.inputs.common"], [64, "module-pypath.inputs.compath"], [66, "module-pypath.inputs.cpdb"], [69, "module-pypath.inputs.credentials"], [71, "module-pypath.inputs.ctdbase"], [74, "module-pypath.inputs.ddinter"], [80, "module-pypath.inputs.deathdomain"], [83, "module-pypath.inputs.dip"], [86, "module-pypath.inputs.diseases"], [94, "module-pypath.inputs.drugbank"], [101, "module-pypath.inputs.ebi"], [103, "module-pypath.inputs.elm"], [108, "module-pypath.inputs.embopress"], [110, "module-pypath.inputs.encode"], [112, "module-pypath.inputs.ensembl"], [114, "module-pypath.inputs.eutils"], [116, "module-pypath.inputs.expasy"], [119, "module-pypath.inputs.genecards"], [124, "module-pypath.inputs.graphviz"], [126, "module-pypath.inputs.hprd"], [131, "module-pypath.inputs.htri"], [133, "module-pypath.inputs.humsavar"], [135, "module-pypath.inputs.ielm"], [138, "module-pypath.inputs.imweb"], [141, "module-pypath.inputs.innatedb"], [143, "module-pypath.inputs.instruct"], [146, "module-pypath.inputs.intact"], [148, "module-pypath.inputs.interpro"], [153, "module-pypath.inputs.ipi"], [155, "module-pypath.inputs.kegg_api"], [172, "module-pypath.inputs.kirouac2010"], [174, "module-pypath.inputs.laudanna"], [177, "module-pypath.inputs.lincs"], [179, "module-pypath.inputs.macrophage"], [181, "module-pypath.inputs.main"], [182, "module-pypath.inputs.mimp"], [186, "module-pypath.inputs.mir2disease"], [188, "module-pypath.inputs.mirdeathdb"], [190, "module-pypath.inputs.mitab"], [193, "module-pypath.inputs.mppi"], [195, "module-pypath.inputs.ncrdeathdb"], [197, "module-pypath.inputs.negatome"], [199, "module-pypath.inputs.netbiol"], [202, "module-pypath.inputs.offsides"], [204, "module-pypath.inputs.ontology"], [207, "module-pypath.inputs.opentargets"], [213, "module-pypath.inputs.pathophenodb"], [216, "module-pypath.inputs.pathwaycommons"], [233, "module-pypath.inputs.pazar"], [235, "module-pypath.inputs.pepcyber"], [238, "module-pypath.inputs.pharos"], [247, "module-pypath.inputs.phobius"], [249, "module-pypath.inputs.phosphonetworks"], [252, "module-pypath.inputs.phosphopoint"], [255, "module-pypath.inputs.pro"], [258, "module-pypath.inputs.protmapper"], [262, "module-pypath.inputs.pubchem"], [264, "module-pypath.inputs.pubmed"], [271, "module-pypath.inputs.rdata"], [272, "module-pypath.inputs.reaction"], [292, "module-pypath.inputs.reactome"], [297, "module-pypath.inputs.science"], [299, "module-pypath.inputs.sider"], [308, "module-pypath.inputs.stitch"], [311, "module-pypath.inputs.string"], [316, "module-pypath.inputs.swisslipids"], [317, "module-pypath.inputs.switches_elm"], [319, "module-pypath.inputs.transmir"], [321, "module-pypath.inputs.trip"], [328, "module-pypath.inputs.twosides"], [330, "module-pypath.inputs.unichem"], [335, "module-pypath.inputs.uniprot"], [361, "module-pypath.inputs.uniprot_db"], [370, "module-pypath.inputs.uniprot_idmapping"], [372, "module-pypath.internals"], [373, "module-pypath.internals.input_formats"], [387, "module-pypath.internals.license"], [393, "module-pypath.internals.maps"], [394, "module-pypath.internals.refs"], [397, "module-pypath.internals.resource"], [405, "module-pypath.legacy"], [406, "module-pypath.legacy.db_categories"], [410, "module-pypath.resources"], [411, "module-pypath.resources.controller"], [413, "module-pypath.resources.data"], [414, "module-pypath.resources.data_formats"], [424, "module-pypath.resources.licenses"], [426, "module-pypath.resources.network"], [427, "module-pypath.resources.urls"], [428, "module-pypath.share"], [429, "module-pypath.share.cache"], [433, "module-pypath.share.common"], [434, "module-pypath.share.constants"], [435, "module-pypath.share.curl"], [452, "module-pypath.share.progress"], [454, "module-pypath.share.session"], [455, "module-pypath.share.settings"], [456, "module-pypath.visual"], [457, "module-pypath.visual.drawing"], [460, "module-pypath.visual.igraph_drawing"], [466, "module-pypath.visual.igraph_drawing.edge"], [473, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "abs_interactions() (in module pypath.inputs.abs)": [[11, "pypath.inputs.abs.abs_interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "acsn_interactions() (in module pypath.inputs.acsn)": [[13, "pypath.inputs.acsn.acsn_interactions"]], "acsn_interactions_sif() (in module pypath.inputs.acsn)": [[14, "pypath.inputs.acsn.acsn_interactions_sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "adrecsadr (class in pypath.inputs.adrecs)": [[16, "pypath.inputs.adrecs.AdrecsAdr"]], "__init__() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.__init__"]], "adr_class (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.adr_class"]], "badd (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.badd"]], "count() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.count"]], "index() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.index"]], "adrecschildparent (class in pypath.inputs.adrecs)": [[17, "pypath.inputs.adrecs.AdrecsChildParent"]], "__init__() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.__init__"]], "child (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.child"]], "count() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.count"]], "index() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.index"]], "parent (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.parent"]], "adrecsdrug (class in pypath.inputs.adrecs)": [[18, "pypath.inputs.adrecs.AdrecsDrug"]], "__init__() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.__init__"]], "badd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.badd"]], "count() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.count"]], "drug (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drug"]], "drugbank (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drugbank"]], "index() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.index"]], "kegg (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.kegg"]], "mesh (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.mesh"]], "pubchem_cid (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.pubchem_cid"]], "synonyms (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.synonyms"]], "tdd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.tdd"]], "adrecsdrugadr (class in pypath.inputs.adrecs)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr"]], "__init__() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.__init__"]], "adr (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr"]], "adr_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr_badd"]], "count() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.count"]], "drug (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug"]], "drug_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug_badd"]], "index() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.index"]], "adrecsterm (class in pypath.inputs.adrecs)": [[20, "pypath.inputs.adrecs.AdrecsTerm"]], "__init__() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.__init__"]], "adrecs_class (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.adrecs_class"]], "badd (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.badd"]], "count() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.count"]], "index() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.index"]], "meddra (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.meddra"]], "name (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.name"]], "synonyms (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.synonyms"]], "adrecs_adr_ontology() (in module pypath.inputs.adrecs)": [[21, "pypath.inputs.adrecs.adrecs_adr_ontology"]], "adrecs_drug_adr() (in module pypath.inputs.adrecs)": [[22, "pypath.inputs.adrecs.adrecs_drug_adr"]], "adrecs_drug_identifiers() (in module pypath.inputs.adrecs)": [[23, "pypath.inputs.adrecs.adrecs_drug_identifiers"]], "adrecs_hierarchy() (in module pypath.inputs.adrecs)": [[24, "pypath.inputs.adrecs.adrecs_hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "biogrid_all_interactions() (in module pypath.inputs.biogrid)": [[26, "pypath.inputs.biogrid.biogrid_all_interactions"]], "biogrid_interactions() (in module pypath.inputs.biogrid)": [[27, "pypath.inputs.biogrid.biogrid_interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "biomart_homology() (in module pypath.inputs.biomart)": [[29, "pypath.inputs.biomart.biomart_homology"]], "biomart_microarray() (in module pypath.inputs.biomart)": [[30, "pypath.inputs.biomart.biomart_microarray"]], "biomart_microarray_types() (in module pypath.inputs.biomart)": [[31, "pypath.inputs.biomart.biomart_microarray_types"]], "biomart_microarrays() (in module pypath.inputs.biomart)": [[32, "pypath.inputs.biomart.biomart_microarrays"]], "biomart_query() (in module pypath.inputs.biomart)": [[33, "pypath.inputs.biomart.biomart_query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "download_single_model() (in module pypath.inputs.biomodels)": [[35, "pypath.inputs.biomodels.download_single_model"]], "get_all_models() (in module pypath.inputs.biomodels)": [[36, "pypath.inputs.biomodels.get_all_models"]], "get_biomodels() (in module pypath.inputs.biomodels)": [[37, "pypath.inputs.biomodels.get_biomodels"]], "get_biomodels_req() (in module pypath.inputs.biomodels)": [[38, "pypath.inputs.biomodels.get_biomodels_req"]], "get_single_model() (in module pypath.inputs.biomodels)": [[39, "pypath.inputs.biomodels.get_single_model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "ca1_interactions() (in module pypath.inputs.ca1)": [[41, "pypath.inputs.ca1.ca1_interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "ccmap_interactions() (in module pypath.inputs.cancercellmap)": [[43, "pypath.inputs.cancercellmap.ccmap_interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[45, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "chembl_activities() (in module pypath.inputs.chembl)": [[47, "pypath.inputs.chembl.chembl_activities"]], "chembl_assays() (in module pypath.inputs.chembl)": [[48, "pypath.inputs.chembl.chembl_assays"]], "chembl_documents() (in module pypath.inputs.chembl)": [[49, "pypath.inputs.chembl.chembl_documents"]], "chembl_drug_indications() (in module pypath.inputs.chembl)": [[50, "pypath.inputs.chembl.chembl_drug_indications"]], "chembl_mechanisms() (in module pypath.inputs.chembl)": [[51, "pypath.inputs.chembl.chembl_mechanisms"]], "chembl_molecules() (in module pypath.inputs.chembl)": [[52, "pypath.inputs.chembl.chembl_molecules"]], "chembl_targets() (in module pypath.inputs.chembl)": [[53, "pypath.inputs.chembl.chembl_targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "clinvar_citations() (in module pypath.inputs.clinvar)": [[55, "pypath.inputs.clinvar.clinvar_citations"]], "clinvar_raw() (in module pypath.inputs.clinvar)": [[56, "pypath.inputs.clinvar.clinvar_raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[58, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[59, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[60, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[61, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[62, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[63, "pypath.inputs.common.read_xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "compath_mappings() (in module pypath.inputs.compath)": [[65, "pypath.inputs.compath.compath_mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "cpdb_interactions() (in module pypath.inputs.cpdb)": [[67, "pypath.inputs.cpdb.cpdb_interactions"]], "cpdb_interactions_ltp() (in module pypath.inputs.cpdb)": [[68, "pypath.inputs.cpdb.cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[70, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "ctdbase_relations() (in module pypath.inputs.ctdbase)": [[72, "pypath.inputs.ctdbase.ctdbase_relations"]], "ctdbase_vocabulary() (in module pypath.inputs.ctdbase)": [[73, "pypath.inputs.ctdbase.ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "ddinter_drug_interactions() (in module pypath.inputs.ddinter)": [[75, "pypath.inputs.ddinter.ddinter_drug_interactions"]], "ddinter_identifiers() (in module pypath.inputs.ddinter)": [[76, "pypath.inputs.ddinter.ddinter_identifiers"]], "ddinter_interactions() (in module pypath.inputs.ddinter)": [[77, "pypath.inputs.ddinter.ddinter_interactions"]], "ddinter_mappings() (in module pypath.inputs.ddinter)": [[78, "pypath.inputs.ddinter.ddinter_mappings"]], "ddinter_n_drugs() (in module pypath.inputs.ddinter)": [[79, "pypath.inputs.ddinter.ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "deathdomain_interactions() (in module pypath.inputs.deathdomain)": [[81, "pypath.inputs.deathdomain.deathdomain_interactions"]], "deathdomain_interactions_rescued() (in module pypath.inputs.deathdomain)": [[82, "pypath.inputs.deathdomain.deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "dip_interactions() (in module pypath.inputs.dip)": [[84, "pypath.inputs.dip.dip_interactions"]], "dip_login() (in module pypath.inputs.dip)": [[85, "pypath.inputs.dip.dip_login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "diseases_general() (in module pypath.inputs.diseases)": [[87, "pypath.inputs.diseases.diseases_general"]], "experiments_filtered() (in module pypath.inputs.diseases)": [[88, "pypath.inputs.diseases.experiments_filtered"]], "experiments_full() (in module pypath.inputs.diseases)": [[89, "pypath.inputs.diseases.experiments_full"]], "knowledge_filtered() (in module pypath.inputs.diseases)": [[90, "pypath.inputs.diseases.knowledge_filtered"]], "knowledge_full() (in module pypath.inputs.diseases)": [[91, "pypath.inputs.diseases.knowledge_full"]], "textmining_filtered() (in module pypath.inputs.diseases)": [[92, "pypath.inputs.diseases.textmining_filtered"]], "textmining_full() (in module pypath.inputs.diseases)": [[93, "pypath.inputs.diseases.textmining_full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "drugbankfull (class in pypath.inputs.drugbank)": [[95, "pypath.inputs.drugbank.DrugbankFull"]], "__init__() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.__init__"]], "drugbank_drugs_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_drugs_full"]], "drugbank_external_ids_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_external_ids_full"]], "drugbank_properties_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_properties_full"]], "drugbank_targets_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_targets_full"]], "drugbank_annotations() (in module pypath.inputs.drugbank)": [[96, "pypath.inputs.drugbank.drugbank_annotations"]], "drugbank_drugs() (in module pypath.inputs.drugbank)": [[97, "pypath.inputs.drugbank.drugbank_drugs"]], "drugbank_interactions() (in module pypath.inputs.drugbank)": [[98, "pypath.inputs.drugbank.drugbank_interactions"]], "drugbank_mapping() (in module pypath.inputs.drugbank)": [[99, "pypath.inputs.drugbank.drugbank_mapping"]], "drugbank_raw_interactions() (in module pypath.inputs.drugbank)": [[100, "pypath.inputs.drugbank.drugbank_raw_interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[102, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "elm_classes() (in module pypath.inputs.elm)": [[104, "pypath.inputs.elm.elm_classes"]], "elm_domains() (in module pypath.inputs.elm)": [[105, "pypath.inputs.elm.elm_domains"]], "elm_instances() (in module pypath.inputs.elm)": [[106, "pypath.inputs.elm.elm_instances"]], "elm_interactions() (in module pypath.inputs.elm)": [[107, "pypath.inputs.elm.elm_interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[109, "pypath.inputs.embopress.embopress_supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "encode_tf_mirna_interactions() (in module pypath.inputs.encode)": [[111, "pypath.inputs.encode.encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "ensembl_organisms() (in module pypath.inputs.ensembl)": [[113, "pypath.inputs.ensembl.ensembl_organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "esummary() (in module pypath.inputs.eutils)": [[115, "pypath.inputs.eutils.esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "expasy_enzyme_classes() (in module pypath.inputs.expasy)": [[117, "pypath.inputs.expasy.expasy_enzyme_classes"]], "expasy_enzymes() (in module pypath.inputs.expasy)": [[118, "pypath.inputs.expasy.expasy_enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "genecards_datasheet() (in module pypath.inputs.genecards)": [[120, "pypath.inputs.genecards.genecards_datasheet"]], "genecards_soup() (in module pypath.inputs.genecards)": [[121, "pypath.inputs.genecards.genecards_soup"]], "genecards_summaries() (in module pypath.inputs.genecards)": [[122, "pypath.inputs.genecards.genecards_summaries"]], "get_method() (in module pypath.inputs)": [[123, "pypath.inputs.get_method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "graphviz_attrs() (in module pypath.inputs.graphviz)": [[125, "pypath.inputs.graphviz.graphviz_attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "get_hprd() (in module pypath.inputs.hprd)": [[127, "pypath.inputs.hprd.get_hprd"]], "hprd_enzyme_substrate() (in module pypath.inputs.hprd)": [[128, "pypath.inputs.hprd.hprd_enzyme_substrate"]], "hprd_interactions() (in module pypath.inputs.hprd)": [[129, "pypath.inputs.hprd.hprd_interactions"]], "hprd_interactions_htp() (in module pypath.inputs.hprd)": [[130, "pypath.inputs.hprd.hprd_interactions_htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "htri_interactions() (in module pypath.inputs.htri)": [[132, "pypath.inputs.htri.htri_interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "uniprot_variants() (in module pypath.inputs.humsavar)": [[134, "pypath.inputs.humsavar.uniprot_variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "get_ielm() (in module pypath.inputs.ielm)": [[136, "pypath.inputs.ielm.get_ielm"]], "get_ielm_huge() (in module pypath.inputs.ielm)": [[137, "pypath.inputs.ielm.get_ielm_huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "get_imweb() (in module pypath.inputs.imweb)": [[139, "pypath.inputs.imweb.get_imweb"]], "get_imweb_req() (in module pypath.inputs.imweb)": [[140, "pypath.inputs.imweb.get_imweb_req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "innatedb_interactions() (in module pypath.inputs.innatedb)": [[142, "pypath.inputs.innatedb.innatedb_interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "get_instruct() (in module pypath.inputs.instruct)": [[144, "pypath.inputs.instruct.get_instruct"]], "get_instruct_offsets() (in module pypath.inputs.instruct)": [[145, "pypath.inputs.instruct.get_instruct_offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "intact_interactions() (in module pypath.inputs.intact)": [[147, "pypath.inputs.intact.intact_interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "interpro2go_annotations() (in module pypath.inputs.interpro)": [[149, "pypath.inputs.interpro.interpro2go_annotations"]], "interpro_annotations() (in module pypath.inputs.interpro)": [[150, "pypath.inputs.interpro.interpro_annotations"]], "interpro_entries() (in module pypath.inputs.interpro)": [[151, "pypath.inputs.interpro.interpro_entries"]], "interpro_xrefs() (in module pypath.inputs.interpro)": [[152, "pypath.inputs.interpro.interpro_xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "ipi_uniprot() (in module pypath.inputs.ipi)": [[154, "pypath.inputs.ipi.ipi_uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "disease_to_drug() (in module pypath.inputs.kegg_api)": [[156, "pypath.inputs.kegg_api.disease_to_drug"]], "disease_to_gene() (in module pypath.inputs.kegg_api)": [[157, "pypath.inputs.kegg_api.disease_to_gene"]], "disease_to_pathway() (in module pypath.inputs.kegg_api)": [[158, "pypath.inputs.kegg_api.disease_to_pathway"]], "drug_to_disease() (in module pypath.inputs.kegg_api)": [[159, "pypath.inputs.kegg_api.drug_to_disease"]], "drug_to_drug() (in module pypath.inputs.kegg_api)": [[160, "pypath.inputs.kegg_api.drug_to_drug"]], "drug_to_gene() (in module pypath.inputs.kegg_api)": [[161, "pypath.inputs.kegg_api.drug_to_gene"]], "drug_to_pathway() (in module pypath.inputs.kegg_api)": [[162, "pypath.inputs.kegg_api.drug_to_pathway"]], "gene_to_disease() (in module pypath.inputs.kegg_api)": [[163, "pypath.inputs.kegg_api.gene_to_disease"]], "gene_to_drug() (in module pypath.inputs.kegg_api)": [[164, "pypath.inputs.kegg_api.gene_to_drug"]], "gene_to_pathway() (in module pypath.inputs.kegg_api)": [[165, "pypath.inputs.kegg_api.gene_to_pathway"]], "kegg_drug_to_chebi() (in module pypath.inputs.kegg_api)": [[166, "pypath.inputs.kegg_api.kegg_drug_to_chebi"]], "kegg_gene_to_ncbi_geneid() (in module pypath.inputs.kegg_api)": [[167, "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid"]], "kegg_gene_to_uniprot() (in module pypath.inputs.kegg_api)": [[168, "pypath.inputs.kegg_api.kegg_gene_to_uniprot"]], "pathway_to_disease() (in module pypath.inputs.kegg_api)": [[169, "pypath.inputs.kegg_api.pathway_to_disease"]], "pathway_to_drug() (in module pypath.inputs.kegg_api)": [[170, "pypath.inputs.kegg_api.pathway_to_drug"]], "pathway_to_gene() (in module pypath.inputs.kegg_api)": [[171, "pypath.inputs.kegg_api.pathway_to_gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "kirouac2010_interactions() (in module pypath.inputs.kirouac2010)": [[173, "pypath.inputs.kirouac2010.kirouac2010_interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "laudanna_directions() (in module pypath.inputs.laudanna)": [[175, "pypath.inputs.laudanna.laudanna_directions"]], "laudanna_effects() (in module pypath.inputs.laudanna)": [[176, "pypath.inputs.laudanna.laudanna_effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "lincs_compounds() (in module pypath.inputs.lincs)": [[178, "pypath.inputs.lincs.lincs_compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "macrophage_interactions() (in module pypath.inputs.macrophage)": [[180, "pypath.inputs.macrophage.macrophage_interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "get_kinase_class() (in module pypath.inputs.mimp)": [[183, "pypath.inputs.mimp.get_kinase_class"]], "mimp_enzyme_substrate() (in module pypath.inputs.mimp)": [[184, "pypath.inputs.mimp.mimp_enzyme_substrate"]], "mimp_interactions() (in module pypath.inputs.mimp)": [[185, "pypath.inputs.mimp.mimp_interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "mir2disease_interactions() (in module pypath.inputs.mir2disease)": [[187, "pypath.inputs.mir2disease.mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "mirdeathdb_interactions() (in module pypath.inputs.mirdeathdb)": [[189, "pypath.inputs.mirdeathdb.mirdeathdb_interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[191, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[192, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "mppi_interactions() (in module pypath.inputs.mppi)": [[194, "pypath.inputs.mppi.mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "ncrdeathdb_interactions() (in module pypath.inputs.ncrdeathdb)": [[196, "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "negatome_interactions() (in module pypath.inputs.negatome)": [[198, "pypath.inputs.negatome.negatome_interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "arn_interactions() (in module pypath.inputs.netbiol)": [[200, "pypath.inputs.netbiol.arn_interactions"]], "nrf2ome_interactions() (in module pypath.inputs.netbiol)": [[201, "pypath.inputs.netbiol.nrf2ome_interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "offsides_side_effects() (in module pypath.inputs.offsides)": [[203, "pypath.inputs.offsides.offsides_side_effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "listof_ontologies() (in module pypath.inputs.ontology)": [[205, "pypath.inputs.ontology.listof_ontologies"]], "ontology() (in module pypath.inputs.ontology)": [[206, "pypath.inputs.ontology.ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "opentargets_adverse_reactions() (in module pypath.inputs.opentargets)": [[208, "pypath.inputs.opentargets.opentargets_adverse_reactions"]], "opentargets_baseline_expression() (in module pypath.inputs.opentargets)": [[209, "pypath.inputs.opentargets.opentargets_baseline_expression"]], "opentargets_direct_score() (in module pypath.inputs.opentargets)": [[210, "pypath.inputs.opentargets.opentargets_direct_score"]], "opentargets_general() (in module pypath.inputs.opentargets)": [[211, "pypath.inputs.opentargets.opentargets_general"]], "opentargets_indirect_score() (in module pypath.inputs.opentargets)": [[212, "pypath.inputs.opentargets.opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "diseasepathogen (class in pypath.inputs.pathophenodb)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen"]], "__init__() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.__init__"]], "count() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.count"]], "disease (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease"]], "disease_id (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease_id"]], "evidence (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.evidence"]], "index() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.index"]], "pathogen (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen"]], "pathogen_taxid (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen_taxid"]], "disease_pathogen_interactions() (in module pypath.inputs.pathophenodb)": [[215, "pypath.inputs.pathophenodb.disease_pathogen_interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pathwaycommonsinteraction (class in pypath.inputs.pathwaycommons)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.count"]], "id_a (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_a"]], "id_b (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_b"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.index"]], "interaction_type (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.interaction_type"]], "resource (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.resource"]], "pathwaycommonsresource (class in pypath.inputs.pathwaycommons)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.count"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.index"]], "name (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.name"]], "pc_label (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.pc_label"]], "version (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.version"]], "pathwaycommons_bind_interactions() (in module pypath.inputs.pathwaycommons)": [[219, "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions"]], "pathwaycommons_biogrid_interactions() (in module pypath.inputs.pathwaycommons)": [[220, "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions"]], "pathwaycommons_corum_interactions() (in module pypath.inputs.pathwaycommons)": [[221, "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions"]], "pathwaycommons_dip_interactions() (in module pypath.inputs.pathwaycommons)": [[222, "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions"]], "pathwaycommons_hprd_interactions() (in module pypath.inputs.pathwaycommons)": [[223, "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions"]], "pathwaycommons_inoh_interactions() (in module pypath.inputs.pathwaycommons)": [[224, "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions"]], "pathwaycommons_intact_interactions() (in module pypath.inputs.pathwaycommons)": [[225, "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions"]], "pathwaycommons_interactions() (in module pypath.inputs.pathwaycommons)": [[226, "pypath.inputs.pathwaycommons.pathwaycommons_interactions"]], "pathwaycommons_kegg_interactions() (in module pypath.inputs.pathwaycommons)": [[227, "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions"]], "pathwaycommons_netpath_interactions() (in module pypath.inputs.pathwaycommons)": [[228, "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions"]], "pathwaycommons_panther_interactions() (in module pypath.inputs.pathwaycommons)": [[229, "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions"]], "pathwaycommons_phosphosite_interactions() (in module pypath.inputs.pathwaycommons)": [[230, "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions"]], "pathwaycommons_reactome_interactions() (in module pypath.inputs.pathwaycommons)": [[231, "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions"]], "pathwaycommons_wikipathways_interactions() (in module pypath.inputs.pathwaycommons)": [[232, "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pazar_interactions() (in module pypath.inputs.pazar)": [[234, "pypath.inputs.pazar.pazar_interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pepcyber_details() (in module pypath.inputs.pepcyber)": [[236, "pypath.inputs.pepcyber.pepcyber_details"]], "pepcyber_interactions() (in module pypath.inputs.pepcyber)": [[237, "pypath.inputs.pepcyber.pepcyber_interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pharos_diseases() (in module pypath.inputs.pharos)": [[239, "pypath.inputs.pharos.pharos_diseases"]], "pharos_expression() (in module pypath.inputs.pharos)": [[240, "pypath.inputs.pharos.pharos_expression"]], "pharos_general() (in module pypath.inputs.pharos)": [[241, "pypath.inputs.pharos.pharos_general"]], "pharos_gtex() (in module pypath.inputs.pharos)": [[242, "pypath.inputs.pharos.pharos_gtex"]], "pharos_ligands() (in module pypath.inputs.pharos)": [[243, "pypath.inputs.pharos.pharos_ligands"]], "pharos_orthologs() (in module pypath.inputs.pharos)": [[244, "pypath.inputs.pharos.pharos_orthologs"]], "pharos_targets() (in module pypath.inputs.pharos)": [[245, "pypath.inputs.pharos.pharos_targets"]], "pharos_xrefs() (in module pypath.inputs.pharos)": [[246, "pypath.inputs.pharos.pharos_xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "phobius_annotations() (in module pypath.inputs.phobius)": [[248, "pypath.inputs.phobius.phobius_annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "phosphonetworks_enzyme_substrate() (in module pypath.inputs.phosphonetworks)": [[250, "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate"]], "phosphonetworks_interactions() (in module pypath.inputs.phosphonetworks)": [[251, "pypath.inputs.phosphonetworks.phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "phosphopoint_directions() (in module pypath.inputs.phosphopoint)": [[253, "pypath.inputs.phosphopoint.phosphopoint_directions"]], "phosphopoint_interactions() (in module pypath.inputs.phosphopoint)": [[254, "pypath.inputs.phosphopoint.phosphopoint_interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "get_pro() (in module pypath.inputs.pro)": [[256, "pypath.inputs.pro.get_pro"]], "pro_mapping() (in module pypath.inputs.pro)": [[257, "pypath.inputs.pro.pro_mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "get_protmapper() (in module pypath.inputs.protmapper)": [[259, "pypath.inputs.protmapper.get_protmapper"]], "protmapper_enzyme_substrate() (in module pypath.inputs.protmapper)": [[260, "pypath.inputs.protmapper.protmapper_enzyme_substrate"]], "protmapper_interactions() (in module pypath.inputs.protmapper)": [[261, "pypath.inputs.protmapper.protmapper_interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pubchem_mapping() (in module pypath.inputs.pubchem)": [[263, "pypath.inputs.pubchem.pubchem_mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "get_pmid() (in module pypath.inputs.pubmed)": [[265, "pypath.inputs.pubmed.get_pmid"]], "get_pubmeds() (in module pypath.inputs.pubmed)": [[266, "pypath.inputs.pubmed.get_pubmeds"]], "only_pmids() (in module pypath.inputs.pubmed)": [[267, "pypath.inputs.pubmed.only_pmids"]], "open_pubmed() (in module pypath.inputs.pubmed)": [[268, "pypath.inputs.pubmed.open_pubmed"]], "pmids_dict() (in module pypath.inputs.pubmed)": [[269, "pypath.inputs.pubmed.pmids_dict"]], "pmids_list() (in module pypath.inputs.pubmed)": [[270, "pypath.inputs.pubmed.pmids_list"]], "pypath.inputs.rdata": [[271, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[272, "module-pypath.inputs.reaction"]], "acsn_biopax() (in module pypath.inputs.reaction)": [[273, "pypath.inputs.reaction.acsn_biopax"]], "acsn_interactions_2() (in module pypath.inputs.reaction)": [[274, "pypath.inputs.reaction.acsn_interactions_2"]], "get_acsn_effects() (in module pypath.inputs.reaction)": [[275, "pypath.inputs.reaction.get_acsn_effects"]], "get_controls() (in module pypath.inputs.reaction)": [[276, "pypath.inputs.reaction.get_controls"]], "get_interactions() (in module pypath.inputs.reaction)": [[277, "pypath.inputs.reaction.get_interactions"]], "get_reactions() (in module pypath.inputs.reaction)": [[278, "pypath.inputs.reaction.get_reactions"]], "get_soup() (in module pypath.inputs.reaction)": [[279, "pypath.inputs.reaction.get_soup"]], "panther_biopax() (in module pypath.inputs.reaction)": [[280, "pypath.inputs.reaction.panther_biopax"]], "panther_interactions() (in module pypath.inputs.reaction)": [[281, "pypath.inputs.reaction.panther_interactions"]], "pid_biopax() (in module pypath.inputs.reaction)": [[282, "pypath.inputs.reaction.pid_biopax"]], "pid_interactions() (in module pypath.inputs.reaction)": [[283, "pypath.inputs.reaction.pid_interactions"]], "process_complex() (in module pypath.inputs.reaction)": [[284, "pypath.inputs.reaction.process_complex"]], "process_controls() (in module pypath.inputs.reaction)": [[285, "pypath.inputs.reaction.process_controls"]], "process_reactions() (in module pypath.inputs.reaction)": [[286, "pypath.inputs.reaction.process_reactions"]], "reactions_biopax() (in module pypath.inputs.reaction)": [[287, "pypath.inputs.reaction.reactions_biopax"]], "reactome_biopax() (in module pypath.inputs.reaction)": [[288, "pypath.inputs.reaction.reactome_biopax"]], "reactome_bs() (in module pypath.inputs.reaction)": [[289, "pypath.inputs.reaction.reactome_bs"]], "reactome_interactions() (in module pypath.inputs.reaction)": [[290, "pypath.inputs.reaction.reactome_interactions"]], "reactome_sbml() (in module pypath.inputs.reaction)": [[291, "pypath.inputs.reaction.reactome_sbml"]], "pypath.inputs.reactome": [[292, "module-pypath.inputs.reactome"]], "reactome_chebis() (in module pypath.inputs.reactome)": [[293, "pypath.inputs.reactome.reactome_chebis"]], "reactome_pathway_relations() (in module pypath.inputs.reactome)": [[294, "pypath.inputs.reactome.reactome_pathway_relations"]], "reactome_pathways() (in module pypath.inputs.reactome)": [[295, "pypath.inputs.reactome.reactome_pathways"]], "reactome_uniprots() (in module pypath.inputs.reactome)": [[296, "pypath.inputs.reactome.reactome_uniprots"]], "pypath.inputs.science": [[297, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[298, "pypath.inputs.science.science_download"]], "pypath.inputs.sider": [[299, "module-pypath.inputs.sider"]], "siderdrug (class in pypath.inputs.sider)": [[300, "pypath.inputs.sider.SiderDrug"]], "__init__() (pypath.inputs.sider.siderdrug method)": [[300, "pypath.inputs.sider.SiderDrug.__init__"]], "atc (pypath.inputs.sider.siderdrug attribute)": [[300, "pypath.inputs.sider.SiderDrug.atc"]], "count() (pypath.inputs.sider.siderdrug method)": [[300, "pypath.inputs.sider.SiderDrug.count"]], "index() (pypath.inputs.sider.siderdrug method)": [[300, "pypath.inputs.sider.SiderDrug.index"]], "name (pypath.inputs.sider.siderdrug attribute)": [[300, "pypath.inputs.sider.SiderDrug.name"]], "sidersideeffect (class in pypath.inputs.sider)": [[301, "pypath.inputs.sider.SiderSideeffect"]], "__init__() (pypath.inputs.sider.sidersideeffect method)": [[301, "pypath.inputs.sider.SiderSideeffect.__init__"]], "count() (pypath.inputs.sider.sidersideeffect method)": [[301, "pypath.inputs.sider.SiderSideeffect.count"]], "index() (pypath.inputs.sider.sidersideeffect method)": [[301, "pypath.inputs.sider.SiderSideeffect.index"]], "side_effect (pypath.inputs.sider.sidersideeffect attribute)": [[301, "pypath.inputs.sider.SiderSideeffect.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffect attribute)": [[301, "pypath.inputs.sider.SiderSideeffect.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffect attribute)": [[301, "pypath.inputs.sider.SiderSideeffect.umls_concept_on_label"]], "sidersideeffectmeddra (class in pypath.inputs.sider)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra"]], "__init__() (pypath.inputs.sider.sidersideeffectmeddra method)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.__init__"]], "cid (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.cid"]], "count() (pypath.inputs.sider.sidersideeffectmeddra method)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.count"]], "index() (pypath.inputs.sider.sidersideeffectmeddra method)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.index"]], "meddra_id (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.meddra_id"]], "side_effect_name (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[302, "pypath.inputs.sider.SiderSideeffectMeddra.side_effect_name"]], "sidersideeffetfrequency (class in pypath.inputs.sider)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency"]], "__init__() (pypath.inputs.sider.sidersideeffetfrequency method)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.__init__"]], "count() (pypath.inputs.sider.sidersideeffetfrequency method)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.count"]], "frequency (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.frequency"]], "index() (pypath.inputs.sider.sidersideeffetfrequency method)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.index"]], "side_effect (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[303, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_on_label"]], "sider_drug_names() (in module pypath.inputs.sider)": [[304, "pypath.inputs.sider.sider_drug_names"]], "sider_meddra_side_effects() (in module pypath.inputs.sider)": [[305, "pypath.inputs.sider.sider_meddra_side_effects"]], "sider_side_effect_frequencies() (in module pypath.inputs.sider)": [[306, "pypath.inputs.sider.sider_side_effect_frequencies"]], "sider_side_effects() (in module pypath.inputs.sider)": [[307, "pypath.inputs.sider.sider_side_effects"]], "pypath.inputs.stitch": [[308, "module-pypath.inputs.stitch"]], "stitch_actions_interactions() (in module pypath.inputs.stitch)": [[309, "pypath.inputs.stitch.stitch_actions_interactions"]], "stitch_links_interactions() (in module pypath.inputs.stitch)": [[310, "pypath.inputs.stitch.stitch_links_interactions"]], "pypath.inputs.string": [[311, "module-pypath.inputs.string"]], "string_effects() (in module pypath.inputs.string)": [[312, "pypath.inputs.string.string_effects"]], "string_links_interactions() (in module pypath.inputs.string)": [[313, "pypath.inputs.string.string_links_interactions"]], "string_physical_interactions() (in module pypath.inputs.string)": [[314, "pypath.inputs.string.string_physical_interactions"]], "string_species() (in module pypath.inputs.string)": [[315, "pypath.inputs.string.string_species"]], "pypath.inputs.swisslipids": [[316, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[317, "module-pypath.inputs.switches_elm"]], "get_switches_elm() (in module pypath.inputs.switches_elm)": [[318, "pypath.inputs.switches_elm.get_switches_elm"]], "pypath.inputs.transmir": [[319, "module-pypath.inputs.transmir"]], "transmir_interactions() (in module pypath.inputs.transmir)": [[320, "pypath.inputs.transmir.transmir_interactions"]], "pypath.inputs.trip": [[321, "module-pypath.inputs.trip"]], "take_a_trip() (in module pypath.inputs.trip)": [[322, "pypath.inputs.trip.take_a_trip"]], "trip_find_uniprot() (in module pypath.inputs.trip)": [[323, "pypath.inputs.trip.trip_find_uniprot"]], "trip_get_uniprot() (in module pypath.inputs.trip)": [[324, "pypath.inputs.trip.trip_get_uniprot"]], "trip_interactions() (in module pypath.inputs.trip)": [[325, "pypath.inputs.trip.trip_interactions"]], "trip_process() (in module pypath.inputs.trip)": [[326, "pypath.inputs.trip.trip_process"]], "trip_process_table() (in module pypath.inputs.trip)": [[327, "pypath.inputs.trip.trip_process_table"]], "pypath.inputs.twosides": [[328, "module-pypath.inputs.twosides"]], "twosides_interactions() (in module pypath.inputs.twosides)": [[329, "pypath.inputs.twosides.twosides_interactions"]], "pypath.inputs.unichem": [[330, "module-pypath.inputs.unichem"]], "info() (in module pypath.inputs.unichem)": [[331, "pypath.inputs.unichem.info"]], "unichem_info() (in module pypath.inputs.unichem)": [[332, "pypath.inputs.unichem.unichem_info"]], "unichem_mapping() (in module pypath.inputs.unichem)": [[333, "pypath.inputs.unichem.unichem_mapping"]], "unichem_sources() (in module pypath.inputs.unichem)": [[334, "pypath.inputs.unichem.unichem_sources"]], "pypath.inputs.uniprot": [[335, "module-pypath.inputs.uniprot"]], "taxon (class in pypath.inputs.uniprot)": [[336, "pypath.inputs.uniprot.Taxon"]], "__init__() (pypath.inputs.uniprot.taxon method)": [[336, "pypath.inputs.uniprot.Taxon.__init__"]], "count() (pypath.inputs.uniprot.taxon method)": [[336, "pypath.inputs.uniprot.Taxon.count"]], "english (pypath.inputs.uniprot.taxon attribute)": [[336, "pypath.inputs.uniprot.Taxon.english"]], "index() (pypath.inputs.uniprot.taxon method)": [[336, "pypath.inputs.uniprot.Taxon.index"]], "latin (pypath.inputs.uniprot.taxon attribute)": [[336, "pypath.inputs.uniprot.Taxon.latin"]], "latin_synonym (pypath.inputs.uniprot.taxon attribute)": [[336, "pypath.inputs.uniprot.Taxon.latin_synonym"]], "ncbi_id (pypath.inputs.uniprot.taxon attribute)": [[336, "pypath.inputs.uniprot.Taxon.ncbi_id"]], "uniprotquery (class in pypath.inputs.uniprot)": [[337, "pypath.inputs.uniprot.UniprotQuery"]], "__init__() (pypath.inputs.uniprot.uniprotquery method)": [[337, "pypath.inputs.uniprot.UniprotQuery.__init__"]], "__iter__() (pypath.inputs.uniprot.uniprotquery method)": [[337, "pypath.inputs.uniprot.UniprotQuery.__iter__"]], "fail_on_empty (pypath.inputs.uniprot.uniprotquery attribute)": [[337, "pypath.inputs.uniprot.UniprotQuery.fail_on_empty"]], "name_process (pypath.inputs.uniprot.uniprotquery attribute)": [[337, "pypath.inputs.uniprot.UniprotQuery.name_process"]], "perform() (pypath.inputs.uniprot.uniprotquery method)": [[337, "pypath.inputs.uniprot.UniprotQuery.perform"]], "url (pypath.inputs.uniprot.uniprotquery property)": [[337, "pypath.inputs.uniprot.UniprotQuery.url"]], "url_plain (pypath.inputs.uniprot.uniprotquery property)": [[337, "pypath.inputs.uniprot.UniprotQuery.url_plain"]], "uniprotrecordhistory (class in pypath.inputs.uniprot)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory"]], "__init__() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.__init__"]], "count() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.count"]], "database (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.database"]], "date (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.date"]], "entry_name (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.entry_name"]], "entry_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.entry_version"]], "index() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.index"]], "number (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.number"]], "replaced_by (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.replaced_by"]], "replaces (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.replaces"]], "sequence_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[338, "pypath.inputs.uniprot.UniprotRecordHistory.sequence_version"]], "deleted_uniprot_genesymbol() (in module pypath.inputs.uniprot)": [[339, "pypath.inputs.uniprot.deleted_uniprot_genesymbol"]], "get_uniprot_sec() (in module pypath.inputs.uniprot)": [[340, "pypath.inputs.uniprot.get_uniprot_sec"]], "protein_datasheet() (in module pypath.inputs.uniprot)": [[341, "pypath.inputs.uniprot.protein_datasheet"]], "query_builder() (in module pypath.inputs.uniprot)": [[342, "pypath.inputs.uniprot.query_builder"]], "swissprot_deleted() (in module pypath.inputs.uniprot)": [[343, "pypath.inputs.uniprot.swissprot_deleted"]], "trembl_deleted() (in module pypath.inputs.uniprot)": [[344, "pypath.inputs.uniprot.trembl_deleted"]], "uniprot_data() (in module pypath.inputs.uniprot)": [[345, "pypath.inputs.uniprot.uniprot_data"]], "uniprot_deleted() (in module pypath.inputs.uniprot)": [[346, "pypath.inputs.uniprot.uniprot_deleted"]], "uniprot_families() (in module pypath.inputs.uniprot)": [[347, "pypath.inputs.uniprot.uniprot_families"]], "uniprot_history() (in module pypath.inputs.uniprot)": [[348, "pypath.inputs.uniprot.uniprot_history"]], "uniprot_history_recent_datasheet() (in module pypath.inputs.uniprot)": [[349, "pypath.inputs.uniprot.uniprot_history_recent_datasheet"]], "uniprot_keywords() (in module pypath.inputs.uniprot)": [[350, "pypath.inputs.uniprot.uniprot_keywords"]], "uniprot_locations() (in module pypath.inputs.uniprot)": [[351, "pypath.inputs.uniprot.uniprot_locations"]], "uniprot_ncbi_taxids() (in module pypath.inputs.uniprot)": [[352, "pypath.inputs.uniprot.uniprot_ncbi_taxids"]], "uniprot_ncbi_taxids_2() (in module pypath.inputs.uniprot)": [[353, "pypath.inputs.uniprot.uniprot_ncbi_taxids_2"]], "uniprot_preprocess() (in module pypath.inputs.uniprot)": [[354, "pypath.inputs.uniprot.uniprot_preprocess"]], "uniprot_query() (in module pypath.inputs.uniprot)": [[355, "pypath.inputs.uniprot.uniprot_query"]], "uniprot_recent_version() (in module pypath.inputs.uniprot)": [[356, "pypath.inputs.uniprot.uniprot_recent_version"]], "uniprot_taxonomy() (in module pypath.inputs.uniprot)": [[357, "pypath.inputs.uniprot.uniprot_taxonomy"]], "uniprot_tissues() (in module pypath.inputs.uniprot)": [[358, "pypath.inputs.uniprot.uniprot_tissues"]], "uniprot_topology() (in module pypath.inputs.uniprot)": [[359, "pypath.inputs.uniprot.uniprot_topology"]], "valid_uniprot() (in module pypath.inputs.uniprot)": [[360, "pypath.inputs.uniprot.valid_uniprot"]], "pypath.inputs.uniprot_db": [[361, "module-pypath.inputs.uniprot_db"]], "all_swissprots() (in module pypath.inputs.uniprot_db)": [[362, "pypath.inputs.uniprot_db.all_swissprots"]], "all_trembls() (in module pypath.inputs.uniprot_db)": [[363, "pypath.inputs.uniprot_db.all_trembls"]], "all_uniprots() (in module pypath.inputs.uniprot_db)": [[364, "pypath.inputs.uniprot_db.all_uniprots"]], "get_db() (in module pypath.inputs.uniprot_db)": [[365, "pypath.inputs.uniprot_db.get_db"]], "init_db() (in module pypath.inputs.uniprot_db)": [[366, "pypath.inputs.uniprot_db.init_db"]], "is_swissprot() (in module pypath.inputs.uniprot_db)": [[367, "pypath.inputs.uniprot_db.is_swissprot"]], "is_trembl() (in module pypath.inputs.uniprot_db)": [[368, "pypath.inputs.uniprot_db.is_trembl"]], "is_uniprot() (in module pypath.inputs.uniprot_db)": [[369, "pypath.inputs.uniprot_db.is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[370, "module-pypath.inputs.uniprot_idmapping"]], "idtypes() (in module pypath.inputs.uniprot_idmapping)": [[371, "pypath.inputs.uniprot_idmapping.idtypes"]], "pypath.internals": [[372, "module-pypath.internals"]], "pypath.internals.input_formats": [[373, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[374, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[374, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[375, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[375, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[376, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[376, "pypath.internals.input_formats.FileMapping.__init__"]], "hmdbmapping (class in pypath.internals.input_formats)": [[377, "pypath.internals.input_formats.HmdbMapping"]], "__init__() (pypath.internals.input_formats.hmdbmapping method)": [[377, "pypath.internals.input_formats.HmdbMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[378, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[378, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[379, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[379, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[380, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[380, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[381, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[381, "pypath.internals.input_formats.ProMapping.__init__"]], "rampmapping (class in pypath.internals.input_formats)": [[382, "pypath.internals.input_formats.RampMapping"]], "__init__() (pypath.internals.input_formats.rampmapping method)": [[382, "pypath.internals.input_formats.RampMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[383, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[383, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[384, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[384, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[385, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[385, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[386, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[386, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[386, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[387, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[388, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[388, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[388, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[389, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[389, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[389, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[389, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[389, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[389, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[390, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[390, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[390, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[390, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[390, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[390, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[391, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[391, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[391, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[391, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[391, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[391, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[392, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[392, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[392, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[392, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[392, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[392, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[393, "module-pypath.internals.maps"]], "pypath.internals.refs": [[394, "module-pypath.internals.refs"]], "reference (class in pypath.internals.refs)": [[395, "pypath.internals.refs.Reference"]], "__init__() (pypath.internals.refs.reference method)": [[395, "pypath.internals.refs.Reference.__init__"]], "get_pubmed_data() (in module pypath.internals.refs)": [[396, "pypath.internals.refs.get_pubmed_data"]], "pypath.internals.resource": [[397, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[398, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[398, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[398, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[398, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[398, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[399, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[399, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[399, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[400, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkdataset (class in pypath.internals.resource)": [[401, "pypath.internals.resource.NetworkDataset"]], "__init__() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.__init__"]], "clear() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.clear"]], "get() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.get"]], "items() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.items"]], "keys() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.keys"]], "pop() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.pop"]], "popitem() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.popitem"]], "setdefault() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.setdefault"]], "update() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.update"]], "values() (pypath.internals.resource.networkdataset method)": [[401, "pypath.internals.resource.NetworkDataset.values"]], "networkresource (class in pypath.internals.resource)": [[402, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[402, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[403, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[403, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[403, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[403, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[403, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[403, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[403, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[403, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[403, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[403, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[403, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[404, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[404, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[405, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[406, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[407, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[408, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[409, "pypath.log"]], "pypath.resources": [[410, "module-pypath.resources"]], "pypath.resources.controller": [[411, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[412, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.__init__"]], "add_resource_attrs() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.add_resource_attrs"]], "collect_interaction() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.collect_interaction"]], "collect_network() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.collect_network"]], "license_filter() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.license_filter"]], "secondary_resources() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.secondary_resources"]], "update() (pypath.resources.controller.resourcecontroller method)": [[412, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[413, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[414, "module-pypath.resources.data_formats"]], "activity_flow (in module pypath.resources.data_formats)": [[415, "pypath.resources.data_formats.activity_flow"]], "enzyme_substrate (in module pypath.resources.data_formats)": [[416, "pypath.resources.data_formats.enzyme_substrate"]], "interaction (in module pypath.resources.data_formats)": [[417, "pypath.resources.data_formats.interaction"]], "interaction_htp (in module pypath.resources.data_formats)": [[418, "pypath.resources.data_formats.interaction_htp"]], "pathway_bad (in module pypath.resources.data_formats)": [[419, "pypath.resources.data_formats.pathway_bad"]], "reaction_pc (in module pypath.resources.data_formats)": [[420, "pypath.resources.data_formats.reaction_pc"]], "transcription_deprecated (in module pypath.resources.data_formats)": [[421, "pypath.resources.data_formats.transcription_deprecated"]], "transcription_onebyone (in module pypath.resources.data_formats)": [[422, "pypath.resources.data_formats.transcription_onebyone"]], "get_controller() (in module pypath.resources)": [[423, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[424, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[425, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[425, "pypath.resources.licenses.Licenses.__init__"]], "pypath.resources.network": [[426, "module-pypath.resources.network"]], "pypath.resources.urls": [[427, "module-pypath.resources.urls"]], "pypath.share": [[428, "module-pypath.share"]], "pypath.share.cache": [[429, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[430, "pypath.share.cache.cache_item"]], "cache_path() (in module pypath.share.cache)": [[431, "pypath.share.cache.cache_path"]], "get_cachedir() (in module pypath.share.cache)": [[432, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[433, "module-pypath.share.common"]], "pypath.share.constants": [[434, "module-pypath.share.constants"]], "pypath.share.curl": [[435, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[436, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.__init__"]], "cache_path() (pypath.share.curl.curl class method)": [[436, "pypath.share.curl.Curl.cache_path"]], "close() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[436, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[436, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[437, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[437, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[437, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[437, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[437, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[438, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[438, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[439, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[439, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[440, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[440, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[441, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[441, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[442, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[442, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[443, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[443, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[444, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[444, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[445, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[445, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[446, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[446, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[447, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[447, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[448, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[448, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[449, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[450, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[450, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[451, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[451, "pypath.share.curl.preserve_on"]], "pypath.share.progress": [[452, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[453, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[453, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[454, "module-pypath.share.session"]], "pypath.share.settings": [[455, "module-pypath.share.settings"]], "pypath.visual": [[456, "module-pypath.visual"]], "pypath.visual.drawing": [[457, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[458, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[458, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[458, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[459, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[459, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[460, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[461, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[461, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[462, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[463, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[463, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[464, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[465, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[466, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[467, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[473, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[474, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[474, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[475, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[475, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[475, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[476, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[476, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[477, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[477, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[477, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[478, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[478, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[478, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})