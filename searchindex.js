Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.abs", "api/pypath.inputs.abs.abs_interactions", "api/pypath.inputs.acsn", "api/pypath.inputs.acsn.acsn_interactions", "api/pypath.inputs.acsn.acsn_interactions_sif", "api/pypath.inputs.adrecs", "api/pypath.inputs.adrecs.AdrecsAdr", "api/pypath.inputs.adrecs.AdrecsChildParent", "api/pypath.inputs.adrecs.AdrecsDrug", "api/pypath.inputs.adrecs.AdrecsDrugAdr", "api/pypath.inputs.adrecs.AdrecsTerm", "api/pypath.inputs.adrecs.adrecs_adr_ontology", "api/pypath.inputs.adrecs.adrecs_drug_adr", "api/pypath.inputs.adrecs.adrecs_drug_identifiers", "api/pypath.inputs.adrecs.adrecs_hierarchy", "api/pypath.inputs.biogrid", "api/pypath.inputs.biogrid.biogrid_all_interactions", "api/pypath.inputs.biogrid.biogrid_interactions", "api/pypath.inputs.biomart", "api/pypath.inputs.biomart.biomart_homology", "api/pypath.inputs.biomart.biomart_microarray", "api/pypath.inputs.biomart.biomart_microarray_types", "api/pypath.inputs.biomart.biomart_microarrays", "api/pypath.inputs.biomart.biomart_query", "api/pypath.inputs.biomodels", "api/pypath.inputs.biomodels.download_single_model", "api/pypath.inputs.biomodels.get_all_models", "api/pypath.inputs.biomodels.get_biomodels", "api/pypath.inputs.biomodels.get_biomodels_req", "api/pypath.inputs.biomodels.get_single_model", "api/pypath.inputs.ca1", "api/pypath.inputs.ca1.ca1_interactions", "api/pypath.inputs.cancercellmap", "api/pypath.inputs.cancercellmap.ccmap_interactions", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.chembl", "api/pypath.inputs.chembl.chembl_activities", "api/pypath.inputs.chembl.chembl_assays", "api/pypath.inputs.chembl.chembl_documents", "api/pypath.inputs.chembl.chembl_drug_indications", "api/pypath.inputs.chembl.chembl_mechanisms", "api/pypath.inputs.chembl.chembl_molecules", "api/pypath.inputs.chembl.chembl_targets", "api/pypath.inputs.clinvar", "api/pypath.inputs.clinvar.clinvar_citations", "api/pypath.inputs.clinvar.clinvar_raw", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.compath", "api/pypath.inputs.compath.compath_mappings", "api/pypath.inputs.cpdb", "api/pypath.inputs.cpdb.cpdb_interactions", "api/pypath.inputs.cpdb.cpdb_interactions_ltp", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ctdbase", "api/pypath.inputs.ctdbase.ctdbase_relations", "api/pypath.inputs.ctdbase.ctdbase_vocabulary", "api/pypath.inputs.ddinter", "api/pypath.inputs.ddinter.ddinter_drug_interactions", "api/pypath.inputs.ddinter.ddinter_identifiers", "api/pypath.inputs.ddinter.ddinter_interactions", "api/pypath.inputs.ddinter.ddinter_mappings", "api/pypath.inputs.ddinter.ddinter_n_drugs", "api/pypath.inputs.deathdomain", "api/pypath.inputs.deathdomain.deathdomain_interactions", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued", "api/pypath.inputs.dip", "api/pypath.inputs.dip.dip_interactions", "api/pypath.inputs.dip.dip_login", "api/pypath.inputs.diseases", "api/pypath.inputs.diseases.diseases_general", "api/pypath.inputs.diseases.experiments_filtered", "api/pypath.inputs.diseases.experiments_full", "api/pypath.inputs.diseases.knowledge_filtered", "api/pypath.inputs.diseases.knowledge_full", "api/pypath.inputs.diseases.textmining_filtered", "api/pypath.inputs.diseases.textmining_full", "api/pypath.inputs.drugbank", "api/pypath.inputs.drugbank.DrugbankFull", "api/pypath.inputs.drugbank.drugbank_annotations", "api/pypath.inputs.drugbank.drugbank_drugs", "api/pypath.inputs.drugbank.drugbank_interactions", "api/pypath.inputs.drugbank.drugbank_mapping", "api/pypath.inputs.drugbank.drugbank_raw_interactions", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.elm", "api/pypath.inputs.elm.elm_classes", "api/pypath.inputs.elm.elm_domains", "api/pypath.inputs.elm.elm_instances", "api/pypath.inputs.elm.elm_interactions", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.encode", "api/pypath.inputs.encode.encode_tf_mirna_interactions", "api/pypath.inputs.ensembl", "api/pypath.inputs.ensembl.ensembl_organisms", "api/pypath.inputs.eutils", "api/pypath.inputs.eutils.esummary", "api/pypath.inputs.expasy", "api/pypath.inputs.expasy.expasy_enzyme_classes", "api/pypath.inputs.expasy.expasy_enzymes", "api/pypath.inputs.genecards", "api/pypath.inputs.genecards.genecards_datasheet", "api/pypath.inputs.genecards.genecards_soup", "api/pypath.inputs.genecards.genecards_summaries", "api/pypath.inputs.get_method", "api/pypath.inputs.graphviz", "api/pypath.inputs.graphviz.graphviz_attrs", "api/pypath.inputs.hprd", "api/pypath.inputs.hprd.get_hprd", "api/pypath.inputs.hprd.hprd_enzyme_substrate", "api/pypath.inputs.hprd.hprd_interactions", "api/pypath.inputs.hprd.hprd_interactions_htp", "api/pypath.inputs.htri", "api/pypath.inputs.htri.htri_interactions", "api/pypath.inputs.humsavar", "api/pypath.inputs.humsavar.uniprot_variants", "api/pypath.inputs.ielm", "api/pypath.inputs.ielm.get_ielm", "api/pypath.inputs.ielm.get_ielm_huge", "api/pypath.inputs.imweb", "api/pypath.inputs.imweb.get_imweb", "api/pypath.inputs.imweb.get_imweb_req", "api/pypath.inputs.innatedb", "api/pypath.inputs.innatedb.innatedb_interactions", "api/pypath.inputs.instruct", "api/pypath.inputs.instruct.get_instruct", "api/pypath.inputs.instruct.get_instruct_offsets", "api/pypath.inputs.intact", "api/pypath.inputs.intact.intact_interactions", "api/pypath.inputs.interpro", "api/pypath.inputs.interpro.interpro2go_annotations", "api/pypath.inputs.interpro.interpro_annotations", "api/pypath.inputs.interpro.interpro_entries", "api/pypath.inputs.interpro.interpro_xrefs", "api/pypath.inputs.ipi", "api/pypath.inputs.ipi.ipi_uniprot", "api/pypath.inputs.kegg_api", "api/pypath.inputs.kegg_api.disease_to_drug", "api/pypath.inputs.kegg_api.disease_to_gene", "api/pypath.inputs.kegg_api.disease_to_pathway", "api/pypath.inputs.kegg_api.drug_to_disease", "api/pypath.inputs.kegg_api.drug_to_drug", "api/pypath.inputs.kegg_api.drug_to_gene", "api/pypath.inputs.kegg_api.drug_to_pathway", "api/pypath.inputs.kegg_api.gene_to_disease", "api/pypath.inputs.kegg_api.gene_to_drug", "api/pypath.inputs.kegg_api.gene_to_pathway", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot", "api/pypath.inputs.kegg_api.pathway_to_disease", "api/pypath.inputs.kegg_api.pathway_to_drug", "api/pypath.inputs.kegg_api.pathway_to_gene", "api/pypath.inputs.kirouac2010", "api/pypath.inputs.kirouac2010.kirouac2010_interactions", "api/pypath.inputs.laudanna", "api/pypath.inputs.laudanna.laudanna_directions", "api/pypath.inputs.laudanna.laudanna_effects", "api/pypath.inputs.lincs", "api/pypath.inputs.lincs.lincs_compounds", "api/pypath.inputs.macrophage", "api/pypath.inputs.macrophage.macrophage_interactions", "api/pypath.inputs.main", "api/pypath.inputs.mimp", "api/pypath.inputs.mimp.get_kinase_class", "api/pypath.inputs.mimp.mimp_enzyme_substrate", "api/pypath.inputs.mimp.mimp_interactions", "api/pypath.inputs.mir2disease", "api/pypath.inputs.mir2disease.mir2disease_interactions", "api/pypath.inputs.mirdeathdb", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.mppi", "api/pypath.inputs.mppi.mppi_interactions", "api/pypath.inputs.ncrdeathdb", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "api/pypath.inputs.negatome", "api/pypath.inputs.negatome.negatome_interactions", "api/pypath.inputs.netbiol", "api/pypath.inputs.netbiol.arn_interactions", "api/pypath.inputs.netbiol.nrf2ome_interactions", "api/pypath.inputs.offsides", "api/pypath.inputs.offsides.offsides_side_effects", "api/pypath.inputs.ontology", "api/pypath.inputs.ontology.listof_ontologies", "api/pypath.inputs.ontology.ontology", "api/pypath.inputs.opentargets", "api/pypath.inputs.opentargets.opentargets_adverse_reactions", "api/pypath.inputs.opentargets.opentargets_baseline_expression", "api/pypath.inputs.opentargets.opentargets_direct_score", "api/pypath.inputs.opentargets.opentargets_general", "api/pypath.inputs.opentargets.opentargets_indirect_score", "api/pypath.inputs.pathophenodb", "api/pypath.inputs.pathophenodb.DiseasePathogen", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions", "api/pypath.inputs.pathwaycommons", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "api/pypath.inputs.pazar", "api/pypath.inputs.pazar.pazar_interactions", "api/pypath.inputs.pepcyber", "api/pypath.inputs.pepcyber.pepcyber_details", "api/pypath.inputs.pepcyber.pepcyber_interactions", "api/pypath.inputs.pharos", "api/pypath.inputs.pharos.pharos_diseases", "api/pypath.inputs.pharos.pharos_expression", "api/pypath.inputs.pharos.pharos_general", "api/pypath.inputs.pharos.pharos_gtex", "api/pypath.inputs.pharos.pharos_ligands", "api/pypath.inputs.pharos.pharos_orthologs", "api/pypath.inputs.pharos.pharos_targets", "api/pypath.inputs.pharos.pharos_xrefs", "api/pypath.inputs.phobius", "api/pypath.inputs.phobius.phobius_annotations", "api/pypath.inputs.phosphonetworks", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions", "api/pypath.inputs.phosphopoint", "api/pypath.inputs.phosphopoint.phosphopoint_directions", "api/pypath.inputs.phosphopoint.phosphopoint_interactions", "api/pypath.inputs.pro", "api/pypath.inputs.pro.get_pro", "api/pypath.inputs.pro.pro_mapping", "api/pypath.inputs.protmapper", "api/pypath.inputs.protmapper.get_protmapper", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate", "api/pypath.inputs.protmapper.protmapper_interactions", "api/pypath.inputs.pubchem", "api/pypath.inputs.pubchem.pubchem_mapping", "api/pypath.inputs.pubmed", "api/pypath.inputs.pubmed.get_pmid", "api/pypath.inputs.pubmed.get_pubmeds", "api/pypath.inputs.pubmed.only_pmids", "api/pypath.inputs.pubmed.open_pubmed", "api/pypath.inputs.pubmed.pmids_dict", "api/pypath.inputs.pubmed.pmids_list", "api/pypath.inputs.ramp", "api/pypath.inputs.ramp.ramp_id_types", "api/pypath.inputs.ramp.ramp_id_types_2", "api/pypath.inputs.ramp.ramp_list_tables", "api/pypath.inputs.ramp.ramp_mapping", "api/pypath.inputs.ramp.ramp_raw", "api/pypath.inputs.ramp.ramp_show_tables", "api/pypath.inputs.rdata", "api/pypath.inputs.reaction", "api/pypath.inputs.reaction.acsn_biopax", "api/pypath.inputs.reaction.acsn_interactions_2", "api/pypath.inputs.reaction.get_acsn_effects", "api/pypath.inputs.reaction.get_controls", "api/pypath.inputs.reaction.get_interactions", "api/pypath.inputs.reaction.get_reactions", "api/pypath.inputs.reaction.get_soup", "api/pypath.inputs.reaction.panther_biopax", "api/pypath.inputs.reaction.panther_interactions", "api/pypath.inputs.reaction.pid_biopax", "api/pypath.inputs.reaction.pid_interactions", "api/pypath.inputs.reaction.process_complex", "api/pypath.inputs.reaction.process_controls", "api/pypath.inputs.reaction.process_reactions", "api/pypath.inputs.reaction.reactions_biopax", "api/pypath.inputs.reaction.reactome_biopax", "api/pypath.inputs.reaction.reactome_bs", "api/pypath.inputs.reaction.reactome_interactions", "api/pypath.inputs.reaction.reactome_sbml", "api/pypath.inputs.reactome", "api/pypath.inputs.reactome.reactome_chebis", "api/pypath.inputs.reactome.reactome_pathway_relations", "api/pypath.inputs.reactome.reactome_pathways", "api/pypath.inputs.reactome.reactome_uniprots", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.inputs.sider", "api/pypath.inputs.sider.SiderDrug", "api/pypath.inputs.sider.SiderSideeffect", "api/pypath.inputs.sider.SiderSideeffectMeddra", "api/pypath.inputs.sider.SiderSideeffetFrequency", "api/pypath.inputs.sider.sider_drug_names", "api/pypath.inputs.sider.sider_meddra_side_effects", "api/pypath.inputs.sider.sider_side_effect_frequencies", "api/pypath.inputs.sider.sider_side_effects", "api/pypath.inputs.stitch", "api/pypath.inputs.stitch.stitch_actions_interactions", "api/pypath.inputs.stitch.stitch_links_interactions", "api/pypath.inputs.string", "api/pypath.inputs.string.string_effects", "api/pypath.inputs.string.string_links_interactions", "api/pypath.inputs.string.string_physical_interactions", "api/pypath.inputs.string.string_species", "api/pypath.inputs.switches_elm", "api/pypath.inputs.switches_elm.get_switches_elm", "api/pypath.inputs.transmir", "api/pypath.inputs.transmir.transmir_interactions", "api/pypath.inputs.trip", "api/pypath.inputs.trip.take_a_trip", "api/pypath.inputs.trip.trip_find_uniprot", "api/pypath.inputs.trip.trip_get_uniprot", "api/pypath.inputs.trip.trip_interactions", "api/pypath.inputs.trip.trip_process", "api/pypath.inputs.trip.trip_process_table", "api/pypath.inputs.twosides", "api/pypath.inputs.twosides.twosides_interactions", "api/pypath.inputs.unichem", "api/pypath.inputs.unichem.info", "api/pypath.inputs.unichem.unichem_info", "api/pypath.inputs.unichem.unichem_mapping", "api/pypath.inputs.unichem.unichem_sources", "api/pypath.inputs.uniprot", "api/pypath.inputs.uniprot.Taxon", "api/pypath.inputs.uniprot.UniprotQuery", "api/pypath.inputs.uniprot.UniprotRecordHistory", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol", "api/pypath.inputs.uniprot.get_uniprot_sec", "api/pypath.inputs.uniprot.protein_datasheet", "api/pypath.inputs.uniprot.query_builder", "api/pypath.inputs.uniprot.swissprot_deleted", "api/pypath.inputs.uniprot.trembl_deleted", "api/pypath.inputs.uniprot.uniprot_data", "api/pypath.inputs.uniprot.uniprot_deleted", "api/pypath.inputs.uniprot.uniprot_families", "api/pypath.inputs.uniprot.uniprot_history", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet", "api/pypath.inputs.uniprot.uniprot_keywords", "api/pypath.inputs.uniprot.uniprot_locations", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "api/pypath.inputs.uniprot.uniprot_preprocess", "api/pypath.inputs.uniprot.uniprot_query", "api/pypath.inputs.uniprot.uniprot_recent_version", "api/pypath.inputs.uniprot.uniprot_taxonomy", "api/pypath.inputs.uniprot.uniprot_tissues", "api/pypath.inputs.uniprot.uniprot_topology", "api/pypath.inputs.uniprot.valid_uniprot", "api/pypath.inputs.uniprot_db", "api/pypath.inputs.uniprot_db.all_swissprots", "api/pypath.inputs.uniprot_db.all_trembls", "api/pypath.inputs.uniprot_db.all_uniprots", "api/pypath.inputs.uniprot_db.get_db", "api/pypath.inputs.uniprot_db.init_db", "api/pypath.inputs.uniprot_db.is_swissprot", "api/pypath.inputs.uniprot_db.is_trembl", "api/pypath.inputs.uniprot_db.is_uniprot", "api/pypath.inputs.uniprot_idmapping", "api/pypath.inputs.uniprot_idmapping.idtypes", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.HmdbMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.RampMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.refs", "api/pypath.internals.refs.Reference", "api/pypath.internals.refs.get_pubmed_data", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkDataset", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.data_formats", "api/pypath.resources.data_formats.activity_flow", "api/pypath.resources.data_formats.enzyme_substrate", "api/pypath.resources.data_formats.interaction", "api/pypath.resources.data_formats.interaction_htp", "api/pypath.resources.data_formats.pathway_bad", "api/pypath.resources.data_formats.reaction_pc", "api/pypath.resources.data_formats.transcription_deprecated", "api/pypath.resources.data_formats.transcription_onebyone", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.resources.network", "api/pypath.resources.urls", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.cache_path", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.settings", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.abs.rst", "api/pypath.inputs.abs.abs_interactions.rst", "api/pypath.inputs.acsn.rst", "api/pypath.inputs.acsn.acsn_interactions.rst", "api/pypath.inputs.acsn.acsn_interactions_sif.rst", "api/pypath.inputs.adrecs.rst", "api/pypath.inputs.adrecs.AdrecsAdr.rst", "api/pypath.inputs.adrecs.AdrecsChildParent.rst", "api/pypath.inputs.adrecs.AdrecsDrug.rst", "api/pypath.inputs.adrecs.AdrecsDrugAdr.rst", "api/pypath.inputs.adrecs.AdrecsTerm.rst", "api/pypath.inputs.adrecs.adrecs_adr_ontology.rst", "api/pypath.inputs.adrecs.adrecs_drug_adr.rst", "api/pypath.inputs.adrecs.adrecs_drug_identifiers.rst", "api/pypath.inputs.adrecs.adrecs_hierarchy.rst", "api/pypath.inputs.biogrid.rst", "api/pypath.inputs.biogrid.biogrid_all_interactions.rst", "api/pypath.inputs.biogrid.biogrid_interactions.rst", "api/pypath.inputs.biomart.rst", "api/pypath.inputs.biomart.biomart_homology.rst", "api/pypath.inputs.biomart.biomart_microarray.rst", "api/pypath.inputs.biomart.biomart_microarray_types.rst", "api/pypath.inputs.biomart.biomart_microarrays.rst", "api/pypath.inputs.biomart.biomart_query.rst", "api/pypath.inputs.biomodels.rst", "api/pypath.inputs.biomodels.download_single_model.rst", "api/pypath.inputs.biomodels.get_all_models.rst", "api/pypath.inputs.biomodels.get_biomodels.rst", "api/pypath.inputs.biomodels.get_biomodels_req.rst", "api/pypath.inputs.biomodels.get_single_model.rst", "api/pypath.inputs.ca1.rst", "api/pypath.inputs.ca1.ca1_interactions.rst", "api/pypath.inputs.cancercellmap.rst", "api/pypath.inputs.cancercellmap.ccmap_interactions.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.chembl.rst", "api/pypath.inputs.chembl.chembl_activities.rst", "api/pypath.inputs.chembl.chembl_assays.rst", "api/pypath.inputs.chembl.chembl_documents.rst", "api/pypath.inputs.chembl.chembl_drug_indications.rst", "api/pypath.inputs.chembl.chembl_mechanisms.rst", "api/pypath.inputs.chembl.chembl_molecules.rst", "api/pypath.inputs.chembl.chembl_targets.rst", "api/pypath.inputs.clinvar.rst", "api/pypath.inputs.clinvar.clinvar_citations.rst", "api/pypath.inputs.clinvar.clinvar_raw.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.compath.rst", "api/pypath.inputs.compath.compath_mappings.rst", "api/pypath.inputs.cpdb.rst", "api/pypath.inputs.cpdb.cpdb_interactions.rst", "api/pypath.inputs.cpdb.cpdb_interactions_ltp.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ctdbase.rst", "api/pypath.inputs.ctdbase.ctdbase_relations.rst", "api/pypath.inputs.ctdbase.ctdbase_vocabulary.rst", "api/pypath.inputs.ddinter.rst", "api/pypath.inputs.ddinter.ddinter_drug_interactions.rst", "api/pypath.inputs.ddinter.ddinter_identifiers.rst", "api/pypath.inputs.ddinter.ddinter_interactions.rst", "api/pypath.inputs.ddinter.ddinter_mappings.rst", "api/pypath.inputs.ddinter.ddinter_n_drugs.rst", "api/pypath.inputs.deathdomain.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued.rst", "api/pypath.inputs.dip.rst", "api/pypath.inputs.dip.dip_interactions.rst", "api/pypath.inputs.dip.dip_login.rst", "api/pypath.inputs.diseases.rst", "api/pypath.inputs.diseases.diseases_general.rst", "api/pypath.inputs.diseases.experiments_filtered.rst", "api/pypath.inputs.diseases.experiments_full.rst", "api/pypath.inputs.diseases.knowledge_filtered.rst", "api/pypath.inputs.diseases.knowledge_full.rst", "api/pypath.inputs.diseases.textmining_filtered.rst", "api/pypath.inputs.diseases.textmining_full.rst", "api/pypath.inputs.drugbank.rst", "api/pypath.inputs.drugbank.DrugbankFull.rst", "api/pypath.inputs.drugbank.drugbank_annotations.rst", "api/pypath.inputs.drugbank.drugbank_drugs.rst", "api/pypath.inputs.drugbank.drugbank_interactions.rst", "api/pypath.inputs.drugbank.drugbank_mapping.rst", "api/pypath.inputs.drugbank.drugbank_raw_interactions.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.elm.rst", "api/pypath.inputs.elm.elm_classes.rst", "api/pypath.inputs.elm.elm_domains.rst", "api/pypath.inputs.elm.elm_instances.rst", "api/pypath.inputs.elm.elm_interactions.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.encode.rst", "api/pypath.inputs.encode.encode_tf_mirna_interactions.rst", "api/pypath.inputs.ensembl.rst", "api/pypath.inputs.ensembl.ensembl_organisms.rst", "api/pypath.inputs.eutils.rst", "api/pypath.inputs.eutils.esummary.rst", "api/pypath.inputs.expasy.rst", "api/pypath.inputs.expasy.expasy_enzyme_classes.rst", "api/pypath.inputs.expasy.expasy_enzymes.rst", "api/pypath.inputs.genecards.rst", "api/pypath.inputs.genecards.genecards_datasheet.rst", "api/pypath.inputs.genecards.genecards_soup.rst", "api/pypath.inputs.genecards.genecards_summaries.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.graphviz.rst", "api/pypath.inputs.graphviz.graphviz_attrs.rst", "api/pypath.inputs.hprd.rst", "api/pypath.inputs.hprd.get_hprd.rst", "api/pypath.inputs.hprd.hprd_enzyme_substrate.rst", "api/pypath.inputs.hprd.hprd_interactions.rst", "api/pypath.inputs.hprd.hprd_interactions_htp.rst", "api/pypath.inputs.htri.rst", "api/pypath.inputs.htri.htri_interactions.rst", "api/pypath.inputs.humsavar.rst", "api/pypath.inputs.humsavar.uniprot_variants.rst", "api/pypath.inputs.ielm.rst", "api/pypath.inputs.ielm.get_ielm.rst", "api/pypath.inputs.ielm.get_ielm_huge.rst", "api/pypath.inputs.imweb.rst", "api/pypath.inputs.imweb.get_imweb.rst", "api/pypath.inputs.imweb.get_imweb_req.rst", "api/pypath.inputs.innatedb.rst", "api/pypath.inputs.innatedb.innatedb_interactions.rst", "api/pypath.inputs.instruct.rst", "api/pypath.inputs.instruct.get_instruct.rst", "api/pypath.inputs.instruct.get_instruct_offsets.rst", "api/pypath.inputs.intact.rst", "api/pypath.inputs.intact.intact_interactions.rst", "api/pypath.inputs.interpro.rst", "api/pypath.inputs.interpro.interpro2go_annotations.rst", "api/pypath.inputs.interpro.interpro_annotations.rst", "api/pypath.inputs.interpro.interpro_entries.rst", "api/pypath.inputs.interpro.interpro_xrefs.rst", "api/pypath.inputs.ipi.rst", "api/pypath.inputs.ipi.ipi_uniprot.rst", "api/pypath.inputs.kegg_api.rst", "api/pypath.inputs.kegg_api.disease_to_drug.rst", "api/pypath.inputs.kegg_api.disease_to_gene.rst", "api/pypath.inputs.kegg_api.disease_to_pathway.rst", "api/pypath.inputs.kegg_api.drug_to_disease.rst", "api/pypath.inputs.kegg_api.drug_to_drug.rst", "api/pypath.inputs.kegg_api.drug_to_gene.rst", "api/pypath.inputs.kegg_api.drug_to_pathway.rst", "api/pypath.inputs.kegg_api.gene_to_disease.rst", "api/pypath.inputs.kegg_api.gene_to_drug.rst", "api/pypath.inputs.kegg_api.gene_to_pathway.rst", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot.rst", "api/pypath.inputs.kegg_api.pathway_to_disease.rst", "api/pypath.inputs.kegg_api.pathway_to_drug.rst", "api/pypath.inputs.kegg_api.pathway_to_gene.rst", "api/pypath.inputs.kirouac2010.rst", "api/pypath.inputs.kirouac2010.kirouac2010_interactions.rst", "api/pypath.inputs.laudanna.rst", "api/pypath.inputs.laudanna.laudanna_directions.rst", "api/pypath.inputs.laudanna.laudanna_effects.rst", "api/pypath.inputs.lincs.rst", "api/pypath.inputs.lincs.lincs_compounds.rst", "api/pypath.inputs.macrophage.rst", "api/pypath.inputs.macrophage.macrophage_interactions.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mimp.rst", "api/pypath.inputs.mimp.get_kinase_class.rst", "api/pypath.inputs.mimp.mimp_enzyme_substrate.rst", "api/pypath.inputs.mimp.mimp_interactions.rst", "api/pypath.inputs.mir2disease.rst", "api/pypath.inputs.mir2disease.mir2disease_interactions.rst", "api/pypath.inputs.mirdeathdb.rst", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.mppi.rst", "api/pypath.inputs.mppi.mppi_interactions.rst", "api/pypath.inputs.ncrdeathdb.rst", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions.rst", "api/pypath.inputs.negatome.rst", "api/pypath.inputs.negatome.negatome_interactions.rst", "api/pypath.inputs.netbiol.rst", "api/pypath.inputs.netbiol.arn_interactions.rst", "api/pypath.inputs.netbiol.nrf2ome_interactions.rst", "api/pypath.inputs.offsides.rst", "api/pypath.inputs.offsides.offsides_side_effects.rst", "api/pypath.inputs.ontology.rst", "api/pypath.inputs.ontology.listof_ontologies.rst", "api/pypath.inputs.ontology.ontology.rst", "api/pypath.inputs.opentargets.rst", "api/pypath.inputs.opentargets.opentargets_adverse_reactions.rst", "api/pypath.inputs.opentargets.opentargets_baseline_expression.rst", "api/pypath.inputs.opentargets.opentargets_direct_score.rst", "api/pypath.inputs.opentargets.opentargets_general.rst", "api/pypath.inputs.opentargets.opentargets_indirect_score.rst", "api/pypath.inputs.pathophenodb.rst", "api/pypath.inputs.pathophenodb.DiseasePathogen.rst", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions.rst", "api/pypath.inputs.pathwaycommons.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions.rst", "api/pypath.inputs.pazar.rst", "api/pypath.inputs.pazar.pazar_interactions.rst", "api/pypath.inputs.pepcyber.rst", "api/pypath.inputs.pepcyber.pepcyber_details.rst", "api/pypath.inputs.pepcyber.pepcyber_interactions.rst", "api/pypath.inputs.pharos.rst", "api/pypath.inputs.pharos.pharos_diseases.rst", "api/pypath.inputs.pharos.pharos_expression.rst", "api/pypath.inputs.pharos.pharos_general.rst", "api/pypath.inputs.pharos.pharos_gtex.rst", "api/pypath.inputs.pharos.pharos_ligands.rst", "api/pypath.inputs.pharos.pharos_orthologs.rst", "api/pypath.inputs.pharos.pharos_targets.rst", "api/pypath.inputs.pharos.pharos_xrefs.rst", "api/pypath.inputs.phobius.rst", "api/pypath.inputs.phobius.phobius_annotations.rst", "api/pypath.inputs.phosphonetworks.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions.rst", "api/pypath.inputs.phosphopoint.rst", "api/pypath.inputs.phosphopoint.phosphopoint_directions.rst", "api/pypath.inputs.phosphopoint.phosphopoint_interactions.rst", "api/pypath.inputs.pro.rst", "api/pypath.inputs.pro.get_pro.rst", "api/pypath.inputs.pro.pro_mapping.rst", "api/pypath.inputs.protmapper.rst", "api/pypath.inputs.protmapper.get_protmapper.rst", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate.rst", "api/pypath.inputs.protmapper.protmapper_interactions.rst", "api/pypath.inputs.pubchem.rst", "api/pypath.inputs.pubchem.pubchem_mapping.rst", "api/pypath.inputs.pubmed.rst", "api/pypath.inputs.pubmed.get_pmid.rst", "api/pypath.inputs.pubmed.get_pubmeds.rst", "api/pypath.inputs.pubmed.only_pmids.rst", "api/pypath.inputs.pubmed.open_pubmed.rst", "api/pypath.inputs.pubmed.pmids_dict.rst", "api/pypath.inputs.pubmed.pmids_list.rst", "api/pypath.inputs.ramp.rst", "api/pypath.inputs.ramp.ramp_id_types.rst", "api/pypath.inputs.ramp.ramp_id_types_2.rst", "api/pypath.inputs.ramp.ramp_list_tables.rst", "api/pypath.inputs.ramp.ramp_mapping.rst", "api/pypath.inputs.ramp.ramp_raw.rst", "api/pypath.inputs.ramp.ramp_show_tables.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.reaction.rst", "api/pypath.inputs.reaction.acsn_biopax.rst", "api/pypath.inputs.reaction.acsn_interactions_2.rst", "api/pypath.inputs.reaction.get_acsn_effects.rst", "api/pypath.inputs.reaction.get_controls.rst", "api/pypath.inputs.reaction.get_interactions.rst", "api/pypath.inputs.reaction.get_reactions.rst", "api/pypath.inputs.reaction.get_soup.rst", "api/pypath.inputs.reaction.panther_biopax.rst", "api/pypath.inputs.reaction.panther_interactions.rst", "api/pypath.inputs.reaction.pid_biopax.rst", "api/pypath.inputs.reaction.pid_interactions.rst", "api/pypath.inputs.reaction.process_complex.rst", "api/pypath.inputs.reaction.process_controls.rst", "api/pypath.inputs.reaction.process_reactions.rst", "api/pypath.inputs.reaction.reactions_biopax.rst", "api/pypath.inputs.reaction.reactome_biopax.rst", "api/pypath.inputs.reaction.reactome_bs.rst", "api/pypath.inputs.reaction.reactome_interactions.rst", "api/pypath.inputs.reaction.reactome_sbml.rst", "api/pypath.inputs.reactome.rst", "api/pypath.inputs.reactome.reactome_chebis.rst", "api/pypath.inputs.reactome.reactome_pathway_relations.rst", "api/pypath.inputs.reactome.reactome_pathways.rst", "api/pypath.inputs.reactome.reactome_uniprots.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.inputs.sider.rst", "api/pypath.inputs.sider.SiderDrug.rst", "api/pypath.inputs.sider.SiderSideeffect.rst", "api/pypath.inputs.sider.SiderSideeffectMeddra.rst", "api/pypath.inputs.sider.SiderSideeffetFrequency.rst", "api/pypath.inputs.sider.sider_drug_names.rst", "api/pypath.inputs.sider.sider_meddra_side_effects.rst", "api/pypath.inputs.sider.sider_side_effect_frequencies.rst", "api/pypath.inputs.sider.sider_side_effects.rst", "api/pypath.inputs.stitch.rst", "api/pypath.inputs.stitch.stitch_actions_interactions.rst", "api/pypath.inputs.stitch.stitch_links_interactions.rst", "api/pypath.inputs.string.rst", "api/pypath.inputs.string.string_effects.rst", "api/pypath.inputs.string.string_links_interactions.rst", "api/pypath.inputs.string.string_physical_interactions.rst", "api/pypath.inputs.string.string_species.rst", "api/pypath.inputs.switches_elm.rst", "api/pypath.inputs.switches_elm.get_switches_elm.rst", "api/pypath.inputs.transmir.rst", "api/pypath.inputs.transmir.transmir_interactions.rst", "api/pypath.inputs.trip.rst", "api/pypath.inputs.trip.take_a_trip.rst", "api/pypath.inputs.trip.trip_find_uniprot.rst", "api/pypath.inputs.trip.trip_get_uniprot.rst", "api/pypath.inputs.trip.trip_interactions.rst", "api/pypath.inputs.trip.trip_process.rst", "api/pypath.inputs.trip.trip_process_table.rst", "api/pypath.inputs.twosides.rst", "api/pypath.inputs.twosides.twosides_interactions.rst", "api/pypath.inputs.unichem.rst", "api/pypath.inputs.unichem.info.rst", "api/pypath.inputs.unichem.unichem_info.rst", "api/pypath.inputs.unichem.unichem_mapping.rst", "api/pypath.inputs.unichem.unichem_sources.rst", "api/pypath.inputs.uniprot.rst", "api/pypath.inputs.uniprot.Taxon.rst", "api/pypath.inputs.uniprot.UniprotQuery.rst", "api/pypath.inputs.uniprot.UniprotRecordHistory.rst", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol.rst", "api/pypath.inputs.uniprot.get_uniprot_sec.rst", "api/pypath.inputs.uniprot.protein_datasheet.rst", "api/pypath.inputs.uniprot.query_builder.rst", "api/pypath.inputs.uniprot.swissprot_deleted.rst", "api/pypath.inputs.uniprot.trembl_deleted.rst", "api/pypath.inputs.uniprot.uniprot_data.rst", "api/pypath.inputs.uniprot.uniprot_deleted.rst", "api/pypath.inputs.uniprot.uniprot_families.rst", "api/pypath.inputs.uniprot.uniprot_history.rst", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet.rst", "api/pypath.inputs.uniprot.uniprot_keywords.rst", "api/pypath.inputs.uniprot.uniprot_locations.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2.rst", "api/pypath.inputs.uniprot.uniprot_preprocess.rst", "api/pypath.inputs.uniprot.uniprot_query.rst", "api/pypath.inputs.uniprot.uniprot_recent_version.rst", "api/pypath.inputs.uniprot.uniprot_taxonomy.rst", "api/pypath.inputs.uniprot.uniprot_tissues.rst", "api/pypath.inputs.uniprot.uniprot_topology.rst", "api/pypath.inputs.uniprot.valid_uniprot.rst", "api/pypath.inputs.uniprot_db.rst", "api/pypath.inputs.uniprot_db.all_swissprots.rst", "api/pypath.inputs.uniprot_db.all_trembls.rst", "api/pypath.inputs.uniprot_db.all_uniprots.rst", "api/pypath.inputs.uniprot_db.get_db.rst", "api/pypath.inputs.uniprot_db.init_db.rst", "api/pypath.inputs.uniprot_db.is_swissprot.rst", "api/pypath.inputs.uniprot_db.is_trembl.rst", "api/pypath.inputs.uniprot_db.is_uniprot.rst", "api/pypath.inputs.uniprot_idmapping.rst", "api/pypath.inputs.uniprot_idmapping.idtypes.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.HmdbMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.RampMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.refs.rst", "api/pypath.internals.refs.Reference.rst", "api/pypath.internals.refs.get_pubmed_data.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkDataset.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.data_formats.rst", "api/pypath.resources.data_formats.activity_flow.rst", "api/pypath.resources.data_formats.enzyme_substrate.rst", "api/pypath.resources.data_formats.interaction.rst", "api/pypath.resources.data_formats.interaction_htp.rst", "api/pypath.resources.data_formats.pathway_bad.rst", "api/pypath.resources.data_formats.reaction_pc.rst", "api/pypath.resources.data_formats.transcription_deprecated.rst", "api/pypath.resources.data_formats.transcription_onebyone.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.resources.network.rst", "api/pypath.resources.urls.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.cache_path.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.settings.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.abs", "pypath.inputs.abs.abs_interactions", "pypath.inputs.acsn", "pypath.inputs.acsn.acsn_interactions", "pypath.inputs.acsn.acsn_interactions_sif", "pypath.inputs.adrecs", "pypath.inputs.adrecs.AdrecsAdr", "pypath.inputs.adrecs.AdrecsChildParent", "pypath.inputs.adrecs.AdrecsDrug", "pypath.inputs.adrecs.AdrecsDrugAdr", "pypath.inputs.adrecs.AdrecsTerm", "pypath.inputs.adrecs.adrecs_adr_ontology", "pypath.inputs.adrecs.adrecs_drug_adr", "pypath.inputs.adrecs.adrecs_drug_identifiers", "pypath.inputs.adrecs.adrecs_hierarchy", "pypath.inputs.biogrid", "pypath.inputs.biogrid.biogrid_all_interactions", "pypath.inputs.biogrid.biogrid_interactions", "pypath.inputs.biomart", "pypath.inputs.biomart.biomart_homology", "pypath.inputs.biomart.biomart_microarray", "pypath.inputs.biomart.biomart_microarray_types", "pypath.inputs.biomart.biomart_microarrays", "pypath.inputs.biomart.biomart_query", "pypath.inputs.biomodels", "pypath.inputs.biomodels.download_single_model", "pypath.inputs.biomodels.get_all_models", "pypath.inputs.biomodels.get_biomodels", "pypath.inputs.biomodels.get_biomodels_req", "pypath.inputs.biomodels.get_single_model", "pypath.inputs.ca1", "pypath.inputs.ca1.ca1_interactions", "pypath.inputs.cancercellmap", "pypath.inputs.cancercellmap.ccmap_interactions", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.chembl", "pypath.inputs.chembl.chembl_activities", "pypath.inputs.chembl.chembl_assays", "pypath.inputs.chembl.chembl_documents", "pypath.inputs.chembl.chembl_drug_indications", "pypath.inputs.chembl.chembl_mechanisms", "pypath.inputs.chembl.chembl_molecules", "pypath.inputs.chembl.chembl_targets", "pypath.inputs.clinvar", "pypath.inputs.clinvar.clinvar_citations", "pypath.inputs.clinvar.clinvar_raw", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.compath", "pypath.inputs.compath.compath_mappings", "pypath.inputs.cpdb", "pypath.inputs.cpdb.cpdb_interactions", "pypath.inputs.cpdb.cpdb_interactions_ltp", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ctdbase", "pypath.inputs.ctdbase.ctdbase_relations", "pypath.inputs.ctdbase.ctdbase_vocabulary", "pypath.inputs.ddinter", "pypath.inputs.ddinter.ddinter_drug_interactions", "pypath.inputs.ddinter.ddinter_identifiers", "pypath.inputs.ddinter.ddinter_interactions", "pypath.inputs.ddinter.ddinter_mappings", "pypath.inputs.ddinter.ddinter_n_drugs", "pypath.inputs.deathdomain", "pypath.inputs.deathdomain.deathdomain_interactions", "pypath.inputs.deathdomain.deathdomain_interactions_rescued", "pypath.inputs.dip", "pypath.inputs.dip.dip_interactions", "pypath.inputs.dip.dip_login", "pypath.inputs.diseases", "pypath.inputs.diseases.diseases_general", "pypath.inputs.diseases.experiments_filtered", "pypath.inputs.diseases.experiments_full", "pypath.inputs.diseases.knowledge_filtered", "pypath.inputs.diseases.knowledge_full", "pypath.inputs.diseases.textmining_filtered", "pypath.inputs.diseases.textmining_full", "pypath.inputs.drugbank", "pypath.inputs.drugbank.DrugbankFull", "pypath.inputs.drugbank.drugbank_annotations", "pypath.inputs.drugbank.drugbank_drugs", "pypath.inputs.drugbank.drugbank_interactions", "pypath.inputs.drugbank.drugbank_mapping", "pypath.inputs.drugbank.drugbank_raw_interactions", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.elm", "pypath.inputs.elm.elm_classes", "pypath.inputs.elm.elm_domains", "pypath.inputs.elm.elm_instances", "pypath.inputs.elm.elm_interactions", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.encode", "pypath.inputs.encode.encode_tf_mirna_interactions", "pypath.inputs.ensembl", "pypath.inputs.ensembl.ensembl_organisms", "pypath.inputs.eutils", "pypath.inputs.eutils.esummary", "pypath.inputs.expasy", "pypath.inputs.expasy.expasy_enzyme_classes", "pypath.inputs.expasy.expasy_enzymes", "pypath.inputs.genecards", "pypath.inputs.genecards.genecards_datasheet", "pypath.inputs.genecards.genecards_soup", "pypath.inputs.genecards.genecards_summaries", "pypath.inputs.get_method", "pypath.inputs.graphviz", "pypath.inputs.graphviz.graphviz_attrs", "pypath.inputs.hprd", "pypath.inputs.hprd.get_hprd", "pypath.inputs.hprd.hprd_enzyme_substrate", "pypath.inputs.hprd.hprd_interactions", "pypath.inputs.hprd.hprd_interactions_htp", "pypath.inputs.htri", "pypath.inputs.htri.htri_interactions", "pypath.inputs.humsavar", "pypath.inputs.humsavar.uniprot_variants", "pypath.inputs.ielm", "pypath.inputs.ielm.get_ielm", "pypath.inputs.ielm.get_ielm_huge", "pypath.inputs.imweb", "pypath.inputs.imweb.get_imweb", "pypath.inputs.imweb.get_imweb_req", "pypath.inputs.innatedb", "pypath.inputs.innatedb.innatedb_interactions", "pypath.inputs.instruct", "pypath.inputs.instruct.get_instruct", "pypath.inputs.instruct.get_instruct_offsets", "pypath.inputs.intact", "pypath.inputs.intact.intact_interactions", "pypath.inputs.interpro", "pypath.inputs.interpro.interpro2go_annotations", "pypath.inputs.interpro.interpro_annotations", "pypath.inputs.interpro.interpro_entries", "pypath.inputs.interpro.interpro_xrefs", "pypath.inputs.ipi", "pypath.inputs.ipi.ipi_uniprot", "pypath.inputs.kegg_api", "pypath.inputs.kegg_api.disease_to_drug", "pypath.inputs.kegg_api.disease_to_gene", "pypath.inputs.kegg_api.disease_to_pathway", "pypath.inputs.kegg_api.drug_to_disease", "pypath.inputs.kegg_api.drug_to_drug", "pypath.inputs.kegg_api.drug_to_gene", "pypath.inputs.kegg_api.drug_to_pathway", "pypath.inputs.kegg_api.gene_to_disease", "pypath.inputs.kegg_api.gene_to_drug", "pypath.inputs.kegg_api.gene_to_pathway", "pypath.inputs.kegg_api.kegg_drug_to_chebi", "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "pypath.inputs.kegg_api.kegg_gene_to_uniprot", "pypath.inputs.kegg_api.pathway_to_disease", "pypath.inputs.kegg_api.pathway_to_drug", "pypath.inputs.kegg_api.pathway_to_gene", "pypath.inputs.kirouac2010", "pypath.inputs.kirouac2010.kirouac2010_interactions", "pypath.inputs.laudanna", "pypath.inputs.laudanna.laudanna_directions", "pypath.inputs.laudanna.laudanna_effects", "pypath.inputs.lincs", "pypath.inputs.lincs.lincs_compounds", "pypath.inputs.macrophage", "pypath.inputs.macrophage.macrophage_interactions", "pypath.inputs.main", "pypath.inputs.mimp", "pypath.inputs.mimp.get_kinase_class", "pypath.inputs.mimp.mimp_enzyme_substrate", "pypath.inputs.mimp.mimp_interactions", "pypath.inputs.mir2disease", "pypath.inputs.mir2disease.mir2disease_interactions", "pypath.inputs.mirdeathdb", "pypath.inputs.mirdeathdb.mirdeathdb_interactions", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.mppi", "pypath.inputs.mppi.mppi_interactions", "pypath.inputs.ncrdeathdb", "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "pypath.inputs.negatome", "pypath.inputs.negatome.negatome_interactions", "pypath.inputs.netbiol", "pypath.inputs.netbiol.arn_interactions", "pypath.inputs.netbiol.nrf2ome_interactions", "pypath.inputs.offsides", "pypath.inputs.offsides.offsides_side_effects", "pypath.inputs.ontology", "pypath.inputs.ontology.listof_ontologies", "pypath.inputs.ontology.ontology", "pypath.inputs.opentargets", "pypath.inputs.opentargets.opentargets_adverse_reactions", "pypath.inputs.opentargets.opentargets_baseline_expression", "pypath.inputs.opentargets.opentargets_direct_score", "pypath.inputs.opentargets.opentargets_general", "pypath.inputs.opentargets.opentargets_indirect_score", "pypath.inputs.pathophenodb", "pypath.inputs.pathophenodb.DiseasePathogen", "pypath.inputs.pathophenodb.disease_pathogen_interactions", "pypath.inputs.pathwaycommons", "pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "pypath.inputs.pathwaycommons.PathwayCommonsResource", "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "pypath.inputs.pazar", "pypath.inputs.pazar.pazar_interactions", "pypath.inputs.pepcyber", "pypath.inputs.pepcyber.pepcyber_details", "pypath.inputs.pepcyber.pepcyber_interactions", "pypath.inputs.pharos", "pypath.inputs.pharos.pharos_diseases", "pypath.inputs.pharos.pharos_expression", "pypath.inputs.pharos.pharos_general", "pypath.inputs.pharos.pharos_gtex", "pypath.inputs.pharos.pharos_ligands", "pypath.inputs.pharos.pharos_orthologs", "pypath.inputs.pharos.pharos_targets", "pypath.inputs.pharos.pharos_xrefs", "pypath.inputs.phobius", "pypath.inputs.phobius.phobius_annotations", "pypath.inputs.phosphonetworks", "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "pypath.inputs.phosphonetworks.phosphonetworks_interactions", "pypath.inputs.phosphopoint", "pypath.inputs.phosphopoint.phosphopoint_directions", "pypath.inputs.phosphopoint.phosphopoint_interactions", "pypath.inputs.pro", "pypath.inputs.pro.get_pro", "pypath.inputs.pro.pro_mapping", "pypath.inputs.protmapper", "pypath.inputs.protmapper.get_protmapper", "pypath.inputs.protmapper.protmapper_enzyme_substrate", "pypath.inputs.protmapper.protmapper_interactions", "pypath.inputs.pubchem", "pypath.inputs.pubchem.pubchem_mapping", "pypath.inputs.pubmed", "pypath.inputs.pubmed.get_pmid", "pypath.inputs.pubmed.get_pubmeds", "pypath.inputs.pubmed.only_pmids", "pypath.inputs.pubmed.open_pubmed", "pypath.inputs.pubmed.pmids_dict", "pypath.inputs.pubmed.pmids_list", "pypath.inputs.ramp", "pypath.inputs.ramp.ramp_id_types", "pypath.inputs.ramp.ramp_id_types_2", "pypath.inputs.ramp.ramp_list_tables", "pypath.inputs.ramp.ramp_mapping", "pypath.inputs.ramp.ramp_raw", "pypath.inputs.ramp.ramp_show_tables", "pypath.inputs.rdata", "pypath.inputs.reaction", "pypath.inputs.reaction.acsn_biopax", "pypath.inputs.reaction.acsn_interactions_2", "pypath.inputs.reaction.get_acsn_effects", "pypath.inputs.reaction.get_controls", "pypath.inputs.reaction.get_interactions", "pypath.inputs.reaction.get_reactions", "pypath.inputs.reaction.get_soup", "pypath.inputs.reaction.panther_biopax", "pypath.inputs.reaction.panther_interactions", "pypath.inputs.reaction.pid_biopax", "pypath.inputs.reaction.pid_interactions", "pypath.inputs.reaction.process_complex", "pypath.inputs.reaction.process_controls", "pypath.inputs.reaction.process_reactions", "pypath.inputs.reaction.reactions_biopax", "pypath.inputs.reaction.reactome_biopax", "pypath.inputs.reaction.reactome_bs", "pypath.inputs.reaction.reactome_interactions", "pypath.inputs.reaction.reactome_sbml", "pypath.inputs.reactome", "pypath.inputs.reactome.reactome_chebis", "pypath.inputs.reactome.reactome_pathway_relations", "pypath.inputs.reactome.reactome_pathways", "pypath.inputs.reactome.reactome_uniprots", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.inputs.sider", "pypath.inputs.sider.SiderDrug", "pypath.inputs.sider.SiderSideeffect", "pypath.inputs.sider.SiderSideeffectMeddra", "pypath.inputs.sider.SiderSideeffetFrequency", "pypath.inputs.sider.sider_drug_names", "pypath.inputs.sider.sider_meddra_side_effects", "pypath.inputs.sider.sider_side_effect_frequencies", "pypath.inputs.sider.sider_side_effects", "pypath.inputs.stitch", "pypath.inputs.stitch.stitch_actions_interactions", "pypath.inputs.stitch.stitch_links_interactions", "pypath.inputs.string", "pypath.inputs.string.string_effects", "pypath.inputs.string.string_links_interactions", "pypath.inputs.string.string_physical_interactions", "pypath.inputs.string.string_species", "pypath.inputs.switches_elm", "pypath.inputs.switches_elm.get_switches_elm", "pypath.inputs.transmir", "pypath.inputs.transmir.transmir_interactions", "pypath.inputs.trip", "pypath.inputs.trip.take_a_trip", "pypath.inputs.trip.trip_find_uniprot", "pypath.inputs.trip.trip_get_uniprot", "pypath.inputs.trip.trip_interactions", "pypath.inputs.trip.trip_process", "pypath.inputs.trip.trip_process_table", "pypath.inputs.twosides", "pypath.inputs.twosides.twosides_interactions", "pypath.inputs.unichem", "pypath.inputs.unichem.info", "pypath.inputs.unichem.unichem_info", "pypath.inputs.unichem.unichem_mapping", "pypath.inputs.unichem.unichem_sources", "pypath.inputs.uniprot", "pypath.inputs.uniprot.Taxon", "pypath.inputs.uniprot.UniprotQuery", "pypath.inputs.uniprot.UniprotRecordHistory", "pypath.inputs.uniprot.deleted_uniprot_genesymbol", "pypath.inputs.uniprot.get_uniprot_sec", "pypath.inputs.uniprot.protein_datasheet", "pypath.inputs.uniprot.query_builder", "pypath.inputs.uniprot.swissprot_deleted", "pypath.inputs.uniprot.trembl_deleted", "pypath.inputs.uniprot.uniprot_data", "pypath.inputs.uniprot.uniprot_deleted", "pypath.inputs.uniprot.uniprot_families", "pypath.inputs.uniprot.uniprot_history", "pypath.inputs.uniprot.uniprot_history_recent_datasheet", "pypath.inputs.uniprot.uniprot_keywords", "pypath.inputs.uniprot.uniprot_locations", "pypath.inputs.uniprot.uniprot_ncbi_taxids", "pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "pypath.inputs.uniprot.uniprot_preprocess", "pypath.inputs.uniprot.uniprot_query", "pypath.inputs.uniprot.uniprot_recent_version", "pypath.inputs.uniprot.uniprot_taxonomy", "pypath.inputs.uniprot.uniprot_tissues", "pypath.inputs.uniprot.uniprot_topology", "pypath.inputs.uniprot.valid_uniprot", "pypath.inputs.uniprot_db", "pypath.inputs.uniprot_db.all_swissprots", "pypath.inputs.uniprot_db.all_trembls", "pypath.inputs.uniprot_db.all_uniprots", "pypath.inputs.uniprot_db.get_db", "pypath.inputs.uniprot_db.init_db", "pypath.inputs.uniprot_db.is_swissprot", "pypath.inputs.uniprot_db.is_trembl", "pypath.inputs.uniprot_db.is_uniprot", "pypath.inputs.uniprot_idmapping", "pypath.inputs.uniprot_idmapping.idtypes", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.HmdbMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.RampMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.refs", "pypath.internals.refs.Reference", "pypath.internals.refs.get_pubmed_data", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkDataset", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.data_formats", "pypath.resources.data_formats.activity_flow", "pypath.resources.data_formats.enzyme_substrate", "pypath.resources.data_formats.interaction", "pypath.resources.data_formats.interaction_htp", "pypath.resources.data_formats.pathway_bad", "pypath.resources.data_formats.reaction_pc", "pypath.resources.data_formats.transcription_deprecated", "pypath.resources.data_formats.transcription_onebyone", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.resources.network", "pypath.resources.urls", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.cache_path", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.settings", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 16, 17, 18, 19, 20, 47, 50, 70, 72, 95, 97, 107, 115, 137, 152, 208, 209, 210, 211, 212, 214, 217, 218, 245, 263, 266, 273, 276, 307, 308, 309, 310, 314, 317, 320, 324, 342, 343, 344, 348, 351, 361, 373, 374, 375, 377, 380, 387, 391, 392, 395, 396, 397, 398, 406, 407, 409, 418, 428, 429, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 469, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 489, 490], "python": [0, 34, 486, 487, 489, 490], "modul": [0, 1, 4, 6, 9, 34, 70, 123, 263, 328, 378, 380, 387, 391, 404, 411, 416, 418, 420, 429, 431, 434, 437, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 462, 465, 466, 479, 485, 488, 489, 490], "build": [0, 348, 485, 486, 489], "molecular": [0, 324, 485, 486, 489], "biologi": [0, 486, 487], "databas": [0, 7, 11, 21, 22, 23, 54, 56, 65, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 97, 113, 115, 117, 118, 152, 160, 187, 198, 203, 211, 236, 237, 238, 241, 245, 259, 272, 273, 274, 276, 277, 311, 312, 313, 314, 328, 335, 344, 383, 388, 413, 414, 423, 425, 426, 442, 485, 489, 490], "With": [0, 486], "you": [0, 276, 392, 418, 442, 443, 446, 452, 457, 469, 485, 488, 490], "can": [0, 3, 32, 206, 276, 317, 320, 321, 343, 348, 351, 361, 392, 418, 437, 442, 466, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484, 486, 487, 488, 489, 490], "access": [0, 4, 70, 95, 366, 392, 429, 457, 485, 486, 489], "process": [0, 13, 26, 27, 41, 43, 128, 129, 175, 176, 273, 282, 294, 297, 331, 333, 343, 346, 348, 351, 361, 377, 404, 418, 436, 437, 442, 486, 489], "combin": [0, 317, 320, 486, 487, 490], "more": [0, 26, 27, 32, 33, 70, 102, 115, 266, 276, 313, 338, 340, 343, 348, 351, 361, 418, 473, 474, 475, 476, 477, 478, 486, 487, 489, 490], "than": [0, 26, 27, 115, 266, 313, 486, 487, 490], "170": 0, "public": [0, 293], "resourc": [0, 5, 67, 68, 70, 122, 217, 226, 324, 338, 339, 385, 442, 485, 486, 489, 490], "interact": [0, 11, 13, 14, 26, 27, 41, 43, 67, 68, 75, 77, 81, 82, 95, 98, 107, 128, 129, 137, 144, 147, 160, 187, 189, 198, 200, 201, 236, 237, 260, 294, 297, 317, 320, 321, 331, 332, 333, 335, 385, 402, 418, 424, 425, 426, 485, 486, 489], "network": [0, 5, 41, 320, 407, 418, 466, 485, 486, 489], "includ": [0, 6, 13, 30, 32, 33, 36, 47, 205, 206, 320, 321, 332, 343, 348, 351, 361, 380, 387, 391, 418, 423, 425, 426, 487, 489, 490], "annot": [0, 96, 97, 134, 149, 150, 485, 486, 489], "about": [0, 7, 8, 95, 102, 113, 151, 236, 239, 240, 241, 242, 243, 244, 245, 246, 266, 313, 337, 338, 449, 450, 459, 485, 486, 490], "function": [0, 3, 4, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 62, 63, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 279, 299, 304, 306, 313, 315, 318, 320, 323, 324, 325, 327, 334, 336, 341, 343, 348, 351, 361, 367, 376, 400, 412, 416, 435, 436, 441, 442, 464, 469, 486, 487, 488, 489, 490], "local": [0, 13, 486, 487, 489, 490], "structur": [0, 144, 152, 343, 348, 351, 361, 481, 483, 484, 485, 486, 489], "other": [0, 3, 61, 380, 383, 387, 388, 390, 391, 422, 442, 486, 490], "properti": [0, 95, 343, 409, 473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "gene": [0, 29, 30, 32, 33, 72, 73, 120, 121, 122, 157, 161, 163, 164, 165, 167, 168, 171, 187, 189, 236, 272, 273, 326, 345, 485, 486, 489, 490], "protein": [0, 98, 100, 120, 121, 137, 144, 147, 150, 198, 200, 236, 237, 256, 317, 320, 321, 333, 351, 382, 385, 387, 389, 485, 486, 489, 490], "also": [0, 7, 137, 407, 466, 487, 490], "provid": [0, 3, 70, 95, 137, 343, 348, 351, 361, 380, 387, 391, 404, 407, 418, 429, 479, 486, 487, 489, 490], "number": [0, 16, 17, 18, 19, 20, 26, 27, 32, 62, 72, 79, 102, 115, 137, 144, 147, 150, 214, 217, 218, 239, 240, 242, 243, 244, 245, 246, 266, 307, 308, 309, 310, 316, 317, 342, 344, 366, 392, 402, 406, 409, 459, 486, 487, 490], "util": [0, 267, 402, 485, 486, 489], "id": [0, 23, 26, 27, 30, 31, 32, 33, 36, 39, 43, 49, 75, 77, 99, 113, 115, 120, 121, 122, 137, 150, 152, 160, 166, 167, 168, 178, 206, 236, 263, 265, 266, 267, 268, 296, 312, 313, 314, 322, 330, 333, 337, 338, 339, 340, 343, 345, 346, 351, 361, 363, 373, 374, 375, 377, 380, 383, 387, 388, 390, 391, 392, 402, 485, 490], "translat": [0, 99, 166, 167, 168, 263, 267, 339, 343, 348, 351, 361, 363, 383, 388, 390, 392, 485, 489, 490], "orthologi": [0, 29, 485, 489], "handl": [0, 442, 486, 487], "taxonomi": [0, 26, 27, 43, 345, 346, 363, 392, 485, 486], "sequenc": [0, 144, 485], "serv": [0, 333, 404, 490], "web": [0, 6, 33, 102, 268, 348, 392, 486, 487, 489], "server": [0, 418, 486, 487, 489, 490], "etc": [0, 437, 486, 487, 489, 490], "member": [0, 1, 2, 4, 6, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 181, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 278, 279, 299, 304, 306, 315, 318, 323, 325, 327, 334, 336, 341, 367, 376, 378, 379, 393, 399, 400, 403, 411, 412, 416, 417, 419, 420, 430, 432, 433, 434, 435, 439, 440, 441, 458, 460, 461, 462, 463, 466, 472, 473, 474, 475, 476, 477, 478, 479, 487], "class": [2, 3, 15, 16, 17, 18, 19, 20, 24, 94, 95, 102, 117, 213, 214, 216, 217, 218, 306, 307, 308, 309, 310, 341, 342, 343, 344, 351, 361, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 417, 418, 430, 431, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 463, 464, 465, 466, 467, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490], "none": [3, 5, 26, 27, 32, 33, 47, 59, 62, 63, 65, 67, 70, 84, 95, 96, 97, 98, 99, 100, 102, 109, 123, 136, 137, 160, 205, 206, 226, 241, 260, 272, 273, 276, 277, 283, 285, 297, 316, 328, 343, 348, 351, 361, 370, 371, 372, 375, 381, 382, 384, 385, 386, 387, 389, 391, 392, 394, 402, 404, 405, 407, 408, 410, 418, 431, 438, 442, 443, 447, 448, 459, 464, 465, 487], "kwarg": [3, 5, 70, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 261, 276, 281, 288, 290, 297, 343, 348, 351, 361, 394, 404, 405, 408, 409, 410, 418, 442, 465, 487], "sourc": [3, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 160, 173, 175, 176, 178, 180, 183, 184, 185, 187, 189, 191, 192, 194, 196, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 226, 234, 236, 237, 241, 245, 248, 250, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 402, 404, 405, 407, 408, 409, 410, 413, 414, 415, 418, 429, 431, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 464, 465, 467, 469, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 489, 490], "base": [3, 16, 17, 18, 19, 20, 95, 214, 217, 218, 259, 307, 308, 309, 310, 342, 343, 344, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 418, 431, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 464, 465, 467, 469, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 489], "object": [3, 4, 60, 62, 95, 121, 295, 296, 298, 343, 384, 385, 389, 394, 396, 401, 402, 407, 410, 418, 421, 422, 423, 424, 425, 426, 427, 428, 442, 444, 459, 464, 467, 469, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488], "which": [3, 4, 47, 50, 95, 267, 317, 320, 418, 422, 445, 446, 449, 450, 451, 452, 453, 454, 456, 457, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484, 485, 486, 489, 490], "carri": [3, 487], "custom": [3, 70, 317, 320, 321, 380, 383, 387, 388, 390, 391, 404, 418, 459, 485, 486], "attribut": [3, 16, 17, 18, 19, 20, 33, 36, 47, 125, 134, 175, 176, 214, 217, 218, 307, 308, 309, 310, 342, 343, 344, 351, 361, 385, 392, 394, 395, 396, 397, 398, 401, 405, 406, 407, 408, 409, 410, 418, 420, 442, 443, 473, 474, 475, 476, 477, 478, 487, 490], "data": [3, 5, 7, 13, 21, 22, 23, 29, 32, 35, 47, 48, 50, 51, 52, 53, 54, 56, 60, 61, 62, 65, 75, 77, 78, 82, 87, 88, 89, 90, 91, 92, 93, 102, 117, 118, 127, 128, 129, 137, 160, 208, 209, 210, 211, 212, 237, 238, 239, 240, 242, 243, 244, 245, 246, 263, 273, 282, 300, 301, 302, 303, 320, 321, 328, 332, 333, 335, 339, 377, 391, 392, 404, 405, 409, 418, 436, 442, 443, 446, 447, 485, 486, 489, 490], "dedic": [3, 487], "dict": [3, 36, 39, 49, 59, 60, 61, 62, 70, 95, 96, 99, 102, 115, 118, 122, 125, 134, 149, 150, 152, 160, 166, 167, 168, 178, 205, 206, 208, 209, 210, 211, 212, 236, 239, 240, 241, 242, 243, 244, 245, 246, 263, 266, 274, 275, 276, 298, 311, 314, 322, 332, 333, 339, 340, 343, 348, 351, 361, 363, 377, 407, 418, 487, 489], "under": [3, 394, 487], "__init__": [3, 16, 17, 18, 19, 20, 85, 95, 214, 217, 218, 307, 308, 309, 310, 342, 343, 344, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 418, 431, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 464, 465, 467, 469, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 487], "method": [3, 4, 16, 17, 18, 19, 20, 87, 95, 123, 137, 214, 217, 218, 307, 308, 309, 310, 332, 342, 343, 344, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 409, 410, 418, 431, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 464, 465, 467, 469, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 489], "serial": 3, "gener": [3, 22, 59, 62, 63, 65, 87, 88, 89, 90, 91, 92, 93, 203, 208, 209, 210, 211, 212, 300, 301, 302, 303, 335, 354, 404, 418, 487, 489, 490], "json": [3, 60, 61, 102, 241, 377, 418, 487], "string": [3, 60, 61, 62, 70, 102, 120, 263, 296, 337, 339, 343, 348, 351, 361, 437, 442, 459, 487], "full": [3, 30, 87, 89, 91, 93, 95, 205, 206, 339, 476, 477, 485, 486, 489], "content": [3, 113, 259, 276, 377, 418, 442, 486, 488, 489], "without": [3, 4, 47, 313, 418, 421, 442, 485, 490], "ani": [3, 61, 62, 70, 437, 469, 485, 486, 489, 490], "whitespac": 3, "line": [3, 62, 343, 473, 474, 475, 476, 477, 478, 487], "break": [3, 137], "return": [3, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 113, 117, 118, 120, 121, 122, 123, 125, 128, 129, 134, 149, 150, 151, 152, 160, 175, 176, 178, 205, 208, 209, 210, 211, 212, 214, 215, 217, 218, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 259, 263, 267, 275, 276, 282, 295, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 322, 329, 331, 332, 338, 339, 340, 342, 343, 344, 345, 348, 351, 354, 361, 363, 373, 374, 377, 392, 395, 396, 397, 398, 405, 406, 407, 409, 418, 429, 436, 438, 442, 443, 459, 469, 473, 474, 475, 476, 477, 478, 486, 487, 490], "str": [3, 16, 18, 19, 20, 29, 30, 31, 32, 33, 39, 45, 49, 59, 60, 61, 62, 70, 72, 73, 75, 76, 95, 96, 97, 98, 99, 100, 102, 109, 115, 120, 121, 122, 134, 137, 149, 150, 152, 160, 205, 206, 211, 212, 241, 260, 263, 266, 267, 268, 272, 273, 274, 275, 276, 305, 307, 308, 309, 310, 311, 314, 319, 322, 328, 330, 332, 333, 337, 339, 343, 348, 351, 361, 363, 377, 380, 385, 387, 391, 392, 404, 407, 409, 418, 436, 437, 438, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457], "The": [3, 30, 45, 50, 65, 87, 92, 93, 95, 96, 99, 102, 115, 137, 178, 206, 241, 245, 263, 273, 275, 297, 301, 302, 305, 317, 320, 321, 329, 330, 337, 343, 348, 351, 361, 377, 392, 402, 409, 418, 429, 431, 437, 442, 443, 459, 465, 469, 473, 474, 475, 476, 477, 478, 484, 485, 486, 489, 490], "update_attr": 3, "updat": [3, 85, 407, 418, 459, 487, 489, 490], "store": [3, 418, 429, 486, 487, 489], "here": [3, 102, 241, 459, 469, 486, 487, 490], "ident": [3, 418, 487], "kei": [3, 30, 32, 36, 49, 62, 70, 99, 102, 118, 122, 149, 150, 152, 160, 178, 205, 206, 208, 209, 210, 211, 212, 236, 263, 276, 322, 339, 340, 343, 348, 351, 361, 363, 395, 396, 397, 398, 407, 418, 436, 437, 442, 487, 490], "ar": [3, 32, 47, 62, 72, 85, 87, 92, 93, 95, 96, 115, 136, 144, 150, 152, 157, 161, 163, 164, 165, 167, 168, 171, 205, 263, 266, 267, 276, 297, 321, 331, 339, 343, 348, 351, 361, 380, 387, 391, 418, 422, 425, 426, 436, 442, 473, 474, 475, 476, 477, 478, 483, 485, 486, 488, 489, 490], "merg": [3, 487], "us": [3, 4, 33, 34, 36, 39, 99, 137, 206, 208, 209, 210, 211, 212, 259, 263, 267, 276, 317, 320, 321, 332, 380, 387, 391, 392, 394, 418, 422, 436, 437, 442, 448, 452, 457, 466, 469, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 486, 490], "share": [3, 394, 418, 487, 489], "common": [3, 36, 485], "combine_attr": 3, "new": [3, 58, 276, 418, 428, 486, 487, 489, 490], "three": [3, 469], "wai": [3, 70, 276, 339, 343, 348, 351, 361, 380, 387, 391, 487], "an": [3, 30, 31, 32, 33, 99, 102, 154, 205, 206, 236, 237, 239, 240, 242, 243, 244, 246, 276, 314, 339, 343, 348, 351, 361, 392, 395, 396, 397, 398, 407, 409, 418, 428, 437, 466, 469, 473, 474, 475, 476, 477, 478, 485, 486, 490], "call": [3, 68, 206, 331, 332, 394, 404, 442, 443, 486, 487], "dictionari": [3, 30, 32, 36, 39, 49, 62, 70, 95, 150, 152, 154, 208, 209, 210, 211, 212, 236, 275, 276, 333, 339, 363, 485, 486], "keyword": [3, 469, 487], "argument": [3, 331, 380, 387, 391, 442, 469, 487], "work": [4, 85, 102, 273, 418, 486, 487, 490], "from": [4, 11, 13, 14, 21, 22, 23, 26, 27, 29, 34, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 65, 67, 68, 70, 75, 77, 81, 82, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 107, 115, 117, 118, 120, 121, 122, 123, 125, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 175, 176, 187, 189, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 238, 239, 240, 242, 243, 244, 246, 259, 263, 273, 274, 275, 276, 277, 300, 303, 305, 311, 312, 313, 314, 326, 328, 329, 330, 333, 335, 339, 345, 351, 354, 363, 377, 383, 385, 387, 388, 391, 392, 404, 405, 407, 409, 418, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 466, 473, 474, 475, 476, 477, 478, 483, 485, 486, 489, 490], "might": [4, 239, 240, 242, 243, 244, 246, 273, 418, 487, 490], "import": [4, 428, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 486, 487], "main": [4, 35, 464, 486, 487, 490], "df": [5, 487], "entity_typ": [5, 272, 273, 382, 389, 487], "data_model": [5, 385, 408, 409, 418], "interaction_typ": [5, 217, 385, 408, 409, 418, 487], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": [5, 147], "effect": [5, 176, 203, 282, 312, 313, 314, 487], "entiti": [5, 487, 489, 490], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 13, 26, 27, 30, 32, 84, 102, 115, 127, 128, 129, 136, 137, 150, 160, 208, 209, 210, 211, 212, 237, 266, 267, 284, 292, 294, 295, 297, 317, 320, 343, 348, 350, 351, 352, 353, 356, 357, 360, 361, 364, 365, 377, 385, 392, 413, 442, 443, 444, 446, 448, 450, 452, 454, 457, 459, 487], "remove_loop": 5, "entities_or": 5, "fals": [5, 21, 22, 23, 30, 32, 33, 47, 63, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 117, 118, 136, 147, 160, 205, 208, 209, 210, 211, 212, 226, 237, 245, 257, 260, 275, 276, 300, 301, 302, 303, 314, 331, 332, 351, 363, 373, 374, 377, 381, 385, 389, 405, 413, 418, 429, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457, 459, 487], "filter": [5, 29, 33, 87, 88, 90, 92, 418, 487], "frame": [5, 21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 300, 301, 302, 303, 485, 486, 489], "licens": [6, 7, 418, 485, 489], "collect": [6, 34, 87, 99, 102, 418, 487, 490], "page": [6, 45, 102, 418, 486, 487, 488, 490], "compon": [6, 263, 343, 348, 351, 361, 487, 490], "biomart": [6, 487], "goos": 6, "queri": [6, 33, 102, 115, 136, 137, 160, 206, 241, 245, 266, 328, 343, 348, 351, 361, 392, 485, 489], "templat": [6, 487], "configur": [6, 487], "file": [6, 13, 34, 35, 39, 43, 45, 60, 61, 62, 63, 70, 72, 73, 95, 99, 237, 263, 294, 295, 298, 305, 328, 418, 436, 442, 443, 445, 446, 485, 486, 489], "print": [7, 8, 337, 447, 448, 449, 450, 451, 452, 487], "copyright": [7, 487], "point": [7, 198, 276, 343, 351, 361, 418, 486, 487], "further": [7, 70, 144, 332, 485, 487, 490], "inform": [7, 8, 34, 55, 95, 151, 203, 236, 259, 311, 312, 313, 314, 337, 338, 340, 418, 451, 452, 459, 485, 490], "loglevel": 8, "9": [8, 485, 486, 487], "basic": [8, 351, 361, 485], "current": [8, 102, 395, 396, 397, 398, 415, 459, 466, 486, 487, 490], "session": [8, 418, 485, 486], "tf": [11, 326, 487, 489, 490], "target": [11, 29, 53, 65, 95, 187, 189, 208, 209, 210, 211, 212, 263, 385, 427, 473, 474, 475, 476, 477, 478, 487, 489, 490], "transcript": [11, 30, 32, 33, 381, 418, 424, 428, 486, 490], "regul": [11, 324, 490], "keep_in_complex_interact": 13, "list": [13, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 41, 43, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 95, 96, 97, 98, 100, 102, 109, 113, 115, 117, 125, 128, 129, 134, 137, 147, 151, 152, 160, 173, 175, 176, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 239, 240, 242, 243, 244, 245, 246, 265, 266, 267, 272, 273, 274, 276, 282, 302, 311, 312, 313, 316, 317, 319, 320, 321, 322, 331, 332, 338, 339, 343, 348, 351, 361, 377, 391, 392, 407, 418, 442, 486, 487, 489, 490], "bool": [13, 21, 22, 23, 26, 27, 30, 32, 33, 47, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 115, 117, 118, 137, 147, 150, 160, 205, 208, 209, 210, 211, 212, 237, 241, 245, 267, 275, 276, 300, 301, 302, 303, 314, 317, 320, 332, 351, 363, 377, 391, 392, 418], "whether": [13, 47, 137, 267, 332, 487], "complex": [13, 291, 320, 321, 343, 348, 351, 361, 485, 486, 489], "expans": 13, "retriev": [14, 29, 31, 32, 47, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 79, 87, 97, 100, 102, 120, 121, 122, 123, 134, 154, 187, 189, 203, 215, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 275, 276, 311, 312, 313, 314, 335, 345, 351, 354, 392, 487], "sif": [14, 487, 489], "format": [14, 36, 267, 295, 296, 298, 366, 459, 466, 489, 490], "distribut": [14, 486], "offici": [14, 487], "websit": [14, 343, 351, 361], "adr_class": 16, "badd": [16, 18, 20, 24], "namedtupl": [16, 17, 18, 19, 20, 50, 51, 76, 77, 78, 95, 307, 308, 309, 310], "alia": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409, 468, 470, 471], "field": [16, 17, 18, 19, 20, 29, 59, 60, 62, 70, 72, 95, 97, 102, 191, 192, 205, 206, 214, 217, 218, 307, 308, 309, 310, 312, 342, 343, 344, 348, 351, 360, 361, 406, 409, 442, 487, 490], "0": [16, 17, 18, 19, 20, 37, 50, 63, 139, 147, 214, 217, 218, 307, 308, 309, 310, 319, 342, 344, 382, 385, 389, 406, 409, 459, 465, 485, 486, 487], "1": [16, 17, 18, 19, 20, 26, 27, 214, 217, 218, 307, 308, 309, 310, 342, 344, 383, 385, 387, 388, 390, 406, 409, 459, 465, 485, 487, 490], "count": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409, 487], "valu": [16, 17, 18, 19, 20, 30, 32, 36, 47, 49, 61, 62, 70, 99, 122, 149, 150, 152, 160, 178, 205, 214, 217, 218, 236, 241, 263, 276, 307, 308, 309, 310, 317, 320, 321, 322, 339, 340, 342, 343, 344, 348, 351, 361, 363, 392, 395, 396, 397, 398, 406, 407, 409, 418, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 474, 476, 477, 487, 490], "occurr": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409], "index": [16, 17, 18, 19, 20, 23, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409, 487], "start": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409, 486, 487, 489], "stop": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409, 445, 449, 487], "9223372036854775807": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409], "first": [16, 17, 18, 19, 20, 70, 95, 117, 214, 217, 218, 275, 307, 308, 309, 310, 342, 344, 391, 406, 409, 429, 486, 487, 489], "rais": [16, 17, 18, 19, 20, 70, 214, 217, 218, 307, 308, 309, 310, 342, 343, 344, 406, 407, 409], "valueerror": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 409], "present": [16, 17, 18, 19, 20, 24, 115, 214, 217, 218, 307, 308, 309, 310, 342, 344, 406, 407, 409, 486, 487], "child": [17, 24, 487], "parent": [17, 24, 263, 487], "adrecsadr": 17, "drug": [18, 19, 21, 22, 23, 50, 53, 75, 76, 77, 78, 79, 95, 96, 97, 98, 100, 134, 156, 159, 160, 161, 162, 164, 166, 170, 203, 208, 311, 312, 313, 314, 335, 487, 489], "synonym": [18, 20, 23, 211, 263, 330, 418, 487], "drugbank": [18, 23, 76, 78], "pubchem_cid": 18, "mesh": [18, 23], "kegg": [18, 23, 65, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 428, 487], "tdd": [18, 23], "3": [18, 19, 20, 62, 117, 125, 214, 217, 310, 342, 343, 344, 348, 351, 361, 409, 464, 485, 486, 487], "6": [18, 147, 344, 485, 487], "5": [18, 344, 464, 485, 486, 487], "4": [18, 20, 214, 344, 409, 464, 469, 481, 484, 485, 487, 490], "2": [18, 19, 20, 62, 214, 217, 218, 236, 308, 309, 310, 342, 344, 406, 407, 409, 469, 481, 484, 485], "7": [18, 43, 344, 485, 486, 487, 490], "drug_badd": 19, "adr_badd": 19, "adr": [19, 21, 22, 211], "adrecs_class": 20, "name": [20, 23, 29, 30, 31, 32, 33, 36, 39, 47, 48, 52, 53, 55, 56, 65, 67, 68, 70, 75, 77, 97, 99, 102, 113, 117, 122, 123, 134, 151, 152, 157, 161, 163, 164, 165, 167, 168, 171, 178, 205, 208, 209, 210, 211, 212, 218, 241, 263, 276, 307, 311, 312, 313, 314, 322, 329, 332, 338, 343, 351, 361, 363, 366, 373, 374, 375, 380, 383, 385, 387, 388, 389, 390, 391, 394, 404, 405, 406, 407, 408, 409, 410, 413, 418, 425, 431, 436, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 465, 485, 488, 490], "meddra": [20, 312, 313, 314], "tupl": [20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 47, 48, 50, 51, 52, 53, 55, 56, 59, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 113, 117, 118, 134, 147, 149, 151, 160, 173, 178, 203, 205, 206, 214, 215, 217, 218, 237, 296, 300, 301, 302, 303, 311, 312, 313, 314, 316, 317, 319, 320, 321, 335, 338, 342, 343, 344, 348, 351, 361, 377, 406, 407, 437, 442, 469, 473, 474, 475, 476, 477, 478, 481, 484, 487], "return_df": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 275, 300, 301, 302, 303, 487], "adrecsterm": 21, "datafram": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 275, 276, 300, 301, 302, 303, 377, 485, 486], "advers": [21, 203, 208, 335, 487], "reaction": [21, 208, 418, 487, 490], "ontologi": [21, 24, 256, 301, 387, 485, 486, 489], "paramet": [21, 22, 23, 65, 72, 73, 75, 76, 77, 78, 85, 87, 88, 89, 90, 91, 92, 93, 102, 115, 117, 118, 120, 121, 122, 136, 137, 208, 209, 210, 211, 212, 239, 240, 241, 242, 243, 244, 245, 246, 260, 266, 275, 276, 300, 301, 302, 303, 314, 328, 343, 346, 348, 351, 361, 363, 377, 380, 383, 385, 387, 388, 390, 391, 392, 402, 418, 431, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 465, 469, 485, 486, 487], "panda": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 208, 209, 210, 211, 212, 237, 275, 276, 300, 301, 302, 303, 485, 486, 489, 490], "term": [21, 24, 149, 152, 206, 487], "adrecsdrugadr": 22, "pd": [22, 65, 87, 88, 89, 90, 91, 92, 93, 118, 208, 209, 210, 211, 212, 276, 300, 301, 302, 303, 487], "pair": [22, 65, 70, 147, 173, 198, 346, 377, 407, 442, 487, 490], "identifi": [23, 24, 30, 32, 36, 62, 75, 76, 78, 95, 97, 99, 100, 115, 147, 263, 272, 273, 275, 339, 343, 345, 347, 351, 354, 355, 362, 363, 377, 437, 485, 486], "iupac": [23, 263, 487], "http": [23, 33, 102, 115, 137, 173, 187, 189, 200, 201, 237, 241, 259, 338, 343, 348, 351, 361, 442, 466, 486, 490], "www": [23, 33, 115, 173, 187, 189, 237, 259, 338, 343, 348, 351, 361, 466, 487], "bio": 23, "add": [23, 418, 486, 487, 489, 490], "org": [23, 33, 125, 173, 187, 200, 201, 237, 259, 343, 348, 351, 361, 392, 466, 487, 490], "jsp": 23, "set": [24, 30, 32, 67, 68, 70, 96, 99, 107, 115, 134, 137, 144, 149, 150, 260, 263, 266, 272, 273, 275, 311, 314, 328, 339, 343, 363, 377, 380, 385, 387, 391, 392, 395, 396, 397, 398, 404, 405, 407, 418, 423, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 487, 489, 490], "adrecschildpar": 24, "relationship": [24, 215, 485, 486], "between": [24, 65, 166, 167, 168, 200, 275, 317, 320, 346, 469, 474, 476, 477, 486, 487, 489, 490], "repres": [24, 95, 151, 205, 338, 407, 487], "both": [24, 313, 314, 320, 351, 375, 442, 486, 487, 490], "numer": [24, 115, 337, 340, 363, 487], "organ": [26, 27, 29, 30, 31, 32, 43, 84, 113, 142, 147, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 194, 294, 295, 322, 332, 343, 346, 348, 351, 353, 356, 357, 360, 361, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 392, 405, 485, 486, 489, 490], "int": [26, 27, 29, 30, 31, 32, 43, 50, 62, 79, 102, 109, 115, 137, 147, 150, 239, 240, 242, 243, 244, 245, 246, 266, 268, 317, 319, 320, 321, 322, 337, 339, 346, 351, 363, 392, 459], "9606": [26, 27, 29, 30, 31, 32, 43, 84, 142, 147, 150, 194, 294, 295, 317, 319, 320, 321, 343, 346, 348, 351, 353, 356, 357, 360, 361, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 385, 391, 392, 404, 487], "htp_limit": [26, 27], "ltp": [26, 27], "download": [26, 27, 32, 34, 35, 41, 43, 45, 81, 87, 102, 125, 127, 137, 149, 150, 151, 152, 160, 175, 176, 206, 211, 237, 256, 273, 295, 297, 298, 305, 317, 320, 321, 322, 328, 329, 330, 332, 333, 346, 391, 404, 442, 446, 447, 453, 454, 485, 486, 489], "all": [26, 32, 34, 78, 95, 102, 134, 150, 263, 276, 331, 343, 348, 351, 361, 402, 407, 418, 431, 442, 443, 454, 465, 473, 483, 486, 489, 490], "keep": [26, 27, 147, 205, 260, 267, 486, 487], "onli": [26, 27, 47, 70, 72, 98, 100, 102, 144, 147, 150, 260, 267, 343, 348, 351, 361, 380, 387, 391, 407, 418, 425, 428, 429, 442, 443, 451, 456, 485, 486, 489, 490], "low": [26, 27, 68, 425], "throughput": [26, 27, 68, 402, 425, 487], "arg": [26, 27, 30, 31, 32, 33, 39, 45, 47, 50, 60, 67, 68, 70, 95, 96, 97, 98, 99, 100, 102, 150, 152, 157, 160, 161, 163, 164, 165, 167, 168, 171, 205, 206, 237, 263, 305, 317, 320, 321, 337, 339, 409, 436], "ncbi": [26, 27, 43, 115, 167, 267, 345, 346, 363, 392, 402, 485, 486, 490], "exclud": [26, 27, 67, 68, 319, 487], "refer": [26, 27, 97, 137, 152, 198, 236, 343, 348, 351, 361, 385, 402, 418, 421, 422, 425, 426, 456, 457, 485, 486, 490], "cite": [26, 27], "thi": [26, 27, 34, 70, 85, 95, 107, 115, 123, 137, 263, 266, 276, 313, 314, 328, 333, 343, 348, 351, 361, 380, 385, 387, 391, 395, 396, 397, 398, 405, 407, 418, 431, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 464, 465, 466, 469, 473, 474, 475, 476, 477, 478, 479, 486, 487, 489, 490], "physic": [27, 317, 320, 321], "multi": [27, 487, 489], "valid": [27, 50, 260, 343, 395, 396, 397, 398], "source_organ": 29, "target_organ": 29, "10090": [29, 343, 348, 351, 361, 486, 487, 490], "extra_field": 29, "iter": [29, 115, 319, 343, 351, 354, 361, 407, 418, 459, 487], "external_gene_nam": 29, "ensembl": [29, 30, 32, 33, 486, 487], "have": [29, 317, 320, 392, 418, 425, 446, 452, 457, 486, 487, 489, 490], "orthologu": 29, "homologi": [29, 485, 487, 490], "relat": [29, 47, 72, 100, 113, 152, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 486, 487, 490], "array_typ": 30, "peptid": [30, 32, 33, 487], "microarrai": [30, 31, 32, 380, 487], "probe": [30, 32, 380, 487], "map": [30, 32, 65, 76, 78, 154, 275, 300, 303, 346, 377, 380, 387, 391, 392, 407, 473, 474, 475, 476, 477, 478, 481, 483, 484, 486, 487, 489], "model": [30, 32, 34, 35, 36, 39, 418], "shown": [30, 211, 330, 487], "webpag": [30, 45, 81, 305, 328, 329, 330, 333, 487, 490], "correspond": [30, 97, 265, 343, 351, 361, 395, 396, 397, 398, 407, 487], "code": [30, 340, 481, 483, 484, 487, 489], "For": [30, 32, 62, 72, 206, 265, 339, 340, 343, 348, 351, 361, 373, 374, 392, 394, 402, 418, 436, 486, 487, 490], "avail": [30, 31, 34, 36, 70, 99, 205, 206, 237, 273, 343, 348, 351, 361, 392, 486, 487, 490], "see": [30, 260, 331, 338, 339, 340, 343, 348, 351, 361, 452, 466, 469, 481, 483, 484, 486, 487, 490], "biomart_microarray_typ": 30, "A": [30, 32, 36, 67, 68, 70, 75, 95, 102, 115, 120, 121, 122, 150, 151, 152, 160, 236, 241, 263, 275, 312, 338, 339, 340, 343, 348, 351, 361, 363, 407, 409, 428, 436, 487, 489, 490], "type": [31, 32, 72, 96, 99, 137, 152, 226, 236, 260, 263, 272, 273, 275, 285, 312, 338, 339, 340, 343, 377, 380, 383, 387, 388, 390, 391, 392, 418, 442, 443, 485, 486, 487], "vendor": 32, "multipl": [32, 137, 486, 487, 490], "arrai": [32, 418, 487], "one": [32, 63, 70, 75, 102, 136, 137, 151, 239, 240, 242, 243, 244, 245, 246, 267, 330, 333, 337, 338, 343, 351, 361, 380, 383, 387, 388, 390, 391, 392, 402, 418, 469, 476, 477, 486, 490], "option": [32, 276, 487, 490], "limit": [32, 137, 317, 320, 321, 487], "note": [32, 239, 240, 242, 243, 244, 246, 418, 487, 490], "depend": [32, 487, 489], "take": [32, 239, 240, 242, 243, 244, 245, 246, 469, 486, 487], "minut": [32, 486, 487], "One": [32, 33, 72, 73, 115, 266, 276, 333, 351, 361, 487], "mean": [32, 144, 273, 405, 418, 436, 487], "human": [32, 134, 295, 298, 331, 332, 351, 383, 485, 486, 490], "possibl": [32, 263, 485, 487], "affi": [32, 487], "illumina": 32, "agil": [32, 487], "codelink": 32, "phalanx": 32, "attr": [33, 418], "dataset": [33, 87, 88, 89, 90, 91, 92, 93, 208, 209, 210, 211, 212, 313, 314, 385, 407, 408, 410, 418, 422, 428, 485, 486], "hsapiens_gene_ensembl": 33, "servic": [33, 102, 205, 206, 263, 377, 392, 486, 487, 489], "martview": 33, "check": [33, 366, 394, 395, 396, 397, 398, 486, 487, 490], "result": [33, 62, 102, 150, 333, 343, 446, 452, 453, 454, 457, 487], "yield": [33, 203, 296, 297, 335, 343, 346, 487], "request": [33, 102, 115, 137, 205, 266, 442, 443, 487, 490], "each": [33, 59, 62, 95, 97, 137, 151, 152, 205, 236, 245, 338, 343, 486, 487, 489, 490], "record": [33, 47, 48, 52, 53, 79, 102, 115, 147, 208, 209, 210, 212, 239, 240, 242, 243, 244, 245, 246, 259, 266, 268, 354, 490], "repositori": [34, 489], "bioservic": [34, 36, 39], "individu": [34, 160, 203, 487], "pars": [34, 241, 487], "relev": [34, 35, 487], "enter": 34, "model_id": [35, 39], "singl": [35, 39, 75, 76, 267, 485], "extract": [35, 60, 81, 102, 128, 129, 273, 294, 297, 377, 442, 443, 487], "integr": [35, 428, 485, 487, 489], "should": [35, 47, 145, 333, 418, 473, 474, 475, 476, 477, 478, 486, 487, 490], "cach": [35, 115, 136, 137, 237, 266, 273, 295, 333, 442, 445, 446, 447, 448, 449, 450, 453, 454, 485, 486], "fetch": [36, 245, 265, 392, 466, 487], "smbl": 36, "being": [36, 481, 483, 484], "most": [36, 354, 426, 448, 486, 487], "submiss": 36, "modif": [36, 487], "date": [36, 344, 487], "author": [36, 487], "verbos": [37, 139, 449, 450, 487, 489], "get": [39, 392, 407, 442, 485, 487, 490], "contain": [39, 65, 95, 102, 144, 267, 312, 320, 324, 333, 409, 466, 473, 474, 475, 476, 477, 478, 486, 487, 490], "specif": [39, 60, 102, 157, 161, 163, 164, 165, 167, 168, 171, 178, 486, 487, 490], "eg": 39, "descript": [39, 260, 459, 487, 489], "associ": [39, 210, 212, 320, 469, 481, 483, 484, 487], "signal": [41, 203, 335, 485, 490], "ma": 41, "ayan": 41, "2005": [41, 487], "match": [43, 150, 487, 490], "column": [43, 62, 260, 486, 487, 490], "node": [43, 469], "supp_url": 45, "article_url": 45, "supplementari": [45, 259, 260, 305], "materi": [45, 259, 305], "journal": [45, 305], "url": [45, 84, 102, 109, 211, 305, 343, 394, 442, 455, 487, 490], "articl": [45, 189, 487], "path": [45, 70, 99, 305, 328, 418, 436, 437, 438, 442, 486, 487], "standard_rel": 47, "liter": [47, 65, 87, 152, 211, 272, 273, 317, 320, 321, 418], "pchembl_value_non": 47, "activ": [47, 98, 100, 319, 421, 490], "todo": 47, "allow": [47, 418, 487], "must": [47, 418, 469, 487, 490], "pchembl": 47, "standard": [47, 107, 487], "need": [47, 144, 333, 443, 485, 487, 490], "standard_unit": 47, "why": [47, 487], "data_validity_com": 47, "part": [47, 136, 321, 418, 487, 489, 490], "assai": 48, "document": [49, 486, 487, 488], "pubm": [49, 115, 236, 402, 487], "convers": [49, 392, 485, 487, 489], "max_phase_threshold": 50, "indic": [50, 321, 442, 473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "threshold": [50, 316, 487], "maximum": 50, "phase": 50, "mechan": [51, 324, 487], "molecul": [52, 96, 486, 490], "variant": [54, 55, 56, 134, 486, 487], "citat": 55, "csv": [58, 63, 259, 260, 487], "old": [58, 418, 459, 486, 487], "callabl": [59, 102, 404, 418], "glom": [59, 60, 102, 206], "spec": [59, 60, 102, 206], "protect": 59, "coalesc": 59, "io": [60, 61, 102], "arbitrari": [60, 487, 490], "depth": [60, 291], "like": [60, 62, 239, 240, 242, 243, 244, 245, 246, 392, 407, 486, 487], "read": [61, 62, 63, 102, 237, 241, 259, 418, 443, 446, 453, 454, 485, 486, 489], "pass": [61, 331, 343, 348, 351, 361, 392, 487], "through": [61, 402, 486, 487], "col": [62, 464, 487], "fileobject": 62, "sep": [62, 444], "t": [62, 444, 445, 448, 449, 486, 487, 488, 490], "sep2": 62, "rem": 62, "hdr": 62, "encod": [62, 442, 443, 487, 490], "ascii": 62, "tabl": [62, 81, 99, 260, 274, 276, 277, 329, 330, 333, 380, 383, 387, 388, 391, 392, 485, 486, 488, 489], "open": [62, 208, 209, 210, 211, 212, 268, 442, 443, 486, 487], "stringio": 62, "buffer": 62, "separ": [62, 382, 385, 389, 409, 418, 487, 489], "subfield": 62, "prefix": [62, 115, 459, 487], "e": [62, 72, 95, 96, 97, 98, 99, 100, 123, 260, 267, 332, 351, 402, 407, 418, 469, 479, 481, 484, 485, 486, 489, 490], "g": [62, 123, 260, 332, 351, 418, 486, 487, 489, 490], "header": [62, 136, 137, 343, 382, 385, 389, 442, 444, 487], "If": [62, 70, 95, 152, 160, 205, 208, 209, 210, 211, 212, 276, 328, 343, 375, 392, 407, 486, 487, 490], "assum": [62, 70], "remov": [62, 275, 407, 418, 487, 489], "element": [62, 267, 333, 343, 348, 351, 361, 487], "replac": [62, 344, 442, 487], "xls_file": 63, "sheet": [63, 109], "use_openpyxl": 63, "cell_rang": 63, "m": [63, 487], "excel": [63, 487], "xl": 63, "convert": [63, 333, 343, 348, 351, 361, 466, 486, 487], "source_db": 65, "wikipathwai": 65, "reactom": [65, 295, 296, 297, 298], "target_db": 65, "cross": [65, 97, 152], "pathwai": [65, 73, 158, 162, 165, 169, 170, 171, 201, 296, 301, 302, 418, 421, 426, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 486, 487, 490], "propos": 65, "accept": [65, 469, 481, 484, 487, 490], "user": [65, 70, 85, 95, 96, 97, 98, 99, 100, 317, 320, 321, 444, 486, 487], "curat": [65, 72, 107, 187, 189, 198, 200, 201, 425, 426, 490], "across": [65, 487], "specifi": [65, 332, 407, 474, 481, 483, 484], "direct": [65, 175, 210, 385, 423, 426, 473, 474, 475, 476, 477, 478, 485], "consensuspathdb": [67, 68], "cpdb_interact": 68, "hprd": [68, 424, 487], "biogrid": [68, 423, 424, 487], "phosphopoint": 68, "mint": 68, "bind": [68, 237, 317, 320, 487], "intact": [68, 423, 424, 487], "from_fil": 70, "requir": [70, 297, 317, 320, 321, 366, 486, 487], "restrict": [70, 96, 351, 487], "two": [70, 95, 275, 469, 473, 474, 475, 476, 477, 478, 486, 487], "password": [70, 95, 96, 97, 98, 99, 100], "apart": [70, 205, 206, 486, 487], "rest": [70, 102, 343, 348, 351, 361, 490], "ignor": [70, 409, 418], "_credenti": 70, "exist": [70, 198, 276, 328, 436, 438, 442, 443, 447, 487], "its": [70, 97, 123, 343, 348, 351, 361, 436, 438, 449, 450, 481, 483, 484, 487, 489], "locat": [70, 486, 487, 489, 490], "": [70, 95, 160, 203, 205, 335, 392, 407, 409, 452, 486, 487, 489], "default": [70, 95, 115, 137, 205, 206, 208, 209, 210, 211, 212, 245, 266, 276, 328, 343, 348, 351, 361, 407, 418, 428, 429, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 469, 473, 474, 475, 476, 477, 478, 479, 484, 486, 487, 490], "secret": [70, 442, 487, 490], "directori": [70, 438, 486, 487, 489], "unchang": [70, 267], "explicit": 70, "runtimeerror": 70, "relation_typ": 72, "diseas": [72, 73, 156, 157, 158, 159, 160, 163, 169, 210, 212, 214, 215, 239, 245], "those": [72, 267, 487], "directevid": 72, "non": [72, 198, 418, 487], "too": [72, 487], "larg": [72, 297, 423, 442, 443, 486, 487, 489, 490], "follow": [72, 73, 312, 407, 442, 486, 487], "chemical_gen": 72, "chemical_diseas": 72, "disease_pathwai": 72, "chemical_phenotyp": 72, "gene_diseas": 72, "vocabulary_typ": 73, "vocabulari": 73, "chemic": [73, 317], "anatomi": 73, "phenotyp": 73, "level": [75, 77, 208, 209, 210, 211, 212, 324, 343, 351, 361, 395, 396, 397, 398, 418, 428, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 486, 490], "action": [75, 77], "chembl": [76, 78, 99, 178, 487, 489], "pubchem": [76, 78, 178, 311, 312, 314, 487], "html": [81, 102, 120, 333, 487, 490], "load": [82, 137, 147, 328, 404, 418, 428, 436, 485, 486, 489], "rescu": 82, "core_onli": 84, "direct_onli": 84, "small_scale_onli": 84, "passwd": [85, 95, 96, 97, 98, 99, 100, 444], "doe": [85, 137, 328, 407, 436, 446, 451, 456, 486, 487], "unknown": [85, 385, 389, 487], "reason": [85, 137, 486, 487], "In": [85, 407, 418, 442, 486, 487], "addit": [85, 137, 205, 206, 343, 348, 351, 361, 418, 442, 487, 490], "binary_data": [85, 442], "curl": [85, 490], "ha": [85, 178, 407, 418, 428, 442, 486, 487, 489, 490], "been": [85, 418, 446, 486, 487, 489, 490], "chang": [85, 343, 348, 351, 361, 445, 448, 459, 486, 487], "below": [85, 134, 343, 348, 351, 361, 486, 487], "necessari": [85, 404, 486, 487], "data_origin": 87, "textmin": [87, 92, 93], "knowledg": [87, 90, 91, 198, 259], "experi": [87, 88, 89, 198, 487], "jensen": [87, 88, 89, 90, 91, 92, 93], "lab": [87, 88, 89, 90, 91, 92, 93, 175, 176, 486, 487], "warn": [87, 92, 93, 487], "enorm": [87, 92, 93], "instead": [87, 237, 275, 276, 437, 446, 487, 488, 490], "credentials_fnam": [95, 96, 97, 98, 99, 100], "wrapper": [95, 407, 442, 459, 487], "around": [95, 407, 442, 459, 485, 486], "xml": [95, 487], "drugbank_drugs_ful": 95, "drugbank_targets_ful": 95, "second": [95, 137, 275, 487], "mail": [95, 96, 97, 98, 99, 100], "address": [95, 96, 97, 98, 99, 100, 487], "regist": [95, 96, 97, 98, 99, 100, 437], "account": [95, 96, 97, 98, 99, 100, 487], "detail": [95, 102, 151, 236, 317, 338, 343, 348, 351, 361, 486, 487], "drugbank_external_ids_ful": 95, "extern": [95, 152, 487], "drugbank_properties_ful": 95, "calcul": [95, 144], "statu": [96, 442, 459, 487], "variou": [97, 113, 363, 472, 486, 487], "pharma_act": [98, 100], "pharmacolog": [98, 100], "id_typ": [99, 136, 137, 389, 392, 487], "target_id_typ": [99, 257, 392, 487], "group": [99, 208, 209, 210, 211, 212, 465, 486, 487, 489], "ca": [99, 487], "inchikei": [99, 487], "inchi": [99, 178, 263, 487], "smile": [99, 178, 263, 487], "formula": 99, "kegg_compound": 99, "kegg_drug": 99, "pubchem_compound": 99, "pubchem_subst": 99, "chebi": [99, 166, 178, 300, 487], "pharmgkb": 99, "het": [99, 487], "login": 99, "credenti": 99, "q": 102, "pagin": [102, 487], "page_length": 102, "500": [102, 136, 137, 343, 348, 351, 361, 487], "size_param": 102, "size": [102, 137, 443, 465, 487], "page_param": 102, "offset": [102, 144, 145, 487], "by_pag": 102, "page_field": 102, "total_field": 102, "totalpag": 102, "record_nam": 102, "append": [102, 418], "until": [102, 487, 488], "end": [102, 487], "per": [102, 320, 321], "item": [102, 407, 436, 437, 459, 487], "total": [102, 459, 476, 477], "readthedoc": 102, "en": [102, 487], "latest": [102, 487], "tutori": [102, 486, 487], "downlod": 107, "manual": [107, 425, 426, 487], "gold": 107, "init_url": [109, 442], "taxon": [113, 363, 487], "metadata": [113, 266, 402, 407, 487], "db": [115, 486, 487], "cache_smal": [115, 266], "10": [115, 173, 259, 266, 465, 485, 487, 490], "metainform": 115, "client": [115, 351, 361, 486, 487], "api": [115, 273, 343, 348, 351, 361, 392, 486, 489, 490], "endpoint": [115, 487], "nlm": 115, "nih": [115, 238, 241, 245, 267], "gov": [115, 241], "book": [115, 485, 486], "nbk25499": 115, "chapter4": 115, "interst": 115, "understand": [115, 137, 487], "letter": [115, 487], "strip": [115, 343, 487], "geoprofil": [115, 487], "small": [115, 266, 273, 465, 473, 474, 475, 476, 477, 478, 486, 489], "less": [115, 266, 487], "except": [115, 266, 490], "lower": [115, 266, 314, 487], "enzym": [117, 118, 418, 485, 486, 489], "classif": 117, "digit": 117, "ec": [117, 487], "datasheet": [120, 121, 122, 345], "symbol": [120, 121, 122, 236, 345, 380, 387, 391, 486, 487, 490], "uniprot": [120, 121, 122, 144, 145, 150, 154, 168, 236, 294, 303, 329, 330, 333, 375, 377, 385, 389, 391, 392, 405, 485, 486, 489, 490], "bs4": [121, 296, 329, 333], "beautifulsoup": [121, 296, 329], "summari": [122, 487, 489], "text": [122, 259, 343, 348, 351, 361, 487], "module_nam": 123, "method_nam": 123, "submodul": [123, 486, 487, 489], "uniprot_db": 123, "all_uniprot": [123, 487], "graph_attr": 125, "vertex_attr": 125, "edge_attr": 125, "in_vivo": [127, 128, 129], "preprocess": [127, 256, 328, 343, 486], "ptm": [128, 418, 422, 423, 487, 489, 490], "kinas": [128, 343, 348, 351, 361, 487, 490], "substrat": [128, 418, 485, 486, 489], "missens": 134, "uniprotkb": [134, 150, 257, 487], "swiss": [134, 487], "prot": [134, 487], "ppi": [136, 137, 408, 486, 487], "uniprotkb_ac": [136, 137], "mydomain": [136, 137], "hmm": [136, 137], "maxwait": [136, 137], "180": [136, 137], "part_siz": [136, 137], "perform": [136, 137, 208, 209, 210, 211, 212, 343, 348, 351, 361, 442, 453, 454, 487], "same": [136, 273, 333, 339, 343, 348, 351, 361, 380, 385, 387, 391, 405, 418, 487], "get_ielm_hug": 136, "predict": [137, 331, 332], "domain": [137, 144, 324, 333, 487, 490], "motif": [137, 324, 487], "chunk": [137, 245], "retri": [137, 442], "case": [137, 407, 426, 443, 486, 487, 490], "failur": [137, 485], "reduc": [137, 487], "feedback": 137, "consol": [137, 442, 446, 485], "suppli": [137, 423], "pleas": [137, 486, 487], "what": [137, 452, 487, 490], "detect": [137, 332], "altern": [137, 343, 348, 351, 361, 486, 487, 490], "wait": 137, "time": [137, 150, 328, 418, 486, 487], "everyth": [137, 487], "again": [137, 418, 446, 473, 474, 475, 476, 477, 478, 486, 487], "send": [137, 418, 431, 442, 443, 465, 466], "residu": [144, 487], "chain": [144, 487], "pdb": [144, 145, 487, 490], "given": [144, 208, 209, 210, 211, 212, 407, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "support": [144, 486, 487, 489], "These": [145, 198, 343, 348, 351, 361, 380, 387, 391, 392, 423, 425, 426, 436, 487, 490], "understood": [145, 469], "miscor": 147, "complex_expans": 147, "only_id": 147, "smaller": [147, 487, 490], "memori": [147, 276, 297, 486, 487, 489], "footprint": 147, "go": [149, 152, 452, 486, 487, 489], "entri": [149, 150, 151, 152, 487], "page_s": 150, "200": 150, "review": [150, 343, 348, 351, 353, 356, 357, 360, 361, 364, 365, 392, 487], "tax_id": 150, "thei": [150, 486, 487, 489], "otherwis": [150, 152, 205, 377, 407, 487], "db_type": 152, "where": [152, 409, 442, 473, 474, 475, 476, 477, 478, 487, 490], "join": [160, 487], "asynchron": 160, "els": [160, 407], "them": [160, 418, 486, 487, 490], "togeth": [160, 392, 487], "mutual": 160, "yet": [160, 487, 490], "implement": [160, 459, 469, 473, 474, 475, 476, 477, 478, 479, 483, 484, 486, 489, 490], "ligand": [173, 243, 245, 490], "receptor": [173, 490], "kirouac": 173, "et": [173, 259, 487], "al": [173, 259, 487], "2010": 173, "embopress": 173, "doi": [173, 265, 267], "1038": 173, "msb": 173, "71": 173, "signalingflow": 175, "edg": [175, 176, 469, 485], "signalingdirect": 176, "brand": 178, "compani": [178, 487], "compound": [178, 272, 273, 487, 489], "literatur": [187, 189, 198, 200, 201, 418, 421, 425, 426, 485, 490], "mirna": [187, 189, 326, 427, 486, 489, 490], "natur": [189, 486], "com": [189, 442, 486, 487], "cdd201287": 189, "do": [198, 275, 333, 418, 451, 454, 456, 485, 490], "best": [198, 487], "our": [198, 485, 486], "paper": [198, 487, 490], "test": [198, 418, 442, 489], "find": [198, 486, 487], "neg": [198, 418, 487], "outcom": 198, "autophagi": 200, "autophagyregul": 200, "nrf2": [201, 421, 487], "nrf2ome": [201, 487], "side": [203, 312, 313, 314, 487], "off": [203, 447, 459], "label": [203, 313, 314, 339, 340, 380, 387, 392, 395, 396, 397, 398, 409, 418, 431, 436, 442, 443, 465, 469, 473, 474, 475, 476, 477, 478, 487], "mine": [203, 259, 335], "fda": [203, 211, 335], "event": [203, 335], "report": [203, 335, 487], "system": [203, 335, 442, 486, 487], "full_config": 205, "ebi": [205, 206, 338, 486], "lookup": [205, 206], "ones": [205, 206, 487], "config": [205, 437], "extra": 205, "abbrevi": 205, "describ": [205, 343, 348, 351, 361], "ol": 206, "listof_ontologi": 206, "simpli": [206, 487], "section": [206, 487], "respons": [206, 241, 343, 486, 487], "variabl": [208, 209, 210, 211, 212, 241, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487], "top": [208, 209, 210, 211, 212, 343, 351, 361, 413, 487], "baselin": 209, "express": [209, 240, 245, 319, 486, 487, 490], "score": [210, 212, 317, 320, 321, 487], "assoc_direct": 211, "assoc_indirect": 211, "expr": 211, "associationbyoverallindirect": 211, "associationbyoveralldirect": 211, "significantadversedrugreact": 211, "baselineexpress": 211, "either": [211, 263, 276, 339, 407, 442, 487, 490], "shorthand": 211, "indirect": [212, 487], "disease_id": 214, "pathogen_taxid": 214, "pathogen": [214, 215, 489], "evid": [214, 236, 260, 317, 320, 487, 489], "id_a": [217, 487], "id_b": [217, 487], "pc_label": 218, "version": [218, 226, 418, 486, 487, 489], "by_interact": 226, "12": [226, 485, 487], "num": 236, "length": [236, 343, 348, 351, 361, 487], "refseq": 236, "special": [236, 418, 487, 489], "_ref": 236, "hold": 236, "categori": [236, 324, 485, 489, 490], "phosphoprotein": [237, 487], "intermedi": [237, 487], "chunk_siz": [239, 240, 242, 243, 244, 245, 246], "100": [239, 240, 242, 243, 244, 245, 246, 343, 348, 351, 361, 486, 487], "half": [239, 240, 242, 243, 244, 245, 246, 487], "hour": [239, 240, 242, 243, 244, 245, 246, 487], "batch": [239, 240, 242, 243, 244, 245, 246, 392], "better": [239, 240, 242, 243, 244, 245, 246, 407, 487, 489, 490], "stai": [239, 240, 242, 243, 244, 245, 246, 487], "becaus": [239, 240, 242, 243, 244, 245, 246, 422, 487, 490], "higher": [239, 240, 242, 243, 244, 245, 246, 486], "caus": [239, 240, 242, 243, 244, 245, 246], "timeout": [239, 240, 242, 243, 244, 245, 246, 442], "error": [239, 240, 242, 243, 244, 245, 246, 343, 486, 490], "graphql": [241, 245], "boolean": [241, 385, 487], "gtex": [242, 245], "ortholog": [244, 245, 486, 487], "xref": [245, 246], "complet": [245, 343, 348, 351, 361, 486, 487, 489], "consist": [245, 459, 486, 487], "thousand": [245, 487], "uniprot_isoform": 257, "raw": [259, 276, 377, 481, 483, 484, 486, 487], "dictread": 259, "bachman": 259, "2019": [259, 487], "assembl": 259, "phosphoproteom": 259, "normal": [259, 486, 487], "phosphosit": [259, 487, 489, 490], "biorxiv": 259, "1101": 259, "822668v3": 259, "only_evid": 260, "only_literatur": 260, "nonetyp": [260, 418], "cid": [263, 309, 311, 312, 313, 314], "ftp": [263, 442, 487], "simpler": 263, "lowercas": [263, 487], "prefer": [263, 486, 487], "sid": 263, "idlist": [265, 267, 269, 270], "pmc": [265, 267], "pmid": [265, 266, 267, 268, 401, 487], "strict": [267, 331, 332, 487], "compli": 267, "attempt": [267, 330, 429, 486, 487], "neither": [267, 487], "manuscript": [267, 489], "browser": [268, 487, 490], "output": [273, 320, 487], "ramp_id_typ": [273, 487], "while": [273, 276, 418, 442, 459, 486, 487], "former": [273, 392, 487, 489], "mysql": [273, 487, 489], "dump": [273, 274, 276, 277, 328, 404, 436, 487], "fast": [273, 487], "sql": [273, 274, 276, 277, 487], "huge": [273, 385, 487, 488], "slow": [273, 442, 487], "alreadi": [273, 333, 418, 428, 487], "id_type_a": [275, 339, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 487], "id_type_b": [275, 339, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 487], "curi": 275, "sqlite": [276, 487], "sqlite3": [276, 487], "connect": [276, 469, 486, 489, 490], "temporari": 276, "show": [277, 442, 487, 490], "acsn": [282, 426], "protein_name_typ": [283, 294], "mandatory_ref": [284, 292], "elem": 286, "cref": 291, "entity_uniprot": [291, 293], "complexvari": 291, "cplex": [291, 487], "stoichiometri": [291, 487], "control": [292, 429, 469, 487, 489], "biopax_fil": 294, "clean": [294, 487], "biopax": [294, 297, 486, 489], "binari": [294, 297, 442], "sbml": [295, 296, 298], "representationa": 296, "pathwaya": 296, "cachefil": [297, 328, 402], "ask": [297, 487], "appli": [297, 343, 418, 453, 487], "criteria": 297, "veri": [297, 486, 487, 490], "stringent": 297, "few": [297, 486, 487, 489], "free": [297, 418, 486, 487, 489], "approx": [297, 487], "2g": 297, "hierarchi": 301, "atc": [307, 311], "umls_concept_on_label": [308, 310], "umls_concept_in_meddra": [308, 310], "side_effect": [308, 310], "meddra_id": [309, 312], "side_effect_nam": [309, 312], "frequenc": [310, 313, 314], "float": 310, "uml": [313, 314], "concept": [313, 314, 487], "attent": 313, "sider_side_effect": 313, "20k": 313, "row": [313, 487, 490], "freq": 314, "independ": [314, 487], "coverag": [314, 428, 490], "ncbi_tax_id": [317, 319, 320, 321, 363, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 404, 487, 490], "score_threshold": [317, 319, 320, 321], "highest_confid": [317, 320, 321], "high_confid": [317, 320, 321], "medium_confid": [317, 320, 321], "low_confid": [317, 320, 321], "physical_interaction_scor": [317, 320], "link": 317, "subscor": [317, 320, 321], "defin": [317, 320, 321, 392, 418, 473, 474, 475, 476, 477, 478, 481, 483, 484, 485, 486, 490], "interactor": [317, 333], "we": [317, 320, 469, 481, 484, 486, 487, 488, 490], "minimum": [317, 320, 321], "pre": [317, 320, 321, 485], "confid": [317, 320, 321, 428, 487, 490], "stimul": [319, 487], "inhibit": [319, 487], "channel": [320, 321, 487, 490], "form": [320, 442], "subnetwork": 321, "tax": [322, 392], "scientif": [322, 485], "switch": 324, "elm": [324, 422], "resolut": 324, "classifi": [324, 487, 490], "accord": [324, 394, 469, 487], "intract": 326, "save": [328, 485, 486], "next": [328, 436, 487], "pickl": [328, 485, 486], "By": [328, 343, 418, 451, 456, 487, 490], "soup": 329, "look": [329, 330, 333, 392, 404], "up": [329, 330, 333, 404, 487], "instanc": [329, 418, 429, 431, 442, 443, 457, 459, 465, 469, 486, 487, 490], "trip_get_uniprot": 329, "syn": [330, 487], "exclude_method": [331, 332], "infer": [331, 332, 487], "specul": [331, 332], "speci": [331, 332, 487, 489], "obtain": [331, 392, 402, 487], "trip_process": 331, "definit": [331, 418, 485, 486, 489], "dadio": 332, "take_a_trip": 332, "provcess": 332, "discard": 332, "bait": 332, "tab": [333, 343], "intr": 333, "trp_uniprot": 333, "tag": [333, 487], "fill": 333, "so": [333, 445, 451, 453, 456, 486, 487], "twice": 333, "trp": 333, "safeti": 335, "ac": [338, 486, 487], "uk": 338, "ucqueri": 338, "listsourc": 338, "integ": [339, 395, 396, 397, 398, 473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "unichem_sourc": 339, "unichem_info": 340, "ncbi_id": [342, 487], "latin": [342, 487], "english": [342, 487], "latin_synonym": [342, 487], "construct": [343, 442, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484], "readi": [343, 348, 351, 361, 487], "bypass": [343, 348, 351, 361], "simpl": [343, 348, 351, 361, 418, 486, 487, 490], "concaten": [343, 348, 351, 361], "nest": [343, 348, 351, 361, 487], "exampl": [343, 348, 351, 361, 394, 428, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 485, 486], "built": [343, 348, 351, 361, 392, 418, 485, 486], "sever": [343, 348, 351, 361, 486, 487], "query_build": [343, 351, 361, 487], "AND": [343, 348, 351, 361, 487, 490], "organism_id": [343, 348, 351, 361, 487], "abov": [343, 348, 351, 361, 380, 387, 391, 402, 486, 487, 490], "oper": [343, 348, 351, 361, 487], "within": [343, 348, 351, 361, 407, 459, 469, 481, 484, 486, 487, 490], "OR": [343, 348, 351, 361, 487], "10116": [343, 348, 351, 361, 487, 490], "op": [343, 348, 351, 361, 486, 487], "underscor": [343, 348, 351, 361, 409, 418, 487], "mass": [343, 348, 351, 361, 487], "50000": [343, 348, 351, 361, 487], "TO": [343, 348, 351, 361, 487], "lit_author": [343, 348, 351, 361, 487], "huang": [343, 348, 351, 361, 487], "kovac": [343, 348, 351, 361, 487], "_and": [343, 348, 351, 361, 487], "parenthes": [343, 348, 351, 361, 487], "interv": [343, 348, 351, 361, 459], "help": [343, 348, 351, 361, 485], "search": [343, 348, 351, 361], "syntax": [343, 348, 351, 361], "_field_synonym": [343, 351, 361], "return_field": [343, 351, 361], "__iter__": 343, "over": [343, 354, 489], "skip": [343, 464], "empti": [343, 407, 486, 487], "linebreak": 343, "split": [343, 489], "fail_on_empti": 343, "name_process": 343, "differ": [343, 392, 418, 486, 487, 489, 490], "appropri": [343, 486, 487], "especi": [343, 487, 489], "were": [343, 351, 361, 407, 487], "exactli": [343, 351, 361, 487, 490], "wa": [343, 351, 361, 486, 487], "kind": [343, 351, 361, 487, 490], "previou": [343, 351, 361], "urlencod": 343, "suitabl": [343, 487], "url_plain": 343, "plain": [343, 487], "entry_vers": [344, 487], "sequence_vers": [344, 487], "entry_nam": [344, 487], "replaced_bi": [344, 487], "archiv": [345, 442, 443], "delet": [345, 445, 446, 486, 487, 489], "secondari": [346, 409, 418, 486, 487], "primari": [346, 409, 418, 486, 487], "site": [348, 487, 489], "insert": 348, "confirm": [350, 352], "swissprot": [351, 363, 370, 371, 372, 373, 374, 375, 391, 392, 486, 487], "homo": [351, 487], "sapien": [351, 487], "trembl": [351, 373, 374, 375, 392, 486, 487], "cover": [351, 486, 487], "uniprotqueri": [351, 361, 487], "histori": [354, 485], "recent": [354, 486, 487], "oldest": [354, 486], "fit": [366, 487], "tell": [373, 374, 375, 487, 490], "consid": [375, 402, 487], "mappinginput": [380, 381, 382, 383, 386, 387, 388, 390, 391, 392], "pro_id_type_a": [380, 387], "pro": [380, 387, 487], "automat": [380, 387, 391, 486, 487, 489], "give": [380, 387, 391, 459, 487], "overrid": [380, 387, 391, 392], "pro_id_type_b": [380, 387], "just": [380, 387, 391, 485], "biomart_id_type_a": 381, "biomart_id_type_b": 381, "input_": 382, "col_a": 382, "col_b": 382, "paramat": [383, 388, 390], "metabolom": [383, 485, 486], "type_": 384, "resource_id_type_a": [384, 487], "resource_id_type_b": [384, 487], "input_method": [384, 404, 405, 487], "id_col_a": [385, 487], "id_col_b": [385, 487], "entity_type_a": 385, "entity_type_b": 385, "is_direct": [385, 487], "sign": [385, 426], "input": [385, 389, 392, 404, 485, 486, 489], "extra_edge_attr": [385, 487], "extra_node_attrs_a": 385, "extra_node_attrs_b": 385, "taxon_a": 385, "taxon_b": 385, "post_transl": [385, 418, 487], "positive_filt": 385, "negative_filt": 385, "mark_sourc": 385, "mark_target": 385, "input_arg": [385, 404, 428], "curl_arg": 385, "must_have_refer": 385, "unique_field": 385, "expand_complex": 385, "allow_loop": [385, 487], "only_default_organ": 385, "creat": [385, 418, 442, 459, 486], "vertex": [385, 469, 473, 474, 475, 476, 477, 478, 487], "particular": [385, 394, 487], "vertic": [385, 469, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 487], "fname": [386, 487], "consortium": [387, 487], "ramp": [388, 485], "id_col": 389, "extra_attr": [389, 405, 487], "unichem": [390, 487, 489], "uniprot_id_type_a": 391, "uniprot_id_type_b": 391, "upload": 391, "webservic": [391, 485], "would": [392, 487, 488], "interest": [392, 485, 486, 488], "directli": [392, 409, 466, 485, 486, 490], "ye": 392, "To": [392, 487, 490], "programmat": [392, 487], "interfac": [392, 486, 487], "slightli": [392, 418], "capabl": 392, "some": [392, 407, 452, 457, 486, 487, 490], "latter": [392, 487], "static": 392, "resource_id_typ": 392, "known": [392, 487, 490], "full_nam": [394, 487], "purpos": [394, 418, 487], "attrib": [394, 418], "enabl": [394, 487], "academ": [394, 418, 487], "redistribut": [394, 418, 487, 489], "compat": [394, 418, 489], "alik": [394, 418], "licensefeatur": [395, 397, 398], "classmethod": [395, 396, 397, 398, 442], "check_level": [395, 396, 397, 398], "int_to_level": [395, 396, 397, 398], "nearest": [395, 396, 397, 398], "ordin": [395, 396, 397, 398], "scale": [395, 396, 397, 398, 481, 483, 484, 487], "level_to_int": [395, 396, 397, 398], "to_int": [395, 396, 397, 398], "featur": [395, 396, 397, 398, 485, 487], "pp": 402, "htp_threshold": 402, "20": [402, 487], "studi": [402, 486, 487], "high": [402, 487], "data_attr_nam": 404, "logger": [404, 418, 431, 442, 443, 465], "load_data": 404, "_process_method": 404, "set_method": 404, "evidence_typ": [405, 408, 410], "via": [405, 406, 408, 409], "id_type_enzym": [405, 487], "id_type_substr": 405, "organisms_support": 405, "resource_attr": 405, "resourceattribut": [405, 408], "get_via": 405, "copi": [405, 486, 487], "origin": [405, 485, 486, 489], "come": [405, 486, 487, 490], "data_typ": [406, 409, 410], "mutablemap": 407, "formerli": [407, 487], "thin": 407, "solut": [407, 487], "organis": 407, "clear": [407, 487], "d": [407, 428, 487], "k": [407, 487], "view": [407, 486], "pop": 407, "v": [407, 487], "found": [407, 487], "keyerror": 407, "popitem": 407, "setdefault": 407, "f": 407, "lack": [407, 422], "networkresourcekeybas": 409, "last": [409, 487], "came": 409, "brows": [415, 485], "logfil": [415, 487], "resource_info_path": 418, "posixpath": 418, "home": [418, 487], "runner": 418, "use_package_path": 418, "aim": [418, 486, 487], "central": [418, 487], "commun": [418, 485, 486, 489], "14": [418, 485, 487], "01": [418, 487], "2020": [418, 487], "initi": [418, 459, 487, 489], "step": [418, 454, 459, 487], "develop": [418, 486], "info": [418, 485, 490], "02": [418, 487], "inherit": [418, 487], "make": [418, 431, 442, 443, 450, 456, 457, 465, 487, 490], "prepend": [418, 431, 442, 443, 465], "messag": [418, 431, 442, 443, 446, 449, 450, 465, 485, 490], "add_resource_attr": 418, "abstractresourc": 418, "It": [418, 436, 442, 443, 466, 486, 487, 490], "modifi": [418, 449], "place": [418, 487], "noth": [418, 446], "collect_interact": 418, "pathway_noref": [418, 487], "pathway_al": [418, 487], "activity_flow": [418, 487], "mirna_target": [418, 487], "dorothea": [418, 489, 490], "tfregulon": [418, 428], "omnipath": [418, 423, 425, 426, 485, 489, 490], "reaction_pc": 418, "enzyme_substr": [418, 487], "extra_direct": 418, "small_molecule_protein": [418, 487], "tf_mirna": [418, 487], "pathwaycommon": [418, 487, 489], "pathwaycommons_transcript": 418, "interaction_htp": 418, "interaction_misc": [418, 487], "ligand_receptor": [418, 487, 489], "lncrna_target": 418, "transcription_onebyon": [418, 487], "transcription_dorothea": 418, "ptm_noref": [418, 487], "ptm_all": [418, 487], "reaction_misc": [418, 487], "post_transcript": 418, "process_descript": 418, "drug_target": 418, "license_purpos": [418, 487], "commerci": 418, "profit": [418, 487], "license_shar": 418, "noderiv": 418, "noshar": 418, "deriv": [418, 473, 483, 487, 490], "license_attrib": 418, "noattrib": 418, "composit": [418, 487, 490], "incld": 418, "mani": [418, 442, 486, 487, 489, 490], "overlap": [418, 473, 474, 475, 476, 477, 478, 487], "among": [418, 487, 490], "safest": 418, "sequenti": 418, "legal": [418, 487], "desir": [418, 459, 473, 474, 475, 476, 477, 478], "condit": [418, 487], "alter": [418, 487], "even": [418, 447, 487, 489, 490], "mention": [418, 487], "who": 418, "networkinput": [418, 421, 422, 423, 424, 425, 426, 427, 428, 487], "__resource__": 418, "whole": [418, 487], "networkresourc": [418, 487], "equal": 418, "incid": 418, "flexibl": [418, 487], "collect_network": [418, 487], "license_filt": 418, "secondary_resourc": 418, "postfix": [418, 487], "tfacts_collectri": 418, "forc": [418, 459, 487], "remove_old": 418, "py": 418, "befor": [418, 459, 487], "potenti": [418, 487], "overwrit": 418, "adhesom": [421, 487], "intern": [421, 422, 423, 424, 425, 426, 427, 428, 487, 489], "input_format": [421, 422, 423, 424, 425, 426, 427, 428, 486, 487], "arn": [421, 487], "baccin2019": [421, 487], "ca1": [421, 487], "cellchatdb": [421, 487], "cellink": [421, 487], "cellphonedb": [421, 485], "celltalkdb": [421, 487], "connectomedb": [421, 487], "death": [421, 487], "guide2pharma": [421, 487], "hpmr": [421, 487], "icellnet": [421, 487], "lrdb": [421, 487], "macrophag": [421, 487], "pdz": [421, 487], "ramilowski2015": [421, 487], "scconnect": [421, 487], "signalink3": [421, 487, 490], "signor": [421, 428, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487, 490], "spike": [421, 487, 490], "talklr": [421, 487], "trip": [421, 487], "flow": [421, 490], "dbptm": [422, 487], "depod": [422, 487], "domino": 422, "hprd_p": 422, "iptmnet": [422, 487], "kea": [422, 487], "lmpid": 422, "phelm": 422, "psite": 422, "alz": 423, "ccmap": [423, 424], "dip": [423, 424], "innatedb": [423, 424], "lit17": 423, "matrixdb": [423, 424, 487], "mppi": [423, 424], "netpath": [423, 487], "regulatori": [424, 486, 489], "laudanna_direct": 425, "laudanna_effect": 425, "subset": 425, "undirect": [425, 473, 474, 475, 476, 477, 478, 487], "oreganno_old": 427, "ab": 428, "encode_dist": 428, "encode_prox": 428, "htri": 428, "medicu": 428, "oreganno": 428, "pazar": 428, "trrust": 428, "suffici": 428, "pa": [428, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487], "init_network": [428, 487], "b": [428, 487], "c": [428, 473, 474, 475, 476, 477, 478, 487], "reload": [429, 487], "instanti": [429, 487], "onc": [429, 442, 486, 487], "demand": [429, 487], "license_dir": 431, "actual": [436, 469, 487, 488], "typic": [436, 486, 487], "quicker": 436, "uniqu": [437, 487, 490], "similar": [437, 486, 487, 490], "cache_item": 437, "md5": 437, "hash": [437, 487], "anyth": [437, 445, 448, 469, 481, 484, 487], "cachedir": 438, "ensur": [438, 486, 487], "silent": 442, "post": 442, "req_head": [442, 487], "debug": [442, 451, 452, 457], "outf": [442, 464], "compr": [442, 443], "files_need": [442, 443], "connect_timeout": 442, "ignore_content_length": 442, "init_fun": 442, "get_jsessionid": 442, "init_use_cach": 442, "default_mod": [442, 443], "r": [442, 443, 486, 487, 490], "override_post": 442, "init_head": 442, "return_head": 442, "compress": [442, 443], "write_cach": 442, "force_quot": 442, "sftp_user": 442, "sftp_passwd": 442, "sftp_passwd_fil": 442, "sftp_port": 442, "22": [442, 444, 487, 490], "sftp_host": 442, "sftp_ask": 442, "setup": [442, 454, 487], "cache_dir": 442, "bypass_url_encod": 442, "empty_attempt_again": 442, "keep_fail": 442, "alpn": 442, "http2": 442, "fileopen": 442, "pycurl": [442, 487], "vast": [442, 487], "amount": [442, 487], "cooki": 442, "param": [442, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484], "multipart": 442, "quot": 442, "redirect": 442, "pointer": [442, 443], "gzip": [442, 443], "tar": [442, 443], "gz": [442, 443], "zip": [442, 443], "abl": [442, 486, 487], "progress": 442, "cache_path": 442, "close": [442, 487], "construct_binary_data": 442, "byte": 442, "is_quot": 442, "stackoverflow": 442, "question": [442, 486], "1637762": 442, "php": [442, 487], "open_tgz": [442, 443], "replace_forbidden": 442, "repl": 442, "_": 442, "charact": [442, 487], "forbidden": 442, "certain": [442, 443, 485], "slash": 442, "unix": 442, "window": 442, "environ": [442, 487], "set_binary_data": 442, "transmit": 442, "attach": [442, 473, 474, 475, 476, 477, 478], "filenam": [442, 444, 465, 487], "url_fix": 442, "charset": 442, "utf": [442, 443], "8": [442, 443, 485, 486, 487], "121017": 442, "854988": 442, "file_param": 443, "_open": 443, "set_fileobj": 443, "bz2": 443, "select": [443, 485, 490], "multifil": 443, "examin": 443, "host": [444, 487, 489], "port": 444, "rownam": 444, "_global_context_off": [445, 447, 449, 451, 453, 456], "context": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 469, 473, 474, 475, 476, 477, 478, 481, 484, 487], "handler": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457], "behaviour": [445, 448, 449, 453, 487], "won": [445, 448, 449, 487], "behind": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487], "scene": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487], "cachedel": [445, 446], "data_format": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487, 489], "load_resourc": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 487], "_global_context_on": [446, 448, 450, 452, 454, 457], "Then": [446, 487], "dryrun": [446, 453, 454], "turn": [446, 447, 448], "upon": [446, 487], "let": [446, 487], "know": [446, 487], "cache_on": 447, "As": [448, 449, 487, 490], "probabl": [448, 487], "cacheprint": [449, 450], "avoid": [451, 456, 473, 474, 475, 476, 477, 478, 486, 487], "restor": [451, 453, 456], "cache_debug_off": 451, "issu": [452, 457, 486], "want": [452, 457, 485, 486, 490], "cache_debug_on": 452, "cache_dryrun_off": 453, "cache_dryrun_on": 454, "itself": [456, 457, 487], "lastcurl": [456, 457, 487], "preserv": [456, 457, 487], "cache_preserve_off": 456, "cache_preserve_on": 457, "percent": 459, "done": [459, 486], "init": 459, "unit": 459, "had": 459, "my": [459, 486], "progressbar": 459, "now": [459, 487], "great": [459, 487], "tqdm": 459, "move": [459, 489], "oldprogress": 459, "get_desc": 459, "suppos": 459, "someth": [459, 486, 487], "constant": [459, 473, 474, 475, 476, 477, 478], "life": 459, "stage": [459, 487], "task": 459, "init_tqdm": 459, "set_don": 459, "posit": [459, 473, 474, 475, 476, 477, 478, 487], "bar": 459, "set_statu": 459, "set_tot": 459, "msg": [459, 487], "busi": 459, "termin": [459, 487], "finish": [459, 487], "destroi": 459, "xsize": 464, "intersect": 464, "cairotest": 464, "pdf": [464, 465], "width": 464, "1024": 464, "height": 464, "bgcol": 464, "embl_gray125": 464, "interscol": 464, "ysize": 464, "ycol": 464, "margin": [464, 465, 487], "24": [464, 487], "mincircl": 464, "cellpad": 464, "graph": [465, 466, 469, 472, 479, 481, 483, 484, 487, 489], "graphix_dir": 465, "graphix_format": 465, "title_text": 465, "title_font_famili": 465, "title_font_s": 465, "title_color": 465, "646567": 465, "layout": [465, 469, 481, 483, 484], "fruchterman_reingold": 465, "layout_param": 465, "vertex_label": 465, "vertex_s": [465, 487], "vertex_label_s": [465, 487], "degree_label_s": 465, "edge_width": [465, 487], "vertex_color": [465, 487], "6ea945": 465, "vertex_label_color": [465, 487], "007b7f": 465, "vertex_alpha": 465, "aa": [465, 487], "vertex_frame_color": 465, "ffffff00": 465, "vertex_frame_width": [465, 487], "edge_label": 465, "edge_label_s": 465, "edge_label_color": 465, "edge_curv": 465, "edge_color": [465, 487], "818284": 465, "edge_alpha": 465, "autocurv": 465, "vertex_label_font": 465, "san": 465, "serif": 465, "edge_label_font": 465, "edge_arrow_s": 465, "edge_arrow_width": 465, "palett": [465, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484], "bbox": [465, 469, 481, 484], "dimens": 465, "1280": 465, "draw": [466, 469, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484], "routin": [466, 479], "cairo": [466, 469, 473, 474, 475, 476, 477, 478, 481, 484, 487], "surfac": [466, 487], "l": [466, 469, 473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "defaultgraphdraw": [466, 481, 483, 484], "ubigraph": 466, "displai": [466, 487], "ubigraphdraw": 466, "u": [466, 486, 487], "ubietylab": 466, "net": [466, 487], "igraph": [466, 469, 481, 483, 484, 485, 486, 489], "cytoscap": [466, 486, 487], "cytoscaperpc": 466, "plugin": 466, "gforg": 466, "nbic": 466, "nl": 466, "project": 466, "cytoscapegraphdraw": 466, "abstractcairographdraw": [468, 469, 470, 471], "vertex_drawer_factori": 469, "edge_drawer_factori": 469, "label_drawer_factori": 469, "visualis": 469, "2d": 469, "plane": 469, "straight": [469, 473, 474, 475, 476, 477, 478, 487], "curv": 469, "when": [469, 473, 474, 475, 476, 477, 478, 481, 483, 484, 486, 487], "invok": 469, "plot": [469, 472, 485, 489], "__plot__": 469, "drawer": [469, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484], "boundingbox": [469, 481, 484], "bound": [469, 481, 483, 484, 487], "box": [469, 481, 483, 484], "constructor": [469, 481, 484], "factori": 469, "abstractcairovertexdraw": [469, 484], "area": 469, "color": [469, 473, 474, 475, 476, 477, 478, 481, 483, 484], "defaultvertexdraw": 469, "abstractedgedraw": [469, 474, 475, 478], "style": [469, 472, 489, 490], "drawn": [469, 473, 474, 475, 476, 477, 478, 481, 483, 484], "arrowedgedraw": 469, "textdraw": 469, "abstract": [473, 481, 483], "concret": [473, 483], "draw_directed_edg": [473, 474, 475, 476, 477, 478], "src_vertex": [473, 474, 475, 476, 477, 478], "dest_vertex": [473, 474, 475, 476, 477, 478], "draw_loop_edg": [473, 474, 475, 476, 477, 478], "loop": [473, 474, 475, 476, 477, 478, 485], "circl": [473, 474, 475, 476, 477, 478], "draw_undirected_edg": [473, 474, 475, 476, 477, 478], "get_label_posit": [473, 474, 475, 476, 477, 478], "midpoint": [473, 474, 475, 476, 477, 478], "align": [473, 474, 475, 476, 477, 478], "tri": [473, 474, 475, 476, 477, 478], "x": [473, 474, 475, 476, 477, 478, 481, 483, 484], "y": [473, 474, 475, 476, 477, 478, 481, 483, 484, 487], "horizont": [473, 474, 475, 476, 477, 478], "taken": [473, 474, 475, 476, 477, 478], "textalign": [473, 474, 475, 476, 477, 478], "alpha_at_src": 474, "alpha_at_dest": 474, "vari": 474, "alpha": [474, 476, 477, 487], "destin": [474, 476, 477, 478], "arrow": 475, "alphavaryingedgedraw": [476, 477], "opac": [476, 477], "zero": [476, 477], "transpar": [476, 477], "interpol": [476, 477], "taper": 478, "wider": 478, "narrow": 478, "abstractvertexdraw": 481, "abstractcairodraw": 481, "canva": 481, "visual_vertex": [481, 483, 484], "coord": [481, 483, 484], "Its": [481, 483, 484, 487], "visualvertexbuild": [481, 483, 484], "coordin": [481, 483, 484, 486, 487], "algorithm": [481, 483, 484], "abstractdraw": 483, "welcom": [485, 487], "pypath": [485, 489, 490], "instal": 485, "doc": [485, 489], "manag": 485, "faq": 485, "contact": [485, 487], "impressum": 485, "releas": [485, 487], "mous": [485, 486, 487], "rat": 485, "role": [485, 486], "inter": [485, 486], "cellular": [485, 486], "explor": [485, 487], "32": [485, 487], "31": [485, 487], "74": [485, 487], "93": 485, "110": [485, 487], "11": [485, 487], "13": [485, 487], "upcom": 485, "how": [485, 486], "navig": 485, "introduct": 485, "app": [485, 486], "hmdb": 485, "self": 485, "sanit": 485, "intercellular": [485, 486, 489], "quantit": 485, "overview": 485, "intercel": [485, 486, 489, 490], "log": [485, 486, 489], "disabl": 485, "write": [485, 486], "bel": [485, 486, 489], "export": [485, 486, 489], "legaci": 485, "quickli": 485, "plai": 485, "causal": [485, 490], "out": [486, 487], "packag": [486, 487], "omnipathr": [486, 487], "popular": 486, "versatil": [486, 487, 489], "150": [486, 487], "don": [486, 487, 488, 490], "yourself": 486, "try": [486, 487], "builder": 486, "peopl": [486, 487], "satisfi": 486, "realli": [486, 487], "fresh": [486, 487], "pypi": [486, 487], "pip": 486, "git": 486, "github": [486, 487], "saezlab": 486, "comprehens": [486, 487, 489, 490], "guid": [486, 487], "experienc": 486, "well": [486, 487], "platform": 486, "biolog": [486, 487], "languag": [486, 487], "major": [486, 487, 489, 490], "distinguish": 486, "overal": [486, 487], "core": [486, 487, 489], "downlad": 486, "applic": [486, 487], "stand": 486, "alon": 486, "processor": 486, "begin": 486, "fundament": [486, 487], "design": [486, 487], "principl": 486, "todai": 486, "expos": 486, "rich": [486, 487], "five": [486, 487], "enz_sub": [486, 487, 490], "howev": [486, 487], "often": [486, 487], "get_db": [486, 487], "But": [486, 487], "subsequ": [486, 487], "easi": [486, 487], "mb": [486, 487], "gb": [486, 487], "long": [486, 487], "prone": 486, "truncat": [486, 487], "due": [486, 487], "interrupt": 486, "problemat": 486, "possibli": [486, 487], "anoth": [486, 487, 490], "sometim": [486, 487, 489, 490], "offlin": 486, "encount": 486, "fix": [486, 487, 489], "much": [486, 487, 489, 490], "faster": [486, 487], "still": [486, 487], "standalon": [486, 487], "script": [486, 487], "varieti": [486, 487, 490], "predefin": [486, 487], "map_nam": [486, 487], "p00533": [486, 487, 490], "genesymbol": [486, 487, 490], "egfr": [486, 487, 490], "homologen": [486, 487, 489, 490], "q01279": [486, 487], "run": [486, 487, 490], "doesn": [486, 487], "pyproject": 486, "toml": 486, "besid": [486, 487], "privat": 486, "sensit": 486, "matter": [486, 487], "feel": [486, 487], "omnipathdb": [486, 487, 490], "gmail": 486, "d\u00e9ne": 486, "t\u00fcrei": 486, "saez": 486, "contribut": 486, "scientist": 486, "erva": 486, "ulusoi": 486, "melih": 486, "darcan": 486, "\u00f6mer": 486, "kaan": 486, "vural": 486, "tennur": 486, "k\u0131l\u0131\u00e7": 486, "elif": 486, "\u00e7evrim": 486, "b\u00fcnyamin": 486, "\u015fen": 486, "atabei": 486, "\u00fcnl\u00fc": 486, "mert": 486, "erg\u00fcn": 486, "hu": [486, 487], "scienc": 486, "pi": [486, 487], "tunca": 486, "do\u011fan": 486, "leila": 486, "gul": 486, "dezs\u0151": 486, "m\u00f3do": 486, "m\u00e1rton": 486, "\u00f6lbei": 486, "tam\u00e1": 486, "korcsm\u00e1ro": 486, "korcsmaro": 486, "michael": 486, "klein": 486, "fabian": 486, "charl": 486, "taplei": 486, "hoyt": 486, "daniel": 486, "domingo": 486, "fern\u00e1ndez": 486, "ad": [486, 487], "olga": 486, "ivanova": 486, "introduc": 486, "sophia": 486, "m\u00fcller": 486, "dott": 486, "collectri": [486, 487], "nicol\u00e0": 486, "palacio": 486, "sebastian": 486, "lobentanz": 486, "ahmet": 486, "rifaioglu": 486, "mainten": [486, 487], "refactor": 486, "aurelien": 486, "dugourd": 486, "christina": 486, "schmidt": 486, "maintain": [486, 487], "francesco": 486, "ceccarelli": 486, "attila": 486, "g\u00e1bor": 486, "alberto": 486, "valdeoliva": 486, "logo": 486, "jakob": 486, "wirbel": 486, "graphic": 486, "spencer": 486, "phillip": 486, "embl": [486, 487], "bird": 486, "ey": 486, "15": 487, "16": 487, "17": 487, "18": 487, "19": 487, "21": 487, "segment": 487, "bioconductor": 487, "furthermor": 487, "enjoi": 487, "almost": [487, 489], "unlimit": 487, "tour": 487, "chanc": 487, "hesit": 487, "__version__": 487, "execut": 487, "0m": 487, "49": 487, "47": 487, "2023": 487, "03": 487, "09": 487, "39": 487, "36": 487, "easiest": 487, "henc": [487, 489, 490], "quick": 487, "34": 487, "27": 487, "2022": 487, "lt": 487, "databasemanag": 487, "0x602fb851cd90": 487, "gt": 487, "tf_target": [487, 490], "small_molecul": 487, "mirna_mrna": 487, "lncrna_mrna": 487, "offer": [487, 489], "cu": 487, "83": 487, "7980": 487, "35551": 487, "1m": 487, "55": 487, "18558": 487, "94358": 487, "tft": 487, "2m": 487, "72": 487, "54": 487, "18986": 487, "326708": 487, "mi": 487, "28": 487, "1264": 487, "3288": 487, "tmi": 487, "41": 487, "1032": 487, "4960": 487, "lnc": 487, "33": 487, "243": 487, "217": 487, "alloster": 487, "metabolit": [487, 489], "experiment": 487, "extend": 487, "futur": [487, 490], "smol": 487, "94": 487, "57": 487, "1980": 487, "3147": 487, "26": 487, "41426": 487, "co": 487, "28173": 487, "quit": 487, "43": 487, "60": 487, "5490653": 487, "50872": 487, "68": 487, "heavi": 487, "ic": 487, "23": 487, "37": 487, "301527": 487, "48570": 487, "biomed": 487, "troublesom": 487, "broken": 487, "daili": 487, "after": [487, 490], "cytosig": 487, "signor_interact": 487, "_interact": 487, "_enz_sub": 487, "_complex": 487, "_annot": 487, "intend": 487, "respect": 487, "fulli": 487, "_raw": 487, "_map": 487, "bring": 487, "state": 487, "though": [487, 490], "mai": 487, "observ": 487, "repeat": 487, "pattern": 487, "arbitrarili": 487, "toward": 487, "straightforward": 487, "outsid": 487, "signor_complex": 487, "intera": 487, "complexaggreg": 487, "p23511_p25208_q13952": 487, "nfy": 487, "p68104_p85299_q6r327_q8tb45_q9bvc4": 487, "mtorc2": 487, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 487, "mtorc1": 487, "p63208_q13616_q9y297": 487, "scf": 487, "betatrcp": 487, "q09472_q92793": 487, "cbp": 487, "p300": 487, "q09472_q92793_q92831": 487, "pcaf": 487, "q13485_q15796": 487, "smad2": [487, 490], "smad4": 487, "p84022_q13485": 487, "smad3": 487, "p05412_q13485": 487, "jun": 487, "q15796_q9hau4": 487, "smurf2": 487, "o15105_q01094_q13547": 487, "smad7": 487, "hdac1": 487, "e2f": 487, "p19838_q04206": 487, "nfkb": 487, "p65": 487, "p50": 487, "o14920_o15111": 487, "ik": 487, "1000": 487, "17699": 487, "readabl": 487, "52": 487, "signorinteract": 487, "o15530": 487, "source_isoform": 487, "target_isoform": 487, "source_typ": 487, "target_typ": 487, "phosphoryl": 487, "10455013": 487, "ptm_type": 487, "ptm_residu": 487, "ser396": 487, "ptm_motif": 487, "sssssshslsasdtg": 487, "q9nq66": 487, "18035": 487, "smallmolecul": 487, "quantiti": 487, "23880553": 487, "catalysi": 487, "p62136": 487, "o15169": 487, "down": 487, "dephosphoryl": 487, "17318175": 487, "ser77": 487, "yepegsasptppylk": 487, "sou": 487, "3285": 487, "signor_enzyme_substr": 487, "easier": 487, "enzymesubstrateaggreg": 487, "58": 487, "typ": 487, "resnum": 487, "396": 487, "389": 487, "403": 487, "resaa": 487, "enzyme_isoform": 487, "substrate_isoform": 487, "77": 487, "70": 487, "84": 487, "final": 487, "assign": [487, 490], "signor_pathway_annot": 487, "practic": 487, "o14733": 487, "48": 487, "signorpathwai": 487, "tnf": 487, "toll": 487, "haven": 487, "four": 487, "signor_protein_famili": 487, "famili": 487, "own": [487, 489], "pf2": 487, "53": 487, "q9hbw0": 487, "q92633": 487, "q9uby5": 487, "showcas": 487, "metabol": 487, "enzymat": 487, "closer": 487, "ramp_list_t": 487, "51": 487, "analyt": 487, "rampid": 487, "analytehasontologi": 487, "rampcompoundid": 487, "rampontologyid": 487, "analytehaspathwai": 487, "pathwayrampid": 487, "pathwaysourc": 487, "analytesynonym": 487, "geneorcompound": 487, "catalyz": 487, "rampgeneid": 487, "chem_prop": 487, "ramp_id": 487, "chem_data_sourc": 487, "chem_source_id": 487, "iso_smil": 487, "inchi_key_prefix": 487, "inchi_kei": 487, "mw": 487, "monoisotop_mass": 487, "common_nam": 487, "mol_formula": 487, "db_version": 487, "ramp_vers": 487, "load_timestamp": 487, "version_not": 487, "met_intersects_json": 487, "gene_intersects_json": 487, "met_intersects_json_pw_map": 487, "gene_intersects_json_pw_map": 487, "db_sql_url": 487, "entity_status_info": 487, "status_categori": 487, "entity_source_id": 487, "entity_source_nam": 487, "entity_count": 487, "metabolite_class": 487, "class_source_id": 487, "class_level_nam": 487, "class_nam": 487, "commonnam": 487, "hmdbontologytyp": 487, "metcount": 487, "pathwayr": 487, "1368": 487, "ramp_raw": 487, "conveni": 487, "At": 487, "bottleneck": 487, "thank": 487, "happen": 487, "25": [487, 490], "sourceid": 487, "idtyp": 487, "priorityhmdbstatu": 487, "datasourc": 487, "pathwaycount": 487, "hmdb0000001": 487, "ramp_c_000000001": 487, "methylhistidin": 487, "quantifi": 487, "hmdb0000479": 487, "50599": 487, "chemspid": 487, "83153": 487, "c01152": 487, "hmdb_kegg": 487, "756552": 487, "h0ydb7": 487, "ramp_g_000009307": 487, "rab38": 487, "null": 487, "wiki": 487, "756553": 487, "a0a024r191": 487, "756554": 487, "h0yea4": 487, "756555": 487, "entrez": 487, "23682": 487, "756556": 487, "gene_symbol": 487, "756557": 487, "physicochem": 487, "00": 487, "46": 487, "h": 487, "oc": 487, "o": 487, "n": 487, "c1": 487, "brmwtnujhumwm": 487, "lurjtmiesa": 487, "c7h11n3o2": 487, "169": 487, "181": 487, "085": 487, "cc1": 487, "cn": 487, "cn1c": 487, "jdhildinmrgul": 487, "27596": 487, "cn1cncc1c": 487, "methyl": 487, "histidin": 487, "cn1cnc": 487, "tele": 487, "ramp_c_000000002": 487, "hmdb0000002": 487, "ncccn": 487, "xfnjvjplkcpibv": 487, "uhfffaoysa": 487, "c3h10n2": 487, "c4": 487, "h1": 487, "5h2": 487, "1249": 487, "0844": 487, "diaminopropan": 487, "275898": 487, "ramp_c_000258279": 487, "lipidmap": 487, "lmpk15050003": 487, "ccccccccccccc": 487, "uxlmjhnfdrmgpw": 487, "ljqanchmsa": 487, "c24h38o6": 487, "422": 487, "267": 487, "hydroxi": 487, "methoxi": 487, "2r": 487, "acetoxi": 487, "pentadecyl": 487, "275899": 487, "ramp_c_000258280": 487, "lmpk15050004": 487, "cc": 487, "cvznklnahbtint": 487, "jochjyfzsa": 487, "c24h38o5": 487, "406": 487, "272": 487, "benzoq": 487, "275900": 487, "ramp_c_000226089": 487, "lmpk15050005": 487, "ccccccccccc": 487, "jiugzsypfredlg": 487, "hxuwfjfhsa": 487, "c22h34o5": 487, "378": 487, "241": 487, "tridecyl": 487, "benzoqui": 487, "275901": 487, "ramp_c_000258283": 487, "lmpk15050008": 487, "ccccccccccccccc": 487, "gxdurrguxldzkn": 487, "c21h34o4": 487, "350": 487, "246": 487, "suberonon": 487, "275902": 487, "ramp_c_000258284": 487, "lmpk15050009": 487, "amknobhckrzhio": 487, "c19h30o4": 487, "322": 487, "214": 487, "rapanon": 487, "275903": 487, "advantag": 487, "vice": 487, "versa": 487, "alwai": 487, "con": 487, "your": [487, 490], "disk": 487, "56": 487, "07": 487, "0x6fa1e9e4e940": 487, "big": 487, "enough": 487, "short": [487, 490], "period": 487, "format_byt": 487, "python_memory_usag": 487, "44": 487, "list_column": 487, "subqueri": 487, "order": [487, 490], "distinct": 487, "ON": 487, "read_sql_queri": 487, "hmdb00001": 487, "104129": 487, "hmdb0126033": 487, "25882": 487, "104130": 487, "hmdb0141947": 487, "180150": 487, "104131": 487, "hmdb0128505": 487, "7870": 487, "104132": 487, "hmdb0130984": 487, "8227": 487, "104133": 487, "hmdb0130987": 487, "8630": 487, "104134": 487, "Such": 487, "easili": [487, 490], "ramp_map": 487, "45": 487, "brenda": 487, "kegg_glycan": 487, "lipidbank": 487, "ncbiprotein": 487, "plantfa": 487, "swisslipid": 487, "wikidata": 487, "29": 487, "lmfa00000008": 487, "slm": 487, "000390048": 487, "lmfa01010001": 487, "000000510": 487, "lmfa01010002": 487, "000000449": 487, "lmfa01010003": 487, "000001194": 487, "lmfa01010004": 487, "000001195": 487, "lmfa01010005": 487, "000389552": 487, "lmfa01010006": 487, "000001196": 487, "lmfa01010007": 487, "000389947": 487, "lmfa01010008": 487, "000000853": 487, "lmfa01010010": 487, "000000855": 487, "lmfa01010011": 487, "000389946": 487, "lmfa01010012": 487, "000000719": 487, "lmfa01010013": 487, "000001198": 487, "lmfa01010014": 487, "000000825": 487, "lmfa01010015": 487, "000001199": 487, "lmfa01010017": 487, "000001095": 487, "lmfa01010019": 487, "000001205": 487, "lmfa01010020": 487, "000000829": 487, "lmfa01010021": 487, "000001207": 487, "lmfa01010022": 487, "000000827": 487, "lmfa01010023": 487, "000001128": 487, "lmfa01010024": 487, "000000414": 487, "lmfa01010026": 487, "000000539": 487, "lmfa01010027": 487, "000000980": 487, "lmfa01010028": 487, "000000540": 487, "lmfa01010030": 487, "000000543": 487, "lmfa01010032": 487, "000000544": 487, "lmfa01010034": 487, "00000": 487, "44684": 487, "got": 487, "63": 487, "30": 487, "lmst02030086": 487, "000485328": 487, "lmst02030087": 487, "000485330": 487, "lmsp06020013": 487, "000000534": 487, "lmst02020001": 487, "000001055": 487, "000485315": 487, "35218": 487, "lmpr0104010007": 487, "000389242": 487, "35219": 487, "lmpr0104030005": 487, "000390232": 487, "35220": 487, "lmpr0104030006": 487, "000390227": 487, "35221": 487, "lmpr01070626": 487, "000000432": 487, "35222": 487, "lmpr01090015": 487, "000389419": 487, "35223": 487, "get_mapp": 487, "38": 487, "medchemexpress": 487, "actor": 487, "affymetrix": 487, "alzforum": 487, "alzforum_mut": 487, "araport": 487, "atla": [487, 490], "bindingdb": 487, "carotenoiddb": 487, "cas_id": 487, "cgnc": 487, "chemicalbook": 487, "clinicaltri": 487, "clinic": 487, "7422": 487, "35": 487, "mapping_t": 487, "mappingtabledefinit": 487, "input_class": 487, "rampmap": 487, "3238": 487, "insight": 487, "99": 487, "131431": 487, "hmdb0094709": 487, "lxml": 487, "etre": 487, "minim": 487, "iter_metabolit": 487, "04": 487, "0x60b1846262c0": 487, "On": 487, "schema": 487, "instruct": 487, "metabolites_schema": 487, "direct_par": 487, "kingdom": 487, "sub_class": 487, "molecular_framework": 487, "alternative_par": 487, "findal": 487, "substitu": 487, "spectra": 487, "spectrum": 487, "spectrum_id": 487, "biological_properti": 487, "cellular_loc": 487, "biospecimen_loc": 487, "biospecimen": 487, "tissue_loc": 487, "tissu": [487, 490], "kegg_map_id": 487, "smpdb_id": 487, "experimental_properti": 487, "4037": 487, "proteins_schema": 487, "gene_properti": 487, "chromosome_loc": 487, "locu": 487, "gene_sequ": 487, "protein_properti": 487, "residue_numb": 487, "molecular_weight": 487, "theoretical_pi": 487, "polypeptide_sequ": 487, "transmembrane_region": 487, "region": 487, "signal_region": 487, "pfam": 487, "pfam_id": 487, "metabolite_associ": 487, "go_classif": 487, "go_class": 487, "go_id": 487, "general_refer": 487, "general_": 487, "2072": 487, "metabolites_raw": 487, "proteins_raw": 487, "head": 487, "peek": 487, "belong": 487, "cystein": 487, "thereof": 487, "amino": 487, "carboxi": 487, "hydrogen": 487, "glycin": 487, "heteroatom": 487, "carboxyl": 487, "acid": 487, "analogu": 487, "aromat": 487, "heteromonocycl": 487, "aralkylamin": 487, "azacycl": 487, "carbonyl": 487, "heteroaromat": 487, "hydrocarbon": 487, "imidazolyl": 487, "monoalkylamin": 487, "monocarboxyl": 487, "substitut": 487, "imidazol": 487, "oxid": 487, "132354": 487, "hmdb0000005": 487, "ketobutyr": 487, "hmdb0000008": 487, "hydroxybutyr": 487, "hmdb0000010": 487, "methoxyestron": 487, "hmdb0000011": 487, "hmdb0000012": 487, "deoxyuridin": 487, "hmdb0000014": 487, "deoxycytidin": 487, "hmdb0000015": 487, "cortexolon": 487, "hmdb0000016": 487, "deoxycorticosteron": 487, "hmdb0000017": 487, "pyridox": 487, "hmdb0000019": 487, "ketoisovaler": 487, "hmdb0000020": 487, "p": 487, "hydroxyphenylacet": 487, "hmdb0000021": 487, "iodotyrosin": 487, "hmdb0000022": 487, "methoxytyramin": 487, "hmdb0000023": 487, "hydroxyisobutyr": 487, "hmdb00": 487, "1291": 487, "gene_nam": 487, "nucleotidas": 487, "nt5e": 487, "deoxycytidyl": 487, "deaminas": 487, "dctd": 487, "ump": 487, "cmp": 487, "cmpk1": 487, "cytosol": 487, "1b": 487, "nt5c1b": 487, "1a": 487, "nt5c1a": 487, "deoxyribonucleotidas": 487, "nt5c": 487, "dck": 487, "mitochondri": 487, "nt5m": 487, "hydroxymethylglutaryl": 487, "coa": 487, "lyas": 487, "hmgcl": 487, "atp": 487, "citrat": 487, "synthas": 487, "acli": 487, "histon": 487, "acetyltransferas": 487, "ep300": 487, "pyruv": 487, "dehydrogenas": 487, "e1": 487, "subunit": 487, "beta": 487, "pdhb": 487, "acetyl": [487, 490], "acat2": 487, "creb": 487, "crebbp": 487, "diamin": 487, "acetyltransf": 487, "1478": 487, "metabolites_t": 487, "proteins_t": 487, "nameless": 487, "notat": 487, "_tabl": 487, "nc": 487, "ccc": 487, "tyeybosbbbhjiv": 487, "afendnxgafykqo": 487, "vkhmyheasa": 487, "12ccc": 487, "c3": 487, "wheuwnkscxykbu": 487, "qpwughhjsa": 487, "whbmmwsbfzvssr": 487, "gsvougtgsa": 487, "1o": 487, "n1c": 487, "nc1": 487, "mxhrcpnrjammim": 487, "shyzeuofsa": 487, "1c": 487, "o1": 487, "cktsbutuhbmzgz": 487, "12cc": 487, "whbhbvvogneclv": 487, "obqkjfggsa": 487, "zesrjspzrdmnhi": 487, "yfwfahhusa": 487, "c1o": 487, "hxacouqixzgnbf": 487, "1h": 487, "yl": 487, "propanediamin": 487, "propylenediamin": 487, "ketobutano": 487, "oxobutyr": 487, "met": 487, "hydroxybutano": 487, "meth": 487, "hydro": 487, "du": 487, "deo": 487, "5r": 487, "hydroxymet": 487, "desoxi": 487, "hydroxycorticosteron": 487, "cortodoxo": 487, "pregnen": 487, "dion": 487, "hydroxyp": 487, "hydroxymethylp": 487, "hmdb_synonym": 487, "propano": 487, "mhi": 487, "n1": 487, "dihydrochlorid": 487, "expand": 487, "prop": 487, "291": 487, "hydroxymethyl": 487, "isonicotin": 487, "292": 487, "pyridoxin": 487, "293": 487, "pyridoxinecarboxyl": 487, "294": 487, "pyridoxyl": 487, "295": 487, "296": 487, "300": 487, "care": 487, "combinatori": 487, "grow": 487, "taxonomy__alternative_par": 487, "taxonomy__class": 487, "taxonomy__descript": 487, "taxonomy__direct_par": 487, "taxonomy__kingdom": 487, "taxonomy__molecular_framework": 487, "taxonomy__sub_class": 487, "taxonomy__substitu": 487, "compoun": 487, "kno": 487, "amin": 487, "aralkyla": 487, "organopnictogen": 487, "comp": 487, "organonitrogen": 487, "aliphat": 487, "acycl": 487, "keton": 487, "keto": 487, "ket": 487, "fatti": 487, "alcohol": 487, "hy": 487, "unsubstitut": 487, "benzenoid": 487, "oxo": 487, "steroid": 487, "estrogen": 487, "homopolycycl": 487, "estran": 487, "oxost": 487, "hyd": 487, "pyrimidin": 487, "nucleosid": 487, "deoxyribonucleosid": 487, "aminopyrimidin": 487, "hydroxysteroid": 487, "oxosteroid": 487, "del": 487, "delta": 487, "carbo": 487, "pyridin": 487, "pyridinecarboxyl": 487, "heteromon": 487, "gave": 487, "birth": 487, "000": [487, 490], "2235": 487, "vinylog": 487, "organooxygen": 487, "2236": 487, "2237": 487, "2238": 487, "2239": 487, "2240": 487, "metabolites_map": 487, "proteins_map": 487, "c00109": 487, "c00526": 487, "c00847": 487, "c00881": 487, "c00986": 487, "c01089": 487, "c03205": 487, "ccc2": 487, "12c": 487, "c05299": 487, "c05488": 487, "c05984": 487, "pretti": 487, "h3": 487, "6h": 487, "8h2": 487, "1h3": 487, "t6": 487, "m0": 487, "s1": 487, "constitut": 487, "isom": 487, "hydrid": 487, "tau": 487, "n3": 487, "81": 487, "figur": [487, 489], "hmdb_name": 487, "esummari": 487, "eutil": 487, "6063": 487, "uid": 487, "gd": 487, "gpl": 487, "erank": 487, "8esiq": 487, "evalu": 487, "joaz": 487, "titl": 487, "diurnal": 487, "circadian": 487, "arabidopsi": 487, "thaliana": 487, "gdstype": 487, "profil": 487, "valtyp": 487, "ratio": 487, "idref": 487, "genenam": 487, "genedesc": 487, "ugnam": 487, "at4g11560": 487, "ugdesc": 487, "bromo": 487, "adjac": 487, "bah": 487, "nucdesc": 487, "9366": 487, "lambda": 487, "prl2": 487, "cdna": 487, "clone": 487, "135j10t7": 487, "entrez_gene_id": 487, "gbacc": 487, "t46103": 487, "ptacc": 487, "cloneid": 487, "orf": 487, "spotid": 487, "vmin": 487, "395000": 487, "vmax": 487, "201000": 487, "a1b3c1": 487, "abscal": 487, "aflag": 487, "aoutl": 487, "rstd": 487, "rmean": 487, "50": 487, "get_pubm": 487, "33209674": 487, "42": 487, "pubdat": 487, "oct": 487, "epubd": 487, "transl": 487, "androl": 487, "urol": 487, "kim": 487, "authtyp": 487, "clusterid": 487, "lee": 487, "sh": 487, "dh": 487, "jy": 487, "hong": 487, "ih": 487, "lastauthor": 487, "gemcitabin": 487, "versu": 487, "chemotherapi": 487, "patient": 487, "metastat": 487, "urotheli": 487, "carcinoma": 487, "retrospect": 487, "sorttitl": 487, "volum": 487, "2113": 487, "2121": 487, "lang": 487, "eng": 487, "2263": 487, "1956": 487, "epiderm": 487, "growth": 487, "factor": [487, 490], "currentid": 487, "chromosom": 487, "geneticsourc": 487, "genom": 487, "maploc": 487, "7p11": 487, "otheralias": 487, "erbb": 487, "erbb1": 487, "errp": 487, "her1": 487, "nisbd2": 487, "pig61": 487, "mena": 487, "otherdesign": 487, "viii": 487, "avian": 487, "erythroblast": 487, "leukemia": 487, "viral": 487, "erb": 487, "oncogen": 487, "homolog": [487, 490], "cell": [487, 490], "40": 487, "prolifer": 487, "induc": 487, "61": 487, "tyrosin": 487, "b2": 487, "proto": 487, "nomenclaturesymbol": 487, "nomenclaturenam": 487, "nomenclaturestatu": 487, "mim": 487, "131550": 487, "genomicinfo": 487, "chrloc": 487, "chraccver": 487, "nc_000007": 487, "chrstart": 487, "55019016": 487, "chrstop": 487, "55211627": 487, "exoncount": 487, "geneweight": 487, "580393": 487, "5417": 487, "90": 487, "min": 487, "awar": 487, "hundr": 487, "dozen": [487, 490], "sooner": 487, "later": 487, "accid": 487, "recommend": 487, "remain": 487, "cache_delete_on": 487, "depod_enzyme_substr": 487, "59": 487, "cache_off": 487, "cache_print_on": 487, "dry_run_on": 487, "wrong": 487, "debug_on": 487, "curl_connect_timeout": 487, "establish": 487, "curl_extended_timeout": 487, "exception": 487, "curl_retri": 487, "curl_timeout": 487, "360": 487, "deep": 487, "stack": 487, "investig": 487, "difficult": 487, "preserve_on": 487, "kept": 487, "depod_curl": 487, "0x6947386dc8b0": 487, "fileobj": 487, "bioss": 487, "uni": 487, "freiburg": 487, "de": 487, "depod_201405_human_phosphatas": 487, "mitab": 487, "_io": 487, "textiowrapp": 487, "dene": 487, "6a711369ecf9dcff8c5ed88996685b54": 487, "mode": 487, "iso": 487, "8859": 487, "okai": 487, "wether": 487, "successfulli": 487, "night": 487, "transient": 487, "disappear": 487, "dai": 487, "perman": 487, "mayb": 487, "third": 487, "parti": 487, "lot": [487, 489], "notebook": 487, "pypath_log": 487, "s3e92": 487, "535b06d53a59e75bb693369bc5fdc556": 487, "112963": 487, "verifi": 487, "certif": 487, "invalid": 487, "expir": 487, "miss": 487, "softwar": 487, "encrypt": 487, "trust": 487, "And": [487, 490], "reach": [487, 488], "root": [487, 489], "global": 487, "everi": [487, 489], "comput": 487, "program": 487, "correctli": 487, "admin": 487, "duti": 487, "procedur": 487, "97": 487, "scan": 487, "cipher": 487, "libcurl": 487, "anaconda": 487, "java": 487, "mozilla": 487, "firefox": 487, "seriou": 487, "strong": 487, "think": 487, "written": 487, "rc": 487, "get_control": 487, "resourcecontrol": 487, "0x6cc25e25dcf0": 487, "BY": 487, "sa": 487, "aspect": [487, 490], "pw_academ": 487, "pw_commerci": 487, "len": 487, "pdzbase": 487, "No": 487, "nar": 487, "gplv3": 487, "mit": 487, "net_academ": 487, "net_commerci": 487, "79": 487, "6833": 487, "25607": 487, "6429": 487, "23288": 487, "usabl": 487, "400": 487, "fine": 487, "grain": 487, "analysi": [487, 489], "expert": 487, "thought": 487, "owner": 487, "permiss": 487, "pai": 487, "fee": 487, "product": 487, "yearusedreleas": 487, "2015": 487, "2009": 487, "2011": 487, "bioinformat": 487, "oxfordjourn": 487, "690": 487, "d1": 487, "d321": 487, "suppl_1": 487, "d235": 487, "univ": 487, "lyon1": 487, "fr": 487, "omictool": 487, "tool": 487, "19147664": 487, "20852260": 487, "25378329": 487, "mammalia": 487, "extracellular": [487, 490], "bairoch": 487, "partner": [487, 490], "repor": 487, "4479": 487, "197": 487, "collect_enzyme_substr": 487, "08": 487, "enzymesubstrateresourc": 487, "phosphoelm": 487, "li2012": 487, "phosphonetwork": [487, 490], "mimp": 487, "protmapp": 487, "202": 487, "phosphoelm_enzyme_substr": 487, "larger": 487, "netr": 487, "deathdomain": 487, "1864": 487, "05": 487, "7979": 487, "35550": 487, "8002": 487, "35748": 487, "older": 487, "mentin": 487, "focu": 487, "sinc": 487, "constraint": 487, "unbias": 487, "interactom": 487, "screen": 487, "vidal": 487, "lncrna_protein": 487, "guarante": 487, "moment": 487, "dict_kei": 487, "06": 487, "connectomedb2020": 487, "popul": 487, "trpc1": 487, "kcnma1": 487, "ppp3ca": 487, "calm2": 487, "calm3": 487, "calm1": 487, "casp1": 487, "casp4": 487, "cacna1c": 487, "cav1": 487, "ev": 487, "118492": 487, "sync": 487, "facilit": 487, "p48995": 487, "q12791": 487, "q08209": 487, "p0dp24": 487, "p0dp25": 487, "p0dp23": 487, "p29466": 487, "p49662": 487, "q13936": 487, "q03135": 487, "p56539": 487, "cav3": 487, "q14247": 487, "cttn": 487, "p14416": 487, "drd2": 487, "p11532": 487, "dmd": 487, "p11362": 487, "fgfr1": 487, "q02790": 487, "fkbp4": 487, "q86ym7": 487, "homer1": 487, "q9nsc5": 487, "homer3": 487, "q99750": 487, "mdfi": 487, "q14571": 487, "itpr2": 487, "q14573": 487, "itpr3": 487, "p29966": 487, "marck": 487, "q13255": 487, "grm1": 487, "p20591": 487, "mx1": 487, "p62166": 487, "ncs1": 487, "q96d31": 487, "orai1": 487, "q96sn7": 487, "orai2": 487, "q9brq5": 487, "orai3": 487, "p11171": 487, "epb41": 487, "p61586": 487, "rhoa": 487, "q9y225": 487, "rnf24": 487, "p21817": 487, "ryr1": 487, "p16615": 487, "atp2a2": 487, "q93084": 487, "atp2a3": 487, "p60880": 487, "snap25": 487, "q13586": 487, "sti": 487, "30573": 487, "egf": 487, "fantom5": 487, "cellsign": 487, "similarli": 487, "ia": 487, "get_resource_nam": 487, "get_refer": 487, "10085134": 487, "10209155": 487, "10788520": 487, "12093292": 487, "12297050": 487, "12620237": 487, "12648462": 487, "15620700": 487, "16274239": 487, "17145710": 487, "19531499": 487, "20458382": 487, "21071413": 487, "23331499": 487, "3494473": 487, "6289330": 487, "8639530": 487, "get_direct": 487, "opposit": 487, "get_sign": 487, "get_": 487, "get_interaction_typ": 487, "_by_": 487, "references_by_resourc": 487, "get_interactions_posit": 487, "Or": [487, 490], "make_df": 487, "type_a": 487, "type_b": 487, "dmodel": 487, "nan": 487, "44033": 487, "q14289": 487, "q9ulz3": 487, "44034": 487, "p54646": 487, "q9y2i7": 487, "44035": 487, "q9bxm7": 487, "q9y2n7": 487, "44036": 487, "p49137": 487, "q9y385": 487, "44037": 487, "q9uhc7": 487, "p04637": 487, "44038": 487, "unique_pair": 487, "65": 487, "source_genesymbol": 487, "target_genesymbol": 487, "is_stimul": 487, "is_inhibit": 487, "consensus_direct": 487, "consensus_stimul": 487, "consensus_inhibit": 487, "19168436": 487, "25139746": 487, "23228564": 487, "11290752": 487, "11983166": 487, "12601176": 487, "36729": 487, "ptk2b": 487, "pycard": 487, "27796369": 487, "36730": 487, "prkaa2": 487, "pikfyv": 487, "24070423": 487, "36731": 487, "pink1": 487, "hif3a": 487, "27551449": 487, "36732": 487, "mapkapk2": 487, "ube2j1": 487, "24020373": 487, "36733": 487, "mkrn1": 487, "tp53": 487, "19536131": 487, "36734": 487, "extra_node_attr": 487, "customis": 487, "webservice_interactions_df": 487, "dorothea_tfb": 487, "dorothea_coexp": 487, "dorothea_level": [487, 490], "curation_effort": 487, "ncbi_tax_id_sourc": 487, "entity_type_sourc": 487, "ncbi_tax_id_target": 487, "entity_type_target": 487, "trip_method": 487, "immunoprecipit": 487, "fluoresc": 487, "downstream": 487, "benefici": 487, "undesir": 487, "grn": 487, "network_allow_loop": 487, "wish": 487, "pw": 487, "gr": 487, "count_loop": 487, "149": 487, "count_interactions_by_interaction_typ": 487, "33571": 487, "281262": 487, "soon": 487, "nucleic": 487, "mandatori": [487, 489, 490], "topologi": [487, 490], "network_expand_complex": 487, "pharmacologi": 487, "count_complex": 487, "get_complex": 487, "fos_jun": 487, "fos_junb": 487, "fos_jund": 487, "fosl1_jun": 487, "fosl2_jun": 487, "jun_junb": 487, "jun_jund": 487, "fosb_jun": 487, "fosl1_junb": 487, "fosl1_jund": 487, "fosl2_junb": 487, "fosl2_jund": 487, "junb": 487, "junb_jund": 487, "fosb_junb": 487, "jund": 487, "fosb_jund": 487, "nfkb1": 487, "nfkb1_nfkb2": 487, "nfkb1_relb": 487, "nfkb1_rela": 487, "nfkb1_rel": 487, "nfkb2": 487, "nfkb2_relb": 487, "nfkb2_rela": 487, "nfkb2_rel": 487, "relb": 487, "rela_relb": 487, "rel_relb": 487, "rela": 487, "rel_rela": 487, "rel": 487, "cplex_ent": 487, "q04206_q04864": 487, "isinst": 487, "p17535": 487, "p15407": 487, "p04040": 487, "cat": 487, "extri_collectri": 487, "10022519": 487, "10329043": 487, "collectr": 487, "p05412": 487, "p15408": 487, "p17275": 487, "54980": 487, "p01100": 487, "p01270": 487, "pth": 487, "9989817": 487, "54981": 487, "54982": 487, "p53539": 487, "54983": 487, "54984": 487, "23235": 487, "iloc": 487, "p15407_p17535": 487, "p01106": 487, "o14746": 487, "myc": 487, "tert": 487, "75": 487, "67945": 487, "q01196": 487, "q13094": 487, "runx1": 487, "lcp2": 487, "67946": 487, "q6mzq0": 487, "prr5l": 487, "67947": 487, "q15672": 487, "p08151": 487, "twist1": 487, "gli1": 487, "67948": 487, "p22415": 487, "q5sre5": 487, "usf1": 487, "nup188": 487, "67949": 487, "q9uqr1": 487, "q5vyx0": 487, "znf148": 487, "rnl": 487, "67950": 487, "familiar": 487, "to_csv": 487, "kinaseextra": [487, 490], "ligrecextra": [487, 490], "pathwayextra": [487, 490], "mirnatarget": [487, 490], "dorothea_cur": 487, "dorothea_chipseq": 487, "ncomplex": 487, "12036993": 487, "12538496": 487, "17935786": 487, "7489329": 487, "7651432": 487, "7818486": 487, "8867782": 487, "9030359": 487, "9136992": 487, "9142914": 487, "9168892": 487, "9687385": 487, "p05412_p15408": 487, "extri_c": 487, "1004": 487, "ambigu": 487, "unambigu": 487, "map_name0": 487, "random": 487, "gabarapl3": 487, "q9by60": 487, "shortcut": 487, "id_from_label": 487, "o75385": 487, "ulk1": [487, 490], "id_from_label0": 487, "certainli": 487, "q15796": 487, "effici": 487, "q62432": 487, "8408": 487, "chain_map": 487, "by_id_typ": 487, "autumn": 487, "uniprotmap": 487, "uploadlist": 487, "outdat": 487, "inputs_format": 487, "uniprotlistmap": 487, "biomartmap": 487, "arraymap": 487, "promap": 487, "unichemmap": 487, "filemap": 487, "mirbas": 487, "hmdbmap": 487, "fly": 487, "mapread": 487, "mappingt": 487, "mapper": 487, "dispatch": 487, "geneid": 487, "hgnc": 487, "refseqp": 487, "input_cl": 487, "29850": 487, "eas": 487, "ac_queri": 487, "ac_map": 487, "biomart_map": 487, "pro_map": 487, "array_map": 487, "bigg": 487, "biocyc": 487, "cas_registry_numb": 487, "ch": 487, "8561": 487, "tbl": 487, "translation_dict": 487, "20243": 487, "q00604": 487, "ndp": 487, "q9hb19": 487, "plekha2": 487, "q16718": 487, "ndufa5": 487, "p55769": 487, "snu13": 487, "q92886": 487, "neurog1": 487, "q6t4r5": 487, "nh": 487, "p80188": 487, "lcn2": 487, "q86xr2": 487, "fam129c": 487, "q5t2w1": 487, "pdzk1": 487, "q9bsh3": 487, "nicn1": 487, "translation_df": 487, "20375": 487, "q96l92": 487, "snx27": 487, "20376": 487, "q9unh6": 487, "snx7": 487, "20377": 487, "q5vwj9": 487, "snx30": 487, "20378": 487, "q9bzz2": 487, "siglec1": 487, "20379": 487, "q96bd0": 487, "slco4a1": 487, "20380": 487, "matrix": [487, 490], "oma": 487, "ensembl_hc": 487, "ensembl_typ": 487, "one2on": 487, "human_mouse_genesymbol": 487, "get_dict": 487, "confdenc": 487, "full_record": 487, "omaortholog": 487, "rel_typ": 487, "12704": 487, "5703125": 487, "get_df": 487, "h4c3": 487, "h4c1": 487, "1262": 487, "050049": 487, "h4c12": 487, "h4c11": 487, "h4c9": 487, "18446": 487, "gdap2": 487, "5553": 487, "779785": 487, "18447": 487, "itga8": 487, "10772": 487, "969727": 487, "18448": 487, "sema3f": 487, "9121": 487, "080078": 487, "18449": 487, "eepd1": 487, "5874": 487, "350098": 487, "18450": 487, "drg2": 487, "4423": 487, "589844": 487, "18451": 487, "everywher": 487, "deal": 487, "hsapien": 487, "ensmebl": 487, "genu": 487, "space": 487, "hsa": 487, "ensure_ncbi_tax_id": 487, "ensure_latin_nam": 487, "cow": 487, "bo": 487, "tauru": 487, "ensure_common_nam": 487, "erithacu": 487, "rubecula": 487, "european": 487, "robin": 487, "uniprot_taxid": 487, "unfortun": 487, "p53104": 487, "saccharomyc": 487, "cerevisia": 487, "divers": 487, "essenti": 487, "proteom": 487, "averag": 487, "harbor": 487, "littl": 487, "unload": 487, "119": 487, "iuniprot": 487, "all_swissprot": 487, "all_trembl": 487, "3m": 487, "86440": 487, "17131": 487, "69300": 487, "against": [487, 490], "124": 487, "valid_uniprot": 487, "a0a8d0h0c2": 487, "inde": 487, "125": 487, "is_uniprot": 487, "122": 487, "is_swissprot": 487, "123": 487, "126": 487, "protein_datasheet": 487, "egfr_human": 487, "1210": 487, "o00688": 487, "o00732": 487, "p06268": 487, "q14225": 487, "q68gs5": 487, "q92795": 487, "q9bzs2": 487, "q9gzx1": 487, "q9h2c9": 487, "q9h3c9": 487, "q9umd7": 487, "q9umd8": 487, "q9umg5": 487, "dt": 487, "jul": 487, "1986": 487, "nov": 487, "1997": 487, "283": 487, "recnam": 487, "eco": 487, "0000305": 487, "altnam": 487, "flag": 487, "precursor": 487, "gn": 487, "0000312": 487, "3236": 487, "eukaryota": 487, "metazoa": 487, "chordata": 487, "craniata": 487, "vertebrata": 487, "euteleostomi": 487, "eutheria": 487, "euarchontoglir": 487, "primat": 487, "haplorrhini": 487, "catarrhini": 487, "hominida": 487, "ox": 487, "ncbi_taxid": 487, "rn": 487, "rp": 487, "nucleotid": 487, "isoform": [487, 490], "58080": 487, "131": 487, "egfr_histori": 487, "uniprot_histori": 487, "uniprotrecordhistori": 487, "2022_04": 487, "282": 487, "2022_03": 487, "281": 487, "2022_02": 487, "280": 487, "2022_01": 487, "279": 487, "2021_04": 487, "2021": 487, "278": 487, "50933": 487, "132": 487, "uniprot_recent_vers": 487, "133": 487, "uniprot_history_recent_datasheet": 487, "deploi": 487, "transit": 487, "uniprot_data": 487, "uniprot_queri": 487, "situat": 487, "uniprot_preprocess": 487, "clutter": 487, "transmembran": [487, 490], "a0a087x1c5": 487, "cytochrom": 487, "p450": 487, "a0a0b4j2f2": 487, "superfamili": 487, "camk": 487, "ser": 487, "thr": 487, "ampk": 487, "subfamili": 487, "a0a0k2s4q6": 487, "cd300": 487, "a0a1b0gtw7": 487, "peptidas": 487, "m8": 487, "a0av02": 487, "slc12a": 487, "transport": 487, "a0av96": 487, "rrm": 487, "rbm47": 487, "a0avf1": 487, "ift56": 487, "a0avi4": 487, "tmem129": 487, "a0avk6": 487, "dp": 487, "a0avt1": 487, "ubiquitin": [487, 490], "a0fgr8": 487, "synaptotagmin": 487, "a0fgr9": 487, "a0jlt2": 487, "mediat": 487, "a0jp26": 487, "pote": 487, "a0mz66": 487, "shootin": 487, "a0pjk1": 487, "sodium": 487, "symport": 487, "ssf": 487, "tc": 487, "a0pjy2": 487, "krueppel": 487, "c2h2": 487, "zinc": 487, "finger": 487, "a0pk00": 487, "tmem120": 487, "a0pk11": 487, "clarin": 487, "a1a4y4": 487, "trafac": 487, "dynamin": 487, "gtpase": 487, "irg": 487, "a1a519": 487, "fam170": 487, "a1a5b4": 487, "anoctamin": 487, "a1a5c7": 487, "orga": 487, "510530": 487, "uiprot": 487, "funcion": 487, "up000004102": 487, "d1ym56": 487, "d1ymj2": 487, "d1yn32": 487, "d1ynb3": 487, "d1ypz1": 487, "d1yr07": 487, "d1yr15": 487, "d1yr93": 487, "d1yrb4": 487, "d1yrb7": 487, "cleaner": 487, "imperfect": 487, "job": 487, "badli": 487, "fragment": 487, "136": 487, "uniprot_taxonomi": 487, "p00521": 487, "abelson": 487, "murin": 487, "viru": 487, "p03333": 487, "h8zm73": 487, "abi": 487, "balsamea": 487, "balsam": 487, "fir": 487, "pinu": 487, "h8zm71": 487, "q9mv51": 487, "firma": 487, "momi": 487, "o81086": 487, "grandi": 487, "grand": 487, "o24474": 487, "o24475": 487, "o64404": 487, "o64405": 487, "q948z0": 487, "q9m7d1": 487, "q9m7d0": 487, "o22340": 487, "q9m7c9": 487, "q5k3v1": 487, "homolepi": 487, "nikko": 487, "p21715": 487, "abrothrix": 487, "jelskii": 487, "akodon": 487, "jelski": 487, "altiplano": 487, "p11140": 487, "abru": 487, "56985": 487, "139": 487, "uniprot_ncbi_taxids_2": 487, "648330": 487, "aed": 487, "albopictu": 487, "densoviru": 487, "isol": 487, "boublik": 487, "1994": 487, "aaldnv": 487, "10804": 487, "adeno": 487, "aav": 487, "648242": 487, "srivastava": 487, "1982": 487, "118452": 487, "abacion": 487, "magnum": 487, "milliped": 487, "72259": 487, "abaei": 487, "nicipp": 487, "sleepi": 487, "orang": 487, "butterfli": 487, "eurema": 487, "102642": 487, "abax": 487, "parallelepipedu": 487, "ground": 487, "beetl": 487, "392897": 487, "abalist": 487, "stellari": 487, "starri": 487, "triggerfish": 487, "balist": 487, "75332": 487, "abbottina": 487, "rivulari": 487, "chines": 487, "gudgeon": 487, "gobio": 487, "515833": 487, "abdopu": 487, "aculeatu": 487, "engl": 487, "118050": 487, "140": 487, "uniprot_loc": 487, "q96ec8": 487, "uniprotloc": 487, "golgi": 487, "apparatu": 487, "membran": [487, 490], "q6zms4": 487, "nucleu": 487, "q8n8l2": 487, "q15916": 487, "q3mis6": 487, "q6p280": 487, "q969w1": 487, "endoplasm": 487, "reticulum": 487, "o14978": 487, "q66k41": 487, "q15937": 487, "q9p2j8": 487, "q8nd82": 487, "q9np64": 487, "nucleolu": 487, "143466": 487, "141": 487, "uniprot_keyword": 487, "p63120": 487, "uniprotkeyword": 487, "aspartyl": 487, "proteas": 487, "autocatalyt": 487, "cleavag": 487, "erv": 487, "hydrolas": 487, "ribosom": 487, "frameshift": 487, "transpos": 487, "splice": 487, "helix": 487, "metal": 487, "unipro": 487, "445111": 487, "142": 487, "uniprot_famili": 487, "uniprotfamili": 487, "a2": 487, "herv": 487, "ii": 487, "hml": 487, "yip1": 487, "q86uk7": 487, "znf598": 487, "dhhc": 487, "palmitoyltransferas": 487, "q8iuh4": 487, "77892": 487, "143": 487, "uniprot_tissu": 487, "uniprottissu": 487, "brain": 487, "wide": 487, "undefin": 487, "colon": 487, "heart": 487, "kidnei": 487, "leukocyt": 487, "liver": 487, "lung": 487, "ovari": 487, "pancrea": 487, "placenta": 487, "prostat": 487, "skelet": 487, "muscl": [487, 490], "intestin": 487, "spleen": 487, "testi": 487, "318790": 487, "144": 487, "uniprot_topologi": 487, "uniprottopologi": 487, "cytoplasm": 487, "137": 487, "146": 487, "206": 487, "212": 487, "lumen": 487, "106": 487, "115": 487, "168": 487, "184": 487, "234": 487, "236": 487, "85": 487, "105": 487, "116": 487, "147": 487, "167": 487, "185": 487, "205": 487, "213": 487, "233": 487, "138": 487, "198": 487, "288": 487, "377": 487, "220": 487, "544230": 487, "bulk": 487, "153": 487, "q14457": 487, "becn1": 487, "154": 487, "156": 487, "weight": 487, "subcellular_loc": 487, "112631": 487, "1050": 487, "preautophagosom": 487, "starvat": 487, "puncat": 487, "primarili": 487, "sequest": 487, "portion": 487, "autophagosom": 487, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 487, "1329": 487, "ineffici": 487, "hand": 487, "158": 487, "ordereddict": 487, "134277": 487, "51896": 487, "450": 487, "tabular": [487, 490], "159": 487, "print_featur": 487, "There": 487, "character": 487, "160": 487, "function_o": 487, "subcellula": 487, "r_genecard": 487, "r_locat": 487, "3d": 487, "alternativ": 487, "20254": 487, "unless": 487, "uniprot_cleanup": 487, "exploit": 487, "162": 487, "q9uq28": 487, "8m": 487, "acquir": 487, "mtor": [487, 490], "akt1": 487, "s473": 487, "sparser": 487, "t450": 487, "t308": 487, "domainmotif": 487, "e_ptm": 487, "p31749": 487, "473": 487, "14761976": 487, "15047712": 487, "15364915": 487, "15718470": 487, "15899889": 487, "16221682": 487, "17013611": 487, "19844585": 487, "20333297": 487, "20489726": 487, "21157483": 487, "21592956": 487, "23006971": 487, "8978681": 487, "9736715": 487, "dabas": 487, "enzyme_genesymbol": 487, "substrate_genesymbol": 487, "residue_typ": 487, "residue_offset": 487, "p63104": 487, "ywhaz": 487, "hprd_mimp": 487, "11956222": 487, "12861023": 487, "phosphosite_mimp": 487, "phosp": 487, "15071501": 487, "p45983": 487, "mapk8": 487, "phosph": 487, "15696159": 487, "p06493": 487, "cdk1": 487, "712": 487, "rea": 487, "15525677": 487, "18220": 487, "2171679": 487, "41421": 487, "p29597": 487, "tyk2": 487, "p51692": 487, "stat5b": 487, "699": 487, "10830280": 487, "11751923": 487, "12411494": 487, "41422": 487, "q06418": 487, "tyro3": 487, "p19174": 487, "plcg1": 487, "771": 487, "12601080": 487, "15144186": 487, "15592455": 487, "41423": 487, "q9h4a3": 487, "wnk1": 487, "q8tax0": 487, "osr1": 487, "18270262": 487, "41424": 487, "q96j92": 487, "wnk4": 487, "335": 487, "15883153": 487, "41425": 487, "q9nyl2": 487, "map3k20": 487, "q92903": 487, "cds1": 487, "10973490": 487, "ve": 487, "never": 487, "nice": 487, "power": 487, "believ": 487, "ever": 487, "topic": 487, "186": 487, "seqc": 487, "sequencecontain": 487, "preload_seq": 487, "get_seq": 487, "get_region": 487, "tfiirclqwt": 487, "187": 487, "seq": 487, "human_proteom": 487, "swissprot_seq": 487, "0x689900d45cc0": 487, "0x689908ea8f70": 487, "0x689908eaa4a0": 487, "0x6899223538b0": 487, "0x689922353c70": 487, "o60384": 487, "0x689922350730": 487, "0x689922353310": 487, "0x689922353760": 487, "0x689922353190": 487, "0x689922350d90": 487, "0x689922353220": 487, "p61129": 487, "0x689922353370": 487, "0x6899223534f0": 487, "0x689922350c70": 487, "0x689922351450": 487, "0x689922353910": 487, "0x6899223502b0": 487, "p98182": 487, "0x689922350280": 487, "0x68992235": 487, "53045": 487, "191": 487, "ygct": 487, "seqlookup": 487, "625": 487, "annotationt": 487, "3788067": 487, "51636": 487, "78": 487, "cpad": 487, "2308": 487, "1358": 487, "annotationbas": 487, "get_nam": 487, "regulator_typ": 487, "effect_on_pathwai": 487, "effect_on_canc": 487, "effect_on_cancer_outcom": 487, "cancer": 487, "pathway_categori": 487, "get_valu": 487, "acut": 487, "lymphoblast": 487, "myeloid": 487, "aml": 487, "basal": 487, "bladder": 487, "breast": 487, "cervic": 487, "cholangiocarcinoma": 487, "choriocarcinoma": 487, "chronic": 487, "lymphocyt": 487, "cll": 487, "cml": 487, "colorect": 487, "endometri": 487, "esophag": 487, "ew": 487, "sarcoma": 487, "gallbladd": 487, "gastric": 487, "glioma": 487, "hepatocellular": 487, "hodgkin": 487, "lymphoma": 487, "infantil": 487, "hemangioma": 487, "laryng": 487, "malign": 487, "melanoma": 487, "pleural": 487, "mesothelioma": 487, "mantl": 487, "myeloma": 487, "nasopharyng": 487, "neuroblastoma": 487, "oral": 487, "osteosarcoma": 487, "ovarian": 487, "pancreat": 487, "pituitari": 487, "adenoma": 487, "renal": 487, "squamou": 487, "synovi": 487, "testicular": 487, "thyroid": 487, "a6ndv4": 487, "o14745": 487, "o14862": 487, "o15169_p25054": 487, "o94813": 487, "o94953": 487, "p06733": 487, "glucos": 487, "p11166": 487, "p25054": 487, "p40261": 487, "p49327": 487, "p54687": 487, "pten": 487, "phosphatas": 487, "p60484": 487, "q01973": 487, "q12888": 487, "q13620": 487, "q96cx2": 487, "q99558": 487, "mimat0000069": 487, "mimat0000089": 487, "mimat0000093": 487, "mimat0000262": 487, "mimat0000274": 487, "mimat0000422": 487, "mimat0000427": 487, "mimat0000437": 487, "mimat0000449": 487, "mimat0000455": 487, "mimat0000460": 487, "mimat0000461": 487, "mimat0000617": 487, "mimat0003266": 487, "mimat0003320": 487, "o75473": 487, "o75888": 487, "o76041": 487, "p06756": 487, "p13631": 487, "p22676": 487, "p25791": 487, "p546": 487, "1279": 487, "usual": 487, "215": 487, "celltypist": 487, "927": 487, "integrin": 487, "62": 487, "cellcellinteract": 487, "5544": 487, "panglaodb": 487, "8479": 487, "4813": 487, "lambert2018": 487, "3281": 487, "3277": 487, "cancersea": 487, "2515": 487, "1992": 487, "phobiu": 487, "35382": 487, "go_intercel": 487, "48799": 487, "18377": 487, "18127": 487, "15903": 487, "surfaceom": 487, "3558": 487, "matrisom": 487, "1514": 487, "hpa_secretom": 487, "3568": 487, "1748": 487, "1695": 487, "annotati": 487, "5842": 487, "exempl": 487, "mainclass": 487, "subclass": 487, "subsubclass": 487, "collagen": 487, "ecm": [487, 490], "glycoprotein": 487, "affili": 487, "proteoglycan": 487, "get_subset": 487, "a6nmz7": 487, "a8tx70": 487, "b4dz39": 487, "homotrim": 487, "p02452": 487, "ht_dm_cluster278": 487, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 487, "trimer": 487, "p02452_p08123": 487, "p02458": 487, "xi": 487, "p02458_p12107_p13942": 487, "p02458_p20908_p25067": 487, "p02458_p20908_p25067_p29400": 487, "p02458_p25067_p29400": 487, "iii": 487, "p02461": 487, "p02462": 487, "iv": 487, "p02462_p08572": 487, "p05997_p12107": 487, "p05997_p12107_p20908": 487, "p05997_p20908": 487, "p05997_p20908_p25940": 487, "p08572": 487, "p12109_p12110": 487, "3072": 487, "membership": 487, "signalink": [487, 490], "protein_sourc": 487, "signalinkpathwai": 487, "keggpathwai": 487, "netpathpathwai": 487, "complex_sourc": 487, "28745": 487, "6762": 487, "all_annot": 487, "jak": 487, "stat": 487, "actin": 487, "cytoskeleton": 487, "oxytocin": 487, "phospholipas": 487, "inhibitor": 487, "resist": 487, "papillomaviru": 487, "infect": 487, "carbon": 487, "endocytosi": 487, "cholin": 487, "parathyroid": 487, "hormon": 487, "synthesi": 487, "2540": 487, "record_id": [487, 490], "q16181": 487, "sept7": 487, "upregul": 487, "migrat": 487, "14396": 487, "p30990": 487, "nt": 487, "2306": 487, "14397": 487, "2307": 487, "14398": 487, "erk": 487, "14399": 487, "14400": 487, "14401": 487, "convent": 487, "tidyvers": 487, "tidyr": [487, 490], "pivot_wid": 487, "unintuit": 487, "index_col": 487, "drop": 487, "axi": 487, "set_index": 487, "unstack": 487, "droplevel": 487, "reset_index": 487, "mimat0000431": 487, "mir": 487, "suppress": 487, "tumor": 487, "invas": 487, "adam10": 487, "notch1": [487, 490], "notch": 487, "mimat0005886": 487, "1297": 487, "aeg1": 487, "wnt": 487, "q9up65": 487, "pla2g4c": 487, "chemotaxi": 487, "downregul": 487, "akt": 487, "pi3k": 487, "q92600": 487, "cnot9": 487, "2303": 487, "p16422": 487, "epcam": 487, "2304": 487, "q9y6y0": 487, "ivns1abp": 487, "2305": 487, "kctd12": 487, "catenin": 487, "goe": 487, "customannot": 487, "anyon": 487, "intercellannot": 487, "310033": 487, "43617": 487, "intercell_annot": 487, "annot_combined_class": 487, "revis": 487, "scope": [487, 490], "tgf": 487, "plasma": [487, 490], "annotdefkei": 487, "annotationgroup": 487, "5150": 487, "5760": 487, "7041": 487, "transmembrane_predict": 487, "6444": 487, "transmembrane_phobiu": 487, "almen2009": 487, "transmembrane_sosui": 487, "1663": 487, "tran": 487, "143945": 487, "behav": 487, "gaba_receptor": 487, "gaba": 487, "a8mpy1": 487, "gabra1": 487, "gabrb2": 487, "gabrd": 487, "o14764_p14867_p47870": 487, "o14764_p28472_p48169": 487, "o14764_p28472_q16445": 487, "o14764_p47870_p48169": 487, "o14764_p47870_q16445": 487, "gabbr1": 487, "gabbr2": 487, "o75899_q9ubs5": 487, "p14867": 487, "gamma": 487, "p14867_p18507_p28472": 487, "gabrg2": 487, "p14867_p18507_p47870": 487, "p18507_p28472_p31644": 487, "p18507_p28472_p34903": 487, "p18507_p28472_p47869": 487, "p18507_p28472_q16445": 487, "p18507_q8n1c3": 487, "register_network": 487, "statist": 487, "counts_df": 487, "consensus_scor": 487, "transmitt": [487, 490], "receiv": [487, 490], "plasma_membrane_transmembran": 487, "plasma_membrane_peripher": 487, "n_uniprot": 487, "resource_specif": [487, 490], "1120": 487, "parin_adhesion_regul": 487, "intracellular_intercellular_rel": 487, "1121": 487, "plakophilin_adhesion_regul": 487, "1122": 487, "actin_regulation_adhesom": 487, "1123": 487, "adhesion_cytoskeleton_adaptor": 487, "118": 487, "1124": 487, "1125": 487, "q96jp9": 487, "cdhr1": 487, "q9p126": 487, "clec1b": 487, "q13585": 487, "gpr50": 487, "q8n9i0": 487, "syt2": 487, "o43614": 487, "hcrtr2": 487, "a6njy1": 487, "slc9b1p1": 487, "q5ri15": 487, "cox20": 487, "q13948": 487, "cux1": 487, "q8ngk4": 487, "or52k1": 487, "q8iys2": 487, "kiaa2013": 487, "neurotensin": 487, "recom": 487, "o95665": 487, "ntsr2": 487, "410": 487, "45385": 487, "neurotensi": 487, "tr": 487, "idecapepti": 487, "disulfid": 487, "7598": 487, "tree": [487, 489], "geneontologi": 487, "goannot": 487, "80": 487, "goa": 487, "0x689946b55570": 487, "82": 487, "0x68991cdc9b40": 487, "NOT": 487, "p21333": 487, "p80108": 487, "p62258": 487, "q9nrx4": 487, "p54710": 487, "q8ner1": 487, "p01303": 487, "get_all_descend": 487, "0005576": 487, "0001507": 487, "0001527": 487, "0003351": 487, "0003355": 487, "0005201": 487, "0005577": 487, "0005582": 487, "0005583": 487, "0005584": 487, "0005585": 487, "0005586": 487, "0005587": 487, "0005588": 487, "0005590": 487, "0005591": 487, "0005592": 487, "0005595": 487, "0005596": 487, "0005599": 487, "0005601": 487, "0005602": 487, "0005604": 487, "0005606": 487, "0005607": 487, "0005608": 487, "0005609": 487, "0005610": 487, "0005611": 487, "0005612": 487, "0005614": 487, "0005615": 487, "0005616": 487, "0006858": 487, "0006859": 487, "0006860": 487, "0009519": 487, "0010367": 487, "0016914": 487, "0016942": 487, "0020003": 487, "0020004": 487, "0020005": 487, "0020006": 487, "0030020": 487, "0030021": 487, "0030023": 487, "0030197": 487, "0030345": 487, "0030934": 487, "0030935": 487, "0030938": 487, "0031012": 487, "0031395": 487, "0032311": 487, "0032579": 487, "0033165": 487, "0033166": 487, "0034358": 487, "0034359": 487, "0034360": 487, "0034361": 487, "0034362": 487, "0034363": 487, "0034364": 487, "0034365": 487, "00343": 487, "3104": 487, "redund": 487, "homomultim": 487, "update_index": 487, "91": 487, "p42345": [487, 490], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 487, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 487, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 487, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 487, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 487, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 487, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 487, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 487, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 487, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 487, "5348": 487, "equival": 487, "represent": 487, "alphabet": 487, "sort": [487, 489], "despit": [487, 489], "fact": 487, "98": 487, "q92793": 487, "q09472": 487, "components_genesymbol": 487, "nfya_nfyb_nfyc": 487, "corum": [487, 490], "compleat": 487, "complexport": 487, "15243141": 487, "14755292": 487, "9372932": 487, "4478": 487, "hc1449": 487, "deptor_eef1a1_mlst8_prr5_rictor": 487, "c2": 487, "akt1s1_deptor_mlst8_mtor_rptor": 487, "btrc_cul1_skp1": 487, "9990852": 487, "c5": 487, "227": 487, "hc757": 487, "crebbp_ep300": 487, "c6": 487, "28168": 487, "npnt": 487, "q5szk8_q6uxi9_q86xx4": 487, "fras1_frem2_npnt": 487, "28169": 487, "nrp1_nrp2": 487, "o14786_o60462_q9y4d7": 487, "nrp1_nrp2_plxnd1": 487, "28170": 487, "nrp2_plxna2": 487, "o60462_o75051": 487, "28171": 487, "nrp2_plxna4": 487, "o60462_q9hcm2": 487, "28172": 487, "ptch2_smo": 487, "q99835_q9y6c5": 487, "compil": [487, 488], "longer": 487, "good": 487, "reli": 487, "save_to_pickl": 487, "myannot": 487, "pickle_fil": 487, "complexdb": 487, "mycomplex": 487, "char": 487, "xxxxx": 487, "ten": 487, "l0n17": 487, "disclaim": 487, "annoi": 487, "101": 487, "least": 487, "research": 487, "educ": 487, "credit": 487, "publish": 487, "gnu": 487, "104": 487, "prioriti": 487, "107": 487, "console_level": 487, "si": 487, "uniroma2": 487, "download_complex": 487, "d7b8673e83e43a01c533f9de5a2b04b9": 487, "1046": 487, "creation": 487, "builtin": 487, "shell": 487, "dev": 487, "108": 487, "devnul": 487, "notic": 487, "109": 487, "greet": 487, "Not": 487, "childoflogg": 487, "def": 487, "say_someth": 487, "_log": 487, "anywher": 487, "111": 487, "_logger": 487, "mylogg": 487, "strai": 487, "flood": 487, "112": 487, "hasn": 487, "thoroughli": 487, "scai": 487, "fraunhof": 487, "captur": 487, "span": 487, "rang": 487, "ptmaggreg": 487, "belgraph": 487, "bel_graph": 487, "summar": 487, "export_relationship": 487, "omnipath_pathwai": 487, "fp": 487, "bel_str": 487, "333": 487, "interaction_input": 487, "singnalink": 487, "interaction_datafram": 487, "peripher": [487, 490], "protein_datafram": 487, "along": 487, "load_omnipath": 487, "comment": 487, "entir": 487, "sai": 487, "worri": 487, "network1": 487, "entreza": 487, "entrezb": 487, "1950": 487, "5290": 487, "207": 487, "2932": 487, "network2": 487, "pik3ca": 487, "sos1": 487, "rac1": 487, "map3k1": 487, "hra": 487, "gsk3b": 487, "iinput_format": 487, "input1": 487, "readset": 487, "egf1": 487, "input2": 487, "egf2": 487, "lst": 487, "ecount": 487, "vcount": 487, "dgraph": 487, "3241": 487, "dir": 487, "agre": 487, "p17252": 487, "q15139": 487, "stimulatori": 487, "revers": 487, "get_dir": 487, "inhibitori": 487, "contradict": 487, "decid": 487, "rid": 487, "consensu": 487, "consensus_edg": 487, "helper": 487, "esr1": 487, "plural": 487, "gss": 487, "atg16l2": 487, "mix": [487, 490], "could": 487, "affect": 487, "gs_stimulated_bi": 487, "_namedvertexseq": 487, "seri": 487, "bit": 487, "contraintuit": 487, "gs_stimul": 487, "affected_bi": 487, "similari": 487, "inhibited_bi": 487, "gs_": 487, "up_": 487, "neighbor": 487, "neighborhood": 487, "increas": 487, "rapidli": 487, "atg3": [487, 490], "get_edg": 487, "map1lc3b": [487, 490], "sqstm1": [487, 490], "refs_by_sourc": 487, "abil": 487, "librari": 487, "egf_network": 487, "png": 487, "777777": 487, "97be73": 487, "ffffff": 487, "bug": 487, "ipython": 487, "visibl": 487, "inlin": 487, "120": 487, "imag": 487, "click": 488, "changelog": 489, "improv": 489, "remot": 489, "partial": 489, "pyreact": 489, "biopaxread": 489, "rule": [489, 490], "workflow": 489, "mysql_connect": 489, "python3": 489, "mrna": [489, 490], "websrvtab": 489, "dataio": 489, "docstr": 489, "focus": 489, "rewritten": 489, "workaround": 489, "terribl": 489, "reflist": 489, "becam": 489, "paremet": 489, "reorgan": 489, "redesign": 489, "src": 489, "yml": 489, "rna": 489, "neo4j": 489, "backend": 489, "biocyph": 489, "dlmanag": 489, "protocol": 490, "wget": 490, "whatev": 490, "recogn": 490, "webserv": 490, "optimum": 490, "qualiti": 490, "interacion": 490, "rodent": 490, "counterpart": 490, "omic": 490, "highest": 490, "regulon": 490, "arget": 490, "source_target": 490, "atg7": 490, "atg4b": 490, "map1lc3a": 490, "map1lc3c": 490, "q9h0r8": 490, "gabarap": 490, "gabarapl2": 490, "appear": 490, "fyn": 490, "ens_sub": 490, "phosphosite_noref": 490, "hearth": 490, "dplyr": 490, "signalink_pathwai": 490, "bmp7": 490, "hpa_tissu": 490, "funtion": 490, "ion": 490, "interleukin": 490, "deliv": 490, "exact": 490, "atg4a": 490, "bmp8b": 490, "intuit": 490, "repli": 490}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [378, 0, 0, "-", "internals"], [411, 0, 0, "-", "legacy"], [415, 3, 1, "", "log"], [416, 0, 0, "-", "resources"], [434, 0, 0, "-", "share"], [462, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "abs"], [12, 0, 0, "-", "acsn"], [15, 0, 0, "-", "adrecs"], [25, 0, 0, "-", "biogrid"], [28, 0, 0, "-", "biomart"], [34, 0, 0, "-", "biomodels"], [40, 0, 0, "-", "ca1"], [42, 0, 0, "-", "cancercellmap"], [44, 0, 0, "-", "cell"], [46, 0, 0, "-", "chembl"], [54, 0, 0, "-", "clinvar"], [57, 0, 0, "-", "common"], [64, 0, 0, "-", "compath"], [66, 0, 0, "-", "cpdb"], [69, 0, 0, "-", "credentials"], [71, 0, 0, "-", "ctdbase"], [74, 0, 0, "-", "ddinter"], [80, 0, 0, "-", "deathdomain"], [83, 0, 0, "-", "dip"], [86, 0, 0, "-", "diseases"], [94, 0, 0, "-", "drugbank"], [101, 0, 0, "-", "ebi"], [103, 0, 0, "-", "elm"], [108, 0, 0, "-", "embopress"], [110, 0, 0, "-", "encode"], [112, 0, 0, "-", "ensembl"], [114, 0, 0, "-", "eutils"], [116, 0, 0, "-", "expasy"], [119, 0, 0, "-", "genecards"], [123, 3, 1, "", "get_method"], [124, 0, 0, "-", "graphviz"], [126, 0, 0, "-", "hprd"], [131, 0, 0, "-", "htri"], [133, 0, 0, "-", "humsavar"], [135, 0, 0, "-", "ielm"], [138, 0, 0, "-", "imweb"], [141, 0, 0, "-", "innatedb"], [143, 0, 0, "-", "instruct"], [146, 0, 0, "-", "intact"], [148, 0, 0, "-", "interpro"], [153, 0, 0, "-", "ipi"], [155, 0, 0, "-", "kegg_api"], [172, 0, 0, "-", "kirouac2010"], [174, 0, 0, "-", "laudanna"], [177, 0, 0, "-", "lincs"], [179, 0, 0, "-", "macrophage"], [181, 0, 0, "-", "main"], [182, 0, 0, "-", "mimp"], [186, 0, 0, "-", "mir2disease"], [188, 0, 0, "-", "mirdeathdb"], [190, 0, 0, "-", "mitab"], [193, 0, 0, "-", "mppi"], [195, 0, 0, "-", "ncrdeathdb"], [197, 0, 0, "-", "negatome"], [199, 0, 0, "-", "netbiol"], [202, 0, 0, "-", "offsides"], [204, 0, 0, "-", "ontology"], [207, 0, 0, "-", "opentargets"], [213, 0, 0, "-", "pathophenodb"], [216, 0, 0, "-", "pathwaycommons"], [233, 0, 0, "-", "pazar"], [235, 0, 0, "-", "pepcyber"], [238, 0, 0, "-", "pharos"], [247, 0, 0, "-", "phobius"], [249, 0, 0, "-", "phosphonetworks"], [252, 0, 0, "-", "phosphopoint"], [255, 0, 0, "-", "pro"], [258, 0, 0, "-", "protmapper"], [262, 0, 0, "-", "pubchem"], [264, 0, 0, "-", "pubmed"], [271, 0, 0, "-", "ramp"], [278, 0, 0, "-", "rdata"], [279, 0, 0, "-", "reaction"], [299, 0, 0, "-", "reactome"], [304, 0, 0, "-", "science"], [306, 0, 0, "-", "sider"], [315, 0, 0, "-", "stitch"], [318, 0, 0, "-", "string"], [323, 0, 0, "-", "switches_elm"], [325, 0, 0, "-", "transmir"], [327, 0, 0, "-", "trip"], [334, 0, 0, "-", "twosides"], [336, 0, 0, "-", "unichem"], [341, 0, 0, "-", "uniprot"], [367, 0, 0, "-", "uniprot_db"], [376, 0, 0, "-", "uniprot_idmapping"]], "pypath.inputs.abs": [[11, 3, 1, "", "abs_interactions"]], "pypath.inputs.acsn": [[13, 3, 1, "", "acsn_interactions"], [14, 3, 1, "", "acsn_interactions_sif"]], "pypath.inputs.adrecs": [[16, 1, 1, "", "AdrecsAdr"], [17, 1, 1, "", "AdrecsChildParent"], [18, 1, 1, "", "AdrecsDrug"], [19, 1, 1, "", "AdrecsDrugAdr"], [20, 1, 1, "", "AdrecsTerm"], [21, 3, 1, "", "adrecs_adr_ontology"], [22, 3, 1, "", "adrecs_drug_adr"], [23, 3, 1, "", "adrecs_drug_identifiers"], [24, 3, 1, "", "adrecs_hierarchy"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "adr_class"], [16, 4, 1, "", "badd"], [16, 2, 1, "", "count"], [16, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "child"], [17, 2, 1, "", "count"], [17, 2, 1, "", "index"], [17, 4, 1, "", "parent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, 2, 1, "", "__init__"], [18, 4, 1, "", "badd"], [18, 2, 1, "", "count"], [18, 4, 1, "", "drug"], [18, 4, 1, "", "drugbank"], [18, 2, 1, "", "index"], [18, 4, 1, "", "kegg"], [18, 4, 1, "", "mesh"], [18, 4, 1, "", "pubchem_cid"], [18, 4, 1, "", "synonyms"], [18, 4, 1, "", "tdd"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "adr"], [19, 4, 1, "", "adr_badd"], [19, 2, 1, "", "count"], [19, 4, 1, "", "drug"], [19, 4, 1, "", "drug_badd"], [19, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, 2, 1, "", "__init__"], [20, 4, 1, "", "adrecs_class"], [20, 4, 1, "", "badd"], [20, 2, 1, "", "count"], [20, 2, 1, "", "index"], [20, 4, 1, "", "meddra"], [20, 4, 1, "", "name"], [20, 4, 1, "", "synonyms"]], "pypath.inputs.biogrid": [[26, 3, 1, "", "biogrid_all_interactions"], [27, 3, 1, "", "biogrid_interactions"]], "pypath.inputs.biomart": [[29, 3, 1, "", "biomart_homology"], [30, 3, 1, "", "biomart_microarray"], [31, 3, 1, "", "biomart_microarray_types"], [32, 3, 1, "", "biomart_microarrays"], [33, 3, 1, "", "biomart_query"]], "pypath.inputs.biomodels": [[35, 3, 1, "", "download_single_model"], [36, 3, 1, "", "get_all_models"], [37, 3, 1, "", "get_biomodels"], [38, 3, 1, "", "get_biomodels_req"], [39, 3, 1, "", "get_single_model"]], "pypath.inputs.ca1": [[41, 3, 1, "", "ca1_interactions"]], "pypath.inputs.cancercellmap": [[43, 3, 1, "", "ccmap_interactions"]], "pypath.inputs.cell": [[45, 3, 1, "", "cell_supplementary"]], "pypath.inputs.chembl": [[47, 3, 1, "", "chembl_activities"], [48, 3, 1, "", "chembl_assays"], [49, 3, 1, "", "chembl_documents"], [50, 3, 1, "", "chembl_drug_indications"], [51, 3, 1, "", "chembl_mechanisms"], [52, 3, 1, "", "chembl_molecules"], [53, 3, 1, "", "chembl_targets"]], "pypath.inputs.clinvar": [[55, 3, 1, "", "clinvar_citations"], [56, 3, 1, "", "clinvar_raw"]], "pypath.inputs.common": [[58, 3, 1, "", "csv_sep_change"], [59, 3, 1, "", "glom_fields"], [60, 3, 1, "", "json_extract"], [61, 3, 1, "", "json_read"], [62, 3, 1, "", "read_table"], [63, 3, 1, "", "read_xls"]], "pypath.inputs.compath": [[65, 3, 1, "", "compath_mappings"]], "pypath.inputs.cpdb": [[67, 3, 1, "", "cpdb_interactions"], [68, 3, 1, "", "cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[70, 3, 1, "", "credentials"]], "pypath.inputs.ctdbase": [[72, 3, 1, "", "ctdbase_relations"], [73, 3, 1, "", "ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[75, 3, 1, "", "ddinter_drug_interactions"], [76, 3, 1, "", "ddinter_identifiers"], [77, 3, 1, "", "ddinter_interactions"], [78, 3, 1, "", "ddinter_mappings"], [79, 3, 1, "", "ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[81, 3, 1, "", "deathdomain_interactions"], [82, 3, 1, "", "deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[84, 3, 1, "", "dip_interactions"], [85, 3, 1, "", "dip_login"]], "pypath.inputs.diseases": [[87, 3, 1, "", "diseases_general"], [88, 3, 1, "", "experiments_filtered"], [89, 3, 1, "", "experiments_full"], [90, 3, 1, "", "knowledge_filtered"], [91, 3, 1, "", "knowledge_full"], [92, 3, 1, "", "textmining_filtered"], [93, 3, 1, "", "textmining_full"]], "pypath.inputs.drugbank": [[95, 1, 1, "", "DrugbankFull"], [96, 3, 1, "", "drugbank_annotations"], [97, 3, 1, "", "drugbank_drugs"], [98, 3, 1, "", "drugbank_interactions"], [99, 3, 1, "", "drugbank_mapping"], [100, 3, 1, "", "drugbank_raw_interactions"]], "pypath.inputs.drugbank.DrugbankFull": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "drugbank_drugs_full"], [95, 2, 1, "", "drugbank_external_ids_full"], [95, 2, 1, "", "drugbank_properties_full"], [95, 2, 1, "", "drugbank_targets_full"]], "pypath.inputs.ebi": [[102, 3, 1, "", "ebi_rest"]], "pypath.inputs.elm": [[104, 3, 1, "", "elm_classes"], [105, 3, 1, "", "elm_domains"], [106, 3, 1, "", "elm_instances"], [107, 3, 1, "", "elm_interactions"]], "pypath.inputs.embopress": [[109, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.encode": [[111, 3, 1, "", "encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[113, 3, 1, "", "ensembl_organisms"]], "pypath.inputs.eutils": [[115, 3, 1, "", "esummary"]], "pypath.inputs.expasy": [[117, 3, 1, "", "expasy_enzyme_classes"], [118, 3, 1, "", "expasy_enzymes"]], "pypath.inputs.genecards": [[120, 3, 1, "", "genecards_datasheet"], [121, 3, 1, "", "genecards_soup"], [122, 3, 1, "", "genecards_summaries"]], "pypath.inputs.graphviz": [[125, 3, 1, "", "graphviz_attrs"]], "pypath.inputs.hprd": [[127, 3, 1, "", "get_hprd"], [128, 3, 1, "", "hprd_enzyme_substrate"], [129, 3, 1, "", "hprd_interactions"], [130, 3, 1, "", "hprd_interactions_htp"]], "pypath.inputs.htri": [[132, 3, 1, "", "htri_interactions"]], "pypath.inputs.humsavar": [[134, 3, 1, "", "uniprot_variants"]], "pypath.inputs.ielm": [[136, 3, 1, "", "get_ielm"], [137, 3, 1, "", "get_ielm_huge"]], "pypath.inputs.imweb": [[139, 3, 1, "", "get_imweb"], [140, 3, 1, "", "get_imweb_req"]], "pypath.inputs.innatedb": [[142, 3, 1, "", "innatedb_interactions"]], "pypath.inputs.instruct": [[144, 3, 1, "", "get_instruct"], [145, 3, 1, "", "get_instruct_offsets"]], "pypath.inputs.intact": [[147, 3, 1, "", "intact_interactions"]], "pypath.inputs.interpro": [[149, 3, 1, "", "interpro2go_annotations"], [150, 3, 1, "", "interpro_annotations"], [151, 3, 1, "", "interpro_entries"], [152, 3, 1, "", "interpro_xrefs"]], "pypath.inputs.ipi": [[154, 3, 1, "", "ipi_uniprot"]], "pypath.inputs.kegg_api": [[156, 3, 1, "", "disease_to_drug"], [157, 3, 1, "", "disease_to_gene"], [158, 3, 1, "", "disease_to_pathway"], [159, 3, 1, "", "drug_to_disease"], [160, 3, 1, "", "drug_to_drug"], [161, 3, 1, "", "drug_to_gene"], [162, 3, 1, "", "drug_to_pathway"], [163, 3, 1, "", "gene_to_disease"], [164, 3, 1, "", "gene_to_drug"], [165, 3, 1, "", "gene_to_pathway"], [166, 3, 1, "", "kegg_drug_to_chebi"], [167, 3, 1, "", "kegg_gene_to_ncbi_geneid"], [168, 3, 1, "", "kegg_gene_to_uniprot"], [169, 3, 1, "", "pathway_to_disease"], [170, 3, 1, "", "pathway_to_drug"], [171, 3, 1, "", "pathway_to_gene"]], "pypath.inputs.kirouac2010": [[173, 3, 1, "", "kirouac2010_interactions"]], "pypath.inputs.laudanna": [[175, 3, 1, "", "laudanna_directions"], [176, 3, 1, "", "laudanna_effects"]], "pypath.inputs.lincs": [[178, 3, 1, "", "lincs_compounds"]], "pypath.inputs.macrophage": [[180, 3, 1, "", "macrophage_interactions"]], "pypath.inputs.mimp": [[183, 3, 1, "", "get_kinase_class"], [184, 3, 1, "", "mimp_enzyme_substrate"], [185, 3, 1, "", "mimp_interactions"]], "pypath.inputs.mir2disease": [[187, 3, 1, "", "mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[189, 3, 1, "", "mirdeathdb_interactions"]], "pypath.inputs.mitab": [[191, 3, 1, "", "mitab_field_list"], [192, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.mppi": [[194, 3, 1, "", "mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[196, 3, 1, "", "ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[198, 3, 1, "", "negatome_interactions"]], "pypath.inputs.netbiol": [[200, 3, 1, "", "arn_interactions"], [201, 3, 1, "", "nrf2ome_interactions"]], "pypath.inputs.offsides": [[203, 3, 1, "", "offsides_side_effects"]], "pypath.inputs.ontology": [[205, 3, 1, "", "listof_ontologies"], [206, 3, 1, "", "ontology"]], "pypath.inputs.opentargets": [[208, 3, 1, "", "opentargets_adverse_reactions"], [209, 3, 1, "", "opentargets_baseline_expression"], [210, 3, 1, "", "opentargets_direct_score"], [211, 3, 1, "", "opentargets_general"], [212, 3, 1, "", "opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[214, 1, 1, "", "DiseasePathogen"], [215, 3, 1, "", "disease_pathogen_interactions"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "count"], [214, 4, 1, "", "disease"], [214, 4, 1, "", "disease_id"], [214, 4, 1, "", "evidence"], [214, 2, 1, "", "index"], [214, 4, 1, "", "pathogen"], [214, 4, 1, "", "pathogen_taxid"]], "pypath.inputs.pathwaycommons": [[217, 1, 1, "", "PathwayCommonsInteraction"], [218, 1, 1, "", "PathwayCommonsResource"], [219, 3, 1, "", "pathwaycommons_bind_interactions"], [220, 3, 1, "", "pathwaycommons_biogrid_interactions"], [221, 3, 1, "", "pathwaycommons_corum_interactions"], [222, 3, 1, "", "pathwaycommons_dip_interactions"], [223, 3, 1, "", "pathwaycommons_hprd_interactions"], [224, 3, 1, "", "pathwaycommons_inoh_interactions"], [225, 3, 1, "", "pathwaycommons_intact_interactions"], [226, 3, 1, "", "pathwaycommons_interactions"], [227, 3, 1, "", "pathwaycommons_kegg_interactions"], [228, 3, 1, "", "pathwaycommons_netpath_interactions"], [229, 3, 1, "", "pathwaycommons_panther_interactions"], [230, 3, 1, "", "pathwaycommons_phosphosite_interactions"], [231, 3, 1, "", "pathwaycommons_reactome_interactions"], [232, 3, 1, "", "pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, 2, 1, "", "__init__"], [217, 2, 1, "", "count"], [217, 4, 1, "", "id_a"], [217, 4, 1, "", "id_b"], [217, 2, 1, "", "index"], [217, 4, 1, "", "interaction_type"], [217, 4, 1, "", "resource"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "count"], [218, 2, 1, "", "index"], [218, 4, 1, "", "name"], [218, 4, 1, "", "pc_label"], [218, 4, 1, "", "version"]], "pypath.inputs.pazar": [[234, 3, 1, "", "pazar_interactions"]], "pypath.inputs.pepcyber": [[236, 3, 1, "", "pepcyber_details"], [237, 3, 1, "", "pepcyber_interactions"]], "pypath.inputs.pharos": [[239, 3, 1, "", "pharos_diseases"], [240, 3, 1, "", "pharos_expression"], [241, 3, 1, "", "pharos_general"], [242, 3, 1, "", "pharos_gtex"], [243, 3, 1, "", "pharos_ligands"], [244, 3, 1, "", "pharos_orthologs"], [245, 3, 1, "", "pharos_targets"], [246, 3, 1, "", "pharos_xrefs"]], "pypath.inputs.phobius": [[248, 3, 1, "", "phobius_annotations"]], "pypath.inputs.phosphonetworks": [[250, 3, 1, "", "phosphonetworks_enzyme_substrate"], [251, 3, 1, "", "phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[253, 3, 1, "", "phosphopoint_directions"], [254, 3, 1, "", "phosphopoint_interactions"]], "pypath.inputs.pro": [[256, 3, 1, "", "get_pro"], [257, 3, 1, "", "pro_mapping"]], "pypath.inputs.protmapper": [[259, 3, 1, "", "get_protmapper"], [260, 3, 1, "", "protmapper_enzyme_substrate"], [261, 3, 1, "", "protmapper_interactions"]], "pypath.inputs.pubchem": [[263, 3, 1, "", "pubchem_mapping"]], "pypath.inputs.pubmed": [[265, 3, 1, "", "get_pmid"], [266, 3, 1, "", "get_pubmeds"], [267, 3, 1, "", "only_pmids"], [268, 3, 1, "", "open_pubmed"], [269, 3, 1, "", "pmids_dict"], [270, 3, 1, "", "pmids_list"]], "pypath.inputs.ramp": [[272, 3, 1, "", "ramp_id_types"], [273, 3, 1, "", "ramp_id_types_2"], [274, 3, 1, "", "ramp_list_tables"], [275, 3, 1, "", "ramp_mapping"], [276, 3, 1, "", "ramp_raw"], [277, 3, 1, "", "ramp_show_tables"]], "pypath.inputs.reaction": [[280, 3, 1, "", "acsn_biopax"], [281, 3, 1, "", "acsn_interactions_2"], [282, 3, 1, "", "get_acsn_effects"], [283, 3, 1, "", "get_controls"], [284, 3, 1, "", "get_interactions"], [285, 3, 1, "", "get_reactions"], [286, 3, 1, "", "get_soup"], [287, 3, 1, "", "panther_biopax"], [288, 3, 1, "", "panther_interactions"], [289, 3, 1, "", "pid_biopax"], [290, 3, 1, "", "pid_interactions"], [291, 3, 1, "", "process_complex"], [292, 3, 1, "", "process_controls"], [293, 3, 1, "", "process_reactions"], [294, 3, 1, "", "reactions_biopax"], [295, 3, 1, "", "reactome_biopax"], [296, 3, 1, "", "reactome_bs"], [297, 3, 1, "", "reactome_interactions"], [298, 3, 1, "", "reactome_sbml"]], "pypath.inputs.reactome": [[300, 3, 1, "", "reactome_chebis"], [301, 3, 1, "", "reactome_pathway_relations"], [302, 3, 1, "", "reactome_pathways"], [303, 3, 1, "", "reactome_uniprots"]], "pypath.inputs.science": [[305, 3, 1, "", "science_download"]], "pypath.inputs.sider": [[307, 1, 1, "", "SiderDrug"], [308, 1, 1, "", "SiderSideeffect"], [309, 1, 1, "", "SiderSideeffectMeddra"], [310, 1, 1, "", "SiderSideeffetFrequency"], [311, 3, 1, "", "sider_drug_names"], [312, 3, 1, "", "sider_meddra_side_effects"], [313, 3, 1, "", "sider_side_effect_frequencies"], [314, 3, 1, "", "sider_side_effects"]], "pypath.inputs.sider.SiderDrug": [[307, 2, 1, "", "__init__"], [307, 4, 1, "", "atc"], [307, 2, 1, "", "count"], [307, 2, 1, "", "index"], [307, 4, 1, "", "name"]], "pypath.inputs.sider.SiderSideeffect": [[308, 2, 1, "", "__init__"], [308, 2, 1, "", "count"], [308, 2, 1, "", "index"], [308, 4, 1, "", "side_effect"], [308, 4, 1, "", "umls_concept_in_meddra"], [308, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[309, 2, 1, "", "__init__"], [309, 4, 1, "", "cid"], [309, 2, 1, "", "count"], [309, 2, 1, "", "index"], [309, 4, 1, "", "meddra_id"], [309, 4, 1, "", "side_effect_name"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[310, 2, 1, "", "__init__"], [310, 2, 1, "", "count"], [310, 4, 1, "", "frequency"], [310, 2, 1, "", "index"], [310, 4, 1, "", "side_effect"], [310, 4, 1, "", "umls_concept_in_meddra"], [310, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.stitch": [[316, 3, 1, "", "stitch_actions_interactions"], [317, 3, 1, "", "stitch_links_interactions"]], "pypath.inputs.string": [[319, 3, 1, "", "string_effects"], [320, 3, 1, "", "string_links_interactions"], [321, 3, 1, "", "string_physical_interactions"], [322, 3, 1, "", "string_species"]], "pypath.inputs.switches_elm": [[324, 3, 1, "", "get_switches_elm"]], "pypath.inputs.transmir": [[326, 3, 1, "", "transmir_interactions"]], "pypath.inputs.trip": [[328, 3, 1, "", "take_a_trip"], [329, 3, 1, "", "trip_find_uniprot"], [330, 3, 1, "", "trip_get_uniprot"], [331, 3, 1, "", "trip_interactions"], [332, 3, 1, "", "trip_process"], [333, 3, 1, "", "trip_process_table"]], "pypath.inputs.twosides": [[335, 3, 1, "", "twosides_interactions"]], "pypath.inputs.unichem": [[337, 3, 1, "", "info"], [338, 3, 1, "", "unichem_info"], [339, 3, 1, "", "unichem_mapping"], [340, 3, 1, "", "unichem_sources"]], "pypath.inputs.uniprot": [[342, 1, 1, "", "Taxon"], [343, 1, 1, "", "UniprotQuery"], [344, 1, 1, "", "UniprotRecordHistory"], [345, 3, 1, "", "deleted_uniprot_genesymbol"], [346, 3, 1, "", "get_uniprot_sec"], [347, 3, 1, "", "protein_datasheet"], [348, 3, 1, "", "query_builder"], [349, 3, 1, "", "swissprot_deleted"], [350, 3, 1, "", "trembl_deleted"], [351, 3, 1, "", "uniprot_data"], [352, 3, 1, "", "uniprot_deleted"], [353, 3, 1, "", "uniprot_families"], [354, 3, 1, "", "uniprot_history"], [355, 3, 1, "", "uniprot_history_recent_datasheet"], [356, 3, 1, "", "uniprot_keywords"], [357, 3, 1, "", "uniprot_locations"], [358, 3, 1, "", "uniprot_ncbi_taxids"], [359, 3, 1, "", "uniprot_ncbi_taxids_2"], [360, 3, 1, "", "uniprot_preprocess"], [361, 3, 1, "", "uniprot_query"], [362, 3, 1, "", "uniprot_recent_version"], [363, 3, 1, "", "uniprot_taxonomy"], [364, 3, 1, "", "uniprot_tissues"], [365, 3, 1, "", "uniprot_topology"], [366, 3, 1, "", "valid_uniprot"]], "pypath.inputs.uniprot.Taxon": [[342, 2, 1, "", "__init__"], [342, 2, 1, "", "count"], [342, 4, 1, "", "english"], [342, 2, 1, "", "index"], [342, 4, 1, "", "latin"], [342, 4, 1, "", "latin_synonym"], [342, 4, 1, "", "ncbi_id"]], "pypath.inputs.uniprot.UniprotQuery": [[343, 2, 1, "", "__init__"], [343, 2, 1, "", "__iter__"], [343, 4, 1, "", "fail_on_empty"], [343, 4, 1, "", "name_process"], [343, 2, 1, "", "perform"], [343, 5, 1, "", "url"], [343, 5, 1, "", "url_plain"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[344, 2, 1, "", "__init__"], [344, 2, 1, "", "count"], [344, 4, 1, "", "database"], [344, 4, 1, "", "date"], [344, 4, 1, "", "entry_name"], [344, 4, 1, "", "entry_version"], [344, 2, 1, "", "index"], [344, 4, 1, "", "number"], [344, 4, 1, "", "replaced_by"], [344, 4, 1, "", "replaces"], [344, 4, 1, "", "sequence_version"]], "pypath.inputs.uniprot_db": [[368, 3, 1, "", "all_swissprots"], [369, 3, 1, "", "all_trembls"], [370, 3, 1, "", "all_uniprots"], [371, 3, 1, "", "get_db"], [372, 3, 1, "", "init_db"], [373, 3, 1, "", "is_swissprot"], [374, 3, 1, "", "is_trembl"], [375, 3, 1, "", "is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[377, 3, 1, "", "idtypes"]], "pypath.internals": [[379, 0, 0, "-", "input_formats"], [393, 0, 0, "-", "license"], [399, 0, 0, "-", "maps"], [400, 0, 0, "-", "refs"], [403, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[380, 1, 1, "", "ArrayMapping"], [381, 1, 1, "", "BiomartMapping"], [382, 1, 1, "", "FileMapping"], [383, 1, 1, "", "HmdbMapping"], [384, 1, 1, "", "MappingInput"], [385, 1, 1, "", "NetworkInput"], [386, 1, 1, "", "PickleMapping"], [387, 1, 1, "", "ProMapping"], [388, 1, 1, "", "RampMapping"], [389, 1, 1, "", "ReadList"], [390, 1, 1, "", "UnichemMapping"], [391, 1, 1, "", "UniprotListMapping"], [392, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[380, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[381, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[382, 2, 1, "", "__init__"]], "pypath.internals.input_formats.HmdbMapping": [[383, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[384, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[385, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[386, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[387, 2, 1, "", "__init__"]], "pypath.internals.input_formats.RampMapping": [[388, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[389, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[390, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[391, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[392, 2, 1, "", "__init__"], [392, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[394, 1, 1, "", "License"], [395, 1, 1, "", "LicenseAttrib"], [396, 1, 1, "", "LicenseFeature"], [397, 1, 1, "", "LicensePurpose"], [398, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[394, 2, 1, "", "__init__"], [394, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "check_level"], [395, 2, 1, "", "int_to_level"], [395, 2, 1, "", "level_to_int"], [395, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[396, 2, 1, "", "__init__"], [396, 2, 1, "", "check_level"], [396, 2, 1, "", "int_to_level"], [396, 2, 1, "", "level_to_int"], [396, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[397, 2, 1, "", "__init__"], [397, 2, 1, "", "check_level"], [397, 2, 1, "", "int_to_level"], [397, 2, 1, "", "level_to_int"], [397, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[398, 2, 1, "", "__init__"], [398, 2, 1, "", "check_level"], [398, 2, 1, "", "int_to_level"], [398, 2, 1, "", "level_to_int"], [398, 2, 1, "", "to_int"]], "pypath.internals.refs": [[401, 1, 1, "", "Reference"], [402, 3, 1, "", "get_pubmed_data"]], "pypath.internals.refs.Reference": [[401, 2, 1, "", "__init__"]], "pypath.internals.resource": [[404, 1, 1, "", "AbstractResource"], [405, 1, 1, "", "EnzymeSubstrateResource"], [406, 1, 1, "", "EnzymeSubstrateResourceKey"], [407, 1, 1, "", "NetworkDataset"], [408, 1, 1, "", "NetworkResource"], [409, 1, 1, "", "NetworkResourceKey"], [410, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[404, 2, 1, "", "__init__"], [404, 2, 1, "", "load_data"], [404, 2, 1, "", "process"], [404, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[405, 2, 1, "", "__init__"], [405, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[406, 2, 1, "", "__init__"], [406, 2, 1, "", "count"], [406, 4, 1, "", "data_type"], [406, 2, 1, "", "index"], [406, 4, 1, "", "name"], [406, 4, 1, "", "via"]], "pypath.internals.resource.NetworkDataset": [[407, 2, 1, "", "__init__"], [407, 2, 1, "", "clear"], [407, 2, 1, "", "get"], [407, 2, 1, "", "items"], [407, 2, 1, "", "keys"], [407, 2, 1, "", "pop"], [407, 2, 1, "", "popitem"], [407, 2, 1, "", "setdefault"], [407, 2, 1, "", "update"], [407, 2, 1, "", "values"]], "pypath.internals.resource.NetworkResource": [[408, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[409, 2, 1, "", "__init__"], [409, 2, 1, "", "count"], [409, 4, 1, "", "data_model"], [409, 4, 1, "", "data_type"], [409, 2, 1, "", "index"], [409, 4, 1, "", "interaction_type"], [409, 5, 1, "", "label"], [409, 5, 1, "", "last"], [409, 4, 1, "", "name"], [409, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[410, 2, 1, "", "__init__"]], "pypath.legacy": [[412, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[413, 3, 1, "", "get_categories"], [414, 3, 1, "", "get_category"]], "pypath.resources": [[417, 0, 0, "-", "controller"], [419, 0, 0, "-", "data"], [420, 0, 0, "-", "data_formats"], [429, 3, 1, "", "get_controller"], [430, 0, 0, "-", "licenses"], [432, 0, 0, "-", "network"], [433, 0, 0, "-", "urls"]], "pypath.resources.controller": [[418, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "add_resource_attrs"], [418, 2, 1, "", "collect_interaction"], [418, 2, 1, "", "collect_network"], [418, 2, 1, "", "license_filter"], [418, 2, 1, "", "secondary_resources"], [418, 2, 1, "", "update"]], "pypath.resources.data_formats": [[421, 6, 1, "", "activity_flow"], [422, 6, 1, "", "enzyme_substrate"], [423, 6, 1, "", "interaction"], [424, 6, 1, "", "interaction_htp"], [425, 6, 1, "", "pathway_bad"], [426, 6, 1, "", "reaction_pc"], [427, 6, 1, "", "transcription_deprecated"], [428, 6, 1, "", "transcription_onebyone"]], "pypath.resources.licenses": [[431, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[431, 2, 1, "", "__init__"]], "pypath.share": [[435, 0, 0, "-", "cache"], [439, 0, 0, "-", "common"], [440, 0, 0, "-", "constants"], [441, 0, 0, "-", "curl"], [458, 0, 0, "-", "progress"], [460, 0, 0, "-", "session"], [461, 0, 0, "-", "settings"]], "pypath.share.cache": [[436, 3, 1, "", "cache_item"], [437, 3, 1, "", "cache_path"], [438, 3, 1, "", "get_cachedir"]], "pypath.share.curl": [[442, 1, 1, "", "Curl"], [443, 1, 1, "", "FileOpener"], [444, 1, 1, "", "RemoteFile"], [445, 1, 1, "", "cache_delete_off"], [446, 1, 1, "", "cache_delete_on"], [447, 1, 1, "", "cache_off"], [448, 1, 1, "", "cache_on"], [449, 1, 1, "", "cache_print_off"], [450, 1, 1, "", "cache_print_on"], [451, 1, 1, "", "debug_off"], [452, 1, 1, "", "debug_on"], [453, 1, 1, "", "dryrun_off"], [454, 1, 1, "", "dryrun_on"], [455, 3, 1, "", "is_url"], [456, 1, 1, "", "preserve_off"], [457, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[442, 2, 1, "", "__init__"], [442, 2, 1, "", "cache_path"], [442, 2, 1, "", "close"], [442, 2, 1, "", "construct_binary_data"], [442, 2, 1, "", "extract"], [442, 2, 1, "", "is_quoted"], [442, 2, 1, "", "open"], [442, 2, 1, "", "open_tgz"], [442, 2, 1, "", "replace_forbidden"], [442, 2, 1, "", "set_binary_data"], [442, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[443, 2, 1, "", "__init__"], [443, 2, 1, "", "extract"], [443, 2, 1, "", "open"], [443, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[444, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[445, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[446, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[447, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[448, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[449, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[450, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[451, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[452, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[453, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[454, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[456, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[457, 2, 1, "", "__init__"]], "pypath.share.progress": [[459, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[459, 2, 1, "", "__init__"], [459, 2, 1, "", "get_desc"], [459, 2, 1, "", "init_tqdm"], [459, 2, 1, "", "set_done"], [459, 2, 1, "", "set_status"], [459, 2, 1, "", "set_total"], [459, 2, 1, "", "step"], [459, 2, 1, "", "terminate"]], "pypath.visual": [[463, 0, 0, "-", "drawing"], [466, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[464, 1, 1, "", "InterSet"], [465, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[464, 2, 1, "", "__init__"], [464, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[465, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[467, 1, 1, "", "AbstractCairoGraphDrawer"], [468, 4, 1, "", "ArrowEdgeDrawer"], [469, 1, 1, "", "DefaultGraphDrawerFFsupport"], [470, 4, 1, "", "DefaultVertexDrawer"], [471, 4, 1, "", "TextDrawer"], [472, 0, 0, "-", "edge"], [479, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[467, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[469, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[473, 1, 1, "", "AbstractEdgeDrawer"], [474, 1, 1, "", "AlphaVaryingEdgeDrawer"], [475, 1, 1, "", "ArrowEdgeDrawer"], [476, 1, 1, "", "DarkToLightEdgeDrawer"], [477, 1, 1, "", "LightToDarkEdgeDrawer"], [478, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "draw_directed_edge"], [473, 2, 1, "", "draw_loop_edge"], [473, 2, 1, "", "draw_undirected_edge"], [473, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "draw_directed_edge"], [474, 2, 1, "", "draw_loop_edge"], [474, 2, 1, "", "draw_undirected_edge"], [474, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "draw_directed_edge"], [475, 2, 1, "", "draw_loop_edge"], [475, 2, 1, "", "draw_undirected_edge"], [475, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "draw_directed_edge"], [476, 2, 1, "", "draw_loop_edge"], [476, 2, 1, "", "draw_undirected_edge"], [476, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "draw_directed_edge"], [477, 2, 1, "", "draw_loop_edge"], [477, 2, 1, "", "draw_undirected_edge"], [477, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "draw_directed_edge"], [478, 2, 1, "", "draw_loop_edge"], [478, 2, 1, "", "draw_undirected_edge"], [478, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[480, 1, 1, "", "AbstractCairoDrawer"], [481, 1, 1, "", "AbstractCairoVertexDrawer"], [482, 1, 1, "", "AbstractDrawer"], [483, 1, 1, "", "AbstractVertexDrawer"], [484, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[480, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[481, 2, 1, "", "__init__"], [481, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[482, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pypath": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "core": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 57, 58, 59, 60, 61, 62, 63, 439, 487], "filter_network_df": 5, "data": [6, 419, 487], "disclaim": 7, "info": [8, 337, 487], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 487], "ab": [10, 11], "abs_interact": 11, "acsn": [12, 13, 14], "acsn_interact": 13, "acsn_interactions_sif": 14, "adrec": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "adrecsadr": 16, "adrecschildpar": 17, "adrecsdrug": 18, "adrecsdrugadr": 19, "adrecsterm": 20, "adrecs_adr_ontologi": 21, "adrecs_drug_adr": 22, "adrecs_drug_identifi": 23, "adrecs_hierarchi": 24, "biogrid": [25, 26, 27], "biogrid_all_interact": 26, "biogrid_interact": 27, "biomart": [28, 29, 30, 31, 32, 33], "biomart_homologi": 29, "biomart_microarrai": [30, 32], "biomart_microarray_typ": 31, "biomart_queri": 33, "biomodel": [34, 35, 36, 37, 38, 39], "download_single_model": 35, "get_all_model": 36, "get_biomodel": 37, "get_biomodels_req": 38, "get_single_model": 39, "ca1": [40, 41], "ca1_interact": 41, "cancercellmap": [42, 43], "ccmap_interact": 43, "cell": [44, 45], "cell_supplementari": 45, "chembl": [46, 47, 48, 49, 50, 51, 52, 53], "chembl_act": 47, "chembl_assai": 48, "chembl_docu": 49, "chembl_drug_ind": 50, "chembl_mechan": 51, "chembl_molecul": 52, "chembl_target": 53, "clinvar": [54, 55, 56], "clinvar_cit": 55, "clinvar_raw": 56, "csv_sep_chang": 58, "glom_field": 59, "json_extract": 60, "json_read": 61, "read_tabl": 62, "read_xl": 63, "compath": [64, 65], "compath_map": 65, "cpdb": [66, 67, 68], "cpdb_interact": 67, "cpdb_interactions_ltp": 68, "credenti": [69, 70], "ctdbase": [71, 72, 73], "ctdbase_rel": 72, "ctdbase_vocabulari": 73, "ddinter": [74, 75, 76, 77, 78, 79], "ddinter_drug_interact": 75, "ddinter_identifi": 76, "ddinter_interact": 77, "ddinter_map": 78, "ddinter_n_drug": 79, "deathdomain": [80, 81, 82], "deathdomain_interact": 81, "deathdomain_interactions_rescu": 82, "dip": [83, 84, 85], "dip_interact": 84, "dip_login": 85, "diseas": [86, 87, 88, 89, 90, 91, 92, 93], "diseases_gener": 87, "experiments_filt": 88, "experiments_ful": 89, "knowledge_filt": 90, "knowledge_ful": 91, "textmining_filt": 92, "textmining_ful": 93, "drugbank": [94, 95, 96, 97, 98, 99, 100], "drugbankful": 95, "drugbank_annot": 96, "drugbank_drug": 97, "drugbank_interact": 98, "drugbank_map": 99, "drugbank_raw_interact": 100, "ebi": [101, 102], "ebi_rest": 102, "elm": [103, 104, 105, 106, 107], "elm_class": 104, "elm_domain": 105, "elm_inst": 106, "elm_interact": 107, "embopress": [108, 109], "embopress_supplementari": 109, "encod": [110, 111], "encode_tf_mirna_interact": 111, "ensembl": [112, 113], "ensembl_organ": 113, "eutil": [114, 115], "esummari": 115, "expasi": [116, 117, 118], "expasy_enzyme_class": 117, "expasy_enzym": 118, "genecard": [119, 120, 121, 122], "genecards_datasheet": 120, "genecards_soup": 121, "genecards_summari": 122, "get_method": 123, "graphviz": [124, 125], "graphviz_attr": 125, "hprd": [126, 127, 128, 129, 130], "get_hprd": 127, "hprd_enzyme_substr": 128, "hprd_interact": 129, "hprd_interactions_htp": 130, "htri": [131, 132], "htri_interact": 132, "humsavar": [133, 134], "uniprot_vari": 134, "ielm": [135, 136, 137], "get_ielm": 136, "get_ielm_hug": 137, "imweb": [138, 139, 140], "get_imweb": 139, "get_imweb_req": 140, "innatedb": [141, 142], "innatedb_interact": 142, "instruct": [143, 144, 145], "get_instruct": 144, "get_instruct_offset": 145, "intact": [146, 147], "intact_interact": 147, "interpro": [148, 149, 150, 151, 152], "interpro2go_annot": 149, "interpro_annot": 150, "interpro_entri": 151, "interpro_xref": 152, "ipi": [153, 154], "ipi_uniprot": 154, "kegg_api": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "disease_to_drug": 156, "disease_to_gen": 157, "disease_to_pathwai": 158, "drug_to_diseas": 159, "drug_to_drug": 160, "drug_to_gen": 161, "drug_to_pathwai": 162, "gene_to_diseas": 163, "gene_to_drug": 164, "gene_to_pathwai": 165, "kegg_drug_to_chebi": 166, "kegg_gene_to_ncbi_geneid": 167, "kegg_gene_to_uniprot": 168, "pathway_to_diseas": 169, "pathway_to_drug": 170, "pathway_to_gen": 171, "kirouac2010": [172, 173], "kirouac2010_interact": 173, "laudanna": [174, 175, 176], "laudanna_direct": 175, "laudanna_effect": 176, "linc": [177, 178], "lincs_compound": 178, "macrophag": [179, 180], "macrophage_interact": 180, "main": 181, "mimp": [182, 183, 184, 185], "get_kinase_class": 183, "mimp_enzyme_substr": 184, "mimp_interact": 185, "mir2diseas": [186, 187], "mir2disease_interact": 187, "mirdeathdb": [188, 189], "mirdeathdb_interact": 189, "mitab": [190, 191, 192], "mitab_field_list": 191, "mitab_field_uniprot": 192, "mppi": [193, 194], "mppi_interact": 194, "ncrdeathdb": [195, 196], "ncrdeathdb_interact": 196, "negatom": [197, 198], "negatome_interact": 198, "netbiol": [199, 200, 201], "arn_interact": 200, "nrf2ome_interact": 201, "offsid": [202, 203], "offsides_side_effect": 203, "ontologi": [204, 205, 206, 487], "listof_ontologi": 205, "opentarget": [207, 208, 209, 210, 211, 212], "opentargets_adverse_react": 208, "opentargets_baseline_express": 209, "opentargets_direct_scor": 210, "opentargets_gener": 211, "opentargets_indirect_scor": 212, "pathophenodb": [213, 214, 215], "diseasepathogen": 214, "disease_pathogen_interact": 215, "pathwaycommon": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "pathwaycommonsinteract": 217, "pathwaycommonsresourc": 218, "pathwaycommons_bind_interact": 219, "pathwaycommons_biogrid_interact": 220, "pathwaycommons_corum_interact": 221, "pathwaycommons_dip_interact": 222, "pathwaycommons_hprd_interact": 223, "pathwaycommons_inoh_interact": 224, "pathwaycommons_intact_interact": 225, "pathwaycommons_interact": 226, "pathwaycommons_kegg_interact": 227, "pathwaycommons_netpath_interact": 228, "pathwaycommons_panther_interact": 229, "pathwaycommons_phosphosite_interact": 230, "pathwaycommons_reactome_interact": 231, "pathwaycommons_wikipathways_interact": 232, "pazar": [233, 234], "pazar_interact": 234, "pepcyb": [235, 236, 237], "pepcyber_detail": 236, "pepcyber_interact": 237, "pharo": [238, 239, 240, 241, 242, 243, 244, 245, 246], "pharos_diseas": 239, "pharos_express": 240, "pharos_gener": 241, "pharos_gtex": 242, "pharos_ligand": 243, "pharos_ortholog": 244, "pharos_target": 245, "pharos_xref": 246, "phobiu": [247, 248], "phobius_annot": 248, "phosphonetwork": [249, 250, 251], "phosphonetworks_enzyme_substr": 250, "phosphonetworks_interact": 251, "phosphopoint": [252, 253, 254], "phosphopoint_direct": 253, "phosphopoint_interact": 254, "pro": [255, 256, 257], "get_pro": 256, "pro_map": 257, "protmapp": [258, 259, 260, 261], "get_protmapp": 259, "protmapper_enzyme_substr": 260, "protmapper_interact": 261, "pubchem": [262, 263], "pubchem_map": 263, "pubm": [264, 265, 266, 267, 268, 269, 270], "get_pmid": 265, "get_pubm": 266, "only_pmid": 267, "open_pubm": 268, "pmids_dict": 269, "pmids_list": 270, "ramp": [271, 272, 273, 274, 275, 276, 277, 487], "ramp_id_typ": 272, "ramp_id_types_2": 273, "ramp_list_t": 274, "ramp_map": 275, "ramp_raw": 276, "ramp_show_t": 277, "rdata": 278, "reaction": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "acsn_biopax": 280, "acsn_interactions_2": 281, "get_acsn_effect": 282, "get_control": [283, 429], "get_interact": 284, "get_react": 285, "get_soup": 286, "panther_biopax": 287, "panther_interact": 288, "pid_biopax": 289, "pid_interact": 290, "process_complex": 291, "process_control": 292, "process_react": 293, "reactions_biopax": 294, "reactome_biopax": 295, "reactome_b": 296, "reactome_interact": 297, "reactome_sbml": 298, "reactom": [299, 300, 301, 302, 303], "reactome_chebi": 300, "reactome_pathway_rel": 301, "reactome_pathwai": 302, "reactome_uniprot": 303, "scienc": [304, 305], "science_download": 305, "sider": [306, 307, 308, 309, 310, 311, 312, 313, 314], "siderdrug": 307, "sidersideeffect": 308, "sidersideeffectmeddra": 309, "sidersideeffetfrequ": 310, "sider_drug_nam": 311, "sider_meddra_side_effect": 312, "sider_side_effect_frequ": 313, "sider_side_effect": 314, "stitch": [315, 316, 317], "stitch_actions_interact": 316, "stitch_links_interact": 317, "string": [318, 319, 320, 321, 322], "string_effect": 319, "string_links_interact": 320, "string_physical_interact": 321, "string_speci": 322, "switches_elm": [323, 324], "get_switches_elm": 324, "transmir": [325, 326], "transmir_interact": 326, "trip": [327, 328, 329, 330, 331, 332, 333], "take_a_trip": 328, "trip_find_uniprot": 329, "trip_get_uniprot": 330, "trip_interact": 331, "trip_process": 332, "trip_process_t": 333, "twosid": [334, 335], "twosides_interact": 335, "unichem": [336, 337, 338, 339, 340], "unichem_info": 338, "unichem_map": 339, "unichem_sourc": 340, "uniprot": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 487], "taxon": 342, "uniprotqueri": 343, "uniprotrecordhistori": 344, "deleted_uniprot_genesymbol": 345, "get_uniprot_sec": 346, "protein_datasheet": 347, "query_build": 348, "swissprot_delet": 349, "trembl_delet": 350, "uniprot_data": 351, "uniprot_delet": 352, "uniprot_famili": 353, "uniprot_histori": 354, "uniprot_history_recent_datasheet": 355, "uniprot_keyword": 356, "uniprot_loc": 357, "uniprot_ncbi_taxid": 358, "uniprot_ncbi_taxids_2": 359, "uniprot_preprocess": 360, "uniprot_queri": 361, "uniprot_recent_vers": 362, "uniprot_taxonomi": 363, "uniprot_tissu": 364, "uniprot_topologi": 365, "valid_uniprot": 366, "uniprot_db": [367, 368, 369, 370, 371, 372, 373, 374, 375], "all_swissprot": 368, "all_trembl": 369, "all_uniprot": 370, "get_db": 371, "init_db": 372, "is_swissprot": 373, "is_trembl": 374, "is_uniprot": 375, "uniprot_idmap": [376, 377], "idtyp": 377, "intern": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "input_format": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "arraymap": 380, "biomartmap": 381, "filemap": 382, "hmdbmap": 383, "mappinginput": 384, "networkinput": 385, "picklemap": 386, "promap": 387, "rampmap": 388, "readlist": 389, "unichemmap": 390, "uniprotlistmap": 391, "uniprotmap": 392, "licens": [393, 394, 395, 396, 397, 398, 430, 431, 487], "licenseattrib": 395, "licensefeatur": 396, "licensepurpos": 397, "licenseshar": 398, "map": 399, "ref": [400, 401, 402], "refer": [401, 487, 488], "get_pubmed_data": 402, "resourc": [403, 404, 405, 406, 407, 408, 409, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 487], "abstractresourc": 404, "enzymesubstrateresourc": 405, "enzymesubstrateresourcekei": 406, "networkdataset": 407, "networkresourc": 408, "networkresourcekei": 409, "resourceattribut": 410, "legaci": [411, 412, 413, 414, 487], "db_categori": [412, 413, 414], "get_categori": [413, 414], "log": [415, 487], "control": [417, 418], "resourcecontrol": 418, "data_format": [420, 421, 422, 423, 424, 425, 426, 427, 428], "activity_flow": 421, "enzyme_substr": 422, "interact": [423, 487, 490], "interaction_htp": 424, "pathway_bad": 425, "reaction_pc": 426, "transcription_deprec": 427, "transcription_onebyon": 428, "network": [432, 487, 490], "url": 433, "share": [434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "cach": [435, 436, 437, 438, 487], "cache_item": 436, "cache_path": 437, "get_cachedir": 438, "constant": 440, "curl": [441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 487], "fileopen": 443, "remotefil": 444, "cache_delete_off": 445, "cache_delete_on": 446, "cache_off": 447, "cache_on": 448, "cache_print_off": 449, "cache_print_on": 450, "debug_off": 451, "debug_on": 452, "dryrun_off": 453, "dryrun_on": 454, "is_url": 455, "preserve_off": 456, "preserve_on": 457, "progress": [458, 459], "session": [460, 487], "set": 461, "visual": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "draw": [463, 464, 465], "interset": 464, "plot": [465, 487], "igraph_draw": [466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "abstractcairographdraw": 467, "arrowedgedraw": [468, 475], "defaultgraphdrawerffsupport": 469, "defaultvertexdraw": [470, 484], "textdraw": 471, "edg": [472, 473, 474, 475, 476, 477, 478, 487], "abstractedgedraw": 473, "alphavaryingedgedraw": 474, "darktolightedgedraw": 476, "lighttodarkedgedraw": 477, "taperededgedraw": 478, "vertex": [479, 480, 481, 482, 483, 484], "abstractcairodraw": 480, "abstractcairovertexdraw": 481, "abstractdraw": 482, "abstractvertexdraw": 483, "content": [485, 487], "welcom": 486, "omnipath": [486, 487], "do": [486, 487], "you": [486, 487], "need": 486, "instal": 486, "doc": 486, "get": 486, "help": 486, "featur": 486, "integr": 486, "databas": [486, 487], "manag": [486, 487], "further": 486, "modul": [486, 487], "id": [486, 487], "convers": 486, "homologi": 486, "translat": [486, 487], "faq": 486, "contact": 486, "impressum": 486, "histori": [486, 487, 489], "releas": [486, 489], "The": 487, "book": 487, "introduct": 487, "build": 487, "load": 487, "save": 487, "app": 487, "built": 487, "definit": 487, "strictli": 487, "literatur": 487, "curat": 487, "extra": 487, "activ": 487, "flow": 487, "enzym": [487, 490], "substrat": [487, 490], "ligand": 487, "receptor": 487, "transcript": 487, "regul": 487, "from": 487, "dorothea": 487, "other": 487, "mirna": 487, "post": 487, "lncrna": 487, "mrna": 487, "small": 487, "molecul": 487, "protein": 487, "relationship": 487, "complex": [487, 490], "annot": [487, 490], "inter": [487, 490], "cellular": [487, 490], "commun": [487, 490], "role": [487, 490], "directli": 487, "origin": 487, "interest": 487, "tl": 487, "dr": 487, "hmdb": 487, "human": 487, "metabolom": 487, "direct": 487, "access": 487, "higher": 487, "level": 487, "ncbi": 487, "e": 487, "util": 487, "download": 487, "custom": 487, "failur": 487, "corrupt": 487, "issu": 487, "look": 487, "debug": 487, "timeout": 487, "inspect": 487, "object": 487, "i": 487, "fail": 487, "onli": 487, "read": 487, "ssl": 487, "http": 487, "error": 487, "exampl": [487, 490], "commerci": 487, "us": 487, "inform": 487, "certain": 487, "dataset": [487, 490], "which": 487, "ar": 487, "pre": 487, "defin": 487, "panda": 487, "datafram": 487, "self": 487, "loop": 487, "molecular": [487, 490], "identifi": 487, "tabl": 487, "orthologi": 487, "dictionari": 487, "frame": 487, "taxonomi": 487, "scientif": 487, "name": 487, "organ": 487, "all": 487, "one": 487, "format": 487, "valid": 487, "singl": 487, "datasheet": 487, "record": 487, "rest": 487, "api": 487, "process": 487, "sanit": 487, "sequenc": 487, "full": 487, "select": 487, "signal": 487, "an": 487, "intercellular": 487, "quantit": 487, "overview": 487, "intercel": 487, "brows": 487, "categori": 487, "gene": 487, "pickl": 487, "messag": 487, "basic": 487, "about": 487, "file": 487, "consol": 487, "disabl": 487, "write": 487, "send": 487, "connect": 487, "class": 487, "logger": 487, "bel": 487, "export": 487, "cellphonedb": 487, "igraph": 487, "base": 487, "just": 487, "want": 487, "quickli": 487, "plai": 487, "around": 487, "how": [487, 488], "ani": 487, "creat": 487, "2": [487, 489], "test": 487, "structur": 487, "sign": 487, "node": 487, "queri": [487, 490], "our": 487, "without": 487, "causal": 487, "navig": 488, "0": 489, "1": 489, "3": 489, "4": 489, "5": 489, "32": 489, "6": 489, "31": 489, "7": 489, "74": 489, "93": 489, "110": 489, "8": 489, "9": 489, "10": 489, "11": 489, "12": 489, "13": 489, "14": 489, "upcom": 489, "webservic": 490, "type": 490, "mous": 490, "rat": 490, "explor": 490, "possibl": 490, "paramet": 490}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "pypath.inputs.abs.abs_interactions": [[11, "pypath-inputs-abs-abs-interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "pypath.inputs.acsn.acsn_interactions": [[13, "pypath-inputs-acsn-acsn-interactions"]], "pypath.inputs.acsn.acsn_interactions_sif": [[14, "pypath-inputs-acsn-acsn-interactions-sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, "pypath-inputs-adrecs-adrecsadr"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, "pypath-inputs-adrecs-adrecschildparent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, "pypath-inputs-adrecs-adrecsdrug"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, "pypath-inputs-adrecs-adrecsdrugadr"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, "pypath-inputs-adrecs-adrecsterm"]], "pypath.inputs.adrecs.adrecs_adr_ontology": [[21, "pypath-inputs-adrecs-adrecs-adr-ontology"]], "pypath.inputs.adrecs.adrecs_drug_adr": [[22, "pypath-inputs-adrecs-adrecs-drug-adr"]], "pypath.inputs.adrecs.adrecs_drug_identifiers": [[23, "pypath-inputs-adrecs-adrecs-drug-identifiers"]], "pypath.inputs.adrecs.adrecs_hierarchy": [[24, "pypath-inputs-adrecs-adrecs-hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "pypath.inputs.biogrid.biogrid_all_interactions": [[26, "pypath-inputs-biogrid-biogrid-all-interactions"]], "pypath.inputs.biogrid.biogrid_interactions": [[27, "pypath-inputs-biogrid-biogrid-interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "pypath.inputs.biomart.biomart_homology": [[29, "pypath-inputs-biomart-biomart-homology"]], "pypath.inputs.biomart.biomart_microarray": [[30, "pypath-inputs-biomart-biomart-microarray"]], "pypath.inputs.biomart.biomart_microarray_types": [[31, "pypath-inputs-biomart-biomart-microarray-types"]], "pypath.inputs.biomart.biomart_microarrays": [[32, "pypath-inputs-biomart-biomart-microarrays"]], "pypath.inputs.biomart.biomart_query": [[33, "pypath-inputs-biomart-biomart-query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "pypath.inputs.biomodels.download_single_model": [[35, "pypath-inputs-biomodels-download-single-model"]], "pypath.inputs.biomodels.get_all_models": [[36, "pypath-inputs-biomodels-get-all-models"]], "pypath.inputs.biomodels.get_biomodels": [[37, "pypath-inputs-biomodels-get-biomodels"]], "pypath.inputs.biomodels.get_biomodels_req": [[38, "pypath-inputs-biomodels-get-biomodels-req"]], "pypath.inputs.biomodels.get_single_model": [[39, "pypath-inputs-biomodels-get-single-model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "pypath.inputs.ca1.ca1_interactions": [[41, "pypath-inputs-ca1-ca1-interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "pypath.inputs.cancercellmap.ccmap_interactions": [[43, "pypath-inputs-cancercellmap-ccmap-interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[45, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "pypath.inputs.chembl.chembl_activities": [[47, "pypath-inputs-chembl-chembl-activities"]], "pypath.inputs.chembl.chembl_assays": [[48, "pypath-inputs-chembl-chembl-assays"]], "pypath.inputs.chembl.chembl_documents": [[49, "pypath-inputs-chembl-chembl-documents"]], "pypath.inputs.chembl.chembl_drug_indications": [[50, "pypath-inputs-chembl-chembl-drug-indications"]], "pypath.inputs.chembl.chembl_mechanisms": [[51, "pypath-inputs-chembl-chembl-mechanisms"]], "pypath.inputs.chembl.chembl_molecules": [[52, "pypath-inputs-chembl-chembl-molecules"]], "pypath.inputs.chembl.chembl_targets": [[53, "pypath-inputs-chembl-chembl-targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "pypath.inputs.clinvar.clinvar_citations": [[55, "pypath-inputs-clinvar-clinvar-citations"]], "pypath.inputs.clinvar.clinvar_raw": [[56, "pypath-inputs-clinvar-clinvar-raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[58, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[59, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[60, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[61, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[62, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[63, "pypath-inputs-common-read-xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "pypath.inputs.compath.compath_mappings": [[65, "pypath-inputs-compath-compath-mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "pypath.inputs.cpdb.cpdb_interactions": [[67, "pypath-inputs-cpdb-cpdb-interactions"]], "pypath.inputs.cpdb.cpdb_interactions_ltp": [[68, "pypath-inputs-cpdb-cpdb-interactions-ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[70, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "pypath.inputs.ctdbase.ctdbase_relations": [[72, "pypath-inputs-ctdbase-ctdbase-relations"]], "pypath.inputs.ctdbase.ctdbase_vocabulary": [[73, "pypath-inputs-ctdbase-ctdbase-vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "pypath.inputs.ddinter.ddinter_drug_interactions": [[75, "pypath-inputs-ddinter-ddinter-drug-interactions"]], "pypath.inputs.ddinter.ddinter_identifiers": [[76, "pypath-inputs-ddinter-ddinter-identifiers"]], "pypath.inputs.ddinter.ddinter_interactions": [[77, "pypath-inputs-ddinter-ddinter-interactions"]], "pypath.inputs.ddinter.ddinter_mappings": [[78, "pypath-inputs-ddinter-ddinter-mappings"]], "pypath.inputs.ddinter.ddinter_n_drugs": [[79, "pypath-inputs-ddinter-ddinter-n-drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "pypath.inputs.deathdomain.deathdomain_interactions": [[81, "pypath-inputs-deathdomain-deathdomain-interactions"]], "pypath.inputs.deathdomain.deathdomain_interactions_rescued": [[82, "pypath-inputs-deathdomain-deathdomain-interactions-rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "pypath.inputs.dip.dip_interactions": [[84, "pypath-inputs-dip-dip-interactions"]], "pypath.inputs.dip.dip_login": [[85, "pypath-inputs-dip-dip-login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "pypath.inputs.diseases.diseases_general": [[87, "pypath-inputs-diseases-diseases-general"]], "pypath.inputs.diseases.experiments_filtered": [[88, "pypath-inputs-diseases-experiments-filtered"]], "pypath.inputs.diseases.experiments_full": [[89, "pypath-inputs-diseases-experiments-full"]], "pypath.inputs.diseases.knowledge_filtered": [[90, "pypath-inputs-diseases-knowledge-filtered"]], "pypath.inputs.diseases.knowledge_full": [[91, "pypath-inputs-diseases-knowledge-full"]], "pypath.inputs.diseases.textmining_filtered": [[92, "pypath-inputs-diseases-textmining-filtered"]], "pypath.inputs.diseases.textmining_full": [[93, "pypath-inputs-diseases-textmining-full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "pypath.inputs.drugbank.DrugbankFull": [[95, "pypath-inputs-drugbank-drugbankfull"]], "pypath.inputs.drugbank.drugbank_annotations": [[96, "pypath-inputs-drugbank-drugbank-annotations"]], "pypath.inputs.drugbank.drugbank_drugs": [[97, "pypath-inputs-drugbank-drugbank-drugs"]], "pypath.inputs.drugbank.drugbank_interactions": [[98, "pypath-inputs-drugbank-drugbank-interactions"]], "pypath.inputs.drugbank.drugbank_mapping": [[99, "pypath-inputs-drugbank-drugbank-mapping"]], "pypath.inputs.drugbank.drugbank_raw_interactions": [[100, "pypath-inputs-drugbank-drugbank-raw-interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[102, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "pypath.inputs.elm.elm_classes": [[104, "pypath-inputs-elm-elm-classes"]], "pypath.inputs.elm.elm_domains": [[105, "pypath-inputs-elm-elm-domains"]], "pypath.inputs.elm.elm_instances": [[106, "pypath-inputs-elm-elm-instances"]], "pypath.inputs.elm.elm_interactions": [[107, "pypath-inputs-elm-elm-interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[109, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "pypath.inputs.encode.encode_tf_mirna_interactions": [[111, "pypath-inputs-encode-encode-tf-mirna-interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "pypath.inputs.ensembl.ensembl_organisms": [[113, "pypath-inputs-ensembl-ensembl-organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "pypath.inputs.eutils.esummary": [[115, "pypath-inputs-eutils-esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "pypath.inputs.expasy.expasy_enzyme_classes": [[117, "pypath-inputs-expasy-expasy-enzyme-classes"]], "pypath.inputs.expasy.expasy_enzymes": [[118, "pypath-inputs-expasy-expasy-enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "pypath.inputs.genecards.genecards_datasheet": [[120, "pypath-inputs-genecards-genecards-datasheet"]], "pypath.inputs.genecards.genecards_soup": [[121, "pypath-inputs-genecards-genecards-soup"]], "pypath.inputs.genecards.genecards_summaries": [[122, "pypath-inputs-genecards-genecards-summaries"]], "pypath.inputs.get_method": [[123, "pypath-inputs-get-method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "pypath.inputs.graphviz.graphviz_attrs": [[125, "pypath-inputs-graphviz-graphviz-attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "pypath.inputs.hprd.get_hprd": [[127, "pypath-inputs-hprd-get-hprd"]], "pypath.inputs.hprd.hprd_enzyme_substrate": [[128, "pypath-inputs-hprd-hprd-enzyme-substrate"]], "pypath.inputs.hprd.hprd_interactions": [[129, "pypath-inputs-hprd-hprd-interactions"]], "pypath.inputs.hprd.hprd_interactions_htp": [[130, "pypath-inputs-hprd-hprd-interactions-htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "pypath.inputs.htri.htri_interactions": [[132, "pypath-inputs-htri-htri-interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "pypath.inputs.humsavar.uniprot_variants": [[134, "pypath-inputs-humsavar-uniprot-variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "pypath.inputs.ielm.get_ielm": [[136, "pypath-inputs-ielm-get-ielm"]], "pypath.inputs.ielm.get_ielm_huge": [[137, "pypath-inputs-ielm-get-ielm-huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "pypath.inputs.imweb.get_imweb": [[139, "pypath-inputs-imweb-get-imweb"]], "pypath.inputs.imweb.get_imweb_req": [[140, "pypath-inputs-imweb-get-imweb-req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "pypath.inputs.innatedb.innatedb_interactions": [[142, "pypath-inputs-innatedb-innatedb-interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "pypath.inputs.instruct.get_instruct": [[144, "pypath-inputs-instruct-get-instruct"]], "pypath.inputs.instruct.get_instruct_offsets": [[145, "pypath-inputs-instruct-get-instruct-offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "pypath.inputs.intact.intact_interactions": [[147, "pypath-inputs-intact-intact-interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "pypath.inputs.interpro.interpro2go_annotations": [[149, "pypath-inputs-interpro-interpro2go-annotations"]], "pypath.inputs.interpro.interpro_annotations": [[150, "pypath-inputs-interpro-interpro-annotations"]], "pypath.inputs.interpro.interpro_entries": [[151, "pypath-inputs-interpro-interpro-entries"]], "pypath.inputs.interpro.interpro_xrefs": [[152, "pypath-inputs-interpro-interpro-xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "pypath.inputs.ipi.ipi_uniprot": [[154, "pypath-inputs-ipi-ipi-uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "pypath.inputs.kegg_api.disease_to_drug": [[156, "pypath-inputs-kegg-api-disease-to-drug"]], "pypath.inputs.kegg_api.disease_to_gene": [[157, "pypath-inputs-kegg-api-disease-to-gene"]], "pypath.inputs.kegg_api.disease_to_pathway": [[158, "pypath-inputs-kegg-api-disease-to-pathway"]], "pypath.inputs.kegg_api.drug_to_disease": [[159, "pypath-inputs-kegg-api-drug-to-disease"]], "pypath.inputs.kegg_api.drug_to_drug": [[160, "pypath-inputs-kegg-api-drug-to-drug"]], "pypath.inputs.kegg_api.drug_to_gene": [[161, "pypath-inputs-kegg-api-drug-to-gene"]], "pypath.inputs.kegg_api.drug_to_pathway": [[162, "pypath-inputs-kegg-api-drug-to-pathway"]], "pypath.inputs.kegg_api.gene_to_disease": [[163, "pypath-inputs-kegg-api-gene-to-disease"]], "pypath.inputs.kegg_api.gene_to_drug": [[164, "pypath-inputs-kegg-api-gene-to-drug"]], "pypath.inputs.kegg_api.gene_to_pathway": [[165, "pypath-inputs-kegg-api-gene-to-pathway"]], "pypath.inputs.kegg_api.kegg_drug_to_chebi": [[166, "pypath-inputs-kegg-api-kegg-drug-to-chebi"]], "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid": [[167, "pypath-inputs-kegg-api-kegg-gene-to-ncbi-geneid"]], "pypath.inputs.kegg_api.kegg_gene_to_uniprot": [[168, "pypath-inputs-kegg-api-kegg-gene-to-uniprot"]], "pypath.inputs.kegg_api.pathway_to_disease": [[169, "pypath-inputs-kegg-api-pathway-to-disease"]], "pypath.inputs.kegg_api.pathway_to_drug": [[170, "pypath-inputs-kegg-api-pathway-to-drug"]], "pypath.inputs.kegg_api.pathway_to_gene": [[171, "pypath-inputs-kegg-api-pathway-to-gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "pypath.inputs.kirouac2010.kirouac2010_interactions": [[173, "pypath-inputs-kirouac2010-kirouac2010-interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "pypath.inputs.laudanna.laudanna_directions": [[175, "pypath-inputs-laudanna-laudanna-directions"]], "pypath.inputs.laudanna.laudanna_effects": [[176, "pypath-inputs-laudanna-laudanna-effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "pypath.inputs.lincs.lincs_compounds": [[178, "pypath-inputs-lincs-lincs-compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "pypath.inputs.macrophage.macrophage_interactions": [[180, "pypath-inputs-macrophage-macrophage-interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "pypath.inputs.mimp.get_kinase_class": [[183, "pypath-inputs-mimp-get-kinase-class"]], "pypath.inputs.mimp.mimp_enzyme_substrate": [[184, "pypath-inputs-mimp-mimp-enzyme-substrate"]], "pypath.inputs.mimp.mimp_interactions": [[185, "pypath-inputs-mimp-mimp-interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "pypath.inputs.mir2disease.mir2disease_interactions": [[187, "pypath-inputs-mir2disease-mir2disease-interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "pypath.inputs.mirdeathdb.mirdeathdb_interactions": [[189, "pypath-inputs-mirdeathdb-mirdeathdb-interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[191, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[192, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "pypath.inputs.mppi.mppi_interactions": [[194, "pypath-inputs-mppi-mppi-interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions": [[196, "pypath-inputs-ncrdeathdb-ncrdeathdb-interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "pypath.inputs.negatome.negatome_interactions": [[198, "pypath-inputs-negatome-negatome-interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "pypath.inputs.netbiol.arn_interactions": [[200, "pypath-inputs-netbiol-arn-interactions"]], "pypath.inputs.netbiol.nrf2ome_interactions": [[201, "pypath-inputs-netbiol-nrf2ome-interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "pypath.inputs.offsides.offsides_side_effects": [[203, "pypath-inputs-offsides-offsides-side-effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "pypath.inputs.ontology.listof_ontologies": [[205, "pypath-inputs-ontology-listof-ontologies"]], "pypath.inputs.ontology.ontology": [[206, "pypath-inputs-ontology-ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "pypath.inputs.opentargets.opentargets_adverse_reactions": [[208, "pypath-inputs-opentargets-opentargets-adverse-reactions"]], "pypath.inputs.opentargets.opentargets_baseline_expression": [[209, "pypath-inputs-opentargets-opentargets-baseline-expression"]], "pypath.inputs.opentargets.opentargets_direct_score": [[210, "pypath-inputs-opentargets-opentargets-direct-score"]], "pypath.inputs.opentargets.opentargets_general": [[211, "pypath-inputs-opentargets-opentargets-general"]], "pypath.inputs.opentargets.opentargets_indirect_score": [[212, "pypath-inputs-opentargets-opentargets-indirect-score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, "pypath-inputs-pathophenodb-diseasepathogen"]], "pypath.inputs.pathophenodb.disease_pathogen_interactions": [[215, "pypath-inputs-pathophenodb-disease-pathogen-interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, "pypath-inputs-pathwaycommons-pathwaycommonsinteraction"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, "pypath-inputs-pathwaycommons-pathwaycommonsresource"]], "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions": [[219, "pypath-inputs-pathwaycommons-pathwaycommons-bind-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions": [[220, "pypath-inputs-pathwaycommons-pathwaycommons-biogrid-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions": [[221, "pypath-inputs-pathwaycommons-pathwaycommons-corum-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions": [[222, "pypath-inputs-pathwaycommons-pathwaycommons-dip-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions": [[223, "pypath-inputs-pathwaycommons-pathwaycommons-hprd-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions": [[224, "pypath-inputs-pathwaycommons-pathwaycommons-inoh-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions": [[225, "pypath-inputs-pathwaycommons-pathwaycommons-intact-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_interactions": [[226, "pypath-inputs-pathwaycommons-pathwaycommons-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions": [[227, "pypath-inputs-pathwaycommons-pathwaycommons-kegg-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions": [[228, "pypath-inputs-pathwaycommons-pathwaycommons-netpath-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions": [[229, "pypath-inputs-pathwaycommons-pathwaycommons-panther-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions": [[230, "pypath-inputs-pathwaycommons-pathwaycommons-phosphosite-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions": [[231, "pypath-inputs-pathwaycommons-pathwaycommons-reactome-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions": [[232, "pypath-inputs-pathwaycommons-pathwaycommons-wikipathways-interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pypath.inputs.pazar.pazar_interactions": [[234, "pypath-inputs-pazar-pazar-interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pypath.inputs.pepcyber.pepcyber_details": [[236, "pypath-inputs-pepcyber-pepcyber-details"]], "pypath.inputs.pepcyber.pepcyber_interactions": [[237, "pypath-inputs-pepcyber-pepcyber-interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pypath.inputs.pharos.pharos_diseases": [[239, "pypath-inputs-pharos-pharos-diseases"]], "pypath.inputs.pharos.pharos_expression": [[240, "pypath-inputs-pharos-pharos-expression"]], "pypath.inputs.pharos.pharos_general": [[241, "pypath-inputs-pharos-pharos-general"]], "pypath.inputs.pharos.pharos_gtex": [[242, "pypath-inputs-pharos-pharos-gtex"]], "pypath.inputs.pharos.pharos_ligands": [[243, "pypath-inputs-pharos-pharos-ligands"]], "pypath.inputs.pharos.pharos_orthologs": [[244, "pypath-inputs-pharos-pharos-orthologs"]], "pypath.inputs.pharos.pharos_targets": [[245, "pypath-inputs-pharos-pharos-targets"]], "pypath.inputs.pharos.pharos_xrefs": [[246, "pypath-inputs-pharos-pharos-xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "pypath.inputs.phobius.phobius_annotations": [[248, "pypath-inputs-phobius-phobius-annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate": [[250, "pypath-inputs-phosphonetworks-phosphonetworks-enzyme-substrate"]], "pypath.inputs.phosphonetworks.phosphonetworks_interactions": [[251, "pypath-inputs-phosphonetworks-phosphonetworks-interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "pypath.inputs.phosphopoint.phosphopoint_directions": [[253, "pypath-inputs-phosphopoint-phosphopoint-directions"]], "pypath.inputs.phosphopoint.phosphopoint_interactions": [[254, "pypath-inputs-phosphopoint-phosphopoint-interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "pypath.inputs.pro.get_pro": [[256, "pypath-inputs-pro-get-pro"]], "pypath.inputs.pro.pro_mapping": [[257, "pypath-inputs-pro-pro-mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "pypath.inputs.protmapper.get_protmapper": [[259, "pypath-inputs-protmapper-get-protmapper"]], "pypath.inputs.protmapper.protmapper_enzyme_substrate": [[260, "pypath-inputs-protmapper-protmapper-enzyme-substrate"]], "pypath.inputs.protmapper.protmapper_interactions": [[261, "pypath-inputs-protmapper-protmapper-interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pypath.inputs.pubchem.pubchem_mapping": [[263, "pypath-inputs-pubchem-pubchem-mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "pypath.inputs.pubmed.get_pmid": [[265, "pypath-inputs-pubmed-get-pmid"]], "pypath.inputs.pubmed.get_pubmeds": [[266, "pypath-inputs-pubmed-get-pubmeds"]], "pypath.inputs.pubmed.only_pmids": [[267, "pypath-inputs-pubmed-only-pmids"]], "pypath.inputs.pubmed.open_pubmed": [[268, "pypath-inputs-pubmed-open-pubmed"]], "pypath.inputs.pubmed.pmids_dict": [[269, "pypath-inputs-pubmed-pmids-dict"]], "pypath.inputs.pubmed.pmids_list": [[270, "pypath-inputs-pubmed-pmids-list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "pypath.inputs.ramp.ramp_id_types": [[272, "pypath-inputs-ramp-ramp-id-types"]], "pypath.inputs.ramp.ramp_id_types_2": [[273, "pypath-inputs-ramp-ramp-id-types-2"]], "pypath.inputs.ramp.ramp_list_tables": [[274, "pypath-inputs-ramp-ramp-list-tables"]], "pypath.inputs.ramp.ramp_mapping": [[275, "pypath-inputs-ramp-ramp-mapping"]], "pypath.inputs.ramp.ramp_raw": [[276, "pypath-inputs-ramp-ramp-raw"]], "pypath.inputs.ramp.ramp_show_tables": [[277, "pypath-inputs-ramp-ramp-show-tables"]], "pypath.inputs.rdata": [[278, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[279, "module-pypath.inputs.reaction"]], "pypath.inputs.reaction.acsn_biopax": [[280, "pypath-inputs-reaction-acsn-biopax"]], "pypath.inputs.reaction.acsn_interactions_2": [[281, "pypath-inputs-reaction-acsn-interactions-2"]], "pypath.inputs.reaction.get_acsn_effects": [[282, "pypath-inputs-reaction-get-acsn-effects"]], "pypath.inputs.reaction.get_controls": [[283, "pypath-inputs-reaction-get-controls"]], "pypath.inputs.reaction.get_interactions": [[284, "pypath-inputs-reaction-get-interactions"]], "pypath.inputs.reaction.get_reactions": [[285, "pypath-inputs-reaction-get-reactions"]], "pypath.inputs.reaction.get_soup": [[286, "pypath-inputs-reaction-get-soup"]], "pypath.inputs.reaction.panther_biopax": [[287, "pypath-inputs-reaction-panther-biopax"]], "pypath.inputs.reaction.panther_interactions": [[288, "pypath-inputs-reaction-panther-interactions"]], "pypath.inputs.reaction.pid_biopax": [[289, "pypath-inputs-reaction-pid-biopax"]], "pypath.inputs.reaction.pid_interactions": [[290, "pypath-inputs-reaction-pid-interactions"]], "pypath.inputs.reaction.process_complex": [[291, "pypath-inputs-reaction-process-complex"]], "pypath.inputs.reaction.process_controls": [[292, "pypath-inputs-reaction-process-controls"]], "pypath.inputs.reaction.process_reactions": [[293, "pypath-inputs-reaction-process-reactions"]], "pypath.inputs.reaction.reactions_biopax": [[294, "pypath-inputs-reaction-reactions-biopax"]], "pypath.inputs.reaction.reactome_biopax": [[295, "pypath-inputs-reaction-reactome-biopax"]], "pypath.inputs.reaction.reactome_bs": [[296, "pypath-inputs-reaction-reactome-bs"]], "pypath.inputs.reaction.reactome_interactions": [[297, "pypath-inputs-reaction-reactome-interactions"]], "pypath.inputs.reaction.reactome_sbml": [[298, "pypath-inputs-reaction-reactome-sbml"]], "pypath.inputs.reactome": [[299, "module-pypath.inputs.reactome"]], "pypath.inputs.reactome.reactome_chebis": [[300, "pypath-inputs-reactome-reactome-chebis"]], "pypath.inputs.reactome.reactome_pathway_relations": [[301, "pypath-inputs-reactome-reactome-pathway-relations"]], "pypath.inputs.reactome.reactome_pathways": [[302, "pypath-inputs-reactome-reactome-pathways"]], "pypath.inputs.reactome.reactome_uniprots": [[303, "pypath-inputs-reactome-reactome-uniprots"]], "pypath.inputs.science": [[304, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[305, "pypath-inputs-science-science-download"]], "pypath.inputs.sider": [[306, "module-pypath.inputs.sider"]], "pypath.inputs.sider.SiderDrug": [[307, "pypath-inputs-sider-siderdrug"]], "pypath.inputs.sider.SiderSideeffect": [[308, "pypath-inputs-sider-sidersideeffect"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[309, "pypath-inputs-sider-sidersideeffectmeddra"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[310, "pypath-inputs-sider-sidersideeffetfrequency"]], "pypath.inputs.sider.sider_drug_names": [[311, "pypath-inputs-sider-sider-drug-names"]], "pypath.inputs.sider.sider_meddra_side_effects": [[312, "pypath-inputs-sider-sider-meddra-side-effects"]], "pypath.inputs.sider.sider_side_effect_frequencies": [[313, "pypath-inputs-sider-sider-side-effect-frequencies"]], "pypath.inputs.sider.sider_side_effects": [[314, "pypath-inputs-sider-sider-side-effects"]], "pypath.inputs.stitch": [[315, "module-pypath.inputs.stitch"]], "pypath.inputs.stitch.stitch_actions_interactions": [[316, "pypath-inputs-stitch-stitch-actions-interactions"]], "pypath.inputs.stitch.stitch_links_interactions": [[317, "pypath-inputs-stitch-stitch-links-interactions"]], "pypath.inputs.string": [[318, "module-pypath.inputs.string"]], "pypath.inputs.string.string_effects": [[319, "pypath-inputs-string-string-effects"]], "pypath.inputs.string.string_links_interactions": [[320, "pypath-inputs-string-string-links-interactions"]], "pypath.inputs.string.string_physical_interactions": [[321, "pypath-inputs-string-string-physical-interactions"]], "pypath.inputs.string.string_species": [[322, "pypath-inputs-string-string-species"]], "pypath.inputs.switches_elm": [[323, "module-pypath.inputs.switches_elm"]], "pypath.inputs.switches_elm.get_switches_elm": [[324, "pypath-inputs-switches-elm-get-switches-elm"]], "pypath.inputs.transmir": [[325, "module-pypath.inputs.transmir"]], "pypath.inputs.transmir.transmir_interactions": [[326, "pypath-inputs-transmir-transmir-interactions"]], "pypath.inputs.trip": [[327, "module-pypath.inputs.trip"]], "pypath.inputs.trip.take_a_trip": [[328, "pypath-inputs-trip-take-a-trip"]], "pypath.inputs.trip.trip_find_uniprot": [[329, "pypath-inputs-trip-trip-find-uniprot"]], "pypath.inputs.trip.trip_get_uniprot": [[330, "pypath-inputs-trip-trip-get-uniprot"]], "pypath.inputs.trip.trip_interactions": [[331, "pypath-inputs-trip-trip-interactions"]], "pypath.inputs.trip.trip_process": [[332, "pypath-inputs-trip-trip-process"]], "pypath.inputs.trip.trip_process_table": [[333, "pypath-inputs-trip-trip-process-table"]], "pypath.inputs.twosides": [[334, "module-pypath.inputs.twosides"]], "pypath.inputs.twosides.twosides_interactions": [[335, "pypath-inputs-twosides-twosides-interactions"]], "pypath.inputs.unichem": [[336, "module-pypath.inputs.unichem"]], "pypath.inputs.unichem.info": [[337, "pypath-inputs-unichem-info"]], "pypath.inputs.unichem.unichem_info": [[338, "pypath-inputs-unichem-unichem-info"]], "pypath.inputs.unichem.unichem_mapping": [[339, "pypath-inputs-unichem-unichem-mapping"]], "pypath.inputs.unichem.unichem_sources": [[340, "pypath-inputs-unichem-unichem-sources"]], "pypath.inputs.uniprot": [[341, "module-pypath.inputs.uniprot"]], "pypath.inputs.uniprot.Taxon": [[342, "pypath-inputs-uniprot-taxon"]], "pypath.inputs.uniprot.UniprotQuery": [[343, "pypath-inputs-uniprot-uniprotquery"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[344, "pypath-inputs-uniprot-uniprotrecordhistory"]], "pypath.inputs.uniprot.deleted_uniprot_genesymbol": [[345, "pypath-inputs-uniprot-deleted-uniprot-genesymbol"]], "pypath.inputs.uniprot.get_uniprot_sec": [[346, "pypath-inputs-uniprot-get-uniprot-sec"]], "pypath.inputs.uniprot.protein_datasheet": [[347, "pypath-inputs-uniprot-protein-datasheet"]], "pypath.inputs.uniprot.query_builder": [[348, "pypath-inputs-uniprot-query-builder"]], "pypath.inputs.uniprot.swissprot_deleted": [[349, "pypath-inputs-uniprot-swissprot-deleted"]], "pypath.inputs.uniprot.trembl_deleted": [[350, "pypath-inputs-uniprot-trembl-deleted"]], "pypath.inputs.uniprot.uniprot_data": [[351, "pypath-inputs-uniprot-uniprot-data"]], "pypath.inputs.uniprot.uniprot_deleted": [[352, "pypath-inputs-uniprot-uniprot-deleted"]], "pypath.inputs.uniprot.uniprot_families": [[353, "pypath-inputs-uniprot-uniprot-families"]], "pypath.inputs.uniprot.uniprot_history": [[354, "pypath-inputs-uniprot-uniprot-history"]], "pypath.inputs.uniprot.uniprot_history_recent_datasheet": [[355, "pypath-inputs-uniprot-uniprot-history-recent-datasheet"]], "pypath.inputs.uniprot.uniprot_keywords": [[356, "pypath-inputs-uniprot-uniprot-keywords"]], "pypath.inputs.uniprot.uniprot_locations": [[357, "pypath-inputs-uniprot-uniprot-locations"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids": [[358, "pypath-inputs-uniprot-uniprot-ncbi-taxids"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids_2": [[359, "pypath-inputs-uniprot-uniprot-ncbi-taxids-2"]], "pypath.inputs.uniprot.uniprot_preprocess": [[360, "pypath-inputs-uniprot-uniprot-preprocess"]], "pypath.inputs.uniprot.uniprot_query": [[361, "pypath-inputs-uniprot-uniprot-query"]], "pypath.inputs.uniprot.uniprot_recent_version": [[362, "pypath-inputs-uniprot-uniprot-recent-version"]], "pypath.inputs.uniprot.uniprot_taxonomy": [[363, "pypath-inputs-uniprot-uniprot-taxonomy"]], "pypath.inputs.uniprot.uniprot_tissues": [[364, "pypath-inputs-uniprot-uniprot-tissues"]], "pypath.inputs.uniprot.uniprot_topology": [[365, "pypath-inputs-uniprot-uniprot-topology"]], "pypath.inputs.uniprot.valid_uniprot": [[366, "pypath-inputs-uniprot-valid-uniprot"]], "pypath.inputs.uniprot_db": [[367, "module-pypath.inputs.uniprot_db"]], "pypath.inputs.uniprot_db.all_swissprots": [[368, "pypath-inputs-uniprot-db-all-swissprots"]], "pypath.inputs.uniprot_db.all_trembls": [[369, "pypath-inputs-uniprot-db-all-trembls"]], "pypath.inputs.uniprot_db.all_uniprots": [[370, "pypath-inputs-uniprot-db-all-uniprots"]], "pypath.inputs.uniprot_db.get_db": [[371, "pypath-inputs-uniprot-db-get-db"]], "pypath.inputs.uniprot_db.init_db": [[372, "pypath-inputs-uniprot-db-init-db"]], "pypath.inputs.uniprot_db.is_swissprot": [[373, "pypath-inputs-uniprot-db-is-swissprot"]], "pypath.inputs.uniprot_db.is_trembl": [[374, "pypath-inputs-uniprot-db-is-trembl"]], "pypath.inputs.uniprot_db.is_uniprot": [[375, "pypath-inputs-uniprot-db-is-uniprot"]], "pypath.inputs.uniprot_idmapping": [[376, "module-pypath.inputs.uniprot_idmapping"]], "pypath.inputs.uniprot_idmapping.idtypes": [[377, "pypath-inputs-uniprot-idmapping-idtypes"]], "pypath.internals": [[378, "module-pypath.internals"]], "pypath.internals.input_formats": [[379, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[380, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[381, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[382, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.HmdbMapping": [[383, "pypath-internals-input-formats-hmdbmapping"]], "pypath.internals.input_formats.MappingInput": [[384, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[385, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[386, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[387, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.RampMapping": [[388, "pypath-internals-input-formats-rampmapping"]], "pypath.internals.input_formats.ReadList": [[389, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[390, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[391, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[392, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[393, "module-pypath.internals.license"]], "pypath.internals.license.License": [[394, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[395, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[396, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[397, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[398, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[399, "module-pypath.internals.maps"]], "pypath.internals.refs": [[400, "module-pypath.internals.refs"]], "pypath.internals.refs.Reference": [[401, "pypath-internals-refs-reference"]], "pypath.internals.refs.get_pubmed_data": [[402, "pypath-internals-refs-get-pubmed-data"]], "pypath.internals.resource": [[403, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[404, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[405, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[406, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkDataset": [[407, "pypath-internals-resource-networkdataset"]], "pypath.internals.resource.NetworkResource": [[408, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[409, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[410, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[411, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[412, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[413, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[414, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[415, "pypath-log"]], "pypath.resources": [[416, "module-pypath.resources"]], "pypath.resources.controller": [[417, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[418, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[419, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[420, "module-pypath.resources.data_formats"]], "pypath.resources.data_formats.activity_flow": [[421, "pypath-resources-data-formats-activity-flow"]], "pypath.resources.data_formats.enzyme_substrate": [[422, "pypath-resources-data-formats-enzyme-substrate"]], "pypath.resources.data_formats.interaction": [[423, "pypath-resources-data-formats-interaction"]], "pypath.resources.data_formats.interaction_htp": [[424, "pypath-resources-data-formats-interaction-htp"]], "pypath.resources.data_formats.pathway_bad": [[425, "pypath-resources-data-formats-pathway-bad"]], "pypath.resources.data_formats.reaction_pc": [[426, "pypath-resources-data-formats-reaction-pc"]], "pypath.resources.data_formats.transcription_deprecated": [[427, "pypath-resources-data-formats-transcription-deprecated"]], "pypath.resources.data_formats.transcription_onebyone": [[428, "pypath-resources-data-formats-transcription-onebyone"]], "pypath.resources.get_controller": [[429, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[430, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[431, "pypath-resources-licenses-licenses"]], "pypath.resources.network": [[432, "module-pypath.resources.network"]], "pypath.resources.urls": [[433, "module-pypath.resources.urls"]], "pypath.share": [[434, "module-pypath.share"]], "pypath.share.cache": [[435, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[436, "pypath-share-cache-cache-item"]], "pypath.share.cache.cache_path": [[437, "pypath-share-cache-cache-path"]], "pypath.share.cache.get_cachedir": [[438, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[439, "module-pypath.share.common"]], "pypath.share.constants": [[440, "module-pypath.share.constants"]], "pypath.share.curl": [[441, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[442, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[443, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[444, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[445, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[446, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[447, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[448, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[449, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[450, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[451, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[452, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[453, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[454, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[455, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[456, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[457, "pypath-share-curl-preserve-on"]], "pypath.share.progress": [[458, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[459, "pypath-share-progress-progress"]], "pypath.share.session": [[460, "module-pypath.share.session"]], "pypath.share.settings": [[461, "module-pypath.share.settings"]], "pypath.visual": [[462, "module-pypath.visual"]], "pypath.visual.drawing": [[463, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[464, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[465, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[466, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[467, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[468, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[469, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[470, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[471, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[472, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[473, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[474, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[475, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[476, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[477, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[478, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[479, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[480, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[481, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[482, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[483, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[484, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[485, "contents"]], "Welcome to pypath!": [[486, "welcome-to-pypath"]], "OmniPath": [[486, "omnipath"]], "Do you need pypath?": [[486, "do-you-need-pypath"]], "Installation": [[486, "installation"]], "Docs": [[486, "docs"]], "Get help": [[486, "get-help"]], "Features": [[486, "features"]], "Integrated databases": [[486, "integrated-databases"]], "Database management": [[486, "database-management"]], "Further modules in pypath": [[486, "further-modules-in-pypath"]], "ID conversion": [[486, "id-conversion"]], "Homology translation": [[486, "homology-translation"]], "FAQ": [[486, "faq"]], "Contact": [[486, "contact"]], "Impressum": [[486, "impressum"]], "History and releases": [[486, "history-and-releases"]], "The pypath book": [[487, "The-pypath-book"]], "Introduction": [[487, "Introduction"]], "Build, load and save databases": [[487, "Build,-load-and-save-databases"]], "The OmniPath app": [[487, "The-OmniPath-app"]], "Built-in database definitions": [[487, "Built-in-database-definitions"]], "Networks": [[487, "Networks"]], "Strictly literature curated network": [[487, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[487, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[487, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[487, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[487, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[487, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[487, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[487, "Enzyme-substrate-relationships"]], "Protein complexes": [[487, "Protein-complexes"], [487, "id2"]], "Annotations": [[487, "Annotations"], [487, "id1"], [490, "annotations"]], "Inter-cellular communication roles": [[487, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[487, "Data-directly-from-the-original-resources"]], "Interesting resources": [[487, "Interesting-resources"]], "RaMP": [[487, "RaMP"]], "TL;DR": [[487, "TL;DR"]], "HMDB (Human Metabolome Database)": [[487, "HMDB-(Human-Metabolome-Database)"]], "Direct access to HMDB data": [[487, "Direct-access-to-HMDB-data"]], "Higher level access to HMDB data": [[487, "Higher-level-access-to-HMDB-data"]], "ID translation with HMDB": [[487, "ID-translation-with-HMDB"]], "NCBI E-Utils": [[487, "NCBI-E-Utils"]], "Download management": [[487, "Download-management"]], "Cache management and customization": [[487, "Cache-management-and-customization"]], "Download failures": [[487, "Download-failures"]], "Corrupted cache content": [[487, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[487, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[487, "Timeouts"]], "Access and inspect the Curl object": [[487, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[487, "Is-it-failing-only-for-you?"]], "Read the log": [[487, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[487, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[487, "Resources"]], "Licenses": [[487, "Licenses"]], "Example: build a network for commercial use": [[487, "Example:-build-a-network-for-commercial-use"]], "Resource information": [[487, "Resource-information"]], "Resource definitions for a certain database or dataset": [[487, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[487, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[487, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[487, "The-Network-object"]], "Network in pandas.DataFrame": [[487, "Network-in-pandas.DataFrame"]], "Self interactions (loop edges) in the network": [[487, "Self-interactions-(loop-edges)-in-the-network"]], "Molecular complexes in the network": [[487, "Molecular-complexes-in-the-network"]], "Translating identifiers": [[487, "Translating-identifiers"]], "Pre-defined ID translation tables": [[487, "Pre-defined-ID-translation-tables"]], "Direct access to ID translation tables": [[487, "Direct-access-to-ID-translation-tables"]], "Orthology translation": [[487, "Orthology-translation"]], "Orthology translation tables as dictionaries": [[487, "Orthology-translation-tables-as-dictionaries"]], "Orthology translation data frames": [[487, "Orthology-translation-data-frames"]], "Taxonomy": [[487, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[487, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[487, "Organism-from-UniProt-ID"]], "UniProt": [[487, "UniProt"]], "The UniProt input module": [[487, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[487, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[487, "UniProt-ID-format-validation"]], "UniProt ID validation": [[487, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[487, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[487, "History-of-UniProt-records"]], "UniProt REST API": [[487, "UniProt-REST-API"]], "Processed UniProt annotations": [[487, "Processed-UniProt-annotations"]], "The UniProt utils module": [[487, "The-UniProt-utils-module"]], "Datasheets": [[487, "Datasheets"]], "Tables": [[487, "Tables"]], "Sanitizing UniProt IDs": [[487, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[487, "Enzyme-substrate-interactions"], [490, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[487, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[487, "Enzyme-substrate-data-frame"]], "Protein sequences": [[487, "Protein-sequences"]], "Load a single annotation resource": [[487, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[487, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[487, "Load-only-selected-annotations"]], "Data frames of annotations": [[487, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[487, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[487, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[487, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[487, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[487, "Browse-intercell-categories"]], "Gene Ontology": [[487, "Gene-Ontology"]], "Protein complex objects": [[487, "Protein-complex-objects"]], "Protein complex data frame": [[487, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[487, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[487, "Log-messages-and-sessions"]], "Basic info about the session": [[487, "Basic-info-about-the-session"]], "Read the log file": [[487, "Read-the-log-file"]], "Logging to the console": [[487, "Logging-to-the-console"]], "Disable logging": [[487, "Disable-logging"]], "Write to the log": [[487, "Write-to-the-log"]], "Sending a single message": [[487, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[487, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[487, "BEL-export"]], "CellPhoneDB export": [[487, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[487, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[487, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[487, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[487, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[487, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[487, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[487, "Directions-and-signs"]], "Accessing nodes in the network": [[487, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[487, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[487, "Accessing-edges-by-identifiers"]], "Literature references": [[487, "Literature-references"]], "Plotting the network with igraph": [[487, "Plotting-the-network-with-igraph"]], "Reference": [[488, "reference"]], "How to navigate the reference?": [[488, "how-to-navigate-the-reference"]], "Release history": [[489, "release-history"]], "0.1.0": [[489, "id1"]], "0.2.0": [[489, "id2"]], "0.3.0": [[489, "id3"]], "0.4.0": [[489, "id4"]], "0.5.0": [[489, "id5"]], "0.5.32": [[489, "id6"]], "0.6.31": [[489, "id7"]], "0.7.0": [[489, "id8"]], "0.7.74": [[489, "id9"]], "0.7.93": [[489, "id10"]], "0.7.110": [[489, "id11"]], "0.8": [[489, "id12"]], "0.9": [[489, "id13"]], "0.10.0": [[489, "id14"]], "0.11.0": [[489, "id15"]], "0.12.0": [[489, "id16"]], "0.13.0": [[489, "id17"]], "0.14.0": [[489, "id18"]], "Upcoming": [[489, "upcoming"]], "Webservice": [[490, "webservice"]], "Query types": [[490, "query-types"]], "Interaction datasets": [[490, "interaction-datasets"]], "Mouse and rat": [[490, "mouse-and-rat"]], "Examples": [[490, "examples"]], "Molecular interaction network": [[490, "molecular-interaction-network"]], "Molecular complexes": [[490, "molecular-complexes"]], "Roles in inter-cellular communication": [[490, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[490, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.abs"], [12, "module-pypath.inputs.acsn"], [15, "module-pypath.inputs.adrecs"], [25, "module-pypath.inputs.biogrid"], [28, "module-pypath.inputs.biomart"], [34, "module-pypath.inputs.biomodels"], [40, "module-pypath.inputs.ca1"], [42, "module-pypath.inputs.cancercellmap"], [44, "module-pypath.inputs.cell"], [46, "module-pypath.inputs.chembl"], [54, "module-pypath.inputs.clinvar"], [57, "module-pypath.inputs.common"], [64, "module-pypath.inputs.compath"], [66, "module-pypath.inputs.cpdb"], [69, "module-pypath.inputs.credentials"], [71, "module-pypath.inputs.ctdbase"], [74, "module-pypath.inputs.ddinter"], [80, "module-pypath.inputs.deathdomain"], [83, "module-pypath.inputs.dip"], [86, "module-pypath.inputs.diseases"], [94, "module-pypath.inputs.drugbank"], [101, "module-pypath.inputs.ebi"], [103, "module-pypath.inputs.elm"], [108, "module-pypath.inputs.embopress"], [110, "module-pypath.inputs.encode"], [112, "module-pypath.inputs.ensembl"], [114, "module-pypath.inputs.eutils"], [116, "module-pypath.inputs.expasy"], [119, "module-pypath.inputs.genecards"], [124, "module-pypath.inputs.graphviz"], [126, "module-pypath.inputs.hprd"], [131, "module-pypath.inputs.htri"], [133, "module-pypath.inputs.humsavar"], [135, "module-pypath.inputs.ielm"], [138, "module-pypath.inputs.imweb"], [141, "module-pypath.inputs.innatedb"], [143, "module-pypath.inputs.instruct"], [146, "module-pypath.inputs.intact"], [148, "module-pypath.inputs.interpro"], [153, "module-pypath.inputs.ipi"], [155, "module-pypath.inputs.kegg_api"], [172, "module-pypath.inputs.kirouac2010"], [174, "module-pypath.inputs.laudanna"], [177, "module-pypath.inputs.lincs"], [179, "module-pypath.inputs.macrophage"], [181, "module-pypath.inputs.main"], [182, "module-pypath.inputs.mimp"], [186, "module-pypath.inputs.mir2disease"], [188, "module-pypath.inputs.mirdeathdb"], [190, "module-pypath.inputs.mitab"], [193, "module-pypath.inputs.mppi"], [195, "module-pypath.inputs.ncrdeathdb"], [197, "module-pypath.inputs.negatome"], [199, "module-pypath.inputs.netbiol"], [202, "module-pypath.inputs.offsides"], [204, "module-pypath.inputs.ontology"], [207, "module-pypath.inputs.opentargets"], [213, "module-pypath.inputs.pathophenodb"], [216, "module-pypath.inputs.pathwaycommons"], [233, "module-pypath.inputs.pazar"], [235, "module-pypath.inputs.pepcyber"], [238, "module-pypath.inputs.pharos"], [247, "module-pypath.inputs.phobius"], [249, "module-pypath.inputs.phosphonetworks"], [252, "module-pypath.inputs.phosphopoint"], [255, "module-pypath.inputs.pro"], [258, "module-pypath.inputs.protmapper"], [262, "module-pypath.inputs.pubchem"], [264, "module-pypath.inputs.pubmed"], [271, "module-pypath.inputs.ramp"], [278, "module-pypath.inputs.rdata"], [279, "module-pypath.inputs.reaction"], [299, "module-pypath.inputs.reactome"], [304, "module-pypath.inputs.science"], [306, "module-pypath.inputs.sider"], [315, "module-pypath.inputs.stitch"], [318, "module-pypath.inputs.string"], [323, "module-pypath.inputs.switches_elm"], [325, "module-pypath.inputs.transmir"], [327, "module-pypath.inputs.trip"], [334, "module-pypath.inputs.twosides"], [336, "module-pypath.inputs.unichem"], [341, "module-pypath.inputs.uniprot"], [367, "module-pypath.inputs.uniprot_db"], [376, "module-pypath.inputs.uniprot_idmapping"], [378, "module-pypath.internals"], [379, "module-pypath.internals.input_formats"], [393, "module-pypath.internals.license"], [399, "module-pypath.internals.maps"], [400, "module-pypath.internals.refs"], [403, "module-pypath.internals.resource"], [411, "module-pypath.legacy"], [412, "module-pypath.legacy.db_categories"], [416, "module-pypath.resources"], [417, "module-pypath.resources.controller"], [419, "module-pypath.resources.data"], [420, "module-pypath.resources.data_formats"], [430, "module-pypath.resources.licenses"], [432, "module-pypath.resources.network"], [433, "module-pypath.resources.urls"], [434, "module-pypath.share"], [435, "module-pypath.share.cache"], [439, "module-pypath.share.common"], [440, "module-pypath.share.constants"], [441, "module-pypath.share.curl"], [458, "module-pypath.share.progress"], [460, "module-pypath.share.session"], [461, "module-pypath.share.settings"], [462, "module-pypath.visual"], [463, "module-pypath.visual.drawing"], [466, "module-pypath.visual.igraph_drawing"], [472, "module-pypath.visual.igraph_drawing.edge"], [479, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "abs_interactions() (in module pypath.inputs.abs)": [[11, "pypath.inputs.abs.abs_interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "acsn_interactions() (in module pypath.inputs.acsn)": [[13, "pypath.inputs.acsn.acsn_interactions"]], "acsn_interactions_sif() (in module pypath.inputs.acsn)": [[14, "pypath.inputs.acsn.acsn_interactions_sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "adrecsadr (class in pypath.inputs.adrecs)": [[16, "pypath.inputs.adrecs.AdrecsAdr"]], "__init__() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.__init__"]], "adr_class (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.adr_class"]], "badd (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.badd"]], "count() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.count"]], "index() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.index"]], "adrecschildparent (class in pypath.inputs.adrecs)": [[17, "pypath.inputs.adrecs.AdrecsChildParent"]], "__init__() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.__init__"]], "child (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.child"]], "count() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.count"]], "index() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.index"]], "parent (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.parent"]], "adrecsdrug (class in pypath.inputs.adrecs)": [[18, "pypath.inputs.adrecs.AdrecsDrug"]], "__init__() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.__init__"]], "badd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.badd"]], "count() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.count"]], "drug (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drug"]], "drugbank (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drugbank"]], "index() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.index"]], "kegg (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.kegg"]], "mesh (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.mesh"]], "pubchem_cid (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.pubchem_cid"]], "synonyms (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.synonyms"]], "tdd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.tdd"]], "adrecsdrugadr (class in pypath.inputs.adrecs)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr"]], "__init__() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.__init__"]], "adr (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr"]], "adr_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr_badd"]], "count() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.count"]], "drug (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug"]], "drug_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug_badd"]], "index() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.index"]], "adrecsterm (class in pypath.inputs.adrecs)": [[20, "pypath.inputs.adrecs.AdrecsTerm"]], "__init__() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.__init__"]], "adrecs_class (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.adrecs_class"]], "badd (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.badd"]], "count() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.count"]], "index() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.index"]], "meddra (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.meddra"]], "name (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.name"]], "synonyms (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.synonyms"]], "adrecs_adr_ontology() (in module pypath.inputs.adrecs)": [[21, "pypath.inputs.adrecs.adrecs_adr_ontology"]], "adrecs_drug_adr() (in module pypath.inputs.adrecs)": [[22, "pypath.inputs.adrecs.adrecs_drug_adr"]], "adrecs_drug_identifiers() (in module pypath.inputs.adrecs)": [[23, "pypath.inputs.adrecs.adrecs_drug_identifiers"]], "adrecs_hierarchy() (in module pypath.inputs.adrecs)": [[24, "pypath.inputs.adrecs.adrecs_hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "biogrid_all_interactions() (in module pypath.inputs.biogrid)": [[26, "pypath.inputs.biogrid.biogrid_all_interactions"]], "biogrid_interactions() (in module pypath.inputs.biogrid)": [[27, "pypath.inputs.biogrid.biogrid_interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "biomart_homology() (in module pypath.inputs.biomart)": [[29, "pypath.inputs.biomart.biomart_homology"]], "biomart_microarray() (in module pypath.inputs.biomart)": [[30, "pypath.inputs.biomart.biomart_microarray"]], "biomart_microarray_types() (in module pypath.inputs.biomart)": [[31, "pypath.inputs.biomart.biomart_microarray_types"]], "biomart_microarrays() (in module pypath.inputs.biomart)": [[32, "pypath.inputs.biomart.biomart_microarrays"]], "biomart_query() (in module pypath.inputs.biomart)": [[33, "pypath.inputs.biomart.biomart_query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "download_single_model() (in module pypath.inputs.biomodels)": [[35, "pypath.inputs.biomodels.download_single_model"]], "get_all_models() (in module pypath.inputs.biomodels)": [[36, "pypath.inputs.biomodels.get_all_models"]], "get_biomodels() (in module pypath.inputs.biomodels)": [[37, "pypath.inputs.biomodels.get_biomodels"]], "get_biomodels_req() (in module pypath.inputs.biomodels)": [[38, "pypath.inputs.biomodels.get_biomodels_req"]], "get_single_model() (in module pypath.inputs.biomodels)": [[39, "pypath.inputs.biomodels.get_single_model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "ca1_interactions() (in module pypath.inputs.ca1)": [[41, "pypath.inputs.ca1.ca1_interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "ccmap_interactions() (in module pypath.inputs.cancercellmap)": [[43, "pypath.inputs.cancercellmap.ccmap_interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[45, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "chembl_activities() (in module pypath.inputs.chembl)": [[47, "pypath.inputs.chembl.chembl_activities"]], "chembl_assays() (in module pypath.inputs.chembl)": [[48, "pypath.inputs.chembl.chembl_assays"]], "chembl_documents() (in module pypath.inputs.chembl)": [[49, "pypath.inputs.chembl.chembl_documents"]], "chembl_drug_indications() (in module pypath.inputs.chembl)": [[50, "pypath.inputs.chembl.chembl_drug_indications"]], "chembl_mechanisms() (in module pypath.inputs.chembl)": [[51, "pypath.inputs.chembl.chembl_mechanisms"]], "chembl_molecules() (in module pypath.inputs.chembl)": [[52, "pypath.inputs.chembl.chembl_molecules"]], "chembl_targets() (in module pypath.inputs.chembl)": [[53, "pypath.inputs.chembl.chembl_targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "clinvar_citations() (in module pypath.inputs.clinvar)": [[55, "pypath.inputs.clinvar.clinvar_citations"]], "clinvar_raw() (in module pypath.inputs.clinvar)": [[56, "pypath.inputs.clinvar.clinvar_raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[58, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[59, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[60, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[61, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[62, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[63, "pypath.inputs.common.read_xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "compath_mappings() (in module pypath.inputs.compath)": [[65, "pypath.inputs.compath.compath_mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "cpdb_interactions() (in module pypath.inputs.cpdb)": [[67, "pypath.inputs.cpdb.cpdb_interactions"]], "cpdb_interactions_ltp() (in module pypath.inputs.cpdb)": [[68, "pypath.inputs.cpdb.cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[70, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "ctdbase_relations() (in module pypath.inputs.ctdbase)": [[72, "pypath.inputs.ctdbase.ctdbase_relations"]], "ctdbase_vocabulary() (in module pypath.inputs.ctdbase)": [[73, "pypath.inputs.ctdbase.ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "ddinter_drug_interactions() (in module pypath.inputs.ddinter)": [[75, "pypath.inputs.ddinter.ddinter_drug_interactions"]], "ddinter_identifiers() (in module pypath.inputs.ddinter)": [[76, "pypath.inputs.ddinter.ddinter_identifiers"]], "ddinter_interactions() (in module pypath.inputs.ddinter)": [[77, "pypath.inputs.ddinter.ddinter_interactions"]], "ddinter_mappings() (in module pypath.inputs.ddinter)": [[78, "pypath.inputs.ddinter.ddinter_mappings"]], "ddinter_n_drugs() (in module pypath.inputs.ddinter)": [[79, "pypath.inputs.ddinter.ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "deathdomain_interactions() (in module pypath.inputs.deathdomain)": [[81, "pypath.inputs.deathdomain.deathdomain_interactions"]], "deathdomain_interactions_rescued() (in module pypath.inputs.deathdomain)": [[82, "pypath.inputs.deathdomain.deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "dip_interactions() (in module pypath.inputs.dip)": [[84, "pypath.inputs.dip.dip_interactions"]], "dip_login() (in module pypath.inputs.dip)": [[85, "pypath.inputs.dip.dip_login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "diseases_general() (in module pypath.inputs.diseases)": [[87, "pypath.inputs.diseases.diseases_general"]], "experiments_filtered() (in module pypath.inputs.diseases)": [[88, "pypath.inputs.diseases.experiments_filtered"]], "experiments_full() (in module pypath.inputs.diseases)": [[89, "pypath.inputs.diseases.experiments_full"]], "knowledge_filtered() (in module pypath.inputs.diseases)": [[90, "pypath.inputs.diseases.knowledge_filtered"]], "knowledge_full() (in module pypath.inputs.diseases)": [[91, "pypath.inputs.diseases.knowledge_full"]], "textmining_filtered() (in module pypath.inputs.diseases)": [[92, "pypath.inputs.diseases.textmining_filtered"]], "textmining_full() (in module pypath.inputs.diseases)": [[93, "pypath.inputs.diseases.textmining_full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "drugbankfull (class in pypath.inputs.drugbank)": [[95, "pypath.inputs.drugbank.DrugbankFull"]], "__init__() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.__init__"]], "drugbank_drugs_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_drugs_full"]], "drugbank_external_ids_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_external_ids_full"]], "drugbank_properties_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_properties_full"]], "drugbank_targets_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_targets_full"]], "drugbank_annotations() (in module pypath.inputs.drugbank)": [[96, "pypath.inputs.drugbank.drugbank_annotations"]], "drugbank_drugs() (in module pypath.inputs.drugbank)": [[97, "pypath.inputs.drugbank.drugbank_drugs"]], "drugbank_interactions() (in module pypath.inputs.drugbank)": [[98, "pypath.inputs.drugbank.drugbank_interactions"]], "drugbank_mapping() (in module pypath.inputs.drugbank)": [[99, "pypath.inputs.drugbank.drugbank_mapping"]], "drugbank_raw_interactions() (in module pypath.inputs.drugbank)": [[100, "pypath.inputs.drugbank.drugbank_raw_interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[102, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "elm_classes() (in module pypath.inputs.elm)": [[104, "pypath.inputs.elm.elm_classes"]], "elm_domains() (in module pypath.inputs.elm)": [[105, "pypath.inputs.elm.elm_domains"]], "elm_instances() (in module pypath.inputs.elm)": [[106, "pypath.inputs.elm.elm_instances"]], "elm_interactions() (in module pypath.inputs.elm)": [[107, "pypath.inputs.elm.elm_interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[109, "pypath.inputs.embopress.embopress_supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "encode_tf_mirna_interactions() (in module pypath.inputs.encode)": [[111, "pypath.inputs.encode.encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "ensembl_organisms() (in module pypath.inputs.ensembl)": [[113, "pypath.inputs.ensembl.ensembl_organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "esummary() (in module pypath.inputs.eutils)": [[115, "pypath.inputs.eutils.esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "expasy_enzyme_classes() (in module pypath.inputs.expasy)": [[117, "pypath.inputs.expasy.expasy_enzyme_classes"]], "expasy_enzymes() (in module pypath.inputs.expasy)": [[118, "pypath.inputs.expasy.expasy_enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "genecards_datasheet() (in module pypath.inputs.genecards)": [[120, "pypath.inputs.genecards.genecards_datasheet"]], "genecards_soup() (in module pypath.inputs.genecards)": [[121, "pypath.inputs.genecards.genecards_soup"]], "genecards_summaries() (in module pypath.inputs.genecards)": [[122, "pypath.inputs.genecards.genecards_summaries"]], "get_method() (in module pypath.inputs)": [[123, "pypath.inputs.get_method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "graphviz_attrs() (in module pypath.inputs.graphviz)": [[125, "pypath.inputs.graphviz.graphviz_attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "get_hprd() (in module pypath.inputs.hprd)": [[127, "pypath.inputs.hprd.get_hprd"]], "hprd_enzyme_substrate() (in module pypath.inputs.hprd)": [[128, "pypath.inputs.hprd.hprd_enzyme_substrate"]], "hprd_interactions() (in module pypath.inputs.hprd)": [[129, "pypath.inputs.hprd.hprd_interactions"]], "hprd_interactions_htp() (in module pypath.inputs.hprd)": [[130, "pypath.inputs.hprd.hprd_interactions_htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "htri_interactions() (in module pypath.inputs.htri)": [[132, "pypath.inputs.htri.htri_interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "uniprot_variants() (in module pypath.inputs.humsavar)": [[134, "pypath.inputs.humsavar.uniprot_variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "get_ielm() (in module pypath.inputs.ielm)": [[136, "pypath.inputs.ielm.get_ielm"]], "get_ielm_huge() (in module pypath.inputs.ielm)": [[137, "pypath.inputs.ielm.get_ielm_huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "get_imweb() (in module pypath.inputs.imweb)": [[139, "pypath.inputs.imweb.get_imweb"]], "get_imweb_req() (in module pypath.inputs.imweb)": [[140, "pypath.inputs.imweb.get_imweb_req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "innatedb_interactions() (in module pypath.inputs.innatedb)": [[142, "pypath.inputs.innatedb.innatedb_interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "get_instruct() (in module pypath.inputs.instruct)": [[144, "pypath.inputs.instruct.get_instruct"]], "get_instruct_offsets() (in module pypath.inputs.instruct)": [[145, "pypath.inputs.instruct.get_instruct_offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "intact_interactions() (in module pypath.inputs.intact)": [[147, "pypath.inputs.intact.intact_interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "interpro2go_annotations() (in module pypath.inputs.interpro)": [[149, "pypath.inputs.interpro.interpro2go_annotations"]], "interpro_annotations() (in module pypath.inputs.interpro)": [[150, "pypath.inputs.interpro.interpro_annotations"]], "interpro_entries() (in module pypath.inputs.interpro)": [[151, "pypath.inputs.interpro.interpro_entries"]], "interpro_xrefs() (in module pypath.inputs.interpro)": [[152, "pypath.inputs.interpro.interpro_xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "ipi_uniprot() (in module pypath.inputs.ipi)": [[154, "pypath.inputs.ipi.ipi_uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "disease_to_drug() (in module pypath.inputs.kegg_api)": [[156, "pypath.inputs.kegg_api.disease_to_drug"]], "disease_to_gene() (in module pypath.inputs.kegg_api)": [[157, "pypath.inputs.kegg_api.disease_to_gene"]], "disease_to_pathway() (in module pypath.inputs.kegg_api)": [[158, "pypath.inputs.kegg_api.disease_to_pathway"]], "drug_to_disease() (in module pypath.inputs.kegg_api)": [[159, "pypath.inputs.kegg_api.drug_to_disease"]], "drug_to_drug() (in module pypath.inputs.kegg_api)": [[160, "pypath.inputs.kegg_api.drug_to_drug"]], "drug_to_gene() (in module pypath.inputs.kegg_api)": [[161, "pypath.inputs.kegg_api.drug_to_gene"]], "drug_to_pathway() (in module pypath.inputs.kegg_api)": [[162, "pypath.inputs.kegg_api.drug_to_pathway"]], "gene_to_disease() (in module pypath.inputs.kegg_api)": [[163, "pypath.inputs.kegg_api.gene_to_disease"]], "gene_to_drug() (in module pypath.inputs.kegg_api)": [[164, "pypath.inputs.kegg_api.gene_to_drug"]], "gene_to_pathway() (in module pypath.inputs.kegg_api)": [[165, "pypath.inputs.kegg_api.gene_to_pathway"]], "kegg_drug_to_chebi() (in module pypath.inputs.kegg_api)": [[166, "pypath.inputs.kegg_api.kegg_drug_to_chebi"]], "kegg_gene_to_ncbi_geneid() (in module pypath.inputs.kegg_api)": [[167, "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid"]], "kegg_gene_to_uniprot() (in module pypath.inputs.kegg_api)": [[168, "pypath.inputs.kegg_api.kegg_gene_to_uniprot"]], "pathway_to_disease() (in module pypath.inputs.kegg_api)": [[169, "pypath.inputs.kegg_api.pathway_to_disease"]], "pathway_to_drug() (in module pypath.inputs.kegg_api)": [[170, "pypath.inputs.kegg_api.pathway_to_drug"]], "pathway_to_gene() (in module pypath.inputs.kegg_api)": [[171, "pypath.inputs.kegg_api.pathway_to_gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "kirouac2010_interactions() (in module pypath.inputs.kirouac2010)": [[173, "pypath.inputs.kirouac2010.kirouac2010_interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "laudanna_directions() (in module pypath.inputs.laudanna)": [[175, "pypath.inputs.laudanna.laudanna_directions"]], "laudanna_effects() (in module pypath.inputs.laudanna)": [[176, "pypath.inputs.laudanna.laudanna_effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "lincs_compounds() (in module pypath.inputs.lincs)": [[178, "pypath.inputs.lincs.lincs_compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "macrophage_interactions() (in module pypath.inputs.macrophage)": [[180, "pypath.inputs.macrophage.macrophage_interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "get_kinase_class() (in module pypath.inputs.mimp)": [[183, "pypath.inputs.mimp.get_kinase_class"]], "mimp_enzyme_substrate() (in module pypath.inputs.mimp)": [[184, "pypath.inputs.mimp.mimp_enzyme_substrate"]], "mimp_interactions() (in module pypath.inputs.mimp)": [[185, "pypath.inputs.mimp.mimp_interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "mir2disease_interactions() (in module pypath.inputs.mir2disease)": [[187, "pypath.inputs.mir2disease.mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "mirdeathdb_interactions() (in module pypath.inputs.mirdeathdb)": [[189, "pypath.inputs.mirdeathdb.mirdeathdb_interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[191, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[192, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "mppi_interactions() (in module pypath.inputs.mppi)": [[194, "pypath.inputs.mppi.mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "ncrdeathdb_interactions() (in module pypath.inputs.ncrdeathdb)": [[196, "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "negatome_interactions() (in module pypath.inputs.negatome)": [[198, "pypath.inputs.negatome.negatome_interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "arn_interactions() (in module pypath.inputs.netbiol)": [[200, "pypath.inputs.netbiol.arn_interactions"]], "nrf2ome_interactions() (in module pypath.inputs.netbiol)": [[201, "pypath.inputs.netbiol.nrf2ome_interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "offsides_side_effects() (in module pypath.inputs.offsides)": [[203, "pypath.inputs.offsides.offsides_side_effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "listof_ontologies() (in module pypath.inputs.ontology)": [[205, "pypath.inputs.ontology.listof_ontologies"]], "ontology() (in module pypath.inputs.ontology)": [[206, "pypath.inputs.ontology.ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "opentargets_adverse_reactions() (in module pypath.inputs.opentargets)": [[208, "pypath.inputs.opentargets.opentargets_adverse_reactions"]], "opentargets_baseline_expression() (in module pypath.inputs.opentargets)": [[209, "pypath.inputs.opentargets.opentargets_baseline_expression"]], "opentargets_direct_score() (in module pypath.inputs.opentargets)": [[210, "pypath.inputs.opentargets.opentargets_direct_score"]], "opentargets_general() (in module pypath.inputs.opentargets)": [[211, "pypath.inputs.opentargets.opentargets_general"]], "opentargets_indirect_score() (in module pypath.inputs.opentargets)": [[212, "pypath.inputs.opentargets.opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "diseasepathogen (class in pypath.inputs.pathophenodb)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen"]], "__init__() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.__init__"]], "count() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.count"]], "disease (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease"]], "disease_id (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease_id"]], "evidence (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.evidence"]], "index() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.index"]], "pathogen (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen"]], "pathogen_taxid (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen_taxid"]], "disease_pathogen_interactions() (in module pypath.inputs.pathophenodb)": [[215, "pypath.inputs.pathophenodb.disease_pathogen_interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pathwaycommonsinteraction (class in pypath.inputs.pathwaycommons)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.count"]], "id_a (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_a"]], "id_b (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_b"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.index"]], "interaction_type (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.interaction_type"]], "resource (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.resource"]], "pathwaycommonsresource (class in pypath.inputs.pathwaycommons)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.count"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.index"]], "name (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.name"]], "pc_label (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.pc_label"]], "version (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.version"]], "pathwaycommons_bind_interactions() (in module pypath.inputs.pathwaycommons)": [[219, "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions"]], "pathwaycommons_biogrid_interactions() (in module pypath.inputs.pathwaycommons)": [[220, "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions"]], "pathwaycommons_corum_interactions() (in module pypath.inputs.pathwaycommons)": [[221, "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions"]], "pathwaycommons_dip_interactions() (in module pypath.inputs.pathwaycommons)": [[222, "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions"]], "pathwaycommons_hprd_interactions() (in module pypath.inputs.pathwaycommons)": [[223, "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions"]], "pathwaycommons_inoh_interactions() (in module pypath.inputs.pathwaycommons)": [[224, "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions"]], "pathwaycommons_intact_interactions() (in module pypath.inputs.pathwaycommons)": [[225, "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions"]], "pathwaycommons_interactions() (in module pypath.inputs.pathwaycommons)": [[226, "pypath.inputs.pathwaycommons.pathwaycommons_interactions"]], "pathwaycommons_kegg_interactions() (in module pypath.inputs.pathwaycommons)": [[227, "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions"]], "pathwaycommons_netpath_interactions() (in module pypath.inputs.pathwaycommons)": [[228, "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions"]], "pathwaycommons_panther_interactions() (in module pypath.inputs.pathwaycommons)": [[229, "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions"]], "pathwaycommons_phosphosite_interactions() (in module pypath.inputs.pathwaycommons)": [[230, "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions"]], "pathwaycommons_reactome_interactions() (in module pypath.inputs.pathwaycommons)": [[231, "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions"]], "pathwaycommons_wikipathways_interactions() (in module pypath.inputs.pathwaycommons)": [[232, "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pazar_interactions() (in module pypath.inputs.pazar)": [[234, "pypath.inputs.pazar.pazar_interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pepcyber_details() (in module pypath.inputs.pepcyber)": [[236, "pypath.inputs.pepcyber.pepcyber_details"]], "pepcyber_interactions() (in module pypath.inputs.pepcyber)": [[237, "pypath.inputs.pepcyber.pepcyber_interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pharos_diseases() (in module pypath.inputs.pharos)": [[239, "pypath.inputs.pharos.pharos_diseases"]], "pharos_expression() (in module pypath.inputs.pharos)": [[240, "pypath.inputs.pharos.pharos_expression"]], "pharos_general() (in module pypath.inputs.pharos)": [[241, "pypath.inputs.pharos.pharos_general"]], "pharos_gtex() (in module pypath.inputs.pharos)": [[242, "pypath.inputs.pharos.pharos_gtex"]], "pharos_ligands() (in module pypath.inputs.pharos)": [[243, "pypath.inputs.pharos.pharos_ligands"]], "pharos_orthologs() (in module pypath.inputs.pharos)": [[244, "pypath.inputs.pharos.pharos_orthologs"]], "pharos_targets() (in module pypath.inputs.pharos)": [[245, "pypath.inputs.pharos.pharos_targets"]], "pharos_xrefs() (in module pypath.inputs.pharos)": [[246, "pypath.inputs.pharos.pharos_xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "phobius_annotations() (in module pypath.inputs.phobius)": [[248, "pypath.inputs.phobius.phobius_annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "phosphonetworks_enzyme_substrate() (in module pypath.inputs.phosphonetworks)": [[250, "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate"]], "phosphonetworks_interactions() (in module pypath.inputs.phosphonetworks)": [[251, "pypath.inputs.phosphonetworks.phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "phosphopoint_directions() (in module pypath.inputs.phosphopoint)": [[253, "pypath.inputs.phosphopoint.phosphopoint_directions"]], "phosphopoint_interactions() (in module pypath.inputs.phosphopoint)": [[254, "pypath.inputs.phosphopoint.phosphopoint_interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "get_pro() (in module pypath.inputs.pro)": [[256, "pypath.inputs.pro.get_pro"]], "pro_mapping() (in module pypath.inputs.pro)": [[257, "pypath.inputs.pro.pro_mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "get_protmapper() (in module pypath.inputs.protmapper)": [[259, "pypath.inputs.protmapper.get_protmapper"]], "protmapper_enzyme_substrate() (in module pypath.inputs.protmapper)": [[260, "pypath.inputs.protmapper.protmapper_enzyme_substrate"]], "protmapper_interactions() (in module pypath.inputs.protmapper)": [[261, "pypath.inputs.protmapper.protmapper_interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pubchem_mapping() (in module pypath.inputs.pubchem)": [[263, "pypath.inputs.pubchem.pubchem_mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "get_pmid() (in module pypath.inputs.pubmed)": [[265, "pypath.inputs.pubmed.get_pmid"]], "get_pubmeds() (in module pypath.inputs.pubmed)": [[266, "pypath.inputs.pubmed.get_pubmeds"]], "only_pmids() (in module pypath.inputs.pubmed)": [[267, "pypath.inputs.pubmed.only_pmids"]], "open_pubmed() (in module pypath.inputs.pubmed)": [[268, "pypath.inputs.pubmed.open_pubmed"]], "pmids_dict() (in module pypath.inputs.pubmed)": [[269, "pypath.inputs.pubmed.pmids_dict"]], "pmids_list() (in module pypath.inputs.pubmed)": [[270, "pypath.inputs.pubmed.pmids_list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "ramp_id_types() (in module pypath.inputs.ramp)": [[272, "pypath.inputs.ramp.ramp_id_types"]], "ramp_id_types_2() (in module pypath.inputs.ramp)": [[273, "pypath.inputs.ramp.ramp_id_types_2"]], "ramp_list_tables() (in module pypath.inputs.ramp)": [[274, "pypath.inputs.ramp.ramp_list_tables"]], "ramp_mapping() (in module pypath.inputs.ramp)": [[275, "pypath.inputs.ramp.ramp_mapping"]], "ramp_raw() (in module pypath.inputs.ramp)": [[276, "pypath.inputs.ramp.ramp_raw"]], "ramp_show_tables() (in module pypath.inputs.ramp)": [[277, "pypath.inputs.ramp.ramp_show_tables"]], "pypath.inputs.rdata": [[278, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[279, "module-pypath.inputs.reaction"]], "acsn_biopax() (in module pypath.inputs.reaction)": [[280, "pypath.inputs.reaction.acsn_biopax"]], "acsn_interactions_2() (in module pypath.inputs.reaction)": [[281, "pypath.inputs.reaction.acsn_interactions_2"]], "get_acsn_effects() (in module pypath.inputs.reaction)": [[282, "pypath.inputs.reaction.get_acsn_effects"]], "get_controls() (in module pypath.inputs.reaction)": [[283, "pypath.inputs.reaction.get_controls"]], "get_interactions() (in module pypath.inputs.reaction)": [[284, "pypath.inputs.reaction.get_interactions"]], "get_reactions() (in module pypath.inputs.reaction)": [[285, "pypath.inputs.reaction.get_reactions"]], "get_soup() (in module pypath.inputs.reaction)": [[286, "pypath.inputs.reaction.get_soup"]], "panther_biopax() (in module pypath.inputs.reaction)": [[287, "pypath.inputs.reaction.panther_biopax"]], "panther_interactions() (in module pypath.inputs.reaction)": [[288, "pypath.inputs.reaction.panther_interactions"]], "pid_biopax() (in module pypath.inputs.reaction)": [[289, "pypath.inputs.reaction.pid_biopax"]], "pid_interactions() (in module pypath.inputs.reaction)": [[290, "pypath.inputs.reaction.pid_interactions"]], "process_complex() (in module pypath.inputs.reaction)": [[291, "pypath.inputs.reaction.process_complex"]], "process_controls() (in module pypath.inputs.reaction)": [[292, "pypath.inputs.reaction.process_controls"]], "process_reactions() (in module pypath.inputs.reaction)": [[293, "pypath.inputs.reaction.process_reactions"]], "reactions_biopax() (in module pypath.inputs.reaction)": [[294, "pypath.inputs.reaction.reactions_biopax"]], "reactome_biopax() (in module pypath.inputs.reaction)": [[295, "pypath.inputs.reaction.reactome_biopax"]], "reactome_bs() (in module pypath.inputs.reaction)": [[296, "pypath.inputs.reaction.reactome_bs"]], "reactome_interactions() (in module pypath.inputs.reaction)": [[297, "pypath.inputs.reaction.reactome_interactions"]], "reactome_sbml() (in module pypath.inputs.reaction)": [[298, "pypath.inputs.reaction.reactome_sbml"]], "pypath.inputs.reactome": [[299, "module-pypath.inputs.reactome"]], "reactome_chebis() (in module pypath.inputs.reactome)": [[300, "pypath.inputs.reactome.reactome_chebis"]], "reactome_pathway_relations() (in module pypath.inputs.reactome)": [[301, "pypath.inputs.reactome.reactome_pathway_relations"]], "reactome_pathways() (in module pypath.inputs.reactome)": [[302, "pypath.inputs.reactome.reactome_pathways"]], "reactome_uniprots() (in module pypath.inputs.reactome)": [[303, "pypath.inputs.reactome.reactome_uniprots"]], "pypath.inputs.science": [[304, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[305, "pypath.inputs.science.science_download"]], "pypath.inputs.sider": [[306, "module-pypath.inputs.sider"]], "siderdrug (class in pypath.inputs.sider)": [[307, "pypath.inputs.sider.SiderDrug"]], "__init__() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.__init__"]], "atc (pypath.inputs.sider.siderdrug attribute)": [[307, "pypath.inputs.sider.SiderDrug.atc"]], "count() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.count"]], "index() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.index"]], "name (pypath.inputs.sider.siderdrug attribute)": [[307, "pypath.inputs.sider.SiderDrug.name"]], "sidersideeffect (class in pypath.inputs.sider)": [[308, "pypath.inputs.sider.SiderSideeffect"]], "__init__() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.__init__"]], "count() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.count"]], "index() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.index"]], "side_effect (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.umls_concept_on_label"]], "sidersideeffectmeddra (class in pypath.inputs.sider)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra"]], "__init__() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.__init__"]], "cid (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.cid"]], "count() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.count"]], "index() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.index"]], "meddra_id (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.meddra_id"]], "side_effect_name (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.side_effect_name"]], "sidersideeffetfrequency (class in pypath.inputs.sider)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency"]], "__init__() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.__init__"]], "count() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.count"]], "frequency (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.frequency"]], "index() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.index"]], "side_effect (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_on_label"]], "sider_drug_names() (in module pypath.inputs.sider)": [[311, "pypath.inputs.sider.sider_drug_names"]], "sider_meddra_side_effects() (in module pypath.inputs.sider)": [[312, "pypath.inputs.sider.sider_meddra_side_effects"]], "sider_side_effect_frequencies() (in module pypath.inputs.sider)": [[313, "pypath.inputs.sider.sider_side_effect_frequencies"]], "sider_side_effects() (in module pypath.inputs.sider)": [[314, "pypath.inputs.sider.sider_side_effects"]], "pypath.inputs.stitch": [[315, "module-pypath.inputs.stitch"]], "stitch_actions_interactions() (in module pypath.inputs.stitch)": [[316, "pypath.inputs.stitch.stitch_actions_interactions"]], "stitch_links_interactions() (in module pypath.inputs.stitch)": [[317, "pypath.inputs.stitch.stitch_links_interactions"]], "pypath.inputs.string": [[318, "module-pypath.inputs.string"]], "string_effects() (in module pypath.inputs.string)": [[319, "pypath.inputs.string.string_effects"]], "string_links_interactions() (in module pypath.inputs.string)": [[320, "pypath.inputs.string.string_links_interactions"]], "string_physical_interactions() (in module pypath.inputs.string)": [[321, "pypath.inputs.string.string_physical_interactions"]], "string_species() (in module pypath.inputs.string)": [[322, "pypath.inputs.string.string_species"]], "pypath.inputs.switches_elm": [[323, "module-pypath.inputs.switches_elm"]], "get_switches_elm() (in module pypath.inputs.switches_elm)": [[324, "pypath.inputs.switches_elm.get_switches_elm"]], "pypath.inputs.transmir": [[325, "module-pypath.inputs.transmir"]], "transmir_interactions() (in module pypath.inputs.transmir)": [[326, "pypath.inputs.transmir.transmir_interactions"]], "pypath.inputs.trip": [[327, "module-pypath.inputs.trip"]], "take_a_trip() (in module pypath.inputs.trip)": [[328, "pypath.inputs.trip.take_a_trip"]], "trip_find_uniprot() (in module pypath.inputs.trip)": [[329, "pypath.inputs.trip.trip_find_uniprot"]], "trip_get_uniprot() (in module pypath.inputs.trip)": [[330, "pypath.inputs.trip.trip_get_uniprot"]], "trip_interactions() (in module pypath.inputs.trip)": [[331, "pypath.inputs.trip.trip_interactions"]], "trip_process() (in module pypath.inputs.trip)": [[332, "pypath.inputs.trip.trip_process"]], "trip_process_table() (in module pypath.inputs.trip)": [[333, "pypath.inputs.trip.trip_process_table"]], "pypath.inputs.twosides": [[334, "module-pypath.inputs.twosides"]], "twosides_interactions() (in module pypath.inputs.twosides)": [[335, "pypath.inputs.twosides.twosides_interactions"]], "pypath.inputs.unichem": [[336, "module-pypath.inputs.unichem"]], "info() (in module pypath.inputs.unichem)": [[337, "pypath.inputs.unichem.info"]], "unichem_info() (in module pypath.inputs.unichem)": [[338, "pypath.inputs.unichem.unichem_info"]], "unichem_mapping() (in module pypath.inputs.unichem)": [[339, "pypath.inputs.unichem.unichem_mapping"]], "unichem_sources() (in module pypath.inputs.unichem)": [[340, "pypath.inputs.unichem.unichem_sources"]], "pypath.inputs.uniprot": [[341, "module-pypath.inputs.uniprot"]], "taxon (class in pypath.inputs.uniprot)": [[342, "pypath.inputs.uniprot.Taxon"]], "__init__() (pypath.inputs.uniprot.taxon method)": [[342, "pypath.inputs.uniprot.Taxon.__init__"]], "count() (pypath.inputs.uniprot.taxon method)": [[342, "pypath.inputs.uniprot.Taxon.count"]], "english (pypath.inputs.uniprot.taxon attribute)": [[342, "pypath.inputs.uniprot.Taxon.english"]], "index() (pypath.inputs.uniprot.taxon method)": [[342, "pypath.inputs.uniprot.Taxon.index"]], "latin (pypath.inputs.uniprot.taxon attribute)": [[342, "pypath.inputs.uniprot.Taxon.latin"]], "latin_synonym (pypath.inputs.uniprot.taxon attribute)": [[342, "pypath.inputs.uniprot.Taxon.latin_synonym"]], "ncbi_id (pypath.inputs.uniprot.taxon attribute)": [[342, "pypath.inputs.uniprot.Taxon.ncbi_id"]], "uniprotquery (class in pypath.inputs.uniprot)": [[343, "pypath.inputs.uniprot.UniprotQuery"]], "__init__() (pypath.inputs.uniprot.uniprotquery method)": [[343, "pypath.inputs.uniprot.UniprotQuery.__init__"]], "__iter__() (pypath.inputs.uniprot.uniprotquery method)": [[343, "pypath.inputs.uniprot.UniprotQuery.__iter__"]], "fail_on_empty (pypath.inputs.uniprot.uniprotquery attribute)": [[343, "pypath.inputs.uniprot.UniprotQuery.fail_on_empty"]], "name_process (pypath.inputs.uniprot.uniprotquery attribute)": [[343, "pypath.inputs.uniprot.UniprotQuery.name_process"]], "perform() (pypath.inputs.uniprot.uniprotquery method)": [[343, "pypath.inputs.uniprot.UniprotQuery.perform"]], "url (pypath.inputs.uniprot.uniprotquery property)": [[343, "pypath.inputs.uniprot.UniprotQuery.url"]], "url_plain (pypath.inputs.uniprot.uniprotquery property)": [[343, "pypath.inputs.uniprot.UniprotQuery.url_plain"]], "uniprotrecordhistory (class in pypath.inputs.uniprot)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory"]], "__init__() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.__init__"]], "count() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.count"]], "database (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.database"]], "date (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.date"]], "entry_name (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.entry_name"]], "entry_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.entry_version"]], "index() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.index"]], "number (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.number"]], "replaced_by (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.replaced_by"]], "replaces (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.replaces"]], "sequence_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[344, "pypath.inputs.uniprot.UniprotRecordHistory.sequence_version"]], "deleted_uniprot_genesymbol() (in module pypath.inputs.uniprot)": [[345, "pypath.inputs.uniprot.deleted_uniprot_genesymbol"]], "get_uniprot_sec() (in module pypath.inputs.uniprot)": [[346, "pypath.inputs.uniprot.get_uniprot_sec"]], "protein_datasheet() (in module pypath.inputs.uniprot)": [[347, "pypath.inputs.uniprot.protein_datasheet"]], "query_builder() (in module pypath.inputs.uniprot)": [[348, "pypath.inputs.uniprot.query_builder"]], "swissprot_deleted() (in module pypath.inputs.uniprot)": [[349, "pypath.inputs.uniprot.swissprot_deleted"]], "trembl_deleted() (in module pypath.inputs.uniprot)": [[350, "pypath.inputs.uniprot.trembl_deleted"]], "uniprot_data() (in module pypath.inputs.uniprot)": [[351, "pypath.inputs.uniprot.uniprot_data"]], "uniprot_deleted() (in module pypath.inputs.uniprot)": [[352, "pypath.inputs.uniprot.uniprot_deleted"]], "uniprot_families() (in module pypath.inputs.uniprot)": [[353, "pypath.inputs.uniprot.uniprot_families"]], "uniprot_history() (in module pypath.inputs.uniprot)": [[354, "pypath.inputs.uniprot.uniprot_history"]], "uniprot_history_recent_datasheet() (in module pypath.inputs.uniprot)": [[355, "pypath.inputs.uniprot.uniprot_history_recent_datasheet"]], "uniprot_keywords() (in module pypath.inputs.uniprot)": [[356, "pypath.inputs.uniprot.uniprot_keywords"]], "uniprot_locations() (in module pypath.inputs.uniprot)": [[357, "pypath.inputs.uniprot.uniprot_locations"]], "uniprot_ncbi_taxids() (in module pypath.inputs.uniprot)": [[358, "pypath.inputs.uniprot.uniprot_ncbi_taxids"]], "uniprot_ncbi_taxids_2() (in module pypath.inputs.uniprot)": [[359, "pypath.inputs.uniprot.uniprot_ncbi_taxids_2"]], "uniprot_preprocess() (in module pypath.inputs.uniprot)": [[360, "pypath.inputs.uniprot.uniprot_preprocess"]], "uniprot_query() (in module pypath.inputs.uniprot)": [[361, "pypath.inputs.uniprot.uniprot_query"]], "uniprot_recent_version() (in module pypath.inputs.uniprot)": [[362, "pypath.inputs.uniprot.uniprot_recent_version"]], "uniprot_taxonomy() (in module pypath.inputs.uniprot)": [[363, "pypath.inputs.uniprot.uniprot_taxonomy"]], "uniprot_tissues() (in module pypath.inputs.uniprot)": [[364, "pypath.inputs.uniprot.uniprot_tissues"]], "uniprot_topology() (in module pypath.inputs.uniprot)": [[365, "pypath.inputs.uniprot.uniprot_topology"]], "valid_uniprot() (in module pypath.inputs.uniprot)": [[366, "pypath.inputs.uniprot.valid_uniprot"]], "pypath.inputs.uniprot_db": [[367, "module-pypath.inputs.uniprot_db"]], "all_swissprots() (in module pypath.inputs.uniprot_db)": [[368, "pypath.inputs.uniprot_db.all_swissprots"]], "all_trembls() (in module pypath.inputs.uniprot_db)": [[369, "pypath.inputs.uniprot_db.all_trembls"]], "all_uniprots() (in module pypath.inputs.uniprot_db)": [[370, "pypath.inputs.uniprot_db.all_uniprots"]], "get_db() (in module pypath.inputs.uniprot_db)": [[371, "pypath.inputs.uniprot_db.get_db"]], "init_db() (in module pypath.inputs.uniprot_db)": [[372, "pypath.inputs.uniprot_db.init_db"]], "is_swissprot() (in module pypath.inputs.uniprot_db)": [[373, "pypath.inputs.uniprot_db.is_swissprot"]], "is_trembl() (in module pypath.inputs.uniprot_db)": [[374, "pypath.inputs.uniprot_db.is_trembl"]], "is_uniprot() (in module pypath.inputs.uniprot_db)": [[375, "pypath.inputs.uniprot_db.is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[376, "module-pypath.inputs.uniprot_idmapping"]], "idtypes() (in module pypath.inputs.uniprot_idmapping)": [[377, "pypath.inputs.uniprot_idmapping.idtypes"]], "pypath.internals": [[378, "module-pypath.internals"]], "pypath.internals.input_formats": [[379, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[380, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[380, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[381, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[381, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[382, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[382, "pypath.internals.input_formats.FileMapping.__init__"]], "hmdbmapping (class in pypath.internals.input_formats)": [[383, "pypath.internals.input_formats.HmdbMapping"]], "__init__() (pypath.internals.input_formats.hmdbmapping method)": [[383, "pypath.internals.input_formats.HmdbMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[384, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[384, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[385, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[385, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[386, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[386, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[387, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[387, "pypath.internals.input_formats.ProMapping.__init__"]], "rampmapping (class in pypath.internals.input_formats)": [[388, "pypath.internals.input_formats.RampMapping"]], "__init__() (pypath.internals.input_formats.rampmapping method)": [[388, "pypath.internals.input_formats.RampMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[389, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[389, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[390, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[390, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[391, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[391, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[392, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[392, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[392, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[393, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[394, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[394, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[394, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[395, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[395, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[395, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[395, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[395, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[395, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[396, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[396, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[396, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[396, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[396, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[396, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[397, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[397, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[397, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[397, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[397, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[397, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[398, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[398, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[398, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[398, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[398, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[398, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[399, "module-pypath.internals.maps"]], "pypath.internals.refs": [[400, "module-pypath.internals.refs"]], "reference (class in pypath.internals.refs)": [[401, "pypath.internals.refs.Reference"]], "__init__() (pypath.internals.refs.reference method)": [[401, "pypath.internals.refs.Reference.__init__"]], "get_pubmed_data() (in module pypath.internals.refs)": [[402, "pypath.internals.refs.get_pubmed_data"]], "pypath.internals.resource": [[403, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[404, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[404, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[404, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[404, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[404, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[405, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[405, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[405, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[406, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkdataset (class in pypath.internals.resource)": [[407, "pypath.internals.resource.NetworkDataset"]], "__init__() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.__init__"]], "clear() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.clear"]], "get() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.get"]], "items() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.items"]], "keys() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.keys"]], "pop() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.pop"]], "popitem() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.popitem"]], "setdefault() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.setdefault"]], "update() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.update"]], "values() (pypath.internals.resource.networkdataset method)": [[407, "pypath.internals.resource.NetworkDataset.values"]], "networkresource (class in pypath.internals.resource)": [[408, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[408, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[409, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[409, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[409, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[409, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[409, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[409, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[409, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[409, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[409, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[409, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[409, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[410, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[410, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[411, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[412, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[413, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[414, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[415, "pypath.log"]], "pypath.resources": [[416, "module-pypath.resources"]], "pypath.resources.controller": [[417, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[418, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.__init__"]], "add_resource_attrs() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.add_resource_attrs"]], "collect_interaction() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.collect_interaction"]], "collect_network() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.collect_network"]], "license_filter() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.license_filter"]], "secondary_resources() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.secondary_resources"]], "update() (pypath.resources.controller.resourcecontroller method)": [[418, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[419, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[420, "module-pypath.resources.data_formats"]], "activity_flow (in module pypath.resources.data_formats)": [[421, "pypath.resources.data_formats.activity_flow"]], "enzyme_substrate (in module pypath.resources.data_formats)": [[422, "pypath.resources.data_formats.enzyme_substrate"]], "interaction (in module pypath.resources.data_formats)": [[423, "pypath.resources.data_formats.interaction"]], "interaction_htp (in module pypath.resources.data_formats)": [[424, "pypath.resources.data_formats.interaction_htp"]], "pathway_bad (in module pypath.resources.data_formats)": [[425, "pypath.resources.data_formats.pathway_bad"]], "reaction_pc (in module pypath.resources.data_formats)": [[426, "pypath.resources.data_formats.reaction_pc"]], "transcription_deprecated (in module pypath.resources.data_formats)": [[427, "pypath.resources.data_formats.transcription_deprecated"]], "transcription_onebyone (in module pypath.resources.data_formats)": [[428, "pypath.resources.data_formats.transcription_onebyone"]], "get_controller() (in module pypath.resources)": [[429, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[430, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[431, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[431, "pypath.resources.licenses.Licenses.__init__"]], "pypath.resources.network": [[432, "module-pypath.resources.network"]], "pypath.resources.urls": [[433, "module-pypath.resources.urls"]], "pypath.share": [[434, "module-pypath.share"]], "pypath.share.cache": [[435, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[436, "pypath.share.cache.cache_item"]], "cache_path() (in module pypath.share.cache)": [[437, "pypath.share.cache.cache_path"]], "get_cachedir() (in module pypath.share.cache)": [[438, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[439, "module-pypath.share.common"]], "pypath.share.constants": [[440, "module-pypath.share.constants"]], "pypath.share.curl": [[441, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[442, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.__init__"]], "cache_path() (pypath.share.curl.curl class method)": [[442, "pypath.share.curl.Curl.cache_path"]], "close() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[442, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[442, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[443, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[443, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[443, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[443, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[443, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[444, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[444, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[445, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[445, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[446, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[446, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[447, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[447, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[448, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[448, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[449, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[449, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[450, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[450, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[451, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[451, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[452, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[452, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[453, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[453, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[454, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[454, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[455, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[456, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[456, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[457, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[457, "pypath.share.curl.preserve_on"]], "pypath.share.progress": [[458, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[459, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[459, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[460, "module-pypath.share.session"]], "pypath.share.settings": [[461, "module-pypath.share.settings"]], "pypath.visual": [[462, "module-pypath.visual"]], "pypath.visual.drawing": [[463, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[464, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[464, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[464, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[465, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[465, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[466, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[467, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[467, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[468, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[469, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[469, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[470, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[471, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[472, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[479, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[480, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[480, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[481, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[481, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[481, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[482, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[482, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[483, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[483, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[483, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[484, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[484, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[484, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})