Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.abs", "api/pypath.inputs.abs.abs_interactions", "api/pypath.inputs.acsn", "api/pypath.inputs.acsn.acsn_interactions", "api/pypath.inputs.acsn.acsn_interactions_sif", "api/pypath.inputs.adrecs", "api/pypath.inputs.adrecs.AdrecsAdr", "api/pypath.inputs.adrecs.AdrecsChildParent", "api/pypath.inputs.adrecs.AdrecsDrug", "api/pypath.inputs.adrecs.AdrecsDrugAdr", "api/pypath.inputs.adrecs.AdrecsTerm", "api/pypath.inputs.adrecs.adrecs_adr_ontology", "api/pypath.inputs.adrecs.adrecs_drug_adr", "api/pypath.inputs.adrecs.adrecs_drug_identifiers", "api/pypath.inputs.adrecs.adrecs_hierarchy", "api/pypath.inputs.biogrid", "api/pypath.inputs.biogrid.biogrid_all_interactions", "api/pypath.inputs.biogrid.biogrid_interactions", "api/pypath.inputs.biomart", "api/pypath.inputs.biomart.biomart_homology", "api/pypath.inputs.biomart.biomart_microarray", "api/pypath.inputs.biomart.biomart_microarray_types", "api/pypath.inputs.biomart.biomart_microarrays", "api/pypath.inputs.biomart.biomart_query", "api/pypath.inputs.biomodels", "api/pypath.inputs.biomodels.download_single_model", "api/pypath.inputs.biomodels.get_all_models", "api/pypath.inputs.biomodels.get_biomodels", "api/pypath.inputs.biomodels.get_biomodels_req", "api/pypath.inputs.biomodels.get_single_model", "api/pypath.inputs.ca1", "api/pypath.inputs.ca1.ca1_interactions", "api/pypath.inputs.cancercellmap", "api/pypath.inputs.cancercellmap.ccmap_interactions", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.chembl", "api/pypath.inputs.chembl.chembl_activities", "api/pypath.inputs.chembl.chembl_assays", "api/pypath.inputs.chembl.chembl_documents", "api/pypath.inputs.chembl.chembl_drug_indications", "api/pypath.inputs.chembl.chembl_mechanisms", "api/pypath.inputs.chembl.chembl_molecules", "api/pypath.inputs.chembl.chembl_targets", "api/pypath.inputs.clinvar", "api/pypath.inputs.clinvar.clinvar_citations", "api/pypath.inputs.clinvar.clinvar_raw", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.compath", "api/pypath.inputs.compath.compath_mappings", "api/pypath.inputs.cpdb", "api/pypath.inputs.cpdb.cpdb_interactions", "api/pypath.inputs.cpdb.cpdb_interactions_ltp", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ctdbase", "api/pypath.inputs.ctdbase.ctdbase_relations", "api/pypath.inputs.ctdbase.ctdbase_vocabulary", "api/pypath.inputs.ddinter", "api/pypath.inputs.ddinter.ddinter_drug_interactions", "api/pypath.inputs.ddinter.ddinter_identifiers", "api/pypath.inputs.ddinter.ddinter_interactions", "api/pypath.inputs.ddinter.ddinter_mappings", "api/pypath.inputs.ddinter.ddinter_n_drugs", "api/pypath.inputs.deathdomain", "api/pypath.inputs.deathdomain.deathdomain_interactions", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued", "api/pypath.inputs.dip", "api/pypath.inputs.dip.dip_interactions", "api/pypath.inputs.dip.dip_login", "api/pypath.inputs.diseases", "api/pypath.inputs.diseases.diseases_general", "api/pypath.inputs.diseases.experiments_filtered", "api/pypath.inputs.diseases.experiments_full", "api/pypath.inputs.diseases.knowledge_filtered", "api/pypath.inputs.diseases.knowledge_full", "api/pypath.inputs.diseases.textmining_filtered", "api/pypath.inputs.diseases.textmining_full", "api/pypath.inputs.drugbank", "api/pypath.inputs.drugbank.DrugbankFull", "api/pypath.inputs.drugbank.drugbank_annotations", "api/pypath.inputs.drugbank.drugbank_drugs", "api/pypath.inputs.drugbank.drugbank_interactions", "api/pypath.inputs.drugbank.drugbank_mapping", "api/pypath.inputs.drugbank.drugbank_raw_interactions", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.elm", "api/pypath.inputs.elm.elm_classes", "api/pypath.inputs.elm.elm_domains", "api/pypath.inputs.elm.elm_instances", "api/pypath.inputs.elm.elm_interactions", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.encode", "api/pypath.inputs.encode.encode_tf_mirna_interactions", "api/pypath.inputs.ensembl", "api/pypath.inputs.ensembl.ensembl_organisms", "api/pypath.inputs.eutils", "api/pypath.inputs.eutils.esummary", "api/pypath.inputs.expasy", "api/pypath.inputs.expasy.expasy_enzyme_classes", "api/pypath.inputs.expasy.expasy_enzymes", "api/pypath.inputs.genecards", "api/pypath.inputs.genecards.genecards_datasheet", "api/pypath.inputs.genecards.genecards_soup", "api/pypath.inputs.genecards.genecards_summaries", "api/pypath.inputs.get_method", "api/pypath.inputs.graphviz", "api/pypath.inputs.graphviz.graphviz_attrs", "api/pypath.inputs.hprd", "api/pypath.inputs.hprd.get_hprd", "api/pypath.inputs.hprd.hprd_enzyme_substrate", "api/pypath.inputs.hprd.hprd_interactions", "api/pypath.inputs.hprd.hprd_interactions_htp", "api/pypath.inputs.htri", "api/pypath.inputs.htri.htri_interactions", "api/pypath.inputs.humsavar", "api/pypath.inputs.humsavar.uniprot_variants", "api/pypath.inputs.ielm", "api/pypath.inputs.ielm.get_ielm", "api/pypath.inputs.ielm.get_ielm_huge", "api/pypath.inputs.imweb", "api/pypath.inputs.imweb.get_imweb", "api/pypath.inputs.imweb.get_imweb_req", "api/pypath.inputs.innatedb", "api/pypath.inputs.innatedb.innatedb_interactions", "api/pypath.inputs.instruct", "api/pypath.inputs.instruct.get_instruct", "api/pypath.inputs.instruct.get_instruct_offsets", "api/pypath.inputs.intact", "api/pypath.inputs.intact.intact_interactions", "api/pypath.inputs.interpro", "api/pypath.inputs.interpro.interpro2go_annotations", "api/pypath.inputs.interpro.interpro_annotations", "api/pypath.inputs.interpro.interpro_entries", "api/pypath.inputs.interpro.interpro_xrefs", "api/pypath.inputs.ipi", "api/pypath.inputs.ipi.ipi_uniprot", "api/pypath.inputs.kegg_api", "api/pypath.inputs.kegg_api.disease_to_drug", "api/pypath.inputs.kegg_api.disease_to_gene", "api/pypath.inputs.kegg_api.disease_to_pathway", "api/pypath.inputs.kegg_api.drug_to_disease", "api/pypath.inputs.kegg_api.drug_to_drug", "api/pypath.inputs.kegg_api.drug_to_gene", "api/pypath.inputs.kegg_api.drug_to_pathway", "api/pypath.inputs.kegg_api.gene_to_disease", "api/pypath.inputs.kegg_api.gene_to_drug", "api/pypath.inputs.kegg_api.gene_to_pathway", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot", "api/pypath.inputs.kegg_api.pathway_to_disease", "api/pypath.inputs.kegg_api.pathway_to_drug", "api/pypath.inputs.kegg_api.pathway_to_gene", "api/pypath.inputs.kirouac2010", "api/pypath.inputs.kirouac2010.kirouac2010_interactions", "api/pypath.inputs.laudanna", "api/pypath.inputs.laudanna.laudanna_directions", "api/pypath.inputs.laudanna.laudanna_effects", "api/pypath.inputs.lincs", "api/pypath.inputs.lincs.lincs_compounds", "api/pypath.inputs.macrophage", "api/pypath.inputs.macrophage.macrophage_interactions", "api/pypath.inputs.main", "api/pypath.inputs.mimp", "api/pypath.inputs.mimp.get_kinase_class", "api/pypath.inputs.mimp.mimp_enzyme_substrate", "api/pypath.inputs.mimp.mimp_interactions", "api/pypath.inputs.mir2disease", "api/pypath.inputs.mir2disease.mir2disease_interactions", "api/pypath.inputs.mirdeathdb", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.mppi", "api/pypath.inputs.mppi.mppi_interactions", "api/pypath.inputs.ncrdeathdb", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "api/pypath.inputs.negatome", "api/pypath.inputs.negatome.negatome_interactions", "api/pypath.inputs.netbiol", "api/pypath.inputs.netbiol.arn_interactions", "api/pypath.inputs.netbiol.nrf2ome_interactions", "api/pypath.inputs.offsides", "api/pypath.inputs.offsides.offsides_side_effects", "api/pypath.inputs.ontology", "api/pypath.inputs.ontology.listof_ontologies", "api/pypath.inputs.ontology.ontology", "api/pypath.inputs.opentargets", "api/pypath.inputs.opentargets.opentargets_adverse_reactions", "api/pypath.inputs.opentargets.opentargets_baseline_expression", "api/pypath.inputs.opentargets.opentargets_direct_score", "api/pypath.inputs.opentargets.opentargets_general", "api/pypath.inputs.opentargets.opentargets_indirect_score", "api/pypath.inputs.pathophenodb", "api/pypath.inputs.pathophenodb.DiseasePathogen", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions", "api/pypath.inputs.pathwaycommons", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "api/pypath.inputs.pazar", "api/pypath.inputs.pazar.pazar_interactions", "api/pypath.inputs.pepcyber", "api/pypath.inputs.pepcyber.pepcyber_details", "api/pypath.inputs.pepcyber.pepcyber_interactions", "api/pypath.inputs.pharos", "api/pypath.inputs.pharos.pharos_diseases", "api/pypath.inputs.pharos.pharos_expression", "api/pypath.inputs.pharos.pharos_general", "api/pypath.inputs.pharos.pharos_gtex", "api/pypath.inputs.pharos.pharos_ligands", "api/pypath.inputs.pharos.pharos_orthologs", "api/pypath.inputs.pharos.pharos_targets", "api/pypath.inputs.pharos.pharos_xrefs", "api/pypath.inputs.phobius", "api/pypath.inputs.phobius.phobius_annotations", "api/pypath.inputs.phosphonetworks", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions", "api/pypath.inputs.phosphopoint", "api/pypath.inputs.phosphopoint.phosphopoint_directions", "api/pypath.inputs.phosphopoint.phosphopoint_interactions", "api/pypath.inputs.pro", "api/pypath.inputs.pro.get_pro", "api/pypath.inputs.pro.pro_mapping", "api/pypath.inputs.protmapper", "api/pypath.inputs.protmapper.get_protmapper", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate", "api/pypath.inputs.protmapper.protmapper_interactions", "api/pypath.inputs.pubchem", "api/pypath.inputs.pubchem.pubchem_mapping", "api/pypath.inputs.pubmed", "api/pypath.inputs.pubmed.get_pmid", "api/pypath.inputs.pubmed.get_pubmeds", "api/pypath.inputs.pubmed.only_pmids", "api/pypath.inputs.pubmed.open_pubmed", "api/pypath.inputs.pubmed.pmids_dict", "api/pypath.inputs.pubmed.pmids_list", "api/pypath.inputs.ramp", "api/pypath.inputs.rdata", "api/pypath.inputs.reaction", "api/pypath.inputs.reaction.acsn_biopax", "api/pypath.inputs.reaction.acsn_interactions_2", "api/pypath.inputs.reaction.get_acsn_effects", "api/pypath.inputs.reaction.get_controls", "api/pypath.inputs.reaction.get_interactions", "api/pypath.inputs.reaction.get_reactions", "api/pypath.inputs.reaction.get_soup", "api/pypath.inputs.reaction.panther_biopax", "api/pypath.inputs.reaction.panther_interactions", "api/pypath.inputs.reaction.pid_biopax", "api/pypath.inputs.reaction.pid_interactions", "api/pypath.inputs.reaction.process_complex", "api/pypath.inputs.reaction.process_controls", "api/pypath.inputs.reaction.process_reactions", "api/pypath.inputs.reaction.reactions_biopax", "api/pypath.inputs.reaction.reactome_biopax", "api/pypath.inputs.reaction.reactome_bs", "api/pypath.inputs.reaction.reactome_interactions", "api/pypath.inputs.reaction.reactome_sbml", "api/pypath.inputs.reactome", "api/pypath.inputs.reactome.reactome_chebis", "api/pypath.inputs.reactome.reactome_pathway_relations", "api/pypath.inputs.reactome.reactome_pathways", "api/pypath.inputs.reactome.reactome_uniprots", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.inputs.sider", "api/pypath.inputs.sider.SiderDrug", "api/pypath.inputs.sider.SiderSideeffect", "api/pypath.inputs.sider.SiderSideeffectMeddra", "api/pypath.inputs.sider.SiderSideeffetFrequency", "api/pypath.inputs.sider.sider_drug_names", "api/pypath.inputs.sider.sider_meddra_side_effects", "api/pypath.inputs.sider.sider_side_effect_frequencies", "api/pypath.inputs.sider.sider_side_effects", "api/pypath.inputs.stitch", "api/pypath.inputs.stitch.stitch_actions_interactions", "api/pypath.inputs.stitch.stitch_links_interactions", "api/pypath.inputs.string", "api/pypath.inputs.string.string_effects", "api/pypath.inputs.string.string_links_interactions", "api/pypath.inputs.string.string_physical_interactions", "api/pypath.inputs.string.string_species", "api/pypath.inputs.swisslipids", "api/pypath.inputs.switches_elm", "api/pypath.inputs.switches_elm.get_switches_elm", "api/pypath.inputs.transmir", "api/pypath.inputs.transmir.transmir_interactions", "api/pypath.inputs.trip", "api/pypath.inputs.trip.take_a_trip", "api/pypath.inputs.trip.trip_find_uniprot", "api/pypath.inputs.trip.trip_get_uniprot", "api/pypath.inputs.trip.trip_interactions", "api/pypath.inputs.trip.trip_process", "api/pypath.inputs.trip.trip_process_table", "api/pypath.inputs.twosides", "api/pypath.inputs.twosides.twosides_interactions", "api/pypath.inputs.unichem", "api/pypath.inputs.unichem.info", "api/pypath.inputs.unichem.unichem_info", "api/pypath.inputs.unichem.unichem_mapping", "api/pypath.inputs.unichem.unichem_sources", "api/pypath.inputs.uniprot", "api/pypath.inputs.uniprot.Taxon", "api/pypath.inputs.uniprot.UniprotQuery", "api/pypath.inputs.uniprot.UniprotRecordHistory", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol", "api/pypath.inputs.uniprot.get_uniprot_sec", "api/pypath.inputs.uniprot.protein_datasheet", "api/pypath.inputs.uniprot.query_builder", "api/pypath.inputs.uniprot.swissprot_deleted", "api/pypath.inputs.uniprot.trembl_deleted", "api/pypath.inputs.uniprot.uniprot_data", "api/pypath.inputs.uniprot.uniprot_deleted", "api/pypath.inputs.uniprot.uniprot_families", "api/pypath.inputs.uniprot.uniprot_history", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet", "api/pypath.inputs.uniprot.uniprot_keywords", "api/pypath.inputs.uniprot.uniprot_locations", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "api/pypath.inputs.uniprot.uniprot_preprocess", "api/pypath.inputs.uniprot.uniprot_query", "api/pypath.inputs.uniprot.uniprot_recent_version", "api/pypath.inputs.uniprot.uniprot_taxonomy", "api/pypath.inputs.uniprot.uniprot_tissues", "api/pypath.inputs.uniprot.uniprot_topology", "api/pypath.inputs.uniprot.valid_uniprot", "api/pypath.inputs.uniprot_db", "api/pypath.inputs.uniprot_db.all_swissprots", "api/pypath.inputs.uniprot_db.all_trembls", "api/pypath.inputs.uniprot_db.all_uniprots", "api/pypath.inputs.uniprot_db.get_db", "api/pypath.inputs.uniprot_db.init_db", "api/pypath.inputs.uniprot_db.is_swissprot", "api/pypath.inputs.uniprot_db.is_trembl", "api/pypath.inputs.uniprot_db.is_uniprot", "api/pypath.inputs.uniprot_idmapping", "api/pypath.inputs.uniprot_idmapping.idtypes", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.HmdbMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.RampMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.refs", "api/pypath.internals.refs.Reference", "api/pypath.internals.refs.get_pubmed_data", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkDataset", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.data_formats", "api/pypath.resources.data_formats.activity_flow", "api/pypath.resources.data_formats.enzyme_substrate", "api/pypath.resources.data_formats.interaction", "api/pypath.resources.data_formats.interaction_htp", "api/pypath.resources.data_formats.pathway_bad", "api/pypath.resources.data_formats.reaction_pc", "api/pypath.resources.data_formats.transcription_deprecated", "api/pypath.resources.data_formats.transcription_onebyone", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.resources.network", "api/pypath.resources.urls", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.cache_path", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.settings", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.abs.rst", "api/pypath.inputs.abs.abs_interactions.rst", "api/pypath.inputs.acsn.rst", "api/pypath.inputs.acsn.acsn_interactions.rst", "api/pypath.inputs.acsn.acsn_interactions_sif.rst", "api/pypath.inputs.adrecs.rst", "api/pypath.inputs.adrecs.AdrecsAdr.rst", "api/pypath.inputs.adrecs.AdrecsChildParent.rst", "api/pypath.inputs.adrecs.AdrecsDrug.rst", "api/pypath.inputs.adrecs.AdrecsDrugAdr.rst", "api/pypath.inputs.adrecs.AdrecsTerm.rst", "api/pypath.inputs.adrecs.adrecs_adr_ontology.rst", "api/pypath.inputs.adrecs.adrecs_drug_adr.rst", "api/pypath.inputs.adrecs.adrecs_drug_identifiers.rst", "api/pypath.inputs.adrecs.adrecs_hierarchy.rst", "api/pypath.inputs.biogrid.rst", "api/pypath.inputs.biogrid.biogrid_all_interactions.rst", "api/pypath.inputs.biogrid.biogrid_interactions.rst", "api/pypath.inputs.biomart.rst", "api/pypath.inputs.biomart.biomart_homology.rst", "api/pypath.inputs.biomart.biomart_microarray.rst", "api/pypath.inputs.biomart.biomart_microarray_types.rst", "api/pypath.inputs.biomart.biomart_microarrays.rst", "api/pypath.inputs.biomart.biomart_query.rst", "api/pypath.inputs.biomodels.rst", "api/pypath.inputs.biomodels.download_single_model.rst", "api/pypath.inputs.biomodels.get_all_models.rst", "api/pypath.inputs.biomodels.get_biomodels.rst", "api/pypath.inputs.biomodels.get_biomodels_req.rst", "api/pypath.inputs.biomodels.get_single_model.rst", "api/pypath.inputs.ca1.rst", "api/pypath.inputs.ca1.ca1_interactions.rst", "api/pypath.inputs.cancercellmap.rst", "api/pypath.inputs.cancercellmap.ccmap_interactions.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.chembl.rst", "api/pypath.inputs.chembl.chembl_activities.rst", "api/pypath.inputs.chembl.chembl_assays.rst", "api/pypath.inputs.chembl.chembl_documents.rst", "api/pypath.inputs.chembl.chembl_drug_indications.rst", "api/pypath.inputs.chembl.chembl_mechanisms.rst", "api/pypath.inputs.chembl.chembl_molecules.rst", "api/pypath.inputs.chembl.chembl_targets.rst", "api/pypath.inputs.clinvar.rst", "api/pypath.inputs.clinvar.clinvar_citations.rst", "api/pypath.inputs.clinvar.clinvar_raw.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.compath.rst", "api/pypath.inputs.compath.compath_mappings.rst", "api/pypath.inputs.cpdb.rst", "api/pypath.inputs.cpdb.cpdb_interactions.rst", "api/pypath.inputs.cpdb.cpdb_interactions_ltp.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ctdbase.rst", "api/pypath.inputs.ctdbase.ctdbase_relations.rst", "api/pypath.inputs.ctdbase.ctdbase_vocabulary.rst", "api/pypath.inputs.ddinter.rst", "api/pypath.inputs.ddinter.ddinter_drug_interactions.rst", "api/pypath.inputs.ddinter.ddinter_identifiers.rst", "api/pypath.inputs.ddinter.ddinter_interactions.rst", "api/pypath.inputs.ddinter.ddinter_mappings.rst", "api/pypath.inputs.ddinter.ddinter_n_drugs.rst", "api/pypath.inputs.deathdomain.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued.rst", "api/pypath.inputs.dip.rst", "api/pypath.inputs.dip.dip_interactions.rst", "api/pypath.inputs.dip.dip_login.rst", "api/pypath.inputs.diseases.rst", "api/pypath.inputs.diseases.diseases_general.rst", "api/pypath.inputs.diseases.experiments_filtered.rst", "api/pypath.inputs.diseases.experiments_full.rst", "api/pypath.inputs.diseases.knowledge_filtered.rst", "api/pypath.inputs.diseases.knowledge_full.rst", "api/pypath.inputs.diseases.textmining_filtered.rst", "api/pypath.inputs.diseases.textmining_full.rst", "api/pypath.inputs.drugbank.rst", "api/pypath.inputs.drugbank.DrugbankFull.rst", "api/pypath.inputs.drugbank.drugbank_annotations.rst", "api/pypath.inputs.drugbank.drugbank_drugs.rst", "api/pypath.inputs.drugbank.drugbank_interactions.rst", "api/pypath.inputs.drugbank.drugbank_mapping.rst", "api/pypath.inputs.drugbank.drugbank_raw_interactions.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.elm.rst", "api/pypath.inputs.elm.elm_classes.rst", "api/pypath.inputs.elm.elm_domains.rst", "api/pypath.inputs.elm.elm_instances.rst", "api/pypath.inputs.elm.elm_interactions.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.encode.rst", "api/pypath.inputs.encode.encode_tf_mirna_interactions.rst", "api/pypath.inputs.ensembl.rst", "api/pypath.inputs.ensembl.ensembl_organisms.rst", "api/pypath.inputs.eutils.rst", "api/pypath.inputs.eutils.esummary.rst", "api/pypath.inputs.expasy.rst", "api/pypath.inputs.expasy.expasy_enzyme_classes.rst", "api/pypath.inputs.expasy.expasy_enzymes.rst", "api/pypath.inputs.genecards.rst", "api/pypath.inputs.genecards.genecards_datasheet.rst", "api/pypath.inputs.genecards.genecards_soup.rst", "api/pypath.inputs.genecards.genecards_summaries.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.graphviz.rst", "api/pypath.inputs.graphviz.graphviz_attrs.rst", "api/pypath.inputs.hprd.rst", "api/pypath.inputs.hprd.get_hprd.rst", "api/pypath.inputs.hprd.hprd_enzyme_substrate.rst", "api/pypath.inputs.hprd.hprd_interactions.rst", "api/pypath.inputs.hprd.hprd_interactions_htp.rst", "api/pypath.inputs.htri.rst", "api/pypath.inputs.htri.htri_interactions.rst", "api/pypath.inputs.humsavar.rst", "api/pypath.inputs.humsavar.uniprot_variants.rst", "api/pypath.inputs.ielm.rst", "api/pypath.inputs.ielm.get_ielm.rst", "api/pypath.inputs.ielm.get_ielm_huge.rst", "api/pypath.inputs.imweb.rst", "api/pypath.inputs.imweb.get_imweb.rst", "api/pypath.inputs.imweb.get_imweb_req.rst", "api/pypath.inputs.innatedb.rst", "api/pypath.inputs.innatedb.innatedb_interactions.rst", "api/pypath.inputs.instruct.rst", "api/pypath.inputs.instruct.get_instruct.rst", "api/pypath.inputs.instruct.get_instruct_offsets.rst", "api/pypath.inputs.intact.rst", "api/pypath.inputs.intact.intact_interactions.rst", "api/pypath.inputs.interpro.rst", "api/pypath.inputs.interpro.interpro2go_annotations.rst", "api/pypath.inputs.interpro.interpro_annotations.rst", "api/pypath.inputs.interpro.interpro_entries.rst", "api/pypath.inputs.interpro.interpro_xrefs.rst", "api/pypath.inputs.ipi.rst", "api/pypath.inputs.ipi.ipi_uniprot.rst", "api/pypath.inputs.kegg_api.rst", "api/pypath.inputs.kegg_api.disease_to_drug.rst", "api/pypath.inputs.kegg_api.disease_to_gene.rst", "api/pypath.inputs.kegg_api.disease_to_pathway.rst", "api/pypath.inputs.kegg_api.drug_to_disease.rst", "api/pypath.inputs.kegg_api.drug_to_drug.rst", "api/pypath.inputs.kegg_api.drug_to_gene.rst", "api/pypath.inputs.kegg_api.drug_to_pathway.rst", "api/pypath.inputs.kegg_api.gene_to_disease.rst", "api/pypath.inputs.kegg_api.gene_to_drug.rst", "api/pypath.inputs.kegg_api.gene_to_pathway.rst", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot.rst", "api/pypath.inputs.kegg_api.pathway_to_disease.rst", "api/pypath.inputs.kegg_api.pathway_to_drug.rst", "api/pypath.inputs.kegg_api.pathway_to_gene.rst", "api/pypath.inputs.kirouac2010.rst", "api/pypath.inputs.kirouac2010.kirouac2010_interactions.rst", "api/pypath.inputs.laudanna.rst", "api/pypath.inputs.laudanna.laudanna_directions.rst", "api/pypath.inputs.laudanna.laudanna_effects.rst", "api/pypath.inputs.lincs.rst", "api/pypath.inputs.lincs.lincs_compounds.rst", "api/pypath.inputs.macrophage.rst", "api/pypath.inputs.macrophage.macrophage_interactions.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mimp.rst", "api/pypath.inputs.mimp.get_kinase_class.rst", "api/pypath.inputs.mimp.mimp_enzyme_substrate.rst", "api/pypath.inputs.mimp.mimp_interactions.rst", "api/pypath.inputs.mir2disease.rst", "api/pypath.inputs.mir2disease.mir2disease_interactions.rst", "api/pypath.inputs.mirdeathdb.rst", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.mppi.rst", "api/pypath.inputs.mppi.mppi_interactions.rst", "api/pypath.inputs.ncrdeathdb.rst", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions.rst", "api/pypath.inputs.negatome.rst", "api/pypath.inputs.negatome.negatome_interactions.rst", "api/pypath.inputs.netbiol.rst", "api/pypath.inputs.netbiol.arn_interactions.rst", "api/pypath.inputs.netbiol.nrf2ome_interactions.rst", "api/pypath.inputs.offsides.rst", "api/pypath.inputs.offsides.offsides_side_effects.rst", "api/pypath.inputs.ontology.rst", "api/pypath.inputs.ontology.listof_ontologies.rst", "api/pypath.inputs.ontology.ontology.rst", "api/pypath.inputs.opentargets.rst", "api/pypath.inputs.opentargets.opentargets_adverse_reactions.rst", "api/pypath.inputs.opentargets.opentargets_baseline_expression.rst", "api/pypath.inputs.opentargets.opentargets_direct_score.rst", "api/pypath.inputs.opentargets.opentargets_general.rst", "api/pypath.inputs.opentargets.opentargets_indirect_score.rst", "api/pypath.inputs.pathophenodb.rst", "api/pypath.inputs.pathophenodb.DiseasePathogen.rst", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions.rst", "api/pypath.inputs.pathwaycommons.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions.rst", "api/pypath.inputs.pazar.rst", "api/pypath.inputs.pazar.pazar_interactions.rst", "api/pypath.inputs.pepcyber.rst", "api/pypath.inputs.pepcyber.pepcyber_details.rst", "api/pypath.inputs.pepcyber.pepcyber_interactions.rst", "api/pypath.inputs.pharos.rst", "api/pypath.inputs.pharos.pharos_diseases.rst", "api/pypath.inputs.pharos.pharos_expression.rst", "api/pypath.inputs.pharos.pharos_general.rst", "api/pypath.inputs.pharos.pharos_gtex.rst", "api/pypath.inputs.pharos.pharos_ligands.rst", "api/pypath.inputs.pharos.pharos_orthologs.rst", "api/pypath.inputs.pharos.pharos_targets.rst", "api/pypath.inputs.pharos.pharos_xrefs.rst", "api/pypath.inputs.phobius.rst", "api/pypath.inputs.phobius.phobius_annotations.rst", "api/pypath.inputs.phosphonetworks.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions.rst", "api/pypath.inputs.phosphopoint.rst", "api/pypath.inputs.phosphopoint.phosphopoint_directions.rst", "api/pypath.inputs.phosphopoint.phosphopoint_interactions.rst", "api/pypath.inputs.pro.rst", "api/pypath.inputs.pro.get_pro.rst", "api/pypath.inputs.pro.pro_mapping.rst", "api/pypath.inputs.protmapper.rst", "api/pypath.inputs.protmapper.get_protmapper.rst", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate.rst", "api/pypath.inputs.protmapper.protmapper_interactions.rst", "api/pypath.inputs.pubchem.rst", "api/pypath.inputs.pubchem.pubchem_mapping.rst", "api/pypath.inputs.pubmed.rst", "api/pypath.inputs.pubmed.get_pmid.rst", "api/pypath.inputs.pubmed.get_pubmeds.rst", "api/pypath.inputs.pubmed.only_pmids.rst", "api/pypath.inputs.pubmed.open_pubmed.rst", "api/pypath.inputs.pubmed.pmids_dict.rst", "api/pypath.inputs.pubmed.pmids_list.rst", "api/pypath.inputs.ramp.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.reaction.rst", "api/pypath.inputs.reaction.acsn_biopax.rst", "api/pypath.inputs.reaction.acsn_interactions_2.rst", "api/pypath.inputs.reaction.get_acsn_effects.rst", "api/pypath.inputs.reaction.get_controls.rst", "api/pypath.inputs.reaction.get_interactions.rst", "api/pypath.inputs.reaction.get_reactions.rst", "api/pypath.inputs.reaction.get_soup.rst", "api/pypath.inputs.reaction.panther_biopax.rst", "api/pypath.inputs.reaction.panther_interactions.rst", "api/pypath.inputs.reaction.pid_biopax.rst", "api/pypath.inputs.reaction.pid_interactions.rst", "api/pypath.inputs.reaction.process_complex.rst", "api/pypath.inputs.reaction.process_controls.rst", "api/pypath.inputs.reaction.process_reactions.rst", "api/pypath.inputs.reaction.reactions_biopax.rst", "api/pypath.inputs.reaction.reactome_biopax.rst", "api/pypath.inputs.reaction.reactome_bs.rst", "api/pypath.inputs.reaction.reactome_interactions.rst", "api/pypath.inputs.reaction.reactome_sbml.rst", "api/pypath.inputs.reactome.rst", "api/pypath.inputs.reactome.reactome_chebis.rst", "api/pypath.inputs.reactome.reactome_pathway_relations.rst", "api/pypath.inputs.reactome.reactome_pathways.rst", "api/pypath.inputs.reactome.reactome_uniprots.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.inputs.sider.rst", "api/pypath.inputs.sider.SiderDrug.rst", "api/pypath.inputs.sider.SiderSideeffect.rst", "api/pypath.inputs.sider.SiderSideeffectMeddra.rst", "api/pypath.inputs.sider.SiderSideeffetFrequency.rst", "api/pypath.inputs.sider.sider_drug_names.rst", "api/pypath.inputs.sider.sider_meddra_side_effects.rst", "api/pypath.inputs.sider.sider_side_effect_frequencies.rst", "api/pypath.inputs.sider.sider_side_effects.rst", "api/pypath.inputs.stitch.rst", "api/pypath.inputs.stitch.stitch_actions_interactions.rst", "api/pypath.inputs.stitch.stitch_links_interactions.rst", "api/pypath.inputs.string.rst", "api/pypath.inputs.string.string_effects.rst", "api/pypath.inputs.string.string_links_interactions.rst", "api/pypath.inputs.string.string_physical_interactions.rst", "api/pypath.inputs.string.string_species.rst", "api/pypath.inputs.swisslipids.rst", "api/pypath.inputs.switches_elm.rst", "api/pypath.inputs.switches_elm.get_switches_elm.rst", "api/pypath.inputs.transmir.rst", "api/pypath.inputs.transmir.transmir_interactions.rst", "api/pypath.inputs.trip.rst", "api/pypath.inputs.trip.take_a_trip.rst", "api/pypath.inputs.trip.trip_find_uniprot.rst", "api/pypath.inputs.trip.trip_get_uniprot.rst", "api/pypath.inputs.trip.trip_interactions.rst", "api/pypath.inputs.trip.trip_process.rst", "api/pypath.inputs.trip.trip_process_table.rst", "api/pypath.inputs.twosides.rst", "api/pypath.inputs.twosides.twosides_interactions.rst", "api/pypath.inputs.unichem.rst", "api/pypath.inputs.unichem.info.rst", "api/pypath.inputs.unichem.unichem_info.rst", "api/pypath.inputs.unichem.unichem_mapping.rst", "api/pypath.inputs.unichem.unichem_sources.rst", "api/pypath.inputs.uniprot.rst", "api/pypath.inputs.uniprot.Taxon.rst", "api/pypath.inputs.uniprot.UniprotQuery.rst", "api/pypath.inputs.uniprot.UniprotRecordHistory.rst", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol.rst", "api/pypath.inputs.uniprot.get_uniprot_sec.rst", "api/pypath.inputs.uniprot.protein_datasheet.rst", "api/pypath.inputs.uniprot.query_builder.rst", "api/pypath.inputs.uniprot.swissprot_deleted.rst", "api/pypath.inputs.uniprot.trembl_deleted.rst", "api/pypath.inputs.uniprot.uniprot_data.rst", "api/pypath.inputs.uniprot.uniprot_deleted.rst", "api/pypath.inputs.uniprot.uniprot_families.rst", "api/pypath.inputs.uniprot.uniprot_history.rst", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet.rst", "api/pypath.inputs.uniprot.uniprot_keywords.rst", "api/pypath.inputs.uniprot.uniprot_locations.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2.rst", "api/pypath.inputs.uniprot.uniprot_preprocess.rst", "api/pypath.inputs.uniprot.uniprot_query.rst", "api/pypath.inputs.uniprot.uniprot_recent_version.rst", "api/pypath.inputs.uniprot.uniprot_taxonomy.rst", "api/pypath.inputs.uniprot.uniprot_tissues.rst", "api/pypath.inputs.uniprot.uniprot_topology.rst", "api/pypath.inputs.uniprot.valid_uniprot.rst", "api/pypath.inputs.uniprot_db.rst", "api/pypath.inputs.uniprot_db.all_swissprots.rst", "api/pypath.inputs.uniprot_db.all_trembls.rst", "api/pypath.inputs.uniprot_db.all_uniprots.rst", "api/pypath.inputs.uniprot_db.get_db.rst", "api/pypath.inputs.uniprot_db.init_db.rst", "api/pypath.inputs.uniprot_db.is_swissprot.rst", "api/pypath.inputs.uniprot_db.is_trembl.rst", "api/pypath.inputs.uniprot_db.is_uniprot.rst", "api/pypath.inputs.uniprot_idmapping.rst", "api/pypath.inputs.uniprot_idmapping.idtypes.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.HmdbMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.RampMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.refs.rst", "api/pypath.internals.refs.Reference.rst", "api/pypath.internals.refs.get_pubmed_data.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkDataset.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.data_formats.rst", "api/pypath.resources.data_formats.activity_flow.rst", "api/pypath.resources.data_formats.enzyme_substrate.rst", "api/pypath.resources.data_formats.interaction.rst", "api/pypath.resources.data_formats.interaction_htp.rst", "api/pypath.resources.data_formats.pathway_bad.rst", "api/pypath.resources.data_formats.reaction_pc.rst", "api/pypath.resources.data_formats.transcription_deprecated.rst", "api/pypath.resources.data_formats.transcription_onebyone.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.resources.network.rst", "api/pypath.resources.urls.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.cache_path.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.settings.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.abs", "pypath.inputs.abs.abs_interactions", "pypath.inputs.acsn", "pypath.inputs.acsn.acsn_interactions", "pypath.inputs.acsn.acsn_interactions_sif", "pypath.inputs.adrecs", "pypath.inputs.adrecs.AdrecsAdr", "pypath.inputs.adrecs.AdrecsChildParent", "pypath.inputs.adrecs.AdrecsDrug", "pypath.inputs.adrecs.AdrecsDrugAdr", "pypath.inputs.adrecs.AdrecsTerm", "pypath.inputs.adrecs.adrecs_adr_ontology", "pypath.inputs.adrecs.adrecs_drug_adr", "pypath.inputs.adrecs.adrecs_drug_identifiers", "pypath.inputs.adrecs.adrecs_hierarchy", "pypath.inputs.biogrid", "pypath.inputs.biogrid.biogrid_all_interactions", "pypath.inputs.biogrid.biogrid_interactions", "pypath.inputs.biomart", "pypath.inputs.biomart.biomart_homology", "pypath.inputs.biomart.biomart_microarray", "pypath.inputs.biomart.biomart_microarray_types", "pypath.inputs.biomart.biomart_microarrays", "pypath.inputs.biomart.biomart_query", "pypath.inputs.biomodels", "pypath.inputs.biomodels.download_single_model", "pypath.inputs.biomodels.get_all_models", "pypath.inputs.biomodels.get_biomodels", "pypath.inputs.biomodels.get_biomodels_req", "pypath.inputs.biomodels.get_single_model", "pypath.inputs.ca1", "pypath.inputs.ca1.ca1_interactions", "pypath.inputs.cancercellmap", "pypath.inputs.cancercellmap.ccmap_interactions", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.chembl", "pypath.inputs.chembl.chembl_activities", "pypath.inputs.chembl.chembl_assays", "pypath.inputs.chembl.chembl_documents", "pypath.inputs.chembl.chembl_drug_indications", "pypath.inputs.chembl.chembl_mechanisms", "pypath.inputs.chembl.chembl_molecules", "pypath.inputs.chembl.chembl_targets", "pypath.inputs.clinvar", "pypath.inputs.clinvar.clinvar_citations", "pypath.inputs.clinvar.clinvar_raw", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.compath", "pypath.inputs.compath.compath_mappings", "pypath.inputs.cpdb", "pypath.inputs.cpdb.cpdb_interactions", "pypath.inputs.cpdb.cpdb_interactions_ltp", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ctdbase", "pypath.inputs.ctdbase.ctdbase_relations", "pypath.inputs.ctdbase.ctdbase_vocabulary", "pypath.inputs.ddinter", "pypath.inputs.ddinter.ddinter_drug_interactions", "pypath.inputs.ddinter.ddinter_identifiers", "pypath.inputs.ddinter.ddinter_interactions", "pypath.inputs.ddinter.ddinter_mappings", "pypath.inputs.ddinter.ddinter_n_drugs", "pypath.inputs.deathdomain", "pypath.inputs.deathdomain.deathdomain_interactions", "pypath.inputs.deathdomain.deathdomain_interactions_rescued", "pypath.inputs.dip", "pypath.inputs.dip.dip_interactions", "pypath.inputs.dip.dip_login", "pypath.inputs.diseases", "pypath.inputs.diseases.diseases_general", "pypath.inputs.diseases.experiments_filtered", "pypath.inputs.diseases.experiments_full", "pypath.inputs.diseases.knowledge_filtered", "pypath.inputs.diseases.knowledge_full", "pypath.inputs.diseases.textmining_filtered", "pypath.inputs.diseases.textmining_full", "pypath.inputs.drugbank", "pypath.inputs.drugbank.DrugbankFull", "pypath.inputs.drugbank.drugbank_annotations", "pypath.inputs.drugbank.drugbank_drugs", "pypath.inputs.drugbank.drugbank_interactions", "pypath.inputs.drugbank.drugbank_mapping", "pypath.inputs.drugbank.drugbank_raw_interactions", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.elm", "pypath.inputs.elm.elm_classes", "pypath.inputs.elm.elm_domains", "pypath.inputs.elm.elm_instances", "pypath.inputs.elm.elm_interactions", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.encode", "pypath.inputs.encode.encode_tf_mirna_interactions", "pypath.inputs.ensembl", "pypath.inputs.ensembl.ensembl_organisms", "pypath.inputs.eutils", "pypath.inputs.eutils.esummary", "pypath.inputs.expasy", "pypath.inputs.expasy.expasy_enzyme_classes", "pypath.inputs.expasy.expasy_enzymes", "pypath.inputs.genecards", "pypath.inputs.genecards.genecards_datasheet", "pypath.inputs.genecards.genecards_soup", "pypath.inputs.genecards.genecards_summaries", "pypath.inputs.get_method", "pypath.inputs.graphviz", "pypath.inputs.graphviz.graphviz_attrs", "pypath.inputs.hprd", "pypath.inputs.hprd.get_hprd", "pypath.inputs.hprd.hprd_enzyme_substrate", "pypath.inputs.hprd.hprd_interactions", "pypath.inputs.hprd.hprd_interactions_htp", "pypath.inputs.htri", "pypath.inputs.htri.htri_interactions", "pypath.inputs.humsavar", "pypath.inputs.humsavar.uniprot_variants", "pypath.inputs.ielm", "pypath.inputs.ielm.get_ielm", "pypath.inputs.ielm.get_ielm_huge", "pypath.inputs.imweb", "pypath.inputs.imweb.get_imweb", "pypath.inputs.imweb.get_imweb_req", "pypath.inputs.innatedb", "pypath.inputs.innatedb.innatedb_interactions", "pypath.inputs.instruct", "pypath.inputs.instruct.get_instruct", "pypath.inputs.instruct.get_instruct_offsets", "pypath.inputs.intact", "pypath.inputs.intact.intact_interactions", "pypath.inputs.interpro", "pypath.inputs.interpro.interpro2go_annotations", "pypath.inputs.interpro.interpro_annotations", "pypath.inputs.interpro.interpro_entries", "pypath.inputs.interpro.interpro_xrefs", "pypath.inputs.ipi", "pypath.inputs.ipi.ipi_uniprot", "pypath.inputs.kegg_api", "pypath.inputs.kegg_api.disease_to_drug", "pypath.inputs.kegg_api.disease_to_gene", "pypath.inputs.kegg_api.disease_to_pathway", "pypath.inputs.kegg_api.drug_to_disease", "pypath.inputs.kegg_api.drug_to_drug", "pypath.inputs.kegg_api.drug_to_gene", "pypath.inputs.kegg_api.drug_to_pathway", "pypath.inputs.kegg_api.gene_to_disease", "pypath.inputs.kegg_api.gene_to_drug", "pypath.inputs.kegg_api.gene_to_pathway", "pypath.inputs.kegg_api.kegg_drug_to_chebi", "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "pypath.inputs.kegg_api.kegg_gene_to_uniprot", "pypath.inputs.kegg_api.pathway_to_disease", "pypath.inputs.kegg_api.pathway_to_drug", "pypath.inputs.kegg_api.pathway_to_gene", "pypath.inputs.kirouac2010", "pypath.inputs.kirouac2010.kirouac2010_interactions", "pypath.inputs.laudanna", "pypath.inputs.laudanna.laudanna_directions", "pypath.inputs.laudanna.laudanna_effects", "pypath.inputs.lincs", "pypath.inputs.lincs.lincs_compounds", "pypath.inputs.macrophage", "pypath.inputs.macrophage.macrophage_interactions", "pypath.inputs.main", "pypath.inputs.mimp", "pypath.inputs.mimp.get_kinase_class", "pypath.inputs.mimp.mimp_enzyme_substrate", "pypath.inputs.mimp.mimp_interactions", "pypath.inputs.mir2disease", "pypath.inputs.mir2disease.mir2disease_interactions", "pypath.inputs.mirdeathdb", "pypath.inputs.mirdeathdb.mirdeathdb_interactions", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.mppi", "pypath.inputs.mppi.mppi_interactions", "pypath.inputs.ncrdeathdb", "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "pypath.inputs.negatome", "pypath.inputs.negatome.negatome_interactions", "pypath.inputs.netbiol", "pypath.inputs.netbiol.arn_interactions", "pypath.inputs.netbiol.nrf2ome_interactions", "pypath.inputs.offsides", "pypath.inputs.offsides.offsides_side_effects", "pypath.inputs.ontology", "pypath.inputs.ontology.listof_ontologies", "pypath.inputs.ontology.ontology", "pypath.inputs.opentargets", "pypath.inputs.opentargets.opentargets_adverse_reactions", "pypath.inputs.opentargets.opentargets_baseline_expression", "pypath.inputs.opentargets.opentargets_direct_score", "pypath.inputs.opentargets.opentargets_general", "pypath.inputs.opentargets.opentargets_indirect_score", "pypath.inputs.pathophenodb", "pypath.inputs.pathophenodb.DiseasePathogen", "pypath.inputs.pathophenodb.disease_pathogen_interactions", "pypath.inputs.pathwaycommons", "pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "pypath.inputs.pathwaycommons.PathwayCommonsResource", "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "pypath.inputs.pazar", "pypath.inputs.pazar.pazar_interactions", "pypath.inputs.pepcyber", "pypath.inputs.pepcyber.pepcyber_details", "pypath.inputs.pepcyber.pepcyber_interactions", "pypath.inputs.pharos", "pypath.inputs.pharos.pharos_diseases", "pypath.inputs.pharos.pharos_expression", "pypath.inputs.pharos.pharos_general", "pypath.inputs.pharos.pharos_gtex", "pypath.inputs.pharos.pharos_ligands", "pypath.inputs.pharos.pharos_orthologs", "pypath.inputs.pharos.pharos_targets", "pypath.inputs.pharos.pharos_xrefs", "pypath.inputs.phobius", "pypath.inputs.phobius.phobius_annotations", "pypath.inputs.phosphonetworks", "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "pypath.inputs.phosphonetworks.phosphonetworks_interactions", "pypath.inputs.phosphopoint", "pypath.inputs.phosphopoint.phosphopoint_directions", "pypath.inputs.phosphopoint.phosphopoint_interactions", "pypath.inputs.pro", "pypath.inputs.pro.get_pro", "pypath.inputs.pro.pro_mapping", "pypath.inputs.protmapper", "pypath.inputs.protmapper.get_protmapper", "pypath.inputs.protmapper.protmapper_enzyme_substrate", "pypath.inputs.protmapper.protmapper_interactions", "pypath.inputs.pubchem", "pypath.inputs.pubchem.pubchem_mapping", "pypath.inputs.pubmed", "pypath.inputs.pubmed.get_pmid", "pypath.inputs.pubmed.get_pubmeds", "pypath.inputs.pubmed.only_pmids", "pypath.inputs.pubmed.open_pubmed", "pypath.inputs.pubmed.pmids_dict", "pypath.inputs.pubmed.pmids_list", "pypath.inputs.ramp", "pypath.inputs.rdata", "pypath.inputs.reaction", "pypath.inputs.reaction.acsn_biopax", "pypath.inputs.reaction.acsn_interactions_2", "pypath.inputs.reaction.get_acsn_effects", "pypath.inputs.reaction.get_controls", "pypath.inputs.reaction.get_interactions", "pypath.inputs.reaction.get_reactions", "pypath.inputs.reaction.get_soup", "pypath.inputs.reaction.panther_biopax", "pypath.inputs.reaction.panther_interactions", "pypath.inputs.reaction.pid_biopax", "pypath.inputs.reaction.pid_interactions", "pypath.inputs.reaction.process_complex", "pypath.inputs.reaction.process_controls", "pypath.inputs.reaction.process_reactions", "pypath.inputs.reaction.reactions_biopax", "pypath.inputs.reaction.reactome_biopax", "pypath.inputs.reaction.reactome_bs", "pypath.inputs.reaction.reactome_interactions", "pypath.inputs.reaction.reactome_sbml", "pypath.inputs.reactome", "pypath.inputs.reactome.reactome_chebis", "pypath.inputs.reactome.reactome_pathway_relations", "pypath.inputs.reactome.reactome_pathways", "pypath.inputs.reactome.reactome_uniprots", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.inputs.sider", "pypath.inputs.sider.SiderDrug", "pypath.inputs.sider.SiderSideeffect", "pypath.inputs.sider.SiderSideeffectMeddra", "pypath.inputs.sider.SiderSideeffetFrequency", "pypath.inputs.sider.sider_drug_names", "pypath.inputs.sider.sider_meddra_side_effects", "pypath.inputs.sider.sider_side_effect_frequencies", "pypath.inputs.sider.sider_side_effects", "pypath.inputs.stitch", "pypath.inputs.stitch.stitch_actions_interactions", "pypath.inputs.stitch.stitch_links_interactions", "pypath.inputs.string", "pypath.inputs.string.string_effects", "pypath.inputs.string.string_links_interactions", "pypath.inputs.string.string_physical_interactions", "pypath.inputs.string.string_species", "pypath.inputs.swisslipids", "pypath.inputs.switches_elm", "pypath.inputs.switches_elm.get_switches_elm", "pypath.inputs.transmir", "pypath.inputs.transmir.transmir_interactions", "pypath.inputs.trip", "pypath.inputs.trip.take_a_trip", "pypath.inputs.trip.trip_find_uniprot", "pypath.inputs.trip.trip_get_uniprot", "pypath.inputs.trip.trip_interactions", "pypath.inputs.trip.trip_process", "pypath.inputs.trip.trip_process_table", "pypath.inputs.twosides", "pypath.inputs.twosides.twosides_interactions", "pypath.inputs.unichem", "pypath.inputs.unichem.info", "pypath.inputs.unichem.unichem_info", "pypath.inputs.unichem.unichem_mapping", "pypath.inputs.unichem.unichem_sources", "pypath.inputs.uniprot", "pypath.inputs.uniprot.Taxon", "pypath.inputs.uniprot.UniprotQuery", "pypath.inputs.uniprot.UniprotRecordHistory", "pypath.inputs.uniprot.deleted_uniprot_genesymbol", "pypath.inputs.uniprot.get_uniprot_sec", "pypath.inputs.uniprot.protein_datasheet", "pypath.inputs.uniprot.query_builder", "pypath.inputs.uniprot.swissprot_deleted", "pypath.inputs.uniprot.trembl_deleted", "pypath.inputs.uniprot.uniprot_data", "pypath.inputs.uniprot.uniprot_deleted", "pypath.inputs.uniprot.uniprot_families", "pypath.inputs.uniprot.uniprot_history", "pypath.inputs.uniprot.uniprot_history_recent_datasheet", "pypath.inputs.uniprot.uniprot_keywords", "pypath.inputs.uniprot.uniprot_locations", "pypath.inputs.uniprot.uniprot_ncbi_taxids", "pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "pypath.inputs.uniprot.uniprot_preprocess", "pypath.inputs.uniprot.uniprot_query", "pypath.inputs.uniprot.uniprot_recent_version", "pypath.inputs.uniprot.uniprot_taxonomy", "pypath.inputs.uniprot.uniprot_tissues", "pypath.inputs.uniprot.uniprot_topology", "pypath.inputs.uniprot.valid_uniprot", "pypath.inputs.uniprot_db", "pypath.inputs.uniprot_db.all_swissprots", "pypath.inputs.uniprot_db.all_trembls", "pypath.inputs.uniprot_db.all_uniprots", "pypath.inputs.uniprot_db.get_db", "pypath.inputs.uniprot_db.init_db", "pypath.inputs.uniprot_db.is_swissprot", "pypath.inputs.uniprot_db.is_trembl", "pypath.inputs.uniprot_db.is_uniprot", "pypath.inputs.uniprot_idmapping", "pypath.inputs.uniprot_idmapping.idtypes", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.HmdbMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.RampMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.refs", "pypath.internals.refs.Reference", "pypath.internals.refs.get_pubmed_data", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkDataset", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.data_formats", "pypath.resources.data_formats.activity_flow", "pypath.resources.data_formats.enzyme_substrate", "pypath.resources.data_formats.interaction", "pypath.resources.data_formats.interaction_htp", "pypath.resources.data_formats.pathway_bad", "pypath.resources.data_formats.reaction_pc", "pypath.resources.data_formats.transcription_deprecated", "pypath.resources.data_formats.transcription_onebyone", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.resources.network", "pypath.resources.urls", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.cache_path", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.settings", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 16, 17, 18, 19, 20, 47, 50, 70, 72, 95, 97, 107, 115, 137, 152, 208, 209, 210, 211, 212, 214, 217, 218, 245, 263, 266, 301, 302, 303, 304, 308, 311, 314, 319, 337, 338, 339, 343, 346, 356, 368, 369, 370, 372, 375, 382, 386, 387, 390, 391, 392, 393, 401, 402, 404, 413, 423, 424, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 464, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 484, 485], "python": [0, 34, 481, 482, 484, 485], "modul": [0, 1, 4, 6, 9, 34, 70, 123, 263, 323, 373, 375, 382, 386, 399, 406, 411, 413, 415, 424, 426, 429, 432, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 457, 460, 461, 474, 480, 483, 484, 485], "build": [0, 343, 480, 481, 484], "molecular": [0, 319, 480, 481, 484], "biologi": [0, 481, 482], "databas": [0, 7, 11, 21, 22, 23, 54, 56, 65, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 97, 113, 115, 117, 118, 152, 160, 187, 198, 203, 211, 236, 237, 238, 241, 245, 259, 305, 306, 307, 308, 323, 330, 339, 378, 383, 408, 409, 418, 420, 421, 437, 480, 484, 485], "With": [0, 481], "you": [0, 387, 413, 437, 438, 441, 447, 452, 464, 480, 483, 485], "can": [0, 3, 32, 206, 311, 314, 315, 338, 343, 346, 356, 387, 413, 432, 437, 461, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 481, 482, 483, 484, 485], "access": [0, 4, 70, 95, 361, 387, 424, 452, 480, 481, 484], "process": [0, 13, 26, 27, 41, 43, 128, 129, 175, 176, 276, 288, 291, 326, 328, 338, 341, 343, 346, 356, 372, 399, 413, 431, 432, 437, 481, 484], "combin": [0, 311, 314, 481, 482, 485], "more": [0, 26, 27, 32, 33, 70, 102, 115, 266, 307, 333, 335, 338, 343, 346, 356, 413, 468, 469, 470, 471, 472, 473, 481, 482, 484, 485], "than": [0, 26, 27, 115, 266, 307, 481, 482, 485], "170": 0, "public": [0, 287], "resourc": [0, 5, 67, 68, 70, 122, 217, 226, 319, 333, 334, 380, 437, 480, 481, 484, 485], "interact": [0, 11, 13, 14, 26, 27, 41, 43, 67, 68, 75, 77, 81, 82, 95, 98, 107, 128, 129, 137, 144, 147, 160, 187, 189, 198, 200, 201, 236, 237, 260, 288, 291, 311, 314, 315, 326, 327, 328, 330, 380, 397, 413, 419, 420, 421, 480, 481, 484], "network": [0, 5, 41, 314, 402, 413, 461, 480, 481, 484], "includ": [0, 6, 13, 30, 32, 33, 36, 47, 205, 206, 314, 315, 327, 338, 343, 346, 356, 375, 382, 386, 413, 418, 420, 421, 482, 484, 485], "annot": [0, 96, 97, 134, 149, 150, 480, 481, 484], "about": [0, 7, 8, 95, 102, 113, 151, 236, 239, 240, 241, 242, 243, 244, 245, 246, 266, 307, 332, 333, 444, 445, 454, 480, 481, 485], "function": [0, 3, 4, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 62, 63, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 273, 293, 298, 300, 307, 309, 312, 314, 318, 319, 320, 322, 329, 331, 336, 338, 343, 346, 356, 362, 371, 395, 407, 411, 430, 431, 436, 437, 459, 464, 481, 482, 483, 484, 485], "local": [0, 13, 481, 482, 484, 485], "structur": [0, 144, 152, 338, 343, 346, 356, 476, 478, 479, 480, 481, 484], "other": [0, 3, 61, 375, 378, 382, 383, 385, 386, 417, 437, 481, 485], "properti": [0, 95, 338, 404, 468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "gene": [0, 29, 30, 32, 33, 72, 73, 120, 121, 122, 157, 161, 163, 164, 165, 167, 168, 171, 187, 189, 236, 321, 340, 480, 481, 484, 485], "protein": [0, 98, 100, 120, 121, 137, 144, 147, 150, 198, 200, 236, 237, 256, 311, 314, 315, 328, 346, 377, 380, 382, 384, 480, 481, 484, 485], "also": [0, 7, 137, 402, 461, 482, 485], "provid": [0, 3, 70, 95, 137, 338, 343, 346, 356, 375, 382, 386, 399, 402, 413, 424, 474, 481, 482, 484, 485], "number": [0, 16, 17, 18, 19, 20, 26, 27, 32, 62, 72, 79, 102, 115, 137, 144, 147, 150, 214, 217, 218, 239, 240, 242, 243, 244, 245, 246, 266, 301, 302, 303, 304, 310, 311, 337, 339, 361, 387, 397, 401, 404, 454, 481, 482, 485], "util": [0, 267, 397, 480, 481, 484], "id": [0, 23, 26, 27, 30, 31, 32, 33, 36, 39, 43, 49, 75, 77, 99, 113, 115, 120, 121, 122, 137, 150, 152, 160, 166, 167, 168, 178, 206, 236, 263, 265, 266, 267, 268, 290, 306, 307, 308, 316, 325, 328, 332, 333, 334, 335, 338, 340, 341, 346, 356, 358, 368, 369, 370, 372, 375, 378, 382, 383, 385, 386, 387, 397, 480, 485], "translat": [0, 99, 166, 167, 168, 263, 267, 334, 338, 343, 346, 356, 358, 378, 383, 385, 387, 480, 484, 485], "orthologi": [0, 29, 480, 484], "handl": [0, 437, 481, 482], "taxonomi": [0, 26, 27, 43, 340, 341, 358, 387, 480, 481], "sequenc": [0, 144, 480], "serv": [0, 328, 399, 485], "web": [0, 6, 33, 102, 268, 343, 387, 481, 482, 484], "server": [0, 413, 481, 482, 484, 485], "etc": [0, 432, 481, 482, 484, 485], "member": [0, 1, 2, 4, 6, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 181, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 272, 273, 293, 298, 300, 309, 312, 317, 318, 320, 322, 329, 331, 336, 362, 371, 373, 374, 388, 394, 395, 398, 406, 407, 411, 412, 414, 415, 425, 427, 428, 429, 430, 434, 435, 436, 453, 455, 456, 457, 458, 461, 467, 468, 469, 470, 471, 472, 473, 474, 482], "class": [2, 3, 15, 16, 17, 18, 19, 20, 24, 94, 95, 102, 117, 213, 214, 216, 217, 218, 300, 301, 302, 303, 304, 336, 337, 338, 339, 346, 356, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 412, 413, 425, 426, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 458, 459, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485], "none": [3, 5, 26, 27, 32, 33, 47, 59, 62, 63, 65, 67, 70, 84, 95, 96, 97, 98, 99, 100, 102, 109, 123, 136, 137, 160, 205, 206, 226, 241, 260, 277, 279, 291, 310, 323, 338, 343, 346, 356, 365, 366, 367, 370, 376, 377, 379, 380, 381, 382, 384, 386, 387, 389, 397, 399, 400, 402, 403, 405, 413, 426, 433, 437, 438, 442, 443, 454, 459, 460, 482], "kwarg": [3, 5, 70, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 261, 275, 282, 284, 291, 338, 343, 346, 356, 389, 399, 400, 403, 404, 405, 413, 437, 460, 482], "sourc": [3, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 160, 173, 175, 176, 178, 180, 183, 184, 185, 187, 189, 191, 192, 194, 196, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 226, 234, 236, 237, 241, 245, 248, 250, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 319, 321, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 396, 397, 399, 400, 402, 403, 404, 405, 408, 409, 410, 413, 424, 426, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 459, 460, 462, 464, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 484, 485], "base": [3, 16, 17, 18, 19, 20, 95, 214, 217, 218, 259, 301, 302, 303, 304, 337, 338, 339, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 413, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 459, 460, 462, 464, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 484], "object": [3, 4, 60, 62, 95, 121, 289, 290, 292, 338, 379, 380, 384, 389, 391, 396, 397, 402, 405, 413, 416, 417, 418, 419, 420, 421, 422, 423, 437, 439, 454, 459, 462, 464, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483], "which": [3, 4, 47, 50, 95, 267, 311, 314, 413, 417, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 484, 485], "carri": [3, 482], "custom": [3, 70, 311, 314, 315, 375, 378, 382, 383, 385, 386, 399, 413, 454, 480, 481], "attribut": [3, 16, 17, 18, 19, 20, 33, 36, 47, 125, 134, 175, 176, 214, 217, 218, 301, 302, 303, 304, 337, 338, 339, 346, 356, 380, 387, 389, 390, 391, 392, 393, 396, 400, 401, 402, 403, 404, 405, 413, 415, 437, 438, 468, 469, 470, 471, 472, 473, 482, 485], "data": [3, 5, 7, 13, 21, 22, 23, 29, 32, 35, 47, 48, 50, 51, 52, 53, 54, 56, 60, 61, 62, 65, 75, 77, 78, 82, 87, 88, 89, 90, 91, 92, 93, 102, 117, 118, 127, 128, 129, 137, 160, 208, 209, 210, 211, 212, 237, 238, 239, 240, 242, 243, 244, 245, 246, 263, 276, 294, 295, 296, 297, 314, 315, 323, 327, 328, 330, 334, 372, 386, 387, 399, 400, 404, 413, 431, 437, 438, 441, 442, 480, 481, 484, 485], "dedic": [3, 482], "dict": [3, 36, 39, 49, 59, 60, 61, 62, 70, 95, 96, 99, 102, 115, 118, 122, 125, 134, 149, 150, 152, 160, 166, 167, 168, 178, 205, 206, 208, 209, 210, 211, 212, 236, 239, 240, 241, 242, 243, 244, 245, 246, 263, 266, 292, 305, 308, 316, 327, 328, 334, 335, 338, 343, 346, 356, 358, 372, 402, 413, 482, 484], "under": [3, 389, 482], "__init__": [3, 16, 17, 18, 19, 20, 85, 95, 214, 217, 218, 301, 302, 303, 304, 337, 338, 339, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 413, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 459, 460, 462, 464, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 482], "method": [3, 4, 16, 17, 18, 19, 20, 87, 95, 123, 137, 214, 217, 218, 301, 302, 303, 304, 327, 337, 338, 339, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 396, 399, 400, 401, 402, 403, 404, 405, 413, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 459, 460, 462, 464, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 484], "serial": 3, "gener": [3, 22, 59, 62, 63, 65, 87, 88, 89, 90, 91, 92, 93, 203, 208, 209, 210, 211, 212, 294, 295, 296, 297, 330, 349, 399, 413, 482, 484, 485], "json": [3, 60, 61, 102, 241, 372, 413, 482], "string": [3, 60, 61, 62, 70, 102, 120, 263, 290, 332, 334, 338, 343, 346, 356, 432, 437, 454, 482], "full": [3, 30, 87, 89, 91, 93, 95, 205, 206, 334, 471, 472, 480, 481, 484], "content": [3, 113, 259, 372, 413, 437, 481, 483, 484], "without": [3, 4, 47, 307, 413, 416, 437, 480, 485], "ani": [3, 61, 62, 70, 432, 464, 480, 481, 484, 485], "whitespac": 3, "line": [3, 62, 338, 468, 469, 470, 471, 472, 473, 482], "break": [3, 137, 482], "return": [3, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 113, 117, 118, 120, 121, 122, 123, 125, 128, 129, 134, 149, 150, 151, 152, 160, 175, 176, 178, 205, 208, 209, 210, 211, 212, 214, 215, 217, 218, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 259, 263, 267, 276, 289, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 316, 324, 326, 327, 333, 334, 335, 337, 338, 339, 340, 343, 346, 349, 356, 358, 368, 369, 372, 387, 390, 391, 392, 393, 400, 401, 402, 404, 413, 424, 431, 433, 437, 438, 454, 464, 468, 469, 470, 471, 472, 473, 481, 482, 485], "str": [3, 16, 18, 19, 20, 29, 30, 31, 32, 33, 39, 45, 49, 59, 60, 61, 62, 70, 72, 73, 75, 76, 95, 96, 97, 98, 99, 100, 102, 109, 115, 120, 121, 122, 134, 137, 149, 150, 152, 160, 205, 206, 211, 212, 241, 260, 263, 266, 267, 268, 299, 301, 302, 303, 304, 305, 308, 313, 316, 323, 325, 327, 328, 332, 334, 338, 343, 346, 356, 358, 372, 375, 380, 382, 386, 387, 399, 402, 404, 413, 431, 432, 433, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452], "The": [3, 30, 45, 50, 65, 87, 92, 93, 95, 96, 99, 102, 115, 137, 178, 206, 241, 245, 263, 291, 295, 296, 299, 311, 314, 315, 324, 325, 332, 338, 343, 346, 356, 372, 387, 397, 404, 413, 424, 426, 432, 437, 438, 454, 460, 464, 468, 469, 470, 471, 472, 473, 479, 480, 481, 484, 485], "update_attr": 3, "updat": [3, 85, 402, 413, 454, 482, 484, 485], "store": [3, 413, 424, 481, 482, 484], "here": [3, 102, 241, 454, 464, 481, 482, 485], "ident": [3, 413, 482], "kei": [3, 30, 32, 36, 49, 62, 70, 99, 102, 118, 122, 149, 150, 152, 160, 178, 205, 206, 208, 209, 210, 211, 212, 236, 263, 316, 334, 335, 338, 343, 346, 356, 358, 390, 391, 392, 393, 402, 413, 431, 432, 437, 482, 485], "ar": [3, 32, 47, 62, 72, 85, 87, 92, 93, 95, 96, 115, 136, 144, 150, 152, 157, 161, 163, 164, 165, 167, 168, 171, 205, 263, 266, 267, 291, 315, 326, 334, 338, 343, 346, 356, 375, 382, 386, 413, 417, 420, 421, 431, 437, 468, 469, 470, 471, 472, 473, 478, 480, 481, 483, 484, 485], "merg": [3, 482], "us": [3, 4, 33, 34, 36, 39, 99, 137, 206, 208, 209, 210, 211, 212, 259, 263, 267, 311, 314, 315, 327, 375, 382, 386, 387, 389, 413, 417, 431, 432, 437, 443, 447, 452, 461, 464, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 481, 485], "share": [3, 389, 413, 482, 484], "common": [3, 36, 480], "combine_attr": 3, "new": [3, 58, 413, 423, 481, 482, 484, 485], "three": [3, 464], "wai": [3, 70, 334, 338, 343, 346, 356, 375, 382, 386, 482], "an": [3, 30, 31, 32, 33, 99, 102, 154, 205, 206, 236, 237, 239, 240, 242, 243, 244, 246, 308, 334, 338, 343, 346, 356, 387, 390, 391, 392, 393, 402, 404, 413, 423, 432, 461, 464, 468, 469, 470, 471, 472, 473, 480, 481, 485], "call": [3, 68, 206, 326, 327, 389, 399, 437, 438, 481, 482], "dictionari": [3, 30, 32, 36, 39, 49, 62, 70, 95, 150, 152, 154, 208, 209, 210, 211, 212, 236, 328, 334, 358, 480, 481], "keyword": [3, 464, 482], "argument": [3, 326, 375, 382, 386, 437, 464, 482], "work": [4, 85, 102, 413, 481, 482, 485], "from": [4, 11, 13, 14, 21, 22, 23, 26, 27, 29, 34, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 65, 67, 68, 70, 75, 77, 81, 82, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 107, 115, 117, 118, 120, 121, 122, 123, 125, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 175, 176, 187, 189, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 238, 239, 240, 242, 243, 244, 246, 259, 263, 294, 297, 299, 305, 306, 307, 308, 321, 323, 324, 325, 328, 330, 334, 340, 346, 349, 358, 372, 378, 380, 382, 383, 386, 387, 399, 400, 402, 404, 413, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 461, 468, 469, 470, 471, 472, 473, 478, 480, 481, 484, 485], "might": [4, 239, 240, 242, 243, 244, 246, 413, 482, 485], "import": [4, 423, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 481, 482], "main": [4, 35, 459, 481, 482, 485], "df": [5, 482], "entity_typ": [5, 377, 384, 482], "data_model": [5, 380, 403, 404, 413], "interaction_typ": [5, 217, 380, 403, 404, 413, 482], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": [5, 147], "effect": [5, 176, 203, 276, 306, 307, 308, 482], "entiti": [5, 482, 484, 485], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 13, 26, 27, 30, 32, 84, 102, 115, 127, 128, 129, 136, 137, 150, 160, 208, 209, 210, 211, 212, 237, 266, 267, 278, 286, 288, 289, 291, 311, 314, 338, 343, 345, 346, 347, 348, 351, 352, 355, 356, 359, 360, 372, 380, 387, 408, 437, 438, 439, 441, 443, 445, 447, 449, 452, 454, 482], "remove_loop": 5, "entities_or": 5, "fals": [5, 21, 22, 23, 30, 32, 33, 47, 63, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 117, 118, 136, 147, 160, 205, 208, 209, 210, 211, 212, 226, 237, 245, 257, 260, 294, 295, 296, 297, 308, 326, 327, 346, 358, 368, 369, 372, 376, 380, 384, 400, 408, 413, 424, 437, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 454, 482], "filter": [5, 29, 33, 87, 88, 90, 92, 413, 482], "frame": [5, 21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 294, 295, 296, 297, 480, 481, 484], "licens": [6, 7, 413, 480, 484], "collect": [6, 34, 87, 99, 102, 413, 482, 485], "page": [6, 45, 102, 413, 481, 482, 483, 485], "compon": [6, 263, 338, 343, 346, 356, 482, 485], "biomart": [6, 482], "goos": 6, "queri": [6, 33, 102, 115, 136, 137, 160, 206, 241, 245, 266, 323, 338, 343, 346, 356, 387, 480, 484], "templat": [6, 482], "configur": [6, 482], "file": [6, 13, 34, 35, 39, 43, 45, 60, 61, 62, 63, 70, 72, 73, 95, 99, 237, 263, 288, 289, 292, 299, 323, 413, 431, 437, 438, 440, 441, 480, 481, 484], "print": [7, 8, 332, 442, 443, 444, 445, 446, 447, 482], "copyright": [7, 482], "point": [7, 198, 338, 346, 356, 413, 481, 482], "further": [7, 70, 144, 327, 480, 482, 485], "inform": [7, 8, 34, 55, 95, 151, 203, 236, 259, 305, 306, 307, 308, 332, 333, 335, 413, 446, 447, 454, 480, 485], "loglevel": 8, "9": [8, 480, 481, 482], "basic": [8, 346, 356, 480], "current": [8, 102, 390, 391, 392, 393, 410, 454, 461, 481, 482, 485], "session": [8, 413, 480, 481], "tf": [11, 321, 482, 484, 485], "target": [11, 29, 53, 65, 95, 187, 189, 208, 209, 210, 211, 212, 263, 380, 422, 468, 469, 470, 471, 472, 473, 482, 484, 485], "transcript": [11, 30, 32, 33, 376, 413, 419, 423, 481, 485], "regul": [11, 319, 485], "keep_in_complex_interact": 13, "list": [13, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 41, 43, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 95, 96, 97, 98, 100, 102, 109, 113, 115, 117, 125, 128, 129, 134, 137, 147, 151, 152, 160, 173, 175, 176, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 239, 240, 242, 243, 244, 245, 246, 265, 266, 267, 276, 296, 305, 306, 307, 310, 311, 313, 314, 315, 316, 326, 327, 333, 334, 338, 343, 346, 356, 372, 386, 387, 402, 413, 437, 481, 482, 484, 485], "bool": [13, 21, 22, 23, 26, 27, 30, 32, 33, 47, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 115, 117, 118, 137, 147, 150, 160, 205, 208, 209, 210, 211, 212, 237, 241, 245, 267, 294, 295, 296, 297, 308, 311, 314, 327, 346, 358, 372, 386, 387, 413], "whether": [13, 47, 137, 267, 327, 482], "complex": [13, 285, 314, 315, 338, 343, 346, 356, 480, 481, 484], "expans": 13, "retriev": [14, 29, 31, 32, 47, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 79, 87, 97, 100, 102, 120, 121, 122, 123, 134, 154, 187, 189, 203, 215, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 305, 306, 307, 308, 330, 340, 346, 349, 387, 482], "sif": [14, 482, 484], "format": [14, 36, 267, 289, 290, 292, 361, 454, 461, 484, 485], "distribut": [14, 481], "offici": [14, 482], "websit": [14, 338, 346, 356], "adr_class": 16, "badd": [16, 18, 20, 24], "namedtupl": [16, 17, 18, 19, 20, 50, 51, 76, 77, 78, 95, 301, 302, 303, 304], "alia": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404, 463, 465, 466], "field": [16, 17, 18, 19, 20, 29, 59, 60, 62, 70, 72, 95, 97, 102, 191, 192, 205, 206, 214, 217, 218, 301, 302, 303, 304, 306, 337, 338, 339, 343, 346, 355, 356, 401, 404, 437, 482, 485], "0": [16, 17, 18, 19, 20, 37, 50, 63, 139, 147, 214, 217, 218, 301, 302, 303, 304, 313, 337, 339, 377, 380, 384, 401, 404, 454, 460, 480, 481, 482], "1": [16, 17, 18, 19, 20, 26, 27, 214, 217, 218, 301, 302, 303, 304, 337, 339, 378, 380, 382, 383, 385, 401, 404, 454, 460, 480, 482, 485], "count": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404, 482], "valu": [16, 17, 18, 19, 20, 30, 32, 36, 47, 49, 61, 62, 70, 99, 122, 149, 150, 152, 160, 178, 205, 214, 217, 218, 236, 241, 263, 301, 302, 303, 304, 311, 314, 315, 316, 334, 335, 337, 338, 339, 343, 346, 356, 358, 387, 390, 391, 392, 393, 401, 402, 404, 413, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 469, 471, 472, 482, 485], "occurr": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404], "index": [16, 17, 18, 19, 20, 23, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404, 482], "start": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404, 481, 482, 484], "stop": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404, 440, 444, 482], "9223372036854775807": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404], "first": [16, 17, 18, 19, 20, 70, 95, 117, 214, 217, 218, 301, 302, 303, 304, 337, 339, 386, 401, 404, 424, 481, 482, 484], "rais": [16, 17, 18, 19, 20, 70, 214, 217, 218, 301, 302, 303, 304, 337, 338, 339, 401, 402, 404], "valueerror": [16, 17, 18, 19, 20, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 404], "present": [16, 17, 18, 19, 20, 24, 115, 214, 217, 218, 301, 302, 303, 304, 337, 339, 401, 402, 404, 481, 482], "child": [17, 24, 482], "parent": [17, 24, 263, 482], "adrecsadr": 17, "drug": [18, 19, 21, 22, 23, 50, 53, 75, 76, 77, 78, 79, 95, 96, 97, 98, 100, 134, 156, 159, 160, 161, 162, 164, 166, 170, 203, 208, 305, 306, 307, 308, 330, 482, 484], "synonym": [18, 20, 23, 211, 263, 325, 413, 482], "drugbank": [18, 23, 76, 78], "pubchem_cid": [18, 482], "mesh": [18, 23], "kegg": [18, 23, 65, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 423, 482], "tdd": [18, 23], "3": [18, 19, 20, 62, 117, 125, 214, 217, 304, 337, 338, 339, 343, 346, 356, 404, 459, 480, 481, 482], "6": [18, 147, 339, 480, 482], "5": [18, 339, 459, 480, 481, 482], "4": [18, 20, 214, 339, 404, 459, 464, 476, 479, 480, 482, 485], "2": [18, 19, 20, 62, 214, 217, 218, 236, 302, 303, 304, 337, 339, 401, 402, 404, 464, 476, 479, 480], "7": [18, 43, 339, 480, 481, 482, 485], "drug_badd": 19, "adr_badd": 19, "adr": [19, 21, 22, 211], "adrecs_class": 20, "name": [20, 23, 29, 30, 31, 32, 33, 36, 39, 47, 48, 52, 53, 55, 56, 65, 67, 68, 70, 75, 77, 97, 99, 102, 113, 117, 122, 123, 134, 151, 152, 157, 161, 163, 164, 165, 167, 168, 171, 178, 205, 208, 209, 210, 211, 212, 218, 241, 263, 301, 305, 306, 307, 308, 316, 324, 327, 333, 338, 346, 356, 358, 361, 368, 369, 370, 375, 378, 380, 382, 383, 384, 385, 386, 389, 399, 400, 401, 402, 403, 404, 405, 408, 413, 420, 426, 431, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 460, 480, 483, 485], "meddra": [20, 306, 307, 308], "tupl": [20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 47, 48, 50, 51, 52, 53, 55, 56, 59, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 113, 117, 118, 134, 147, 149, 151, 160, 173, 178, 203, 205, 206, 214, 215, 217, 218, 237, 290, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 313, 314, 315, 330, 333, 337, 338, 339, 343, 346, 356, 372, 401, 402, 432, 437, 464, 468, 469, 470, 471, 472, 473, 476, 479, 482], "return_df": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 294, 295, 296, 297, 482], "adrecsterm": 21, "datafram": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 294, 295, 296, 297, 372, 480, 481], "advers": [21, 203, 208, 330, 482], "reaction": [21, 208, 413, 482, 485], "ontologi": [21, 24, 256, 295, 382, 480, 481, 484], "paramet": [21, 22, 23, 65, 72, 73, 75, 76, 77, 78, 85, 87, 88, 89, 90, 91, 92, 93, 102, 115, 117, 118, 120, 121, 122, 136, 137, 208, 209, 210, 211, 212, 239, 240, 241, 242, 243, 244, 245, 246, 260, 266, 294, 295, 296, 297, 308, 323, 338, 341, 343, 346, 356, 358, 372, 375, 378, 380, 382, 383, 385, 386, 387, 397, 413, 426, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 460, 464, 480, 481, 482], "panda": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 208, 209, 210, 211, 212, 237, 294, 295, 296, 297, 480, 481, 484, 485], "term": [21, 24, 149, 152, 206, 482], "adrecsdrugadr": 22, "pd": [22, 65, 87, 88, 89, 90, 91, 92, 93, 118, 208, 209, 210, 211, 212, 294, 295, 296, 297, 482], "pair": [22, 65, 70, 147, 173, 198, 341, 372, 402, 437, 482, 485], "identifi": [23, 24, 30, 32, 36, 62, 75, 76, 78, 95, 97, 99, 100, 115, 147, 263, 334, 338, 340, 342, 346, 349, 350, 357, 358, 372, 432, 480, 481], "iupac": [23, 263, 482], "http": [23, 33, 102, 115, 137, 173, 187, 189, 200, 201, 237, 241, 259, 333, 338, 343, 346, 356, 437, 461, 481, 485], "www": [23, 33, 115, 173, 187, 189, 237, 259, 333, 338, 343, 346, 356, 461, 482], "bio": 23, "add": [23, 413, 481, 482, 484, 485], "org": [23, 33, 125, 173, 187, 200, 201, 237, 259, 338, 343, 346, 356, 387, 461, 482, 485], "jsp": 23, "set": [24, 30, 32, 67, 68, 70, 96, 99, 107, 115, 134, 137, 144, 149, 150, 260, 263, 266, 305, 308, 323, 334, 338, 358, 372, 375, 380, 382, 386, 387, 390, 391, 392, 393, 399, 400, 402, 413, 418, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 482, 484, 485], "adrecschildpar": 24, "relationship": [24, 215, 480, 481], "between": [24, 65, 166, 167, 168, 200, 311, 314, 341, 464, 469, 471, 472, 481, 482, 484, 485], "repres": [24, 95, 151, 205, 333, 402, 482], "both": [24, 307, 308, 314, 346, 370, 437, 481, 482, 485], "numer": [24, 115, 332, 335, 358, 482], "organ": [26, 27, 29, 30, 31, 32, 43, 84, 113, 142, 147, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 194, 288, 289, 316, 327, 338, 341, 343, 346, 348, 351, 352, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 387, 400, 480, 481, 484, 485], "int": [26, 27, 29, 30, 31, 32, 43, 50, 62, 79, 102, 109, 115, 137, 147, 150, 239, 240, 242, 243, 244, 245, 246, 266, 268, 311, 313, 314, 315, 316, 332, 334, 341, 346, 358, 387, 454], "9606": [26, 27, 29, 30, 31, 32, 43, 84, 142, 147, 150, 194, 288, 289, 311, 313, 314, 315, 338, 341, 343, 346, 348, 351, 352, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 380, 386, 387, 399, 482], "htp_limit": [26, 27], "ltp": [26, 27], "download": [26, 27, 32, 34, 35, 41, 43, 45, 81, 87, 102, 125, 127, 137, 149, 150, 151, 152, 160, 175, 176, 206, 211, 237, 256, 289, 291, 292, 299, 311, 314, 315, 316, 323, 324, 325, 327, 328, 341, 386, 399, 437, 441, 442, 448, 449, 480, 481, 484], "all": [26, 32, 34, 78, 95, 102, 134, 150, 263, 326, 338, 343, 346, 356, 397, 402, 413, 426, 437, 438, 449, 460, 468, 478, 481, 484, 485], "keep": [26, 27, 147, 205, 260, 267, 481, 482], "onli": [26, 27, 47, 70, 72, 98, 100, 102, 144, 147, 150, 260, 267, 338, 343, 346, 356, 375, 382, 386, 402, 413, 420, 423, 424, 437, 438, 446, 451, 480, 481, 484, 485], "low": [26, 27, 68, 420], "throughput": [26, 27, 68, 397, 420, 482], "arg": [26, 27, 30, 31, 32, 33, 39, 45, 47, 50, 60, 67, 68, 70, 95, 96, 97, 98, 99, 100, 102, 150, 152, 157, 160, 161, 163, 164, 165, 167, 168, 171, 205, 206, 237, 263, 299, 311, 314, 315, 332, 334, 404, 431], "ncbi": [26, 27, 43, 115, 167, 267, 340, 341, 358, 387, 397, 480, 481, 485], "exclud": [26, 27, 67, 68, 313, 482], "refer": [26, 27, 97, 137, 152, 198, 236, 338, 343, 346, 356, 380, 397, 413, 416, 417, 420, 421, 451, 452, 480, 481, 485], "cite": [26, 27], "thi": [26, 27, 34, 70, 85, 95, 107, 115, 123, 137, 263, 266, 307, 308, 323, 328, 338, 343, 346, 356, 375, 380, 382, 386, 390, 391, 392, 393, 400, 402, 413, 426, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 459, 460, 461, 464, 468, 469, 470, 471, 472, 473, 474, 481, 482, 484, 485], "physic": [27, 311, 314, 315], "multi": [27, 482, 484], "valid": [27, 50, 260, 338, 390, 391, 392, 393], "source_organ": 29, "target_organ": 29, "10090": [29, 338, 343, 346, 356, 481, 482, 485], "extra_field": 29, "iter": [29, 115, 313, 338, 346, 349, 356, 402, 413, 454, 482], "external_gene_nam": 29, "ensembl": [29, 30, 32, 33, 481, 482], "have": [29, 311, 314, 387, 413, 420, 441, 447, 452, 481, 482, 484, 485], "orthologu": 29, "homologi": [29, 480, 482, 485], "relat": [29, 47, 72, 100, 113, 152, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 481, 482, 485], "array_typ": 30, "peptid": [30, 32, 33, 482], "microarrai": [30, 31, 32, 375, 482], "probe": [30, 32, 375, 482], "map": [30, 32, 65, 76, 78, 154, 294, 297, 341, 372, 375, 382, 386, 387, 402, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 484], "model": [30, 32, 34, 35, 36, 39, 413], "shown": [30, 211, 325, 482], "webpag": [30, 45, 81, 299, 323, 324, 325, 328, 482, 485], "correspond": [30, 97, 265, 338, 346, 356, 390, 391, 392, 393, 402, 482], "code": [30, 335, 476, 478, 479, 482, 484], "For": [30, 32, 62, 72, 206, 265, 334, 335, 338, 343, 346, 356, 368, 369, 387, 389, 397, 413, 431, 481, 482, 485], "avail": [30, 31, 34, 36, 70, 99, 205, 206, 237, 338, 343, 346, 356, 387, 481, 482, 485], "see": [30, 260, 326, 333, 334, 335, 338, 343, 346, 356, 447, 461, 464, 476, 478, 479, 481, 482, 485], "biomart_microarray_typ": 30, "A": [30, 32, 36, 67, 68, 70, 75, 95, 102, 115, 120, 121, 122, 150, 151, 152, 160, 236, 241, 263, 306, 333, 334, 335, 338, 343, 346, 356, 358, 402, 404, 423, 431, 482, 484, 485], "type": [31, 32, 72, 96, 99, 137, 152, 226, 236, 260, 263, 279, 306, 333, 334, 335, 338, 372, 375, 378, 382, 383, 385, 386, 387, 413, 437, 438, 480, 481, 482], "vendor": 32, "multipl": [32, 137, 481, 482, 485], "arrai": [32, 413, 482], "one": [32, 63, 70, 75, 102, 136, 137, 151, 239, 240, 242, 243, 244, 245, 246, 267, 325, 328, 332, 333, 338, 346, 356, 375, 378, 382, 383, 385, 386, 387, 397, 413, 464, 471, 472, 481, 485], "option": [32, 482, 485], "limit": [32, 137, 311, 314, 315, 482], "note": [32, 239, 240, 242, 243, 244, 246, 413, 482, 485], "depend": [32, 482, 484], "take": [32, 239, 240, 242, 243, 244, 245, 246, 464, 481, 482], "minut": [32, 481, 482], "One": [32, 33, 72, 73, 115, 266, 328, 346, 356, 482], "mean": [32, 144, 400, 413, 431, 482], "human": [32, 134, 289, 292, 326, 327, 346, 378, 480, 481, 485], "possibl": [32, 263, 480, 482], "affi": [32, 482], "illumina": 32, "agil": [32, 482], "codelink": 32, "phalanx": 32, "attr": [33, 413], "dataset": [33, 87, 88, 89, 90, 91, 92, 93, 208, 209, 210, 211, 212, 307, 308, 380, 402, 403, 405, 413, 417, 423, 480, 481], "hsapiens_gene_ensembl": 33, "servic": [33, 102, 205, 206, 263, 372, 387, 481, 482, 484], "martview": 33, "check": [33, 361, 389, 390, 391, 392, 393, 481, 482, 485], "result": [33, 62, 102, 150, 328, 338, 441, 447, 448, 449, 452, 482], "yield": [33, 203, 290, 291, 330, 338, 341, 482], "request": [33, 102, 115, 137, 205, 266, 437, 438, 482, 485], "each": [33, 59, 62, 95, 97, 137, 151, 152, 205, 236, 245, 333, 338, 481, 482, 484, 485], "record": [33, 47, 48, 52, 53, 79, 102, 115, 147, 208, 209, 210, 212, 239, 240, 242, 243, 244, 245, 246, 259, 266, 268, 349, 485], "repositori": [34, 484], "bioservic": [34, 36, 39], "individu": [34, 160, 203, 482], "pars": [34, 241, 482], "relev": [34, 35, 482], "enter": 34, "model_id": [35, 39], "singl": [35, 39, 75, 76, 267, 480], "extract": [35, 60, 81, 102, 128, 129, 288, 291, 372, 437, 438, 482], "integr": [35, 423, 480, 482, 484], "should": [35, 47, 145, 328, 413, 468, 469, 470, 471, 472, 473, 481, 482, 485], "cach": [35, 115, 136, 137, 237, 266, 289, 328, 437, 440, 441, 442, 443, 444, 445, 448, 449, 480, 481], "fetch": [36, 245, 265, 387, 461, 482], "smbl": 36, "being": [36, 476, 478, 479], "most": [36, 349, 421, 443, 481, 482], "submiss": 36, "modif": [36, 482], "date": [36, 339, 482], "author": [36, 482], "verbos": [37, 139, 444, 445, 482, 484], "get": [39, 387, 402, 437, 480, 482, 485], "contain": [39, 65, 95, 102, 144, 267, 306, 314, 319, 328, 404, 461, 468, 469, 470, 471, 472, 473, 481, 482, 485], "specif": [39, 60, 102, 157, 161, 163, 164, 165, 167, 168, 171, 178, 481, 482, 485], "eg": 39, "descript": [39, 260, 454, 482, 484], "associ": [39, 210, 212, 314, 464, 476, 478, 479, 482], "signal": [41, 203, 330, 480, 485], "ma": 41, "ayan": 41, "2005": [41, 482], "match": [43, 150, 482, 485], "column": [43, 62, 260, 481, 482, 485], "node": [43, 464], "supp_url": 45, "article_url": 45, "supplementari": [45, 259, 260, 299], "materi": [45, 259, 299], "journal": [45, 299], "url": [45, 84, 102, 109, 211, 299, 338, 389, 437, 450, 482, 485], "articl": [45, 189, 482], "path": [45, 70, 99, 299, 323, 413, 431, 432, 433, 437, 481, 482], "standard_rel": 47, "liter": [47, 65, 87, 152, 211, 311, 314, 315, 413], "pchembl_value_non": 47, "activ": [47, 98, 100, 313, 416, 485], "todo": 47, "allow": [47, 413, 482], "must": [47, 413, 464, 482, 485], "pchembl": 47, "standard": [47, 107, 482], "need": [47, 144, 328, 438, 480, 482, 485], "standard_unit": 47, "why": [47, 482], "data_validity_com": 47, "part": [47, 136, 315, 413, 482, 484, 485], "assai": 48, "document": [49, 481, 482, 483], "pubm": [49, 115, 236, 397, 482], "convers": [49, 387, 480, 482, 484], "max_phase_threshold": 50, "indic": [50, 315, 437, 468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "threshold": [50, 310, 482], "maximum": 50, "phase": 50, "mechan": [51, 319, 482], "molecul": [52, 96, 481, 485], "variant": [54, 55, 56, 134, 481, 482], "citat": 55, "csv": [58, 63, 259, 260, 482], "old": [58, 413, 454, 481, 482], "callabl": [59, 102, 399, 413], "glom": [59, 60, 102, 206], "spec": [59, 60, 102, 206], "protect": 59, "coalesc": 59, "io": [60, 61, 102], "arbitrari": [60, 482, 485], "depth": [60, 285], "like": [60, 62, 239, 240, 242, 243, 244, 245, 246, 387, 402, 481, 482], "read": [61, 62, 63, 102, 237, 241, 259, 413, 438, 441, 448, 449, 480, 481, 484], "pass": [61, 326, 338, 343, 346, 356, 387, 482], "through": [61, 397, 481, 482], "col": [62, 459, 482], "fileobject": 62, "sep": [62, 439], "t": [62, 439, 440, 443, 444, 481, 482, 483, 485], "sep2": 62, "rem": 62, "hdr": 62, "encod": [62, 437, 438, 482, 485], "ascii": 62, "tabl": [62, 81, 99, 260, 324, 325, 328, 375, 378, 382, 383, 386, 387, 480, 481, 483, 484], "open": [62, 208, 209, 210, 211, 212, 268, 437, 438, 481, 482], "stringio": 62, "buffer": 62, "separ": [62, 377, 380, 384, 404, 413, 482, 484], "subfield": 62, "prefix": [62, 115, 454, 482], "e": [62, 72, 95, 96, 97, 98, 99, 100, 123, 260, 267, 327, 346, 397, 402, 413, 464, 474, 476, 479, 480, 481, 484, 485], "g": [62, 123, 260, 327, 346, 413, 481, 482, 484, 485], "header": [62, 136, 137, 338, 377, 380, 384, 437, 439, 482], "If": [62, 70, 95, 152, 160, 205, 208, 209, 210, 211, 212, 323, 338, 370, 387, 402, 481, 482, 485], "assum": [62, 70], "remov": [62, 402, 413, 482, 484], "element": [62, 267, 328, 338, 343, 346, 356, 482], "replac": [62, 339, 437, 482], "xls_file": 63, "sheet": [63, 109], "use_openpyxl": 63, "cell_rang": 63, "m": [63, 482], "excel": [63, 482], "xl": 63, "convert": [63, 328, 338, 343, 346, 356, 461, 481, 482], "source_db": 65, "wikipathwai": 65, "reactom": [65, 289, 290, 291, 292], "target_db": 65, "cross": [65, 97, 152], "pathwai": [65, 73, 158, 162, 165, 169, 170, 171, 201, 290, 295, 296, 413, 416, 421, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 481, 482, 485], "propos": 65, "accept": [65, 464, 476, 479, 482, 485], "user": [65, 70, 85, 95, 96, 97, 98, 99, 100, 311, 314, 315, 439, 481, 482], "curat": [65, 72, 107, 187, 189, 198, 200, 201, 420, 421, 485], "across": [65, 482], "specifi": [65, 327, 402, 469, 476, 478, 479], "direct": [65, 175, 210, 380, 418, 421, 468, 469, 470, 471, 472, 473, 480], "consensuspathdb": [67, 68], "cpdb_interact": 68, "hprd": [68, 419, 482], "biogrid": [68, 418, 419, 482], "phosphopoint": 68, "mint": 68, "bind": [68, 237, 311, 314, 482], "intact": [68, 418, 419, 482], "from_fil": 70, "requir": [70, 291, 311, 314, 315, 361, 481, 482], "restrict": [70, 96, 346, 482], "two": [70, 95, 464, 468, 469, 470, 471, 472, 473, 481, 482], "password": [70, 95, 96, 97, 98, 99, 100], "apart": [70, 205, 206, 481, 482], "rest": [70, 102, 338, 343, 346, 356, 485], "ignor": [70, 404, 413], "_credenti": 70, "exist": [70, 198, 323, 431, 433, 437, 438, 442, 482], "its": [70, 97, 123, 338, 343, 346, 356, 431, 433, 444, 445, 476, 478, 479, 482, 484], "locat": [70, 481, 482, 484, 485], "": [70, 95, 160, 203, 205, 330, 387, 402, 404, 447, 481, 482, 484], "default": [70, 95, 115, 137, 205, 206, 208, 209, 210, 211, 212, 245, 266, 323, 338, 343, 346, 356, 402, 413, 423, 424, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 464, 468, 469, 470, 471, 472, 473, 474, 479, 481, 482, 485], "secret": [70, 437, 482, 485], "directori": [70, 433, 481, 482, 484], "unchang": [70, 267], "explicit": 70, "runtimeerror": 70, "relation_typ": 72, "diseas": [72, 73, 156, 157, 158, 159, 160, 163, 169, 210, 212, 214, 215, 239, 245], "those": [72, 267, 482], "directevid": 72, "non": [72, 198, 413, 482], "too": [72, 482], "larg": [72, 291, 418, 437, 438, 481, 482, 484, 485], "follow": [72, 73, 306, 402, 437, 481, 482], "chemical_gen": 72, "chemical_diseas": 72, "disease_pathwai": 72, "chemical_phenotyp": 72, "gene_diseas": 72, "vocabulary_typ": 73, "vocabulari": 73, "chemic": [73, 311], "anatomi": 73, "phenotyp": 73, "level": [75, 77, 208, 209, 210, 211, 212, 319, 338, 346, 356, 390, 391, 392, 393, 413, 423, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 481, 485], "action": [75, 77], "chembl": [76, 78, 99, 178, 482, 484], "pubchem": [76, 78, 178, 305, 306, 308, 482], "html": [81, 102, 120, 328, 482, 485], "load": [82, 137, 147, 323, 399, 413, 423, 431, 480, 481, 484], "rescu": 82, "core_onli": 84, "direct_onli": 84, "small_scale_onli": 84, "passwd": [85, 95, 96, 97, 98, 99, 100, 439], "doe": [85, 137, 323, 402, 431, 441, 446, 451, 481, 482], "unknown": [85, 380, 384, 482], "reason": [85, 137, 481, 482], "In": [85, 402, 413, 437, 481, 482], "addit": [85, 137, 205, 206, 338, 343, 346, 356, 413, 437, 482, 485], "binary_data": [85, 437], "curl": [85, 485], "ha": [85, 178, 402, 413, 423, 437, 481, 482, 484, 485], "been": [85, 413, 441, 481, 482, 484, 485], "chang": [85, 338, 343, 346, 356, 440, 443, 454, 481, 482], "below": [85, 134, 338, 343, 346, 356, 481, 482], "necessari": [85, 399, 481, 482], "data_origin": 87, "textmin": [87, 92, 93], "knowledg": [87, 90, 91, 198, 259], "experi": [87, 88, 89, 198, 482], "jensen": [87, 88, 89, 90, 91, 92, 93], "lab": [87, 88, 89, 90, 91, 92, 93, 175, 176, 481, 482], "warn": [87, 92, 93, 482], "enorm": [87, 92, 93], "instead": [87, 237, 432, 441, 482, 483, 485], "credentials_fnam": [95, 96, 97, 98, 99, 100], "wrapper": [95, 402, 437, 454, 482], "around": [95, 402, 437, 454, 480, 481], "xml": [95, 482], "drugbank_drugs_ful": 95, "drugbank_targets_ful": 95, "second": [95, 137, 482], "mail": [95, 96, 97, 98, 99, 100], "address": [95, 96, 97, 98, 99, 100, 482], "regist": [95, 96, 97, 98, 99, 100, 432], "account": [95, 96, 97, 98, 99, 100, 482], "detail": [95, 102, 151, 236, 311, 333, 338, 343, 346, 356, 481, 482], "drugbank_external_ids_ful": 95, "extern": [95, 152, 482], "drugbank_properties_ful": 95, "calcul": [95, 144], "statu": [96, 437, 454, 482], "variou": [97, 113, 358, 467, 481, 482], "pharma_act": [98, 100], "pharmacolog": [98, 100], "id_typ": [99, 136, 137, 384, 387, 482], "target_id_typ": [99, 257, 387, 482], "group": [99, 208, 209, 210, 211, 212, 460, 481, 482, 484], "ca": [99, 482], "inchikei": [99, 482], "inchi": [99, 178, 263, 482], "smile": [99, 178, 263, 482], "formula": [99, 482], "kegg_compound": 99, "kegg_drug": 99, "pubchem_compound": 99, "pubchem_subst": 99, "chebi": [99, 166, 178, 294, 482], "pharmgkb": 99, "het": [99, 482], "login": 99, "credenti": 99, "q": 102, "pagin": [102, 482], "page_length": 102, "500": [102, 136, 137, 338, 343, 346, 356, 482], "size_param": 102, "size": [102, 137, 438, 460, 482], "page_param": 102, "offset": [102, 144, 145, 482], "by_pag": 102, "page_field": 102, "total_field": 102, "totalpag": 102, "record_nam": 102, "append": [102, 413], "until": [102, 482, 483], "end": [102, 482], "per": [102, 314, 315], "item": [102, 402, 431, 432, 454, 482], "total": [102, 454, 471, 472], "readthedoc": 102, "en": [102, 482], "latest": [102, 482], "tutori": [102, 481, 482], "downlod": 107, "manual": [107, 420, 421, 482], "gold": 107, "init_url": [109, 437], "taxon": [113, 358, 482], "metadata": [113, 266, 397, 402, 482], "db": [115, 481, 482], "cache_smal": [115, 266], "10": [115, 173, 259, 266, 460, 480, 482, 485], "metainform": 115, "client": [115, 346, 356, 481, 482], "api": [115, 338, 343, 346, 356, 387, 481, 484, 485], "endpoint": [115, 482], "nlm": 115, "nih": [115, 238, 241, 245, 267], "gov": [115, 241], "book": [115, 480, 481], "nbk25499": 115, "chapter4": 115, "interst": 115, "understand": [115, 137, 482], "letter": [115, 482], "strip": [115, 338, 482], "geoprofil": [115, 482], "small": [115, 266, 460, 468, 469, 470, 471, 472, 473, 481, 484], "less": [115, 266, 482], "except": [115, 266, 485], "lower": [115, 266, 308, 482], "enzym": [117, 118, 413, 480, 481, 484], "classif": 117, "digit": 117, "ec": [117, 482], "datasheet": [120, 121, 122, 340], "symbol": [120, 121, 122, 236, 340, 375, 382, 386, 481, 482, 485], "uniprot": [120, 121, 122, 144, 145, 150, 154, 168, 236, 288, 297, 324, 325, 328, 370, 372, 380, 384, 386, 387, 400, 480, 481, 484, 485], "bs4": [121, 290, 324, 328], "beautifulsoup": [121, 290, 324], "summari": [122, 482, 484], "text": [122, 259, 338, 343, 346, 356, 482], "module_nam": 123, "method_nam": 123, "submodul": [123, 481, 482, 484], "uniprot_db": 123, "all_uniprot": [123, 482], "graph_attr": 125, "vertex_attr": 125, "edge_attr": 125, "in_vivo": [127, 128, 129], "preprocess": [127, 256, 323, 338, 481], "ptm": [128, 413, 417, 418, 482, 484, 485], "kinas": [128, 338, 343, 346, 356, 482, 485], "substrat": [128, 413, 480, 481, 484], "missens": 134, "uniprotkb": [134, 150, 257, 482], "swiss": [134, 482], "prot": [134, 482], "ppi": [136, 137, 403, 481, 482], "uniprotkb_ac": [136, 137], "mydomain": [136, 137], "hmm": [136, 137], "maxwait": [136, 137], "180": [136, 137], "part_siz": [136, 137], "perform": [136, 137, 208, 209, 210, 211, 212, 338, 343, 346, 356, 437, 448, 449, 482], "same": [136, 328, 334, 338, 343, 346, 356, 375, 380, 382, 386, 400, 413, 482], "get_ielm_hug": 136, "predict": [137, 326, 327], "domain": [137, 144, 319, 328, 482, 485], "motif": [137, 319, 482], "chunk": [137, 245], "retri": [137, 437], "case": [137, 402, 421, 438, 481, 482, 485], "failur": [137, 480], "reduc": [137, 482], "feedback": 137, "consol": [137, 437, 441, 480], "suppli": [137, 418], "pleas": [137, 481, 482], "what": [137, 447, 482, 485], "detect": [137, 327], "altern": [137, 338, 343, 346, 356, 481, 482, 485], "wait": 137, "time": [137, 150, 323, 413, 481, 482], "everyth": [137, 482], "again": [137, 413, 441, 468, 469, 470, 471, 472, 473, 481, 482], "send": [137, 413, 426, 437, 438, 460, 461], "residu": [144, 482], "chain": [144, 482], "pdb": [144, 145, 482, 485], "given": [144, 208, 209, 210, 211, 212, 402, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "support": [144, 481, 482, 484], "These": [145, 198, 338, 343, 346, 356, 375, 382, 386, 387, 418, 420, 421, 431, 482, 485], "understood": [145, 464], "miscor": 147, "complex_expans": 147, "only_id": 147, "smaller": [147, 482, 485], "memori": [147, 291, 481, 482, 484], "footprint": 147, "go": [149, 152, 447, 481, 482, 484], "entri": [149, 150, 151, 152, 482], "page_s": 150, "200": 150, "review": [150, 338, 343, 346, 348, 351, 352, 355, 356, 359, 360, 387, 482], "tax_id": 150, "thei": [150, 481, 482, 484], "otherwis": [150, 152, 205, 372, 402, 482], "db_type": 152, "where": [152, 404, 437, 468, 469, 470, 471, 472, 473, 482, 485], "join": [160, 482], "asynchron": 160, "els": [160, 402], "them": [160, 413, 481, 482, 485], "togeth": [160, 387, 482], "mutual": 160, "yet": [160, 482, 485], "implement": [160, 454, 464, 468, 469, 470, 471, 472, 473, 474, 478, 479, 481, 484, 485], "ligand": [173, 243, 245, 485], "receptor": [173, 485], "kirouac": 173, "et": [173, 259, 482], "al": [173, 259, 482], "2010": 173, "embopress": 173, "doi": [173, 265, 267], "1038": 173, "msb": 173, "71": 173, "signalingflow": 175, "edg": [175, 176, 464, 480], "signalingdirect": 176, "brand": 178, "compani": [178, 482], "compound": [178, 482, 484], "literatur": [187, 189, 198, 200, 201, 413, 416, 420, 421, 480, 485], "mirna": [187, 189, 321, 422, 481, 484, 485], "natur": [189, 481], "com": [189, 437, 481, 482], "cdd201287": 189, "do": [198, 328, 413, 446, 449, 451, 480, 485], "best": [198, 482], "our": [198, 480, 481], "paper": [198, 482, 485], "test": [198, 413, 437, 484], "find": [198, 481, 482], "neg": [198, 413, 482], "outcom": 198, "autophagi": 200, "autophagyregul": 200, "nrf2": [201, 416, 482], "nrf2ome": [201, 482], "side": [203, 306, 307, 308, 482], "off": [203, 442, 454], "label": [203, 307, 308, 334, 335, 375, 382, 387, 390, 391, 392, 393, 404, 413, 426, 431, 437, 438, 460, 464, 468, 469, 470, 471, 472, 473, 482], "mine": [203, 259, 330], "fda": [203, 211, 330], "event": [203, 330], "report": [203, 330, 482], "system": [203, 330, 437, 481, 482], "full_config": 205, "ebi": [205, 206, 333, 481], "lookup": [205, 206], "ones": [205, 206, 482], "config": [205, 432], "extra": 205, "abbrevi": [205, 482], "describ": [205, 338, 343, 346, 356], "ol": 206, "listof_ontologi": 206, "simpli": [206, 482], "section": [206, 482], "respons": [206, 241, 338, 481, 482], "variabl": [208, 209, 210, 211, 212, 241, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482], "top": [208, 209, 210, 211, 212, 338, 346, 356, 408, 482], "baselin": 209, "express": [209, 240, 245, 313, 481, 482, 485], "score": [210, 212, 311, 314, 315, 482], "assoc_direct": 211, "assoc_indirect": 211, "expr": 211, "associationbyoverallindirect": 211, "associationbyoveralldirect": 211, "significantadversedrugreact": 211, "baselineexpress": 211, "either": [211, 263, 334, 402, 437, 482, 485], "shorthand": 211, "indirect": [212, 482], "disease_id": 214, "pathogen_taxid": 214, "pathogen": [214, 215, 484], "evid": [214, 236, 260, 311, 314, 482, 484], "id_a": [217, 482], "id_b": [217, 482], "pc_label": 218, "version": [218, 226, 413, 481, 482, 484], "by_interact": 226, "12": [226, 480, 482], "num": 236, "length": [236, 338, 343, 346, 356, 482], "refseq": 236, "special": [236, 413, 482, 484], "_ref": 236, "hold": 236, "categori": [236, 319, 480, 484, 485], "phosphoprotein": [237, 482], "intermedi": [237, 482], "chunk_siz": [239, 240, 242, 243, 244, 245, 246], "100": [239, 240, 242, 243, 244, 245, 246, 338, 343, 346, 356, 481, 482], "half": [239, 240, 242, 243, 244, 245, 246, 482], "hour": [239, 240, 242, 243, 244, 245, 246, 482], "batch": [239, 240, 242, 243, 244, 245, 246, 387], "better": [239, 240, 242, 243, 244, 245, 246, 402, 482, 484, 485], "stai": [239, 240, 242, 243, 244, 245, 246, 482], "becaus": [239, 240, 242, 243, 244, 245, 246, 417, 482, 485], "higher": [239, 240, 242, 243, 244, 245, 246, 481], "caus": [239, 240, 242, 243, 244, 245, 246], "timeout": [239, 240, 242, 243, 244, 245, 246, 437], "error": [239, 240, 242, 243, 244, 245, 246, 338, 481, 485], "graphql": [241, 245], "boolean": [241, 380, 482], "gtex": [242, 245], "ortholog": [244, 245, 481, 482], "xref": [245, 246], "complet": [245, 338, 343, 346, 356, 481, 482, 484], "consist": [245, 454, 481, 482], "thousand": [245, 482], "uniprot_isoform": 257, "raw": [259, 372, 476, 478, 479, 481, 482], "dictread": [259, 482], "bachman": 259, "2019": [259, 482], "assembl": 259, "phosphoproteom": 259, "normal": [259, 481, 482], "phosphosit": [259, 482, 484, 485], "biorxiv": 259, "1101": 259, "822668v3": 259, "only_evid": 260, "only_literatur": 260, "nonetyp": [260, 413], "cid": [263, 303, 305, 306, 307, 308], "ftp": [263, 437, 482], "simpler": 263, "lowercas": [263, 482], "prefer": [263, 481, 482], "sid": 263, "idlist": [265, 267, 269, 270], "pmc": [265, 267], "pmid": [265, 266, 267, 268, 396, 482], "strict": [267, 326, 327, 482], "compli": 267, "attempt": [267, 325, 424, 481, 482], "neither": [267, 482], "manuscript": [267, 484], "browser": [268, 482, 485], "acsn": [276, 421], "protein_name_typ": [277, 288], "mandatory_ref": [278, 286], "elem": 280, "cref": 285, "entity_uniprot": [285, 287], "complexvari": 285, "cplex": [285, 482], "stoichiometri": [285, 482], "control": [286, 424, 464, 482, 484], "biopax_fil": 288, "clean": [288, 482], "biopax": [288, 291, 481, 484], "binari": [288, 291, 437], "sbml": [289, 290, 292], "representationa": 290, "pathwaya": 290, "cachefil": [291, 323, 397], "ask": [291, 482], "appli": [291, 338, 413, 448, 482], "criteria": 291, "veri": [291, 481, 482, 485], "stringent": 291, "few": [291, 481, 482, 484], "free": [291, 413, 481, 482, 484], "approx": [291, 482], "2g": 291, "hierarchi": 295, "atc": [301, 305], "umls_concept_on_label": [302, 304], "umls_concept_in_meddra": [302, 304], "side_effect": [302, 304], "meddra_id": [303, 306], "side_effect_nam": [303, 306], "frequenc": [304, 307, 308], "float": 304, "uml": [307, 308], "concept": [307, 308, 482], "attent": 307, "sider_side_effect": 307, "20k": 307, "row": [307, 482, 485], "freq": 308, "independ": [308, 482], "coverag": [308, 423, 485], "ncbi_tax_id": [311, 313, 314, 315, 358, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 399, 482, 485], "score_threshold": [311, 313, 314, 315], "highest_confid": [311, 314, 315], "high_confid": [311, 314, 315], "medium_confid": [311, 314, 315], "low_confid": [311, 314, 315], "physical_interaction_scor": [311, 314], "link": 311, "subscor": [311, 314, 315], "defin": [311, 314, 315, 387, 413, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 485], "interactor": [311, 328], "we": [311, 314, 464, 476, 479, 481, 482, 483, 485], "minimum": [311, 314, 315], "pre": [311, 314, 315, 480], "confid": [311, 314, 315, 423, 482, 485], "stimul": [313, 482], "inhibit": [313, 482], "channel": [314, 315, 482, 485], "output": [314, 482], "form": [314, 437], "subnetwork": 315, "tax": [316, 387], "scientif": [316, 480], "switch": 319, "elm": [319, 417], "resolut": 319, "classifi": [319, 482, 485], "accord": [319, 389, 464, 482], "intract": 321, "save": [323, 480, 481], "next": [323, 431, 482], "pickl": [323, 480, 481], "dump": [323, 399, 431, 482], "By": [323, 338, 413, 446, 451, 482, 485], "soup": 324, "look": [324, 325, 328, 387, 399], "up": [324, 325, 328, 399, 482], "instanc": [324, 413, 424, 426, 437, 438, 452, 454, 460, 464, 481, 482, 485], "trip_get_uniprot": 324, "syn": [325, 482], "exclude_method": [326, 327], "infer": [326, 327, 482], "specul": [326, 327], "speci": [326, 327, 482, 484], "obtain": [326, 387, 397, 482], "trip_process": 326, "definit": [326, 413, 480, 481, 484], "dadio": 327, "take_a_trip": 327, "provcess": 327, "discard": 327, "bait": 327, "tab": [328, 338], "intr": 328, "trp_uniprot": 328, "tag": [328, 482], "fill": 328, "alreadi": [328, 413, 423, 482], "so": [328, 440, 446, 448, 451, 481, 482], "twice": 328, "trp": 328, "safeti": 330, "ac": [333, 481, 482], "uk": 333, "ucqueri": 333, "listsourc": 333, "id_type_a": [334, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 482], "id_type_b": [334, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 482], "integ": [334, 390, 391, 392, 393, 468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "unichem_sourc": 334, "unichem_info": 335, "ncbi_id": [337, 482], "latin": [337, 482], "english": [337, 482], "latin_synonym": [337, 482], "construct": [338, 437, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479], "readi": [338, 343, 346, 356, 482], "bypass": [338, 343, 346, 356], "simpl": [338, 343, 346, 356, 413, 481, 482, 485], "concaten": [338, 343, 346, 356], "nest": [338, 343, 346, 356, 482], "exampl": [338, 343, 346, 356, 389, 423, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 480, 481], "built": [338, 343, 346, 356, 387, 413, 480, 481], "sever": [338, 343, 346, 356, 481, 482], "query_build": [338, 346, 356, 482], "AND": [338, 343, 346, 356, 482, 485], "organism_id": [338, 343, 346, 356, 482], "abov": [338, 343, 346, 356, 375, 382, 386, 397, 481, 482, 485], "oper": [338, 343, 346, 356, 482], "within": [338, 343, 346, 356, 402, 454, 464, 476, 479, 481, 482, 485], "OR": [338, 343, 346, 356, 482], "10116": [338, 343, 346, 356, 482, 485], "op": [338, 343, 346, 356, 481, 482], "underscor": [338, 343, 346, 356, 404, 413, 482], "mass": [338, 343, 346, 356, 482], "50000": [338, 343, 346, 356, 482], "TO": [338, 343, 346, 356, 482], "lit_author": [338, 343, 346, 356, 482], "huang": [338, 343, 346, 356, 482], "kovac": [338, 343, 346, 356, 482], "_and": [338, 343, 346, 356, 482], "parenthes": [338, 343, 346, 356, 482], "interv": [338, 343, 346, 356, 454], "help": [338, 343, 346, 356, 480], "search": [338, 343, 346, 356], "syntax": [338, 343, 346, 356], "_field_synonym": [338, 346, 356], "return_field": [338, 346, 356], "__iter__": 338, "over": [338, 349, 484], "skip": [338, 459], "empti": [338, 402, 481, 482], "linebreak": 338, "split": [338, 484], "fail_on_empti": 338, "name_process": 338, "differ": [338, 387, 413, 481, 482, 484, 485], "appropri": [338, 481, 482], "especi": [338, 482, 484], "were": [338, 346, 356, 402, 482], "exactli": [338, 346, 356, 482, 485], "wa": [338, 346, 356, 481, 482], "kind": [338, 346, 356, 482, 485], "previou": [338, 346, 356], "urlencod": 338, "suitabl": [338, 482], "url_plain": 338, "plain": [338, 482], "entry_vers": [339, 482], "sequence_vers": [339, 482], "entry_nam": [339, 482], "replaced_bi": [339, 482], "archiv": [340, 437, 438], "delet": [340, 440, 441, 481, 482, 484], "secondari": [341, 404, 413, 481, 482], "primari": [341, 404, 413, 481, 482], "site": [343, 482, 484], "insert": 343, "confirm": [345, 347], "swissprot": [346, 358, 365, 366, 367, 368, 369, 370, 386, 387, 481, 482], "homo": [346, 482], "sapien": [346, 482], "trembl": [346, 368, 369, 370, 387, 481, 482], "cover": [346, 481, 482], "uniprotqueri": [346, 356, 482], "histori": [349, 480], "recent": [349, 481, 482], "oldest": [349, 481], "fit": [361, 482], "tell": [368, 369, 370, 482, 485], "consid": [370, 397, 482], "mappinginput": [375, 376, 377, 378, 381, 382, 383, 385, 386, 387], "pro_id_type_a": [375, 382], "pro": [375, 382, 482], "automat": [375, 382, 386, 481, 482, 484], "give": [375, 382, 386, 454, 482], "overrid": [375, 382, 386, 387], "pro_id_type_b": [375, 382], "just": [375, 382, 386, 480], "biomart_id_type_a": 376, "biomart_id_type_b": 376, "input_": 377, "col_a": 377, "col_b": 377, "paramat": [378, 383, 385], "metabolom": [378, 480, 481], "type_": 379, "resource_id_type_a": [379, 482], "resource_id_type_b": [379, 482], "input_method": [379, 399, 400, 482], "id_col_a": [380, 482], "id_col_b": [380, 482], "entity_type_a": 380, "entity_type_b": 380, "is_direct": [380, 482], "sign": [380, 421], "input": [380, 384, 387, 399, 480, 481, 484], "extra_edge_attr": [380, 482], "extra_node_attrs_a": 380, "extra_node_attrs_b": 380, "taxon_a": 380, "taxon_b": 380, "post_transl": [380, 413, 482], "positive_filt": 380, "negative_filt": 380, "mark_sourc": 380, "mark_target": 380, "input_arg": [380, 399, 423], "curl_arg": 380, "must_have_refer": 380, "huge": [380, 482, 483], "unique_field": 380, "expand_complex": 380, "allow_loop": [380, 482], "only_default_organ": 380, "creat": [380, 413, 437, 454, 481], "vertex": [380, 464, 468, 469, 470, 471, 472, 473, 482], "particular": [380, 389, 482], "vertic": [380, 464, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 482], "fname": [381, 482], "consortium": [382, 482], "ramp": [383, 480], "id_col": 384, "extra_attr": [384, 400, 482], "unichem": [385, 482, 484], "uniprot_id_type_a": 386, "uniprot_id_type_b": 386, "upload": 386, "webservic": [386, 480], "would": [387, 482, 483], "interest": [387, 480, 481, 483], "directli": [387, 404, 461, 480, 481, 485], "ye": 387, "To": [387, 482, 485], "programmat": [387, 482], "interfac": [387, 481, 482], "slightli": [387, 413], "capabl": 387, "some": [387, 402, 447, 452, 481, 482, 485], "former": [387, 482, 484], "latter": [387, 482], "static": 387, "resource_id_typ": 387, "known": [387, 482, 485], "full_nam": [389, 482], "purpos": [389, 413, 482], "attrib": [389, 413], "enabl": [389, 482], "academ": [389, 413, 482], "redistribut": [389, 413, 482, 484], "compat": [389, 413, 484], "alik": [389, 413], "licensefeatur": [390, 392, 393], "classmethod": [390, 391, 392, 393, 437], "check_level": [390, 391, 392, 393], "int_to_level": [390, 391, 392, 393], "nearest": [390, 391, 392, 393], "ordin": [390, 391, 392, 393], "scale": [390, 391, 392, 393, 476, 478, 479, 482], "level_to_int": [390, 391, 392, 393], "to_int": [390, 391, 392, 393], "featur": [390, 391, 392, 393, 480, 482], "pp": 397, "htp_threshold": 397, "20": [397, 482], "studi": [397, 481, 482], "high": [397, 482], "data_attr_nam": 399, "logger": [399, 413, 426, 437, 438, 460], "load_data": 399, "_process_method": 399, "set_method": 399, "evidence_typ": [400, 403, 405], "via": [400, 401, 403, 404], "id_type_enzym": [400, 482], "id_type_substr": 400, "organisms_support": 400, "resource_attr": 400, "resourceattribut": [400, 403], "get_via": 400, "copi": [400, 481, 482], "origin": [400, 480, 481, 484], "come": [400, 481, 482, 485], "data_typ": [401, 404, 405], "mutablemap": 402, "formerli": [402, 482], "thin": 402, "solut": [402, 482], "organis": 402, "clear": [402, 482], "d": [402, 423, 482], "k": [402, 482], "view": [402, 481], "pop": 402, "v": [402, 482], "found": [402, 482], "keyerror": 402, "popitem": 402, "setdefault": 402, "f": 402, "lack": [402, 417], "networkresourcekeybas": 404, "last": [404, 482], "came": 404, "brows": [410, 480], "logfil": [410, 482], "resource_info_path": 413, "posixpath": 413, "home": [413, 482], "runner": 413, "use_package_path": 413, "aim": [413, 481, 482], "central": [413, 482], "commun": [413, 480, 481, 484], "14": [413, 480, 482], "01": [413, 482], "2020": [413, 482], "initi": [413, 454, 482, 484], "step": [413, 449, 454, 482], "develop": [413, 481, 482], "info": [413, 480, 485], "02": [413, 482], "inherit": [413, 482], "make": [413, 426, 437, 438, 445, 451, 452, 460, 482, 485], "prepend": [413, 426, 437, 438, 460], "messag": [413, 426, 437, 438, 441, 444, 445, 460, 480, 485], "add_resource_attr": 413, "abstractresourc": 413, "It": [413, 431, 437, 438, 461, 481, 482, 485], "modifi": [413, 444], "place": [413, 482], "noth": [413, 441], "collect_interact": 413, "pathway_noref": [413, 482], "pathway_al": [413, 482], "activity_flow": [413, 482], "mirna_target": [413, 482], "dorothea": [413, 484, 485], "tfregulon": [413, 423], "omnipath": [413, 418, 420, 421, 480, 484, 485], "reaction_pc": 413, "enzyme_substr": [413, 482], "extra_direct": 413, "small_molecule_protein": [413, 482], "tf_mirna": [413, 482], "pathwaycommon": [413, 482, 484], "pathwaycommons_transcript": 413, "interaction_htp": 413, "interaction_misc": [413, 482], "ligand_receptor": [413, 482, 484], "lncrna_target": 413, "transcription_onebyon": [413, 482], "transcription_dorothea": 413, "ptm_noref": [413, 482], "ptm_all": [413, 482], "reaction_misc": [413, 482], "post_transcript": 413, "process_descript": 413, "drug_target": 413, "license_purpos": [413, 482], "commerci": 413, "profit": [413, 482], "license_shar": 413, "noderiv": 413, "noshar": 413, "deriv": [413, 468, 478, 482, 485], "license_attrib": 413, "noattrib": 413, "composit": [413, 482, 485], "incld": 413, "mani": [413, 437, 481, 482, 484, 485], "overlap": [413, 468, 469, 470, 471, 472, 473, 482], "among": [413, 482, 485], "while": [413, 437, 454, 481, 482], "safest": 413, "sequenti": 413, "legal": [413, 482], "desir": [413, 454, 468, 469, 470, 471, 472, 473], "condit": [413, 482], "alter": [413, 482], "even": [413, 442, 482, 484, 485], "mention": [413, 482], "who": 413, "networkinput": [413, 416, 417, 418, 419, 420, 421, 422, 423, 482], "__resource__": 413, "whole": [413, 482], "networkresourc": [413, 482], "equal": 413, "incid": 413, "flexibl": [413, 482], "collect_network": [413, 482], "license_filt": 413, "secondary_resourc": 413, "postfix": [413, 482], "tfacts_collectri": 413, "forc": [413, 454, 482], "remove_old": 413, "py": 413, "befor": [413, 454, 482], "potenti": [413, 482], "overwrit": 413, "adhesom": [416, 482], "intern": [416, 417, 418, 419, 420, 421, 422, 423, 482, 484], "input_format": [416, 417, 418, 419, 420, 421, 422, 423, 481, 482], "arn": [416, 482], "baccin2019": [416, 482], "ca1": [416, 482], "cellchatdb": [416, 482], "cellink": [416, 482], "cellphonedb": [416, 480], "celltalkdb": [416, 482], "connectomedb": [416, 482], "death": [416, 482], "guide2pharma": [416, 482], "hpmr": [416, 482], "icellnet": [416, 482], "lrdb": [416, 482], "macrophag": [416, 482], "pdz": [416, 482], "ramilowski2015": [416, 482], "scconnect": [416, 482], "signalink3": [416, 482, 485], "signor": [416, 423, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482, 485], "spike": [416, 482, 485], "talklr": [416, 482], "trip": [416, 482], "flow": [416, 485], "dbptm": [417, 482], "depod": [417, 482], "domino": 417, "hprd_p": 417, "iptmnet": [417, 482], "kea": [417, 482], "lmpid": 417, "phelm": 417, "psite": 417, "alz": 418, "ccmap": [418, 419], "dip": [418, 419], "innatedb": [418, 419], "lit17": 418, "matrixdb": [418, 419, 482], "mppi": [418, 419], "netpath": [418, 482], "regulatori": [419, 481, 484], "laudanna_direct": 420, "laudanna_effect": 420, "subset": 420, "undirect": [420, 468, 469, 470, 471, 472, 473, 482], "oreganno_old": 422, "ab": 423, "encode_dist": 423, "encode_prox": 423, "htri": 423, "medicu": 423, "oreganno": 423, "pazar": 423, "trrust": 423, "suffici": 423, "pa": [423, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482], "init_network": [423, 482], "b": [423, 482], "c": [423, 468, 469, 470, 471, 472, 473, 482], "reload": [424, 482], "instanti": [424, 482], "onc": [424, 437, 481, 482], "demand": [424, 482], "license_dir": 426, "actual": [431, 464, 482, 483], "typic": [431, 481, 482], "quicker": 431, "uniqu": [432, 482, 485], "similar": [432, 481, 482, 485], "cache_item": 432, "md5": 432, "hash": [432, 482], "anyth": [432, 440, 443, 464, 476, 479, 482], "cachedir": 433, "ensur": [433, 481, 482], "silent": 437, "post": 437, "req_head": [437, 482], "debug": [437, 446, 447, 452], "outf": [437, 459], "compr": [437, 438], "files_need": [437, 438], "connect_timeout": 437, "ignore_content_length": 437, "init_fun": 437, "get_jsessionid": 437, "init_use_cach": 437, "default_mod": [437, 438], "r": [437, 438, 481, 482, 485], "override_post": 437, "init_head": 437, "return_head": 437, "compress": [437, 438], "write_cach": 437, "force_quot": 437, "sftp_user": 437, "sftp_passwd": 437, "sftp_passwd_fil": 437, "sftp_port": 437, "22": [437, 439, 482, 485], "sftp_host": 437, "sftp_ask": 437, "setup": [437, 449, 482], "cache_dir": 437, "bypass_url_encod": 437, "empty_attempt_again": 437, "keep_fail": 437, "alpn": 437, "slow": [437, 482], "http2": 437, "fileopen": 437, "pycurl": [437, 482], "vast": [437, 482], "amount": [437, 482], "cooki": 437, "param": [437, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479], "multipart": 437, "quot": 437, "redirect": 437, "pointer": [437, 438], "gzip": [437, 438], "tar": [437, 438], "gz": [437, 438], "zip": [437, 438], "abl": [437, 481, 482], "show": [437, 482, 485], "progress": 437, "cache_path": 437, "close": [437, 482], "construct_binary_data": 437, "byte": 437, "is_quot": 437, "stackoverflow": 437, "question": [437, 481], "1637762": 437, "php": [437, 482], "open_tgz": [437, 438], "replace_forbidden": 437, "repl": 437, "_": 437, "charact": [437, 482], "forbidden": 437, "certain": [437, 438, 480], "slash": 437, "unix": 437, "window": 437, "environ": [437, 482], "set_binary_data": 437, "transmit": 437, "attach": [437, 468, 469, 470, 471, 472, 473], "filenam": [437, 439, 460, 482], "url_fix": 437, "charset": 437, "utf": [437, 438], "8": [437, 438, 480, 481, 482], "121017": 437, "854988": 437, "file_param": 438, "_open": 438, "set_fileobj": 438, "bz2": 438, "select": [438, 480, 485], "multifil": 438, "examin": 438, "host": [439, 482, 484], "port": 439, "rownam": 439, "_global_context_off": [440, 442, 444, 446, 448, 451], "context": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 464, 468, 469, 470, 471, 472, 473, 476, 479, 482], "handler": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452], "behaviour": [440, 443, 444, 448, 482], "won": [440, 443, 444, 482], "behind": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482], "scene": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482], "cachedel": [440, 441], "data_format": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482, 484], "load_resourc": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 482], "_global_context_on": [441, 443, 445, 447, 449, 452], "Then": [441, 482], "dryrun": [441, 448, 449], "turn": [441, 442, 443], "upon": [441, 482], "let": [441, 482], "know": [441, 482], "cache_on": 442, "As": [443, 444, 482, 485], "probabl": [443, 482], "cacheprint": [444, 445], "avoid": [446, 451, 468, 469, 470, 471, 472, 473, 481, 482], "restor": [446, 448, 451], "cache_debug_off": 446, "issu": [447, 452, 481], "want": [447, 452, 480, 481, 485], "cache_debug_on": 447, "cache_dryrun_off": 448, "cache_dryrun_on": 449, "itself": [451, 452, 482], "lastcurl": [451, 452, 482], "preserv": [451, 452, 482], "cache_preserve_off": 451, "cache_preserve_on": 452, "percent": 454, "done": [454, 481], "init": 454, "unit": 454, "had": 454, "my": [454, 481], "progressbar": 454, "now": [454, 482], "great": [454, 482], "tqdm": 454, "move": [454, 484], "oldprogress": 454, "get_desc": 454, "suppos": 454, "someth": [454, 481, 482], "constant": [454, 468, 469, 470, 471, 472, 473], "life": 454, "stage": [454, 482], "task": 454, "init_tqdm": 454, "set_don": 454, "posit": [454, 468, 469, 470, 471, 472, 473, 482], "bar": 454, "set_statu": 454, "set_tot": 454, "msg": [454, 482], "busi": 454, "termin": [454, 482], "finish": [454, 482], "destroi": 454, "xsize": 459, "intersect": 459, "cairotest": 459, "pdf": [459, 460], "width": 459, "1024": 459, "height": 459, "bgcol": 459, "embl_gray125": 459, "interscol": 459, "ysize": 459, "ycol": 459, "margin": [459, 460, 482], "24": [459, 482], "mincircl": 459, "cellpad": 459, "graph": [460, 461, 464, 467, 474, 476, 478, 479, 482, 484], "graphix_dir": 460, "graphix_format": 460, "title_text": 460, "title_font_famili": 460, "title_font_s": 460, "title_color": 460, "646567": 460, "layout": [460, 464, 476, 478, 479], "fruchterman_reingold": 460, "layout_param": 460, "vertex_label": 460, "vertex_s": [460, 482], "vertex_label_s": [460, 482], "degree_label_s": 460, "edge_width": [460, 482], "vertex_color": [460, 482], "6ea945": 460, "vertex_label_color": [460, 482], "007b7f": 460, "vertex_alpha": 460, "aa": [460, 482], "vertex_frame_color": 460, "ffffff00": 460, "vertex_frame_width": [460, 482], "edge_label": 460, "edge_label_s": 460, "edge_label_color": 460, "edge_curv": 460, "edge_color": [460, 482], "818284": 460, "edge_alpha": 460, "autocurv": 460, "vertex_label_font": 460, "san": 460, "serif": 460, "edge_label_font": 460, "edge_arrow_s": 460, "edge_arrow_width": 460, "palett": [460, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479], "bbox": [460, 464, 476, 479], "dimens": 460, "1280": 460, "draw": [461, 464, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "routin": [461, 474], "cairo": [461, 464, 468, 469, 470, 471, 472, 473, 476, 479, 482], "surfac": [461, 482], "l": [461, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "defaultgraphdraw": [461, 476, 478, 479], "ubigraph": 461, "displai": [461, 482], "ubigraphdraw": 461, "u": [461, 481, 482], "ubietylab": 461, "net": [461, 482], "igraph": [461, 464, 476, 478, 479, 480, 481, 484], "cytoscap": [461, 481, 482], "cytoscaperpc": 461, "plugin": 461, "gforg": 461, "nbic": 461, "nl": 461, "project": 461, "cytoscapegraphdraw": 461, "abstractcairographdraw": [463, 464, 465, 466], "vertex_drawer_factori": 464, "edge_drawer_factori": 464, "label_drawer_factori": 464, "visualis": 464, "2d": 464, "plane": 464, "straight": [464, 468, 469, 470, 471, 472, 473, 482], "curv": 464, "connect": [464, 481, 484, 485], "when": [464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 481, 482], "invok": 464, "plot": [464, 467, 480, 484], "__plot__": 464, "drawer": [464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "boundingbox": [464, 476, 479], "bound": [464, 476, 478, 479, 482], "box": [464, 476, 478, 479], "constructor": [464, 476, 479], "factori": 464, "abstractcairovertexdraw": [464, 479], "area": 464, "color": [464, 468, 469, 470, 471, 472, 473, 476, 478, 479], "defaultvertexdraw": 464, "abstractedgedraw": [464, 469, 470, 473], "style": [464, 467, 484, 485], "drawn": [464, 468, 469, 470, 471, 472, 473, 476, 478, 479], "arrowedgedraw": 464, "textdraw": 464, "abstract": [468, 476, 478], "concret": [468, 478], "draw_directed_edg": [468, 469, 470, 471, 472, 473], "src_vertex": [468, 469, 470, 471, 472, 473], "dest_vertex": [468, 469, 470, 471, 472, 473], "draw_loop_edg": [468, 469, 470, 471, 472, 473], "loop": [468, 469, 470, 471, 472, 473, 480], "circl": [468, 469, 470, 471, 472, 473], "draw_undirected_edg": [468, 469, 470, 471, 472, 473], "get_label_posit": [468, 469, 470, 471, 472, 473], "midpoint": [468, 469, 470, 471, 472, 473], "align": [468, 469, 470, 471, 472, 473], "tri": [468, 469, 470, 471, 472, 473], "x": [468, 469, 470, 471, 472, 473, 476, 478, 479], "y": [468, 469, 470, 471, 472, 473, 476, 478, 479, 482], "horizont": [468, 469, 470, 471, 472, 473], "taken": [468, 469, 470, 471, 472, 473], "textalign": [468, 469, 470, 471, 472, 473], "alpha_at_src": 469, "alpha_at_dest": 469, "vari": 469, "alpha": [469, 471, 472, 482], "destin": [469, 471, 472, 473], "arrow": 470, "alphavaryingedgedraw": [471, 472], "opac": [471, 472], "zero": [471, 472], "transpar": [471, 472], "interpol": [471, 472], "taper": 473, "wider": 473, "narrow": 473, "abstractvertexdraw": 476, "abstractcairodraw": 476, "canva": 476, "visual_vertex": [476, 478, 479], "coord": [476, 478, 479], "Its": [476, 478, 479, 482], "visualvertexbuild": [476, 478, 479], "coordin": [476, 478, 479, 481, 482], "algorithm": [476, 478, 479], "abstractdraw": 478, "welcom": [480, 482], "pypath": [480, 484, 485], "instal": 480, "doc": [480, 484], "manag": 480, "faq": 480, "contact": [480, 482], "impressum": 480, "releas": [480, 482], "mous": [480, 481, 482], "rat": 480, "role": [480, 481], "inter": [480, 481], "cellular": [480, 481], "explor": [480, 482], "32": [480, 482], "31": [480, 482], "74": [480, 482], "93": 480, "110": [480, 482], "11": [480, 482], "13": [480, 482], "upcom": 480, "how": [480, 481], "navig": 480, "introduct": 480, "app": [480, 481], "hmdb": 480, "swisslipid": 480, "lipid": 480, "self": 480, "sanit": 480, "intercellular": [480, 481, 484], "quantit": 480, "overview": 480, "intercel": [480, 481, 484, 485], "log": [480, 481, 484], "disabl": 480, "write": [480, 481], "bel": [480, 481, 484], "export": [480, 481, 484], "legaci": 480, "quickli": 480, "plai": 480, "causal": [480, 485], "out": [481, 482], "packag": [481, 482], "omnipathr": [481, 482], "popular": 481, "versatil": [481, 482, 484], "150": [481, 482], "don": [481, 482, 483, 485], "yourself": 481, "try": [481, 482], "builder": 481, "peopl": [481, 482], "satisfi": 481, "realli": [481, 482], "fresh": [481, 482], "pypi": [481, 482], "pip": 481, "git": 481, "github": [481, 482], "saezlab": 481, "comprehens": [481, 482, 484, 485], "guid": [481, 482], "experienc": 481, "well": [481, 482], "platform": 481, "biolog": [481, 482], "languag": [481, 482], "major": [481, 482, 484, 485], "distinguish": 481, "overal": [481, 482], "core": [481, 482, 484], "downlad": 481, "applic": [481, 482], "stand": 481, "alon": 481, "processor": 481, "begin": 481, "fundament": [481, 482], "design": [481, 482], "principl": 481, "todai": 481, "expos": 481, "rich": [481, 482], "five": [481, 482], "enz_sub": [481, 482, 485], "howev": [481, 482], "often": [481, 482], "get_db": [481, 482], "But": [481, 482], "subsequ": [481, 482], "easi": [481, 482], "mb": [481, 482], "gb": [481, 482], "long": [481, 482], "prone": 481, "truncat": [481, 482], "due": [481, 482], "interrupt": 481, "problemat": 481, "possibli": [481, 482], "anoth": [481, 482, 485], "sometim": [481, 482, 484, 485], "offlin": 481, "encount": 481, "fix": [481, 482, 484], "much": [481, 482, 484, 485], "faster": [481, 482], "still": [481, 482], "standalon": [481, 482], "script": [481, 482], "varieti": [481, 482, 485], "predefin": [481, 482], "map_nam": [481, 482], "p00533": [481, 482, 485], "genesymbol": [481, 482, 485], "egfr": [481, 482, 485], "homologen": [481, 482, 484, 485], "q01279": [481, 482], "run": [481, 482, 485], "doesn": [481, 482], "pyproject": 481, "toml": 481, "besid": [481, 482], "privat": 481, "sensit": 481, "matter": [481, 482], "feel": [481, 482], "omnipathdb": [481, 482, 485], "gmail": 481, "d\u00e9ne": 481, "t\u00fcrei": 481, "saez": 481, "contribut": 481, "scientist": 481, "erva": 481, "ulusoi": 481, "melih": 481, "darcan": 481, "\u00f6mer": 481, "kaan": 481, "vural": 481, "tennur": 481, "k\u0131l\u0131\u00e7": 481, "elif": 481, "\u00e7evrim": 481, "b\u00fcnyamin": 481, "\u015fen": 481, "atabei": 481, "\u00fcnl\u00fc": 481, "mert": 481, "erg\u00fcn": 481, "hu": [481, 482], "scienc": 481, "pi": [481, 482], "tunca": 481, "do\u011fan": 481, "leila": 481, "gul": 481, "dezs\u0151": 481, "m\u00f3do": 481, "m\u00e1rton": 481, "\u00f6lbei": 481, "tam\u00e1": 481, "korcsm\u00e1ro": 481, "korcsmaro": 481, "michael": 481, "klein": 481, "fabian": 481, "charl": 481, "taplei": 481, "hoyt": 481, "daniel": 481, "domingo": 481, "fern\u00e1ndez": 481, "ad": [481, 482], "olga": 481, "ivanova": 481, "introduc": 481, "sophia": 481, "m\u00fcller": 481, "dott": 481, "collectri": [481, 482], "nicol\u00e0": 481, "palacio": 481, "sebastian": 481, "lobentanz": 481, "ahmet": 481, "rifaioglu": 481, "mainten": [481, 482], "refactor": 481, "aurelien": 481, "dugourd": 481, "christina": 481, "schmidt": 481, "maintain": [481, 482], "francesco": 481, "ceccarelli": 481, "attila": 481, "g\u00e1bor": 481, "alberto": 481, "valdeoliva": 481, "logo": 481, "jakob": 481, "wirbel": 481, "graphic": 481, "spencer": 481, "phillip": 481, "embl": [481, 482], "bird": 481, "ey": 481, "15": 482, "16": 482, "17": 482, "18": 482, "19": 482, "21": 482, "segment": 482, "bioconductor": 482, "furthermor": 482, "enjoi": 482, "almost": [482, 484], "unlimit": 482, "tour": 482, "chanc": 482, "hesit": 482, "__version__": 482, "execut": 482, "0m": 482, "49": 482, "47": 482, "2023": 482, "03": 482, "09": 482, "39": 482, "36": 482, "easiest": 482, "henc": [482, 484, 485], "quick": 482, "34": 482, "27": 482, "2022": 482, "lt": 482, "databasemanag": 482, "0x602fb851cd90": 482, "gt": 482, "tf_target": [482, 485], "small_molecul": 482, "mirna_mrna": 482, "lncrna_mrna": 482, "offer": [482, 484], "cu": 482, "83": 482, "7980": 482, "35551": 482, "1m": 482, "55": 482, "18558": 482, "94358": 482, "tft": 482, "2m": 482, "72": 482, "54": 482, "18986": 482, "326708": 482, "mi": 482, "28": 482, "1264": 482, "3288": 482, "tmi": 482, "41": 482, "1032": 482, "4960": 482, "lnc": 482, "33": 482, "243": 482, "217": 482, "alloster": 482, "metabolit": [482, 484], "experiment": 482, "extend": 482, "futur": [482, 485], "smol": 482, "94": 482, "57": 482, "1980": 482, "3147": 482, "26": 482, "41426": 482, "co": 482, "28173": 482, "quit": 482, "43": 482, "60": 482, "5490653": 482, "50872": 482, "68": 482, "heavi": 482, "ic": 482, "23": 482, "37": 482, "301527": 482, "48570": 482, "biomed": 482, "troublesom": 482, "broken": 482, "daili": 482, "after": [482, 485], "cytosig": 482, "signor_interact": 482, "_interact": 482, "_enz_sub": 482, "_complex": 482, "_annot": 482, "intend": 482, "respect": 482, "fulli": 482, "_raw": 482, "_map": 482, "bring": 482, "state": 482, "though": [482, 485], "mai": 482, "observ": 482, "repeat": 482, "pattern": 482, "arbitrarili": 482, "toward": 482, "straightforward": 482, "outsid": 482, "signor_complex": 482, "intera": 482, "complexaggreg": 482, "p23511_p25208_q13952": 482, "nfy": 482, "p68104_p85299_q6r327_q8tb45_q9bvc4": 482, "mtorc2": 482, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 482, "mtorc1": 482, "p63208_q13616_q9y297": 482, "scf": 482, "betatrcp": 482, "q09472_q92793": 482, "cbp": 482, "p300": 482, "q09472_q92793_q92831": 482, "pcaf": 482, "q13485_q15796": 482, "smad2": [482, 485], "smad4": 482, "p84022_q13485": 482, "smad3": 482, "p05412_q13485": 482, "jun": 482, "q15796_q9hau4": 482, "smurf2": 482, "o15105_q01094_q13547": 482, "smad7": 482, "hdac1": 482, "e2f": 482, "p19838_q04206": 482, "nfkb": 482, "p65": 482, "p50": 482, "o14920_o15111": 482, "ik": 482, "1000": 482, "17699": 482, "readabl": 482, "52": 482, "signorinteract": 482, "o15530": 482, "source_isoform": 482, "target_isoform": 482, "source_typ": 482, "target_typ": 482, "phosphoryl": 482, "10455013": 482, "ptm_type": 482, "ptm_residu": 482, "ser396": 482, "ptm_motif": 482, "sssssshslsasdtg": 482, "q9nq66": 482, "18035": 482, "smallmolecul": 482, "quantiti": 482, "23880553": 482, "catalysi": 482, "p62136": 482, "o15169": 482, "down": 482, "dephosphoryl": 482, "17318175": 482, "ser77": 482, "yepegsasptppylk": 482, "sou": 482, "3285": 482, "signor_enzyme_substr": 482, "easier": 482, "enzymesubstrateaggreg": 482, "58": 482, "typ": 482, "resnum": 482, "396": 482, "389": 482, "403": 482, "resaa": 482, "enzyme_isoform": 482, "substrate_isoform": 482, "77": 482, "70": 482, "84": 482, "final": 482, "assign": [482, 485], "signor_pathway_annot": 482, "practic": 482, "o14733": 482, "48": 482, "signorpathwai": 482, "tnf": 482, "toll": 482, "haven": 482, "four": 482, "signor_protein_famili": 482, "famili": 482, "own": [482, 484], "pf2": 482, "53": 482, "q9hbw0": 482, "q92633": 482, "q9uby5": 482, "showcas": 482, "metabol": 482, "enzymat": 482, "closer": 482, "mysql": [482, 484], "ramp_list_t": 482, "51": 482, "analyt": 482, "rampid": 482, "analytehasontologi": 482, "rampcompoundid": 482, "rampontologyid": 482, "analytehaspathwai": 482, "pathwayrampid": 482, "pathwaysourc": 482, "analytesynonym": 482, "geneorcompound": 482, "catalyz": 482, "rampgeneid": 482, "chem_prop": 482, "ramp_id": 482, "chem_data_sourc": 482, "chem_source_id": 482, "iso_smil": 482, "inchi_key_prefix": 482, "inchi_kei": 482, "mw": 482, "monoisotop_mass": 482, "common_nam": 482, "mol_formula": 482, "db_version": 482, "ramp_vers": 482, "load_timestamp": 482, "version_not": 482, "met_intersects_json": 482, "gene_intersects_json": 482, "met_intersects_json_pw_map": 482, "gene_intersects_json_pw_map": 482, "db_sql_url": 482, "entity_status_info": 482, "status_categori": 482, "entity_source_id": 482, "entity_source_nam": 482, "entity_count": 482, "metabolite_class": 482, "class_source_id": 482, "class_level_nam": 482, "class_nam": 482, "commonnam": 482, "hmdbontologytyp": 482, "metcount": 482, "pathwayr": 482, "1368": 482, "ramp_raw": 482, "sqlite": 482, "conveni": 482, "At": 482, "bottleneck": 482, "thank": 482, "happen": 482, "25": [482, 485], "sourceid": 482, "idtyp": 482, "priorityhmdbstatu": 482, "datasourc": 482, "pathwaycount": 482, "hmdb0000001": 482, "ramp_c_000000001": 482, "methylhistidin": 482, "quantifi": 482, "hmdb0000479": 482, "50599": 482, "chemspid": 482, "83153": 482, "c01152": 482, "hmdb_kegg": 482, "756552": 482, "h0ydb7": 482, "ramp_g_000009307": 482, "rab38": 482, "null": 482, "wiki": 482, "756553": 482, "a0a024r191": 482, "756554": 482, "h0yea4": 482, "756555": 482, "entrez": 482, "23682": 482, "756556": 482, "gene_symbol": 482, "756557": 482, "physicochem": 482, "00": 482, "46": 482, "h": 482, "oc": 482, "o": 482, "n": 482, "c1": 482, "brmwtnujhumwm": 482, "lurjtmiesa": 482, "c7h11n3o2": 482, "169": 482, "181": 482, "085": 482, "cc1": 482, "cn": 482, "cn1c": 482, "jdhildinmrgul": 482, "27596": 482, "cn1cncc1c": 482, "methyl": 482, "histidin": 482, "cn1cnc": 482, "tele": 482, "ramp_c_000000002": 482, "hmdb0000002": 482, "ncccn": 482, "xfnjvjplkcpibv": 482, "uhfffaoysa": 482, "c3h10n2": 482, "c4": 482, "h1": 482, "5h2": 482, "1249": 482, "0844": 482, "diaminopropan": 482, "275898": 482, "ramp_c_000258279": 482, "lipidmap": 482, "lmpk15050003": 482, "ccccccccccccc": 482, "uxlmjhnfdrmgpw": 482, "ljqanchmsa": 482, "c24h38o6": 482, "422": 482, "267": 482, "hydroxi": 482, "methoxi": 482, "2r": 482, "acetoxi": 482, "pentadecyl": 482, "275899": 482, "ramp_c_000258280": 482, "lmpk15050004": 482, "cc": 482, "cvznklnahbtint": 482, "jochjyfzsa": 482, "c24h38o5": 482, "406": 482, "272": 482, "benzoq": 482, "275900": 482, "ramp_c_000226089": 482, "lmpk15050005": 482, "ccccccccccc": 482, "jiugzsypfredlg": 482, "hxuwfjfhsa": 482, "c22h34o5": 482, "378": 482, "241": 482, "tridecyl": 482, "benzoqui": 482, "275901": 482, "ramp_c_000258283": 482, "lmpk15050008": 482, "ccccccccccccccc": 482, "gxdurrguxldzkn": 482, "c21h34o4": 482, "350": 482, "246": 482, "suberonon": 482, "275902": 482, "ramp_c_000258284": 482, "lmpk15050009": 482, "amknobhckrzhio": 482, "c19h30o4": 482, "322": 482, "214": 482, "rapanon": 482, "275903": 482, "advantag": 482, "vice": 482, "versa": 482, "alwai": 482, "con": 482, "your": [482, 485], "disk": 482, "56": 482, "07": 482, "sqlite3": 482, "0x6fa1e9e4e940": 482, "big": 482, "enough": 482, "short": [482, 485], "period": 482, "format_byt": 482, "python_memory_usag": 482, "44": 482, "list_column": 482, "sql": 482, "subqueri": 482, "order": [482, 485], "distinct": 482, "ON": 482, "read_sql_queri": 482, "hmdb00001": 482, "104129": 482, "hmdb0126033": 482, "25882": 482, "104130": 482, "hmdb0141947": 482, "180150": 482, "104131": 482, "hmdb0128505": 482, "7870": 482, "104132": 482, "hmdb0130984": 482, "8227": 482, "104133": 482, "hmdb0130987": 482, "8630": 482, "104134": 482, "Such": 482, "easili": [482, 485], "ramp_map": 482, "ramp_id_typ": 482, "45": 482, "brenda": 482, "kegg_glycan": 482, "lipidbank": 482, "ncbiprotein": 482, "plantfa": 482, "wikidata": 482, "29": 482, "lmfa00000008": 482, "slm": 482, "000390048": 482, "lmfa01010001": 482, "000000510": 482, "lmfa01010002": 482, "000000449": 482, "lmfa01010003": 482, "000001194": 482, "lmfa01010004": 482, "000001195": 482, "lmfa01010005": 482, "000389552": 482, "lmfa01010006": 482, "000001196": 482, "lmfa01010007": 482, "000389947": 482, "lmfa01010008": 482, "000000853": 482, "lmfa01010010": 482, "000000855": 482, "lmfa01010011": 482, "000389946": 482, "lmfa01010012": 482, "000000719": 482, "lmfa01010013": 482, "000001198": 482, "lmfa01010014": 482, "000000825": 482, "lmfa01010015": 482, "000001199": 482, "lmfa01010017": 482, "000001095": 482, "lmfa01010019": 482, "000001205": 482, "lmfa01010020": 482, "000000829": 482, "lmfa01010021": 482, "000001207": 482, "lmfa01010022": 482, "000000827": 482, "lmfa01010023": 482, "000001128": 482, "lmfa01010024": 482, "000000414": 482, "lmfa01010026": 482, "000000539": 482, "lmfa01010027": 482, "000000980": 482, "lmfa01010028": 482, "000000540": 482, "lmfa01010030": 482, "000000543": 482, "lmfa01010032": 482, "000000544": 482, "lmfa01010034": 482, "00000": 482, "44684": 482, "got": 482, "63": 482, "30": 482, "lmst02030086": 482, "000485328": 482, "lmst02030087": 482, "000485330": 482, "lmsp06020013": 482, "000000534": 482, "lmst02020001": 482, "000001055": 482, "000485315": 482, "35218": 482, "lmpr0104010007": 482, "000389242": 482, "35219": 482, "lmpr0104030005": 482, "000390232": 482, "35220": 482, "lmpr0104030006": 482, "000390227": 482, "35221": 482, "lmpr01070626": 482, "000000432": 482, "35222": 482, "lmpr01090015": 482, "000389419": 482, "35223": 482, "get_mapp": 482, "38": 482, "medchemexpress": 482, "actor": 482, "affymetrix": 482, "alzforum": 482, "alzforum_mut": 482, "araport": 482, "atla": [482, 485], "bindingdb": 482, "carotenoiddb": 482, "cas_id": 482, "cgnc": 482, "chemicalbook": 482, "clinicaltri": 482, "clinic": 482, "7422": 482, "35": 482, "mapping_t": 482, "mappingtabledefinit": 482, "input_class": 482, "rampmap": 482, "3238": 482, "insight": 482, "99": 482, "131431": 482, "hmdb0094709": 482, "lxml": 482, "etre": 482, "minim": 482, "iter_metabolit": 482, "04": 482, "0x60b1846262c0": 482, "On": 482, "schema": 482, "instruct": 482, "metabolites_schema": 482, "direct_par": 482, "kingdom": 482, "sub_class": 482, "molecular_framework": 482, "alternative_par": 482, "findal": 482, "substitu": 482, "spectra": 482, "spectrum": 482, "spectrum_id": 482, "biological_properti": 482, "cellular_loc": 482, "biospecimen_loc": 482, "biospecimen": 482, "tissue_loc": 482, "tissu": [482, 485], "kegg_map_id": 482, "smpdb_id": 482, "experimental_properti": 482, "4037": 482, "proteins_schema": 482, "gene_properti": 482, "chromosome_loc": 482, "locu": 482, "gene_sequ": 482, "protein_properti": 482, "residue_numb": 482, "molecular_weight": 482, "theoretical_pi": 482, "polypeptide_sequ": 482, "transmembrane_region": 482, "region": 482, "signal_region": 482, "pfam": 482, "pfam_id": 482, "metabolite_associ": 482, "go_classif": 482, "go_class": 482, "go_id": 482, "general_refer": 482, "general_": 482, "2072": 482, "metabolites_raw": 482, "proteins_raw": 482, "head": 482, "peek": 482, "belong": 482, "cystein": 482, "thereof": 482, "amino": 482, "carboxi": 482, "hydrogen": 482, "glycin": 482, "heteroatom": 482, "carboxyl": 482, "acid": 482, "analogu": 482, "aromat": 482, "heteromonocycl": 482, "aralkylamin": 482, "azacycl": 482, "carbonyl": 482, "heteroaromat": 482, "hydrocarbon": 482, "imidazolyl": 482, "monoalkylamin": 482, "monocarboxyl": 482, "substitut": 482, "imidazol": 482, "oxid": 482, "132354": 482, "hmdb0000005": 482, "ketobutyr": 482, "hmdb0000008": 482, "hydroxybutyr": 482, "hmdb0000010": 482, "methoxyestron": 482, "hmdb0000011": 482, "hmdb0000012": 482, "deoxyuridin": 482, "hmdb0000014": 482, "deoxycytidin": 482, "hmdb0000015": 482, "cortexolon": 482, "hmdb0000016": 482, "deoxycorticosteron": 482, "hmdb0000017": 482, "pyridox": 482, "hmdb0000019": 482, "ketoisovaler": 482, "hmdb0000020": 482, "p": 482, "hydroxyphenylacet": 482, "hmdb0000021": 482, "iodotyrosin": 482, "hmdb0000022": 482, "methoxytyramin": 482, "hmdb0000023": 482, "hydroxyisobutyr": 482, "hmdb00": 482, "1291": 482, "gene_nam": 482, "nucleotidas": 482, "nt5e": 482, "deoxycytidyl": 482, "deaminas": 482, "dctd": 482, "ump": 482, "cmp": 482, "cmpk1": 482, "cytosol": 482, "1b": 482, "nt5c1b": 482, "1a": 482, "nt5c1a": 482, "deoxyribonucleotidas": 482, "nt5c": 482, "dck": 482, "mitochondri": 482, "nt5m": 482, "hydroxymethylglutaryl": 482, "coa": 482, "lyas": 482, "hmgcl": 482, "atp": 482, "citrat": 482, "synthas": 482, "acli": 482, "histon": 482, "acetyltransferas": 482, "ep300": 482, "pyruv": 482, "dehydrogenas": 482, "e1": 482, "subunit": 482, "beta": 482, "pdhb": 482, "acetyl": [482, 485], "acat2": 482, "creb": 482, "crebbp": 482, "diamin": 482, "acetyltransf": 482, "1478": 482, "metabolites_t": 482, "proteins_t": 482, "nameless": 482, "notat": 482, "_tabl": 482, "nc": 482, "ccc": 482, "tyeybosbbbhjiv": 482, "afendnxgafykqo": 482, "vkhmyheasa": 482, "12ccc": 482, "c3": 482, "wheuwnkscxykbu": 482, "qpwughhjsa": 482, "whbmmwsbfzvssr": 482, "gsvougtgsa": 482, "1o": 482, "n1c": 482, "nc1": 482, "mxhrcpnrjammim": 482, "shyzeuofsa": 482, "1c": 482, "o1": 482, "cktsbutuhbmzgz": 482, "12cc": 482, "whbhbvvogneclv": 482, "obqkjfggsa": 482, "zesrjspzrdmnhi": 482, "yfwfahhusa": 482, "c1o": 482, "hxacouqixzgnbf": 482, "1h": 482, "yl": 482, "propanediamin": 482, "propylenediamin": 482, "ketobutano": 482, "oxobutyr": 482, "met": 482, "hydroxybutano": 482, "meth": 482, "hydro": 482, "du": 482, "deo": 482, "5r": 482, "hydroxymet": 482, "desoxi": 482, "hydroxycorticosteron": 482, "cortodoxo": 482, "pregnen": 482, "dion": 482, "hydroxyp": 482, "hydroxymethylp": 482, "hmdb_synonym": 482, "propano": 482, "mhi": 482, "n1": 482, "dihydrochlorid": 482, "expand": 482, "prop": 482, "291": 482, "hydroxymethyl": 482, "isonicotin": 482, "292": 482, "pyridoxin": 482, "293": 482, "pyridoxinecarboxyl": 482, "294": 482, "pyridoxyl": 482, "295": 482, "296": 482, "300": 482, "care": 482, "combinatori": 482, "grow": 482, "taxonomy__alternative_par": 482, "taxonomy__class": 482, "taxonomy__descript": 482, "taxonomy__direct_par": 482, "taxonomy__kingdom": 482, "taxonomy__molecular_framework": 482, "taxonomy__sub_class": 482, "taxonomy__substitu": 482, "compoun": 482, "kno": 482, "amin": 482, "aralkyla": 482, "organopnictogen": 482, "comp": 482, "organonitrogen": 482, "aliphat": 482, "acycl": 482, "keton": 482, "keto": 482, "ket": 482, "fatti": 482, "alcohol": 482, "hy": 482, "unsubstitut": 482, "benzenoid": 482, "oxo": 482, "steroid": 482, "estrogen": 482, "homopolycycl": 482, "estran": 482, "oxost": 482, "hyd": 482, "pyrimidin": 482, "nucleosid": 482, "deoxyribonucleosid": 482, "aminopyrimidin": 482, "hydroxysteroid": 482, "oxosteroid": 482, "del": 482, "delta": 482, "carbo": 482, "pyridin": 482, "pyridinecarboxyl": 482, "heteromon": 482, "gave": 482, "birth": 482, "000": [482, 485], "2235": 482, "vinylog": 482, "organooxygen": 482, "2236": 482, "2237": 482, "2238": 482, "2239": 482, "2240": 482, "metabolites_map": 482, "proteins_map": 482, "c00109": 482, "c00526": 482, "c00847": 482, "c00881": 482, "c00986": 482, "c01089": 482, "c03205": 482, "ccc2": 482, "12c": 482, "c05299": 482, "c05488": 482, "c05984": 482, "pretti": 482, "fast": 482, "h3": 482, "6h": 482, "8h2": 482, "1h3": 482, "t6": 482, "m0": 482, "s1": 482, "constitut": 482, "isom": 482, "hydrid": 482, "tau": 482, "n3": 482, "81": 482, "figur": [482, 484], "hmdb_name": 482, "2024": 482, "06": 482, "swisslipids_tissu": 482, "0x6a4f241d0230": 482, "000056561": 482, "phosphatidylcholin": 482, "40": 482, "cell": [482, 485], "uberon": 482, "0001969": 482, "blood": 482, "plasma": [482, 485], "6814": 482, "lipids2uniprot": 482, "000056510": 482, "6806": 482, "000056525": 482, "6809": 482, "000056524": 482, "6808": 482, "000056509": 482, "6805": 482, "934": 482, "000098542": 482, "phosphatidylethanolamin": 482, "0000468": 482, "6239": 482, "caenorhabd": 482, "elegan": 482, "15918": 482, "935": 482, "000098543": 482, "15917": 482, "936": 482, "000098546": 482, "15916": 482, "937": 482, "000098549": 482, "15913": 482, "938": 482, "000098557": 482, "15910": 482, "939": 482, "tool": 482, "research": 482, "lmsd": 482, "sdf": 482, "lmsd_sdf": 482, "42": 482, "lmfa00000001": 482, "lipid_maps_structure_databas": 482, "comment": 482, "mol": 482, "lm_id": 482, "systematic_nam": 482, "methyloctadec": 482, "ynoyl": 482, "anhydrid": 482, "c40h66o5": 482, "vogbkcaaniaxci": 482, "h7": 482, "38h": 482, "34h2": 482, "6h3": 482, "ccccccc": 482, "ccccc": 482, "fa": 482, "o3": 482, "acetylen": 482, "10930192": 482, "chebi_id": 482, "178363": 482, "acyl": 482, "main_class": 482, "fa00": 482, "exact_mass": 482, "626": 482, "491025": 482, "48116": 482, "len": 482, "1803": 482, "And": [482, 485], "pc": 482, "lmgp01010888": 482, "9z": 482, "octadecenoyl": 482, "octadecanoyl": 482, "sn": 482, "glycero": 482, "phosphocholin": 482, "c44h86no8p": 482, "nmjcstnqfypvor": 482, "vhonouadsa": 482, "50": 482, "h20": 482, "42h": 482, "41h2": 482, "5h3": 482, "b22": 482, "t42": 482, "m1": 482, "cop": 482, "occ": 482, "ccccccccccccccccc": 482, "coc": 482, "cccccccc": 482, "cholin": 482, "phosphat": 482, "ester": 482, "oleo": 482, "stearin": 482, "oleoyl": 482, "stearoyl": 482, "lecithin": 482, "ospc": 482, "0_18": 482, "24778936": 482, "hmdb_id": 482, "hmdb0008102": 482, "76073": 482, "swisslipids_id": 482, "000012": 482, "2352": 482, "08": 482, "000012332": 482, "na": 482, "2290": 482, "esummari": 482, "eutil": 482, "6063": 482, "uid": 482, "gd": 482, "gpl": 482, "erank": 482, "8esiq": 482, "evalu": 482, "joaz": 482, "titl": 482, "diurnal": 482, "circadian": 482, "arabidopsi": 482, "thaliana": 482, "gdstype": 482, "profil": 482, "valtyp": 482, "ratio": 482, "idref": 482, "genenam": 482, "genedesc": 482, "ugnam": 482, "at4g11560": 482, "ugdesc": 482, "bromo": 482, "adjac": 482, "bah": 482, "nucdesc": 482, "9366": 482, "lambda": 482, "prl2": 482, "cdna": 482, "clone": 482, "135j10t7": 482, "entrez_gene_id": 482, "gbacc": 482, "t46103": 482, "ptacc": 482, "cloneid": 482, "orf": 482, "spotid": 482, "vmin": 482, "395000": 482, "vmax": 482, "201000": 482, "a1b3c1": 482, "abscal": 482, "aflag": 482, "aoutl": 482, "rstd": 482, "rmean": 482, "get_pubm": 482, "33209674": 482, "pubdat": 482, "oct": 482, "epubd": 482, "transl": 482, "androl": 482, "urol": 482, "kim": 482, "authtyp": 482, "clusterid": 482, "lee": 482, "sh": 482, "dh": 482, "jy": 482, "hong": 482, "ih": 482, "lastauthor": 482, "gemcitabin": 482, "versu": 482, "chemotherapi": 482, "patient": 482, "metastat": 482, "urotheli": 482, "carcinoma": 482, "retrospect": 482, "sorttitl": 482, "volum": 482, "2113": 482, "2121": 482, "lang": 482, "eng": 482, "2263": 482, "1956": 482, "epiderm": 482, "growth": 482, "factor": [482, 485], "currentid": 482, "chromosom": 482, "geneticsourc": 482, "genom": 482, "maploc": 482, "7p11": 482, "otheralias": 482, "erbb": 482, "erbb1": 482, "errp": 482, "her1": 482, "nisbd2": 482, "pig61": 482, "mena": 482, "otherdesign": 482, "viii": 482, "avian": 482, "erythroblast": 482, "leukemia": 482, "viral": 482, "erb": 482, "oncogen": 482, "homolog": [482, 485], "prolifer": 482, "induc": 482, "61": 482, "tyrosin": 482, "b2": 482, "proto": 482, "nomenclaturesymbol": 482, "nomenclaturenam": 482, "nomenclaturestatu": 482, "mim": 482, "131550": 482, "genomicinfo": 482, "chrloc": 482, "chraccver": 482, "nc_000007": 482, "chrstart": 482, "55019016": 482, "chrstop": 482, "55211627": 482, "exoncount": 482, "geneweight": 482, "580393": 482, "5417": 482, "90": 482, "min": 482, "awar": 482, "hundr": 482, "dozen": [482, 485], "sooner": 482, "later": 482, "accid": 482, "recommend": 482, "remain": 482, "cache_delete_on": 482, "depod_enzyme_substr": 482, "59": 482, "cache_off": 482, "cache_print_on": 482, "dry_run_on": 482, "wrong": 482, "debug_on": 482, "curl_connect_timeout": 482, "establish": 482, "curl_extended_timeout": 482, "exception": 482, "curl_retri": 482, "curl_timeout": 482, "360": 482, "deep": 482, "stack": 482, "investig": 482, "difficult": 482, "preserve_on": 482, "kept": 482, "depod_curl": 482, "0x6947386dc8b0": 482, "fileobj": 482, "bioss": 482, "uni": 482, "freiburg": 482, "de": 482, "depod_201405_human_phosphatas": 482, "mitab": 482, "_io": 482, "textiowrapp": 482, "dene": 482, "6a711369ecf9dcff8c5ed88996685b54": 482, "mode": 482, "iso": 482, "8859": 482, "okai": 482, "wether": 482, "successfulli": 482, "night": 482, "transient": 482, "disappear": 482, "dai": 482, "perman": 482, "mayb": 482, "third": 482, "parti": 482, "lot": [482, 484], "notebook": 482, "pypath_log": 482, "s3e92": 482, "535b06d53a59e75bb693369bc5fdc556": 482, "112963": 482, "verifi": 482, "certif": 482, "invalid": 482, "expir": 482, "miss": 482, "softwar": 482, "encrypt": 482, "trust": 482, "reach": [482, 483], "root": [482, 484], "global": 482, "everi": [482, 484], "comput": 482, "program": 482, "correctli": 482, "admin": 482, "duti": 482, "procedur": 482, "97": 482, "scan": 482, "cipher": 482, "libcurl": 482, "anaconda": 482, "java": 482, "mozilla": 482, "firefox": 482, "seriou": 482, "strong": 482, "think": 482, "written": 482, "rc": 482, "get_control": 482, "resourcecontrol": 482, "0x6cc25e25dcf0": 482, "BY": 482, "sa": 482, "aspect": [482, 485], "pw_academ": 482, "pw_commerci": 482, "pdzbase": 482, "No": 482, "nar": 482, "gplv3": 482, "mit": 482, "net_academ": 482, "net_commerci": 482, "79": 482, "6833": 482, "25607": 482, "6429": 482, "23288": 482, "usabl": 482, "400": 482, "fine": 482, "grain": 482, "analysi": [482, 484], "expert": 482, "thought": 482, "owner": 482, "permiss": 482, "pai": 482, "fee": 482, "product": 482, "yearusedreleas": 482, "2015": 482, "2009": 482, "2011": 482, "bioinformat": 482, "oxfordjourn": 482, "690": 482, "d1": 482, "d321": 482, "suppl_1": 482, "d235": 482, "univ": 482, "lyon1": 482, "fr": 482, "omictool": 482, "19147664": 482, "20852260": 482, "25378329": 482, "mammalia": 482, "extracellular": [482, 485], "bairoch": 482, "partner": [482, 485], "repor": 482, "4479": 482, "197": 482, "collect_enzyme_substr": 482, "enzymesubstrateresourc": 482, "phosphoelm": 482, "li2012": 482, "phosphonetwork": [482, 485], "mimp": 482, "protmapp": 482, "202": 482, "phosphoelm_enzyme_substr": 482, "larger": 482, "netr": 482, "deathdomain": 482, "1864": 482, "05": 482, "7979": 482, "35550": 482, "8002": 482, "35748": 482, "older": 482, "mentin": 482, "focu": 482, "sinc": 482, "constraint": 482, "unbias": 482, "interactom": 482, "screen": 482, "vidal": 482, "lncrna_protein": 482, "guarante": 482, "moment": 482, "dict_kei": 482, "connectomedb2020": 482, "popul": 482, "trpc1": 482, "kcnma1": 482, "ppp3ca": 482, "calm2": 482, "calm3": 482, "calm1": 482, "casp1": 482, "casp4": 482, "cacna1c": 482, "cav1": 482, "ev": 482, "118492": 482, "sync": 482, "facilit": 482, "p48995": 482, "q12791": 482, "q08209": 482, "p0dp24": 482, "p0dp25": 482, "p0dp23": 482, "p29466": 482, "p49662": 482, "q13936": 482, "q03135": 482, "p56539": 482, "cav3": 482, "q14247": 482, "cttn": 482, "p14416": 482, "drd2": 482, "p11532": 482, "dmd": 482, "p11362": 482, "fgfr1": 482, "q02790": 482, "fkbp4": 482, "q86ym7": 482, "homer1": 482, "q9nsc5": 482, "homer3": 482, "q99750": 482, "mdfi": 482, "q14571": 482, "itpr2": 482, "q14573": 482, "itpr3": 482, "p29966": 482, "marck": 482, "q13255": 482, "grm1": 482, "p20591": 482, "mx1": 482, "p62166": 482, "ncs1": 482, "q96d31": 482, "orai1": 482, "q96sn7": 482, "orai2": 482, "q9brq5": 482, "orai3": 482, "p11171": 482, "epb41": 482, "p61586": 482, "rhoa": 482, "q9y225": 482, "rnf24": 482, "p21817": 482, "ryr1": 482, "p16615": 482, "atp2a2": 482, "q93084": 482, "atp2a3": 482, "p60880": 482, "snap25": 482, "q13586": 482, "sti": 482, "30573": 482, "egf": 482, "fantom5": 482, "cellsign": 482, "similarli": 482, "ia": 482, "get_resource_nam": 482, "get_refer": 482, "10085134": 482, "10209155": 482, "10788520": 482, "12093292": 482, "12297050": 482, "12620237": 482, "12648462": 482, "15620700": 482, "16274239": 482, "17145710": 482, "19531499": 482, "20458382": 482, "21071413": 482, "23331499": 482, "3494473": 482, "6289330": 482, "8639530": 482, "get_direct": 482, "opposit": 482, "get_sign": 482, "get_": 482, "get_interaction_typ": 482, "_by_": 482, "references_by_resourc": 482, "get_interactions_posit": 482, "Or": [482, 485], "make_df": 482, "type_a": 482, "type_b": 482, "dmodel": 482, "nan": 482, "44033": 482, "q14289": 482, "q9ulz3": 482, "44034": 482, "p54646": 482, "q9y2i7": 482, "44035": 482, "q9bxm7": 482, "q9y2n7": 482, "44036": 482, "p49137": 482, "q9y385": 482, "44037": 482, "q9uhc7": 482, "p04637": 482, "44038": 482, "unique_pair": 482, "65": 482, "source_genesymbol": 482, "target_genesymbol": 482, "is_stimul": 482, "is_inhibit": 482, "consensus_direct": 482, "consensus_stimul": 482, "consensus_inhibit": 482, "19168436": 482, "25139746": 482, "23228564": 482, "11290752": 482, "11983166": 482, "12601176": 482, "36729": 482, "ptk2b": 482, "pycard": 482, "27796369": 482, "36730": 482, "prkaa2": 482, "pikfyv": 482, "24070423": 482, "36731": 482, "pink1": 482, "hif3a": 482, "27551449": 482, "36732": 482, "mapkapk2": 482, "ube2j1": 482, "24020373": 482, "36733": 482, "mkrn1": 482, "tp53": 482, "19536131": 482, "36734": 482, "extra_node_attr": 482, "customis": 482, "webservice_interactions_df": 482, "dorothea_tfb": 482, "dorothea_coexp": 482, "dorothea_level": [482, 485], "curation_effort": 482, "ncbi_tax_id_sourc": 482, "entity_type_sourc": 482, "ncbi_tax_id_target": 482, "entity_type_target": 482, "trip_method": 482, "immunoprecipit": 482, "fluoresc": 482, "downstream": 482, "benefici": 482, "undesir": 482, "grn": 482, "network_allow_loop": 482, "wish": 482, "pw": 482, "gr": 482, "count_loop": 482, "149": 482, "count_interactions_by_interaction_typ": 482, "33571": 482, "281262": 482, "soon": 482, "nucleic": 482, "mandatori": [482, 484, 485], "topologi": [482, 485], "network_expand_complex": 482, "pharmacologi": 482, "count_complex": 482, "get_complex": 482, "fos_jun": 482, "fos_junb": 482, "fos_jund": 482, "fosl1_jun": 482, "fosl2_jun": 482, "jun_junb": 482, "jun_jund": 482, "fosb_jun": 482, "fosl1_junb": 482, "fosl1_jund": 482, "fosl2_junb": 482, "fosl2_jund": 482, "junb": 482, "junb_jund": 482, "fosb_junb": 482, "jund": 482, "fosb_jund": 482, "nfkb1": 482, "nfkb1_nfkb2": 482, "nfkb1_relb": 482, "nfkb1_rela": 482, "nfkb1_rel": 482, "nfkb2": 482, "nfkb2_relb": 482, "nfkb2_rela": 482, "nfkb2_rel": 482, "relb": 482, "rela_relb": 482, "rel_relb": 482, "rela": 482, "rel_rela": 482, "rel": 482, "cplex_ent": 482, "q04206_q04864": 482, "isinst": 482, "p17535": 482, "p15407": 482, "p04040": 482, "cat": 482, "extri_collectri": 482, "10022519": 482, "10329043": 482, "collectr": 482, "p05412": 482, "p15408": 482, "p17275": 482, "54980": 482, "p01100": 482, "p01270": 482, "pth": 482, "9989817": 482, "54981": 482, "54982": 482, "p53539": 482, "54983": 482, "54984": 482, "23235": 482, "iloc": 482, "p15407_p17535": 482, "p01106": 482, "o14746": 482, "myc": 482, "tert": 482, "75": 482, "67945": 482, "q01196": 482, "q13094": 482, "runx1": 482, "lcp2": 482, "67946": 482, "q6mzq0": 482, "prr5l": 482, "67947": 482, "q15672": 482, "p08151": 482, "twist1": 482, "gli1": 482, "67948": 482, "p22415": 482, "q5sre5": 482, "usf1": 482, "nup188": 482, "67949": 482, "q9uqr1": 482, "q5vyx0": 482, "znf148": 482, "rnl": 482, "67950": 482, "familiar": 482, "to_csv": 482, "kinaseextra": [482, 485], "ligrecextra": [482, 485], "pathwayextra": [482, 485], "mirnatarget": [482, 485], "dorothea_cur": 482, "dorothea_chipseq": 482, "ncomplex": 482, "12036993": 482, "12538496": 482, "17935786": 482, "7489329": 482, "7651432": 482, "7818486": 482, "8867782": 482, "9030359": 482, "9136992": 482, "9142914": 482, "9168892": 482, "9687385": 482, "p05412_p15408": 482, "extri_c": 482, "1004": 482, "ambigu": 482, "unambigu": 482, "map_name0": 482, "random": 482, "gabarapl3": 482, "q9by60": 482, "shortcut": 482, "id_from_label": 482, "o75385": 482, "ulk1": [482, 485], "id_from_label0": 482, "certainli": 482, "q15796": 482, "effici": 482, "q62432": 482, "8408": 482, "chain_map": 482, "by_id_typ": 482, "autumn": 482, "uniprotmap": 482, "uploadlist": 482, "outdat": 482, "inputs_format": 482, "uniprotlistmap": 482, "biomartmap": 482, "arraymap": 482, "promap": 482, "unichemmap": 482, "filemap": 482, "mirbas": 482, "hmdbmap": 482, "fly": 482, "mapread": 482, "mappingt": 482, "mapper": 482, "dispatch": 482, "geneid": 482, "hgnc": 482, "refseqp": 482, "input_cl": 482, "29850": 482, "eas": 482, "ac_queri": 482, "ac_map": 482, "biomart_map": 482, "pro_map": 482, "array_map": 482, "bigg": 482, "biocyc": 482, "cas_registry_numb": 482, "ch": 482, "8561": 482, "tbl": 482, "translation_dict": 482, "20243": 482, "q00604": 482, "ndp": 482, "q9hb19": 482, "plekha2": 482, "q16718": 482, "ndufa5": 482, "p55769": 482, "snu13": 482, "q92886": 482, "neurog1": 482, "q6t4r5": 482, "nh": 482, "p80188": 482, "lcn2": 482, "q86xr2": 482, "fam129c": 482, "q5t2w1": 482, "pdzk1": 482, "q9bsh3": 482, "nicn1": 482, "translation_df": 482, "20375": 482, "q96l92": 482, "snx27": 482, "20376": 482, "q9unh6": 482, "snx7": 482, "20377": 482, "q5vwj9": 482, "snx30": 482, "20378": 482, "q9bzz2": 482, "siglec1": 482, "20379": 482, "q96bd0": 482, "slco4a1": 482, "20380": 482, "matrix": [482, 485], "oma": 482, "ensembl_hc": 482, "ensembl_typ": 482, "one2on": 482, "human_mouse_genesymbol": 482, "get_dict": 482, "confdenc": 482, "full_record": 482, "omaortholog": 482, "rel_typ": 482, "12704": 482, "5703125": 482, "get_df": 482, "h4c3": 482, "h4c1": 482, "1262": 482, "050049": 482, "h4c12": 482, "h4c11": 482, "h4c9": 482, "18446": 482, "gdap2": 482, "5553": 482, "779785": 482, "18447": 482, "itga8": 482, "10772": 482, "969727": 482, "18448": 482, "sema3f": 482, "9121": 482, "080078": 482, "18449": 482, "eepd1": 482, "5874": 482, "350098": 482, "18450": 482, "drg2": 482, "4423": 482, "589844": 482, "18451": 482, "everywher": 482, "deal": 482, "hsapien": 482, "ensmebl": 482, "genu": 482, "space": 482, "hsa": 482, "ensure_ncbi_tax_id": 482, "ensure_latin_nam": 482, "cow": 482, "bo": 482, "tauru": 482, "ensure_common_nam": 482, "erithacu": 482, "rubecula": 482, "european": 482, "robin": 482, "uniprot_taxid": 482, "unfortun": 482, "p53104": 482, "saccharomyc": 482, "cerevisia": 482, "divers": 482, "essenti": 482, "proteom": 482, "averag": 482, "harbor": 482, "littl": 482, "unload": 482, "119": 482, "iuniprot": 482, "all_swissprot": 482, "all_trembl": 482, "3m": 482, "86440": 482, "17131": 482, "69300": 482, "against": [482, 485], "124": 482, "valid_uniprot": 482, "a0a8d0h0c2": 482, "inde": 482, "125": 482, "is_uniprot": 482, "122": 482, "is_swissprot": 482, "123": 482, "126": 482, "protein_datasheet": 482, "egfr_human": 482, "1210": 482, "o00688": 482, "o00732": 482, "p06268": 482, "q14225": 482, "q68gs5": 482, "q92795": 482, "q9bzs2": 482, "q9gzx1": 482, "q9h2c9": 482, "q9h3c9": 482, "q9umd7": 482, "q9umd8": 482, "q9umg5": 482, "dt": 482, "jul": 482, "1986": 482, "nov": 482, "1997": 482, "283": 482, "recnam": 482, "eco": 482, "0000305": 482, "altnam": 482, "flag": 482, "precursor": 482, "gn": 482, "0000312": 482, "3236": 482, "eukaryota": 482, "metazoa": 482, "chordata": 482, "craniata": 482, "vertebrata": 482, "euteleostomi": 482, "eutheria": 482, "euarchontoglir": 482, "primat": 482, "haplorrhini": 482, "catarrhini": 482, "hominida": 482, "ox": 482, "ncbi_taxid": 482, "rn": 482, "rp": 482, "nucleotid": 482, "isoform": [482, 485], "58080": 482, "131": 482, "egfr_histori": 482, "uniprot_histori": 482, "uniprotrecordhistori": 482, "2022_04": 482, "282": 482, "2022_03": 482, "281": 482, "2022_02": 482, "280": 482, "2022_01": 482, "279": 482, "2021_04": 482, "2021": 482, "278": 482, "50933": 482, "132": 482, "uniprot_recent_vers": 482, "133": 482, "uniprot_history_recent_datasheet": 482, "deploi": 482, "transit": 482, "uniprot_data": 482, "uniprot_queri": 482, "situat": 482, "uniprot_preprocess": 482, "clutter": 482, "transmembran": [482, 485], "a0a087x1c5": 482, "cytochrom": 482, "p450": 482, "a0a0b4j2f2": 482, "superfamili": 482, "camk": 482, "ser": 482, "thr": 482, "ampk": 482, "subfamili": 482, "a0a0k2s4q6": 482, "cd300": 482, "a0a1b0gtw7": 482, "peptidas": 482, "m8": 482, "a0av02": 482, "slc12a": 482, "transport": 482, "a0av96": 482, "rrm": 482, "rbm47": 482, "a0avf1": 482, "ift56": 482, "a0avi4": 482, "tmem129": 482, "a0avk6": 482, "dp": 482, "a0avt1": 482, "ubiquitin": [482, 485], "a0fgr8": 482, "synaptotagmin": 482, "a0fgr9": 482, "a0jlt2": 482, "mediat": 482, "a0jp26": 482, "pote": 482, "a0mz66": 482, "shootin": 482, "a0pjk1": 482, "sodium": 482, "symport": 482, "ssf": 482, "tc": 482, "a0pjy2": 482, "krueppel": 482, "c2h2": 482, "zinc": 482, "finger": 482, "a0pk00": 482, "tmem120": 482, "a0pk11": 482, "clarin": 482, "a1a4y4": 482, "trafac": 482, "dynamin": 482, "gtpase": 482, "irg": 482, "a1a519": 482, "fam170": 482, "a1a5b4": 482, "anoctamin": 482, "a1a5c7": 482, "orga": 482, "510530": 482, "uiprot": 482, "funcion": 482, "up000004102": 482, "d1ym56": 482, "d1ymj2": 482, "d1yn32": 482, "d1ynb3": 482, "d1ypz1": 482, "d1yr07": 482, "d1yr15": 482, "d1yr93": 482, "d1yrb4": 482, "d1yrb7": 482, "cleaner": 482, "imperfect": 482, "job": 482, "badli": 482, "fragment": 482, "136": 482, "uniprot_taxonomi": 482, "p00521": 482, "abelson": 482, "murin": 482, "viru": 482, "p03333": 482, "h8zm73": 482, "abi": 482, "balsamea": 482, "balsam": 482, "fir": 482, "pinu": 482, "h8zm71": 482, "q9mv51": 482, "firma": 482, "momi": 482, "o81086": 482, "grandi": 482, "grand": 482, "o24474": 482, "o24475": 482, "o64404": 482, "o64405": 482, "q948z0": 482, "q9m7d1": 482, "q9m7d0": 482, "o22340": 482, "q9m7c9": 482, "q5k3v1": 482, "homolepi": 482, "nikko": 482, "p21715": 482, "abrothrix": 482, "jelskii": 482, "akodon": 482, "jelski": 482, "altiplano": 482, "p11140": 482, "abru": 482, "56985": 482, "139": 482, "uniprot_ncbi_taxids_2": 482, "648330": 482, "aed": 482, "albopictu": 482, "densoviru": 482, "isol": 482, "boublik": 482, "1994": 482, "aaldnv": 482, "10804": 482, "adeno": 482, "aav": 482, "648242": 482, "srivastava": 482, "1982": 482, "118452": 482, "abacion": 482, "magnum": 482, "milliped": 482, "72259": 482, "abaei": 482, "nicipp": 482, "sleepi": 482, "orang": 482, "butterfli": 482, "eurema": 482, "102642": 482, "abax": 482, "parallelepipedu": 482, "ground": 482, "beetl": 482, "392897": 482, "abalist": 482, "stellari": 482, "starri": 482, "triggerfish": 482, "balist": 482, "75332": 482, "abbottina": 482, "rivulari": 482, "chines": 482, "gudgeon": 482, "gobio": 482, "515833": 482, "abdopu": 482, "aculeatu": 482, "engl": 482, "118050": 482, "140": 482, "uniprot_loc": 482, "q96ec8": 482, "uniprotloc": 482, "golgi": 482, "apparatu": 482, "membran": [482, 485], "q6zms4": 482, "nucleu": 482, "q8n8l2": 482, "q15916": 482, "q3mis6": 482, "q6p280": 482, "q969w1": 482, "endoplasm": 482, "reticulum": 482, "o14978": 482, "q66k41": 482, "q15937": 482, "q9p2j8": 482, "q8nd82": 482, "q9np64": 482, "nucleolu": 482, "143466": 482, "141": 482, "uniprot_keyword": 482, "p63120": 482, "uniprotkeyword": 482, "aspartyl": 482, "proteas": 482, "autocatalyt": 482, "cleavag": 482, "erv": 482, "hydrolas": 482, "ribosom": 482, "frameshift": 482, "transpos": 482, "splice": 482, "helix": 482, "metal": 482, "unipro": 482, "445111": 482, "142": 482, "uniprot_famili": 482, "uniprotfamili": 482, "a2": 482, "herv": 482, "ii": 482, "hml": 482, "yip1": 482, "q86uk7": 482, "znf598": 482, "dhhc": 482, "palmitoyltransferas": 482, "q8iuh4": 482, "77892": 482, "143": 482, "uniprot_tissu": 482, "uniprottissu": 482, "brain": 482, "wide": 482, "undefin": 482, "colon": 482, "heart": 482, "kidnei": 482, "leukocyt": 482, "liver": 482, "lung": 482, "ovari": 482, "pancrea": 482, "placenta": 482, "prostat": 482, "skelet": 482, "muscl": [482, 485], "intestin": 482, "spleen": 482, "testi": 482, "318790": 482, "144": 482, "uniprot_topologi": 482, "uniprottopologi": 482, "cytoplasm": 482, "137": 482, "146": 482, "206": 482, "212": 482, "lumen": 482, "106": 482, "115": 482, "168": 482, "184": 482, "234": 482, "236": 482, "85": 482, "105": 482, "116": 482, "147": 482, "167": 482, "185": 482, "205": 482, "213": 482, "233": 482, "138": 482, "198": 482, "288": 482, "377": 482, "220": 482, "544230": 482, "bulk": 482, "153": 482, "q14457": 482, "becn1": 482, "154": 482, "156": 482, "weight": 482, "subcellular_loc": 482, "112631": 482, "1050": 482, "preautophagosom": 482, "starvat": 482, "puncat": 482, "primarili": 482, "sequest": 482, "portion": 482, "autophagosom": 482, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 482, "1329": 482, "ineffici": 482, "hand": 482, "158": 482, "ordereddict": 482, "134277": 482, "51896": 482, "450": 482, "tabular": [482, 485], "159": 482, "print_featur": 482, "There": 482, "character": 482, "160": 482, "function_o": 482, "subcellula": 482, "r_genecard": 482, "r_locat": 482, "3d": 482, "alternativ": 482, "20254": 482, "unless": 482, "uniprot_cleanup": 482, "exploit": 482, "162": 482, "q9uq28": 482, "8m": 482, "acquir": 482, "mtor": [482, 485], "akt1": 482, "s473": 482, "sparser": 482, "t450": 482, "t308": 482, "domainmotif": 482, "e_ptm": 482, "p31749": 482, "473": 482, "14761976": 482, "15047712": 482, "15364915": 482, "15718470": 482, "15899889": 482, "16221682": 482, "17013611": 482, "19844585": 482, "20333297": 482, "20489726": 482, "21157483": 482, "21592956": 482, "23006971": 482, "8978681": 482, "9736715": 482, "dabas": 482, "enzyme_genesymbol": 482, "substrate_genesymbol": 482, "residue_typ": 482, "residue_offset": 482, "p63104": 482, "ywhaz": 482, "hprd_mimp": 482, "11956222": 482, "12861023": 482, "phosphosite_mimp": 482, "phosp": 482, "15071501": 482, "p45983": 482, "mapk8": 482, "phosph": 482, "15696159": 482, "p06493": 482, "cdk1": 482, "712": 482, "rea": 482, "15525677": 482, "18220": 482, "2171679": 482, "41421": 482, "p29597": 482, "tyk2": 482, "p51692": 482, "stat5b": 482, "699": 482, "10830280": 482, "11751923": 482, "12411494": 482, "41422": 482, "q06418": 482, "tyro3": 482, "p19174": 482, "plcg1": 482, "771": 482, "12601080": 482, "15144186": 482, "15592455": 482, "41423": 482, "q9h4a3": 482, "wnk1": 482, "q8tax0": 482, "osr1": 482, "18270262": 482, "41424": 482, "q96j92": 482, "wnk4": 482, "335": 482, "15883153": 482, "41425": 482, "q9nyl2": 482, "map3k20": 482, "q92903": 482, "cds1": 482, "10973490": 482, "ve": 482, "never": 482, "nice": 482, "power": 482, "believ": 482, "ever": 482, "topic": 482, "186": 482, "seqc": 482, "sequencecontain": 482, "preload_seq": 482, "get_seq": 482, "get_region": 482, "tfiirclqwt": 482, "187": 482, "seq": 482, "human_proteom": 482, "swissprot_seq": 482, "0x689900d45cc0": 482, "0x689908ea8f70": 482, "0x689908eaa4a0": 482, "0x6899223538b0": 482, "0x689922353c70": 482, "o60384": 482, "0x689922350730": 482, "0x689922353310": 482, "0x689922353760": 482, "0x689922353190": 482, "0x689922350d90": 482, "0x689922353220": 482, "p61129": 482, "0x689922353370": 482, "0x6899223534f0": 482, "0x689922350c70": 482, "0x689922351450": 482, "0x689922353910": 482, "0x6899223502b0": 482, "p98182": 482, "0x689922350280": 482, "0x68992235": 482, "53045": 482, "191": 482, "ygct": 482, "seqlookup": 482, "625": 482, "annotationt": 482, "3788067": 482, "51636": 482, "78": 482, "cpad": 482, "2308": 482, "1358": 482, "annotationbas": 482, "get_nam": 482, "regulator_typ": 482, "effect_on_pathwai": 482, "effect_on_canc": 482, "effect_on_cancer_outcom": 482, "cancer": 482, "pathway_categori": 482, "get_valu": 482, "acut": 482, "lymphoblast": 482, "myeloid": 482, "aml": 482, "basal": 482, "bladder": 482, "breast": 482, "cervic": 482, "cholangiocarcinoma": 482, "choriocarcinoma": 482, "chronic": 482, "lymphocyt": 482, "cll": 482, "cml": 482, "colorect": 482, "endometri": 482, "esophag": 482, "ew": 482, "sarcoma": 482, "gallbladd": 482, "gastric": 482, "glioma": 482, "hepatocellular": 482, "hodgkin": 482, "lymphoma": 482, "infantil": 482, "hemangioma": 482, "laryng": 482, "malign": 482, "melanoma": 482, "pleural": 482, "mesothelioma": 482, "mantl": 482, "myeloma": 482, "nasopharyng": 482, "neuroblastoma": 482, "oral": 482, "osteosarcoma": 482, "ovarian": 482, "pancreat": 482, "pituitari": 482, "adenoma": 482, "renal": 482, "squamou": 482, "synovi": 482, "testicular": 482, "thyroid": 482, "a6ndv4": 482, "o14745": 482, "o14862": 482, "o15169_p25054": 482, "o94813": 482, "o94953": 482, "p06733": 482, "glucos": 482, "p11166": 482, "p25054": 482, "p40261": 482, "p49327": 482, "p54687": 482, "pten": 482, "phosphatas": 482, "p60484": 482, "q01973": 482, "q12888": 482, "q13620": 482, "q96cx2": 482, "q99558": 482, "mimat0000069": 482, "mimat0000089": 482, "mimat0000093": 482, "mimat0000262": 482, "mimat0000274": 482, "mimat0000422": 482, "mimat0000427": 482, "mimat0000437": 482, "mimat0000449": 482, "mimat0000455": 482, "mimat0000460": 482, "mimat0000461": 482, "mimat0000617": 482, "mimat0003266": 482, "mimat0003320": 482, "o75473": 482, "o75888": 482, "o76041": 482, "p06756": 482, "p13631": 482, "p22676": 482, "p25791": 482, "p546": 482, "1279": 482, "usual": 482, "215": 482, "celltypist": 482, "927": 482, "integrin": 482, "62": 482, "cellcellinteract": 482, "5544": 482, "panglaodb": 482, "8479": 482, "4813": 482, "lambert2018": 482, "3281": 482, "3277": 482, "cancersea": 482, "2515": 482, "1992": 482, "phobiu": 482, "35382": 482, "go_intercel": 482, "48799": 482, "18377": 482, "18127": 482, "15903": 482, "surfaceom": 482, "3558": 482, "matrisom": 482, "1514": 482, "hpa_secretom": 482, "3568": 482, "1748": 482, "1695": 482, "annotati": 482, "5842": 482, "exempl": 482, "mainclass": 482, "subclass": 482, "subsubclass": 482, "collagen": 482, "ecm": [482, 485], "glycoprotein": 482, "affili": 482, "proteoglycan": 482, "get_subset": 482, "a6nmz7": 482, "a8tx70": 482, "b4dz39": 482, "homotrim": 482, "p02452": 482, "ht_dm_cluster278": 482, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 482, "trimer": 482, "p02452_p08123": 482, "p02458": 482, "xi": 482, "p02458_p12107_p13942": 482, "p02458_p20908_p25067": 482, "p02458_p20908_p25067_p29400": 482, "p02458_p25067_p29400": 482, "iii": 482, "p02461": 482, "p02462": 482, "iv": 482, "p02462_p08572": 482, "p05997_p12107": 482, "p05997_p12107_p20908": 482, "p05997_p20908": 482, "p05997_p20908_p25940": 482, "p08572": 482, "p12109_p12110": 482, "3072": 482, "membership": 482, "signalink": [482, 485], "protein_sourc": 482, "signalinkpathwai": 482, "keggpathwai": 482, "netpathpathwai": 482, "complex_sourc": 482, "28745": 482, "6762": 482, "all_annot": 482, "jak": 482, "stat": 482, "actin": 482, "cytoskeleton": 482, "oxytocin": 482, "phospholipas": 482, "inhibitor": 482, "resist": 482, "papillomaviru": 482, "infect": 482, "carbon": 482, "endocytosi": 482, "parathyroid": 482, "hormon": 482, "synthesi": 482, "2540": 482, "record_id": [482, 485], "q16181": 482, "sept7": 482, "upregul": 482, "migrat": 482, "14396": 482, "p30990": 482, "nt": 482, "2306": 482, "14397": 482, "2307": 482, "14398": 482, "erk": 482, "14399": 482, "14400": 482, "14401": 482, "convent": 482, "tidyvers": 482, "tidyr": [482, 485], "pivot_wid": 482, "unintuit": 482, "index_col": 482, "drop": 482, "axi": 482, "set_index": 482, "unstack": 482, "droplevel": 482, "reset_index": 482, "mimat0000431": 482, "mir": 482, "suppress": 482, "tumor": 482, "invas": 482, "adam10": 482, "notch1": [482, 485], "notch": 482, "mimat0005886": 482, "1297": 482, "aeg1": 482, "wnt": 482, "q9up65": 482, "pla2g4c": 482, "chemotaxi": 482, "downregul": 482, "akt": 482, "pi3k": 482, "q92600": 482, "cnot9": 482, "2303": 482, "p16422": 482, "epcam": 482, "2304": 482, "q9y6y0": 482, "ivns1abp": 482, "2305": 482, "kctd12": 482, "catenin": 482, "goe": 482, "customannot": 482, "anyon": 482, "intercellannot": 482, "310033": 482, "43617": 482, "intercell_annot": 482, "annot_combined_class": 482, "revis": 482, "scope": [482, 485], "tgf": 482, "annotdefkei": 482, "annotationgroup": 482, "5150": 482, "5760": 482, "7041": 482, "transmembrane_predict": 482, "6444": 482, "transmembrane_phobiu": 482, "almen2009": 482, "transmembrane_sosui": 482, "1663": 482, "tran": 482, "143945": 482, "behav": 482, "gaba_receptor": 482, "gaba": 482, "a8mpy1": 482, "gabra1": 482, "gabrb2": 482, "gabrd": 482, "o14764_p14867_p47870": 482, "o14764_p28472_p48169": 482, "o14764_p28472_q16445": 482, "o14764_p47870_p48169": 482, "o14764_p47870_q16445": 482, "gabbr1": 482, "gabbr2": 482, "o75899_q9ubs5": 482, "p14867": 482, "gamma": 482, "p14867_p18507_p28472": 482, "gabrg2": 482, "p14867_p18507_p47870": 482, "p18507_p28472_p31644": 482, "p18507_p28472_p34903": 482, "p18507_p28472_p47869": 482, "p18507_p28472_q16445": 482, "p18507_q8n1c3": 482, "register_network": 482, "statist": 482, "counts_df": 482, "consensus_scor": 482, "transmitt": [482, 485], "receiv": [482, 485], "plasma_membrane_transmembran": 482, "plasma_membrane_peripher": 482, "n_uniprot": 482, "resource_specif": [482, 485], "1120": 482, "parin_adhesion_regul": 482, "intracellular_intercellular_rel": 482, "1121": 482, "plakophilin_adhesion_regul": 482, "1122": 482, "actin_regulation_adhesom": 482, "1123": 482, "adhesion_cytoskeleton_adaptor": 482, "118": 482, "1124": 482, "1125": 482, "q96jp9": 482, "cdhr1": 482, "q9p126": 482, "clec1b": 482, "q13585": 482, "gpr50": 482, "q8n9i0": 482, "syt2": 482, "o43614": 482, "hcrtr2": 482, "a6njy1": 482, "slc9b1p1": 482, "q5ri15": 482, "cox20": 482, "q13948": 482, "cux1": 482, "q8ngk4": 482, "or52k1": 482, "q8iys2": 482, "kiaa2013": 482, "neurotensin": 482, "recom": 482, "o95665": 482, "ntsr2": 482, "410": 482, "45385": 482, "neurotensi": 482, "tr": 482, "idecapepti": 482, "disulfid": 482, "7598": 482, "tree": [482, 484], "geneontologi": 482, "goannot": 482, "80": 482, "goa": 482, "0x689946b55570": 482, "82": 482, "0x68991cdc9b40": 482, "NOT": 482, "p21333": 482, "p80108": 482, "p62258": 482, "q9nrx4": 482, "p54710": 482, "q8ner1": 482, "p01303": 482, "get_all_descend": 482, "0005576": 482, "0001507": 482, "0001527": 482, "0003351": 482, "0003355": 482, "0005201": 482, "0005577": 482, "0005582": 482, "0005583": 482, "0005584": 482, "0005585": 482, "0005586": 482, "0005587": 482, "0005588": 482, "0005590": 482, "0005591": 482, "0005592": 482, "0005595": 482, "0005596": 482, "0005599": 482, "0005601": 482, "0005602": 482, "0005604": 482, "0005606": 482, "0005607": 482, "0005608": 482, "0005609": 482, "0005610": 482, "0005611": 482, "0005612": 482, "0005614": 482, "0005615": 482, "0005616": 482, "0006858": 482, "0006859": 482, "0006860": 482, "0009519": 482, "0010367": 482, "0016914": 482, "0016942": 482, "0020003": 482, "0020004": 482, "0020005": 482, "0020006": 482, "0030020": 482, "0030021": 482, "0030023": 482, "0030197": 482, "0030345": 482, "0030934": 482, "0030935": 482, "0030938": 482, "0031012": 482, "0031395": 482, "0032311": 482, "0032579": 482, "0033165": 482, "0033166": 482, "0034358": 482, "0034359": 482, "0034360": 482, "0034361": 482, "0034362": 482, "0034363": 482, "0034364": 482, "0034365": 482, "00343": 482, "3104": 482, "redund": 482, "homomultim": 482, "update_index": 482, "91": 482, "p42345": [482, 485], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 482, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 482, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 482, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 482, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 482, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 482, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 482, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 482, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 482, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 482, "5348": 482, "equival": 482, "represent": 482, "alphabet": 482, "sort": [482, 484], "despit": [482, 484], "fact": 482, "98": 482, "q92793": 482, "q09472": 482, "components_genesymbol": 482, "nfya_nfyb_nfyc": 482, "corum": [482, 485], "compleat": 482, "complexport": 482, "15243141": 482, "14755292": 482, "9372932": 482, "4478": 482, "hc1449": 482, "deptor_eef1a1_mlst8_prr5_rictor": 482, "c2": 482, "akt1s1_deptor_mlst8_mtor_rptor": 482, "btrc_cul1_skp1": 482, "9990852": 482, "c5": 482, "227": 482, "hc757": 482, "crebbp_ep300": 482, "c6": 482, "28168": 482, "npnt": 482, "q5szk8_q6uxi9_q86xx4": 482, "fras1_frem2_npnt": 482, "28169": 482, "nrp1_nrp2": 482, "o14786_o60462_q9y4d7": 482, "nrp1_nrp2_plxnd1": 482, "28170": 482, "nrp2_plxna2": 482, "o60462_o75051": 482, "28171": 482, "nrp2_plxna4": 482, "o60462_q9hcm2": 482, "28172": 482, "ptch2_smo": 482, "q99835_q9y6c5": 482, "compil": [482, 483], "longer": 482, "good": 482, "reli": 482, "save_to_pickl": 482, "myannot": 482, "pickle_fil": 482, "complexdb": 482, "mycomplex": 482, "char": 482, "xxxxx": 482, "ten": 482, "l0n17": 482, "disclaim": 482, "annoi": 482, "101": 482, "least": 482, "educ": 482, "credit": 482, "publish": 482, "gnu": 482, "104": 482, "prioriti": 482, "107": 482, "console_level": 482, "si": 482, "uniroma2": 482, "download_complex": 482, "d7b8673e83e43a01c533f9de5a2b04b9": 482, "1046": 482, "creation": 482, "builtin": 482, "shell": 482, "dev": 482, "108": 482, "devnul": 482, "notic": 482, "109": 482, "greet": 482, "Not": 482, "childoflogg": 482, "def": 482, "say_someth": 482, "_log": 482, "anywher": 482, "111": 482, "_logger": 482, "mylogg": 482, "strai": 482, "flood": 482, "112": 482, "hasn": 482, "thoroughli": 482, "scai": 482, "fraunhof": 482, "captur": 482, "span": 482, "rang": 482, "ptmaggreg": 482, "belgraph": 482, "bel_graph": 482, "summar": 482, "export_relationship": 482, "omnipath_pathwai": 482, "fp": 482, "bel_str": 482, "333": 482, "interaction_input": 482, "singnalink": 482, "interaction_datafram": 482, "peripher": [482, 485], "protein_datafram": 482, "along": 482, "load_omnipath": 482, "entir": 482, "sai": 482, "worri": 482, "network1": 482, "entreza": 482, "entrezb": 482, "1950": 482, "5290": 482, "207": 482, "2932": 482, "network2": 482, "pik3ca": 482, "sos1": 482, "rac1": 482, "map3k1": 482, "hra": 482, "gsk3b": 482, "iinput_format": 482, "input1": 482, "readset": 482, "egf1": 482, "input2": 482, "egf2": 482, "lst": 482, "ecount": 482, "vcount": 482, "dgraph": 482, "3241": 482, "dir": 482, "agre": 482, "p17252": 482, "q15139": 482, "stimulatori": 482, "revers": 482, "get_dir": 482, "inhibitori": 482, "contradict": 482, "decid": 482, "rid": 482, "consensu": 482, "consensus_edg": 482, "helper": 482, "esr1": 482, "plural": 482, "gss": 482, "atg16l2": 482, "mix": [482, 485], "could": 482, "affect": 482, "gs_stimulated_bi": 482, "_namedvertexseq": 482, "seri": 482, "bit": 482, "contraintuit": 482, "gs_stimul": 482, "affected_bi": 482, "similari": 482, "inhibited_bi": 482, "gs_": 482, "up_": 482, "neighbor": 482, "neighborhood": 482, "increas": 482, "rapidli": 482, "atg3": [482, 485], "get_edg": 482, "map1lc3b": [482, 485], "sqstm1": [482, 485], "refs_by_sourc": 482, "abil": 482, "librari": 482, "egf_network": 482, "png": 482, "777777": 482, "97be73": 482, "ffffff": 482, "bug": 482, "ipython": 482, "visibl": 482, "inlin": 482, "120": 482, "imag": 482, "click": 483, "changelog": 484, "improv": 484, "remot": 484, "partial": 484, "pyreact": 484, "biopaxread": 484, "rule": [484, 485], "workflow": 484, "mysql_connect": 484, "python3": 484, "mrna": [484, 485], "websrvtab": 484, "dataio": 484, "docstr": 484, "focus": 484, "rewritten": 484, "workaround": 484, "terribl": 484, "reflist": 484, "becam": 484, "paremet": 484, "reorgan": 484, "redesign": 484, "src": 484, "yml": 484, "rna": 484, "neo4j": 484, "backend": 484, "biocyph": 484, "dlmanag": 484, "protocol": 485, "wget": 485, "whatev": 485, "recogn": 485, "webserv": 485, "optimum": 485, "qualiti": 485, "interacion": 485, "rodent": 485, "counterpart": 485, "omic": 485, "highest": 485, "regulon": 485, "arget": 485, "source_target": 485, "atg7": 485, "atg4b": 485, "map1lc3a": 485, "map1lc3c": 485, "q9h0r8": 485, "gabarap": 485, "gabarapl2": 485, "appear": 485, "fyn": 485, "ens_sub": 485, "phosphosite_noref": 485, "hearth": 485, "dplyr": 485, "signalink_pathwai": 485, "bmp7": 485, "hpa_tissu": 485, "funtion": 485, "ion": 485, "interleukin": 485, "deliv": 485, "exact": 485, "atg4a": 485, "bmp8b": 485, "intuit": 485, "repli": 485}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [373, 0, 0, "-", "internals"], [406, 0, 0, "-", "legacy"], [410, 3, 1, "", "log"], [411, 0, 0, "-", "resources"], [429, 0, 0, "-", "share"], [457, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "abs"], [12, 0, 0, "-", "acsn"], [15, 0, 0, "-", "adrecs"], [25, 0, 0, "-", "biogrid"], [28, 0, 0, "-", "biomart"], [34, 0, 0, "-", "biomodels"], [40, 0, 0, "-", "ca1"], [42, 0, 0, "-", "cancercellmap"], [44, 0, 0, "-", "cell"], [46, 0, 0, "-", "chembl"], [54, 0, 0, "-", "clinvar"], [57, 0, 0, "-", "common"], [64, 0, 0, "-", "compath"], [66, 0, 0, "-", "cpdb"], [69, 0, 0, "-", "credentials"], [71, 0, 0, "-", "ctdbase"], [74, 0, 0, "-", "ddinter"], [80, 0, 0, "-", "deathdomain"], [83, 0, 0, "-", "dip"], [86, 0, 0, "-", "diseases"], [94, 0, 0, "-", "drugbank"], [101, 0, 0, "-", "ebi"], [103, 0, 0, "-", "elm"], [108, 0, 0, "-", "embopress"], [110, 0, 0, "-", "encode"], [112, 0, 0, "-", "ensembl"], [114, 0, 0, "-", "eutils"], [116, 0, 0, "-", "expasy"], [119, 0, 0, "-", "genecards"], [123, 3, 1, "", "get_method"], [124, 0, 0, "-", "graphviz"], [126, 0, 0, "-", "hprd"], [131, 0, 0, "-", "htri"], [133, 0, 0, "-", "humsavar"], [135, 0, 0, "-", "ielm"], [138, 0, 0, "-", "imweb"], [141, 0, 0, "-", "innatedb"], [143, 0, 0, "-", "instruct"], [146, 0, 0, "-", "intact"], [148, 0, 0, "-", "interpro"], [153, 0, 0, "-", "ipi"], [155, 0, 0, "-", "kegg_api"], [172, 0, 0, "-", "kirouac2010"], [174, 0, 0, "-", "laudanna"], [177, 0, 0, "-", "lincs"], [179, 0, 0, "-", "macrophage"], [181, 0, 0, "-", "main"], [182, 0, 0, "-", "mimp"], [186, 0, 0, "-", "mir2disease"], [188, 0, 0, "-", "mirdeathdb"], [190, 0, 0, "-", "mitab"], [193, 0, 0, "-", "mppi"], [195, 0, 0, "-", "ncrdeathdb"], [197, 0, 0, "-", "negatome"], [199, 0, 0, "-", "netbiol"], [202, 0, 0, "-", "offsides"], [204, 0, 0, "-", "ontology"], [207, 0, 0, "-", "opentargets"], [213, 0, 0, "-", "pathophenodb"], [216, 0, 0, "-", "pathwaycommons"], [233, 0, 0, "-", "pazar"], [235, 0, 0, "-", "pepcyber"], [238, 0, 0, "-", "pharos"], [247, 0, 0, "-", "phobius"], [249, 0, 0, "-", "phosphonetworks"], [252, 0, 0, "-", "phosphopoint"], [255, 0, 0, "-", "pro"], [258, 0, 0, "-", "protmapper"], [262, 0, 0, "-", "pubchem"], [264, 0, 0, "-", "pubmed"], [271, 0, 0, "-", "ramp"], [272, 0, 0, "-", "rdata"], [273, 0, 0, "-", "reaction"], [293, 0, 0, "-", "reactome"], [298, 0, 0, "-", "science"], [300, 0, 0, "-", "sider"], [309, 0, 0, "-", "stitch"], [312, 0, 0, "-", "string"], [317, 0, 0, "-", "swisslipids"], [318, 0, 0, "-", "switches_elm"], [320, 0, 0, "-", "transmir"], [322, 0, 0, "-", "trip"], [329, 0, 0, "-", "twosides"], [331, 0, 0, "-", "unichem"], [336, 0, 0, "-", "uniprot"], [362, 0, 0, "-", "uniprot_db"], [371, 0, 0, "-", "uniprot_idmapping"]], "pypath.inputs.abs": [[11, 3, 1, "", "abs_interactions"]], "pypath.inputs.acsn": [[13, 3, 1, "", "acsn_interactions"], [14, 3, 1, "", "acsn_interactions_sif"]], "pypath.inputs.adrecs": [[16, 1, 1, "", "AdrecsAdr"], [17, 1, 1, "", "AdrecsChildParent"], [18, 1, 1, "", "AdrecsDrug"], [19, 1, 1, "", "AdrecsDrugAdr"], [20, 1, 1, "", "AdrecsTerm"], [21, 3, 1, "", "adrecs_adr_ontology"], [22, 3, 1, "", "adrecs_drug_adr"], [23, 3, 1, "", "adrecs_drug_identifiers"], [24, 3, 1, "", "adrecs_hierarchy"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "adr_class"], [16, 4, 1, "", "badd"], [16, 2, 1, "", "count"], [16, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "child"], [17, 2, 1, "", "count"], [17, 2, 1, "", "index"], [17, 4, 1, "", "parent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, 2, 1, "", "__init__"], [18, 4, 1, "", "badd"], [18, 2, 1, "", "count"], [18, 4, 1, "", "drug"], [18, 4, 1, "", "drugbank"], [18, 2, 1, "", "index"], [18, 4, 1, "", "kegg"], [18, 4, 1, "", "mesh"], [18, 4, 1, "", "pubchem_cid"], [18, 4, 1, "", "synonyms"], [18, 4, 1, "", "tdd"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "adr"], [19, 4, 1, "", "adr_badd"], [19, 2, 1, "", "count"], [19, 4, 1, "", "drug"], [19, 4, 1, "", "drug_badd"], [19, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, 2, 1, "", "__init__"], [20, 4, 1, "", "adrecs_class"], [20, 4, 1, "", "badd"], [20, 2, 1, "", "count"], [20, 2, 1, "", "index"], [20, 4, 1, "", "meddra"], [20, 4, 1, "", "name"], [20, 4, 1, "", "synonyms"]], "pypath.inputs.biogrid": [[26, 3, 1, "", "biogrid_all_interactions"], [27, 3, 1, "", "biogrid_interactions"]], "pypath.inputs.biomart": [[29, 3, 1, "", "biomart_homology"], [30, 3, 1, "", "biomart_microarray"], [31, 3, 1, "", "biomart_microarray_types"], [32, 3, 1, "", "biomart_microarrays"], [33, 3, 1, "", "biomart_query"]], "pypath.inputs.biomodels": [[35, 3, 1, "", "download_single_model"], [36, 3, 1, "", "get_all_models"], [37, 3, 1, "", "get_biomodels"], [38, 3, 1, "", "get_biomodels_req"], [39, 3, 1, "", "get_single_model"]], "pypath.inputs.ca1": [[41, 3, 1, "", "ca1_interactions"]], "pypath.inputs.cancercellmap": [[43, 3, 1, "", "ccmap_interactions"]], "pypath.inputs.cell": [[45, 3, 1, "", "cell_supplementary"]], "pypath.inputs.chembl": [[47, 3, 1, "", "chembl_activities"], [48, 3, 1, "", "chembl_assays"], [49, 3, 1, "", "chembl_documents"], [50, 3, 1, "", "chembl_drug_indications"], [51, 3, 1, "", "chembl_mechanisms"], [52, 3, 1, "", "chembl_molecules"], [53, 3, 1, "", "chembl_targets"]], "pypath.inputs.clinvar": [[55, 3, 1, "", "clinvar_citations"], [56, 3, 1, "", "clinvar_raw"]], "pypath.inputs.common": [[58, 3, 1, "", "csv_sep_change"], [59, 3, 1, "", "glom_fields"], [60, 3, 1, "", "json_extract"], [61, 3, 1, "", "json_read"], [62, 3, 1, "", "read_table"], [63, 3, 1, "", "read_xls"]], "pypath.inputs.compath": [[65, 3, 1, "", "compath_mappings"]], "pypath.inputs.cpdb": [[67, 3, 1, "", "cpdb_interactions"], [68, 3, 1, "", "cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[70, 3, 1, "", "credentials"]], "pypath.inputs.ctdbase": [[72, 3, 1, "", "ctdbase_relations"], [73, 3, 1, "", "ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[75, 3, 1, "", "ddinter_drug_interactions"], [76, 3, 1, "", "ddinter_identifiers"], [77, 3, 1, "", "ddinter_interactions"], [78, 3, 1, "", "ddinter_mappings"], [79, 3, 1, "", "ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[81, 3, 1, "", "deathdomain_interactions"], [82, 3, 1, "", "deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[84, 3, 1, "", "dip_interactions"], [85, 3, 1, "", "dip_login"]], "pypath.inputs.diseases": [[87, 3, 1, "", "diseases_general"], [88, 3, 1, "", "experiments_filtered"], [89, 3, 1, "", "experiments_full"], [90, 3, 1, "", "knowledge_filtered"], [91, 3, 1, "", "knowledge_full"], [92, 3, 1, "", "textmining_filtered"], [93, 3, 1, "", "textmining_full"]], "pypath.inputs.drugbank": [[95, 1, 1, "", "DrugbankFull"], [96, 3, 1, "", "drugbank_annotations"], [97, 3, 1, "", "drugbank_drugs"], [98, 3, 1, "", "drugbank_interactions"], [99, 3, 1, "", "drugbank_mapping"], [100, 3, 1, "", "drugbank_raw_interactions"]], "pypath.inputs.drugbank.DrugbankFull": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "drugbank_drugs_full"], [95, 2, 1, "", "drugbank_external_ids_full"], [95, 2, 1, "", "drugbank_properties_full"], [95, 2, 1, "", "drugbank_targets_full"]], "pypath.inputs.ebi": [[102, 3, 1, "", "ebi_rest"]], "pypath.inputs.elm": [[104, 3, 1, "", "elm_classes"], [105, 3, 1, "", "elm_domains"], [106, 3, 1, "", "elm_instances"], [107, 3, 1, "", "elm_interactions"]], "pypath.inputs.embopress": [[109, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.encode": [[111, 3, 1, "", "encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[113, 3, 1, "", "ensembl_organisms"]], "pypath.inputs.eutils": [[115, 3, 1, "", "esummary"]], "pypath.inputs.expasy": [[117, 3, 1, "", "expasy_enzyme_classes"], [118, 3, 1, "", "expasy_enzymes"]], "pypath.inputs.genecards": [[120, 3, 1, "", "genecards_datasheet"], [121, 3, 1, "", "genecards_soup"], [122, 3, 1, "", "genecards_summaries"]], "pypath.inputs.graphviz": [[125, 3, 1, "", "graphviz_attrs"]], "pypath.inputs.hprd": [[127, 3, 1, "", "get_hprd"], [128, 3, 1, "", "hprd_enzyme_substrate"], [129, 3, 1, "", "hprd_interactions"], [130, 3, 1, "", "hprd_interactions_htp"]], "pypath.inputs.htri": [[132, 3, 1, "", "htri_interactions"]], "pypath.inputs.humsavar": [[134, 3, 1, "", "uniprot_variants"]], "pypath.inputs.ielm": [[136, 3, 1, "", "get_ielm"], [137, 3, 1, "", "get_ielm_huge"]], "pypath.inputs.imweb": [[139, 3, 1, "", "get_imweb"], [140, 3, 1, "", "get_imweb_req"]], "pypath.inputs.innatedb": [[142, 3, 1, "", "innatedb_interactions"]], "pypath.inputs.instruct": [[144, 3, 1, "", "get_instruct"], [145, 3, 1, "", "get_instruct_offsets"]], "pypath.inputs.intact": [[147, 3, 1, "", "intact_interactions"]], "pypath.inputs.interpro": [[149, 3, 1, "", "interpro2go_annotations"], [150, 3, 1, "", "interpro_annotations"], [151, 3, 1, "", "interpro_entries"], [152, 3, 1, "", "interpro_xrefs"]], "pypath.inputs.ipi": [[154, 3, 1, "", "ipi_uniprot"]], "pypath.inputs.kegg_api": [[156, 3, 1, "", "disease_to_drug"], [157, 3, 1, "", "disease_to_gene"], [158, 3, 1, "", "disease_to_pathway"], [159, 3, 1, "", "drug_to_disease"], [160, 3, 1, "", "drug_to_drug"], [161, 3, 1, "", "drug_to_gene"], [162, 3, 1, "", "drug_to_pathway"], [163, 3, 1, "", "gene_to_disease"], [164, 3, 1, "", "gene_to_drug"], [165, 3, 1, "", "gene_to_pathway"], [166, 3, 1, "", "kegg_drug_to_chebi"], [167, 3, 1, "", "kegg_gene_to_ncbi_geneid"], [168, 3, 1, "", "kegg_gene_to_uniprot"], [169, 3, 1, "", "pathway_to_disease"], [170, 3, 1, "", "pathway_to_drug"], [171, 3, 1, "", "pathway_to_gene"]], "pypath.inputs.kirouac2010": [[173, 3, 1, "", "kirouac2010_interactions"]], "pypath.inputs.laudanna": [[175, 3, 1, "", "laudanna_directions"], [176, 3, 1, "", "laudanna_effects"]], "pypath.inputs.lincs": [[178, 3, 1, "", "lincs_compounds"]], "pypath.inputs.macrophage": [[180, 3, 1, "", "macrophage_interactions"]], "pypath.inputs.mimp": [[183, 3, 1, "", "get_kinase_class"], [184, 3, 1, "", "mimp_enzyme_substrate"], [185, 3, 1, "", "mimp_interactions"]], "pypath.inputs.mir2disease": [[187, 3, 1, "", "mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[189, 3, 1, "", "mirdeathdb_interactions"]], "pypath.inputs.mitab": [[191, 3, 1, "", "mitab_field_list"], [192, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.mppi": [[194, 3, 1, "", "mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[196, 3, 1, "", "ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[198, 3, 1, "", "negatome_interactions"]], "pypath.inputs.netbiol": [[200, 3, 1, "", "arn_interactions"], [201, 3, 1, "", "nrf2ome_interactions"]], "pypath.inputs.offsides": [[203, 3, 1, "", "offsides_side_effects"]], "pypath.inputs.ontology": [[205, 3, 1, "", "listof_ontologies"], [206, 3, 1, "", "ontology"]], "pypath.inputs.opentargets": [[208, 3, 1, "", "opentargets_adverse_reactions"], [209, 3, 1, "", "opentargets_baseline_expression"], [210, 3, 1, "", "opentargets_direct_score"], [211, 3, 1, "", "opentargets_general"], [212, 3, 1, "", "opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[214, 1, 1, "", "DiseasePathogen"], [215, 3, 1, "", "disease_pathogen_interactions"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "count"], [214, 4, 1, "", "disease"], [214, 4, 1, "", "disease_id"], [214, 4, 1, "", "evidence"], [214, 2, 1, "", "index"], [214, 4, 1, "", "pathogen"], [214, 4, 1, "", "pathogen_taxid"]], "pypath.inputs.pathwaycommons": [[217, 1, 1, "", "PathwayCommonsInteraction"], [218, 1, 1, "", "PathwayCommonsResource"], [219, 3, 1, "", "pathwaycommons_bind_interactions"], [220, 3, 1, "", "pathwaycommons_biogrid_interactions"], [221, 3, 1, "", "pathwaycommons_corum_interactions"], [222, 3, 1, "", "pathwaycommons_dip_interactions"], [223, 3, 1, "", "pathwaycommons_hprd_interactions"], [224, 3, 1, "", "pathwaycommons_inoh_interactions"], [225, 3, 1, "", "pathwaycommons_intact_interactions"], [226, 3, 1, "", "pathwaycommons_interactions"], [227, 3, 1, "", "pathwaycommons_kegg_interactions"], [228, 3, 1, "", "pathwaycommons_netpath_interactions"], [229, 3, 1, "", "pathwaycommons_panther_interactions"], [230, 3, 1, "", "pathwaycommons_phosphosite_interactions"], [231, 3, 1, "", "pathwaycommons_reactome_interactions"], [232, 3, 1, "", "pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, 2, 1, "", "__init__"], [217, 2, 1, "", "count"], [217, 4, 1, "", "id_a"], [217, 4, 1, "", "id_b"], [217, 2, 1, "", "index"], [217, 4, 1, "", "interaction_type"], [217, 4, 1, "", "resource"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "count"], [218, 2, 1, "", "index"], [218, 4, 1, "", "name"], [218, 4, 1, "", "pc_label"], [218, 4, 1, "", "version"]], "pypath.inputs.pazar": [[234, 3, 1, "", "pazar_interactions"]], "pypath.inputs.pepcyber": [[236, 3, 1, "", "pepcyber_details"], [237, 3, 1, "", "pepcyber_interactions"]], "pypath.inputs.pharos": [[239, 3, 1, "", "pharos_diseases"], [240, 3, 1, "", "pharos_expression"], [241, 3, 1, "", "pharos_general"], [242, 3, 1, "", "pharos_gtex"], [243, 3, 1, "", "pharos_ligands"], [244, 3, 1, "", "pharos_orthologs"], [245, 3, 1, "", "pharos_targets"], [246, 3, 1, "", "pharos_xrefs"]], "pypath.inputs.phobius": [[248, 3, 1, "", "phobius_annotations"]], "pypath.inputs.phosphonetworks": [[250, 3, 1, "", "phosphonetworks_enzyme_substrate"], [251, 3, 1, "", "phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[253, 3, 1, "", "phosphopoint_directions"], [254, 3, 1, "", "phosphopoint_interactions"]], "pypath.inputs.pro": [[256, 3, 1, "", "get_pro"], [257, 3, 1, "", "pro_mapping"]], "pypath.inputs.protmapper": [[259, 3, 1, "", "get_protmapper"], [260, 3, 1, "", "protmapper_enzyme_substrate"], [261, 3, 1, "", "protmapper_interactions"]], "pypath.inputs.pubchem": [[263, 3, 1, "", "pubchem_mapping"]], "pypath.inputs.pubmed": [[265, 3, 1, "", "get_pmid"], [266, 3, 1, "", "get_pubmeds"], [267, 3, 1, "", "only_pmids"], [268, 3, 1, "", "open_pubmed"], [269, 3, 1, "", "pmids_dict"], [270, 3, 1, "", "pmids_list"]], "pypath.inputs.reaction": [[274, 3, 1, "", "acsn_biopax"], [275, 3, 1, "", "acsn_interactions_2"], [276, 3, 1, "", "get_acsn_effects"], [277, 3, 1, "", "get_controls"], [278, 3, 1, "", "get_interactions"], [279, 3, 1, "", "get_reactions"], [280, 3, 1, "", "get_soup"], [281, 3, 1, "", "panther_biopax"], [282, 3, 1, "", "panther_interactions"], [283, 3, 1, "", "pid_biopax"], [284, 3, 1, "", "pid_interactions"], [285, 3, 1, "", "process_complex"], [286, 3, 1, "", "process_controls"], [287, 3, 1, "", "process_reactions"], [288, 3, 1, "", "reactions_biopax"], [289, 3, 1, "", "reactome_biopax"], [290, 3, 1, "", "reactome_bs"], [291, 3, 1, "", "reactome_interactions"], [292, 3, 1, "", "reactome_sbml"]], "pypath.inputs.reactome": [[294, 3, 1, "", "reactome_chebis"], [295, 3, 1, "", "reactome_pathway_relations"], [296, 3, 1, "", "reactome_pathways"], [297, 3, 1, "", "reactome_uniprots"]], "pypath.inputs.science": [[299, 3, 1, "", "science_download"]], "pypath.inputs.sider": [[301, 1, 1, "", "SiderDrug"], [302, 1, 1, "", "SiderSideeffect"], [303, 1, 1, "", "SiderSideeffectMeddra"], [304, 1, 1, "", "SiderSideeffetFrequency"], [305, 3, 1, "", "sider_drug_names"], [306, 3, 1, "", "sider_meddra_side_effects"], [307, 3, 1, "", "sider_side_effect_frequencies"], [308, 3, 1, "", "sider_side_effects"]], "pypath.inputs.sider.SiderDrug": [[301, 2, 1, "", "__init__"], [301, 4, 1, "", "atc"], [301, 2, 1, "", "count"], [301, 2, 1, "", "index"], [301, 4, 1, "", "name"]], "pypath.inputs.sider.SiderSideeffect": [[302, 2, 1, "", "__init__"], [302, 2, 1, "", "count"], [302, 2, 1, "", "index"], [302, 4, 1, "", "side_effect"], [302, 4, 1, "", "umls_concept_in_meddra"], [302, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[303, 2, 1, "", "__init__"], [303, 4, 1, "", "cid"], [303, 2, 1, "", "count"], [303, 2, 1, "", "index"], [303, 4, 1, "", "meddra_id"], [303, 4, 1, "", "side_effect_name"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "count"], [304, 4, 1, "", "frequency"], [304, 2, 1, "", "index"], [304, 4, 1, "", "side_effect"], [304, 4, 1, "", "umls_concept_in_meddra"], [304, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.stitch": [[310, 3, 1, "", "stitch_actions_interactions"], [311, 3, 1, "", "stitch_links_interactions"]], "pypath.inputs.string": [[313, 3, 1, "", "string_effects"], [314, 3, 1, "", "string_links_interactions"], [315, 3, 1, "", "string_physical_interactions"], [316, 3, 1, "", "string_species"]], "pypath.inputs.switches_elm": [[319, 3, 1, "", "get_switches_elm"]], "pypath.inputs.transmir": [[321, 3, 1, "", "transmir_interactions"]], "pypath.inputs.trip": [[323, 3, 1, "", "take_a_trip"], [324, 3, 1, "", "trip_find_uniprot"], [325, 3, 1, "", "trip_get_uniprot"], [326, 3, 1, "", "trip_interactions"], [327, 3, 1, "", "trip_process"], [328, 3, 1, "", "trip_process_table"]], "pypath.inputs.twosides": [[330, 3, 1, "", "twosides_interactions"]], "pypath.inputs.unichem": [[332, 3, 1, "", "info"], [333, 3, 1, "", "unichem_info"], [334, 3, 1, "", "unichem_mapping"], [335, 3, 1, "", "unichem_sources"]], "pypath.inputs.uniprot": [[337, 1, 1, "", "Taxon"], [338, 1, 1, "", "UniprotQuery"], [339, 1, 1, "", "UniprotRecordHistory"], [340, 3, 1, "", "deleted_uniprot_genesymbol"], [341, 3, 1, "", "get_uniprot_sec"], [342, 3, 1, "", "protein_datasheet"], [343, 3, 1, "", "query_builder"], [344, 3, 1, "", "swissprot_deleted"], [345, 3, 1, "", "trembl_deleted"], [346, 3, 1, "", "uniprot_data"], [347, 3, 1, "", "uniprot_deleted"], [348, 3, 1, "", "uniprot_families"], [349, 3, 1, "", "uniprot_history"], [350, 3, 1, "", "uniprot_history_recent_datasheet"], [351, 3, 1, "", "uniprot_keywords"], [352, 3, 1, "", "uniprot_locations"], [353, 3, 1, "", "uniprot_ncbi_taxids"], [354, 3, 1, "", "uniprot_ncbi_taxids_2"], [355, 3, 1, "", "uniprot_preprocess"], [356, 3, 1, "", "uniprot_query"], [357, 3, 1, "", "uniprot_recent_version"], [358, 3, 1, "", "uniprot_taxonomy"], [359, 3, 1, "", "uniprot_tissues"], [360, 3, 1, "", "uniprot_topology"], [361, 3, 1, "", "valid_uniprot"]], "pypath.inputs.uniprot.Taxon": [[337, 2, 1, "", "__init__"], [337, 2, 1, "", "count"], [337, 4, 1, "", "english"], [337, 2, 1, "", "index"], [337, 4, 1, "", "latin"], [337, 4, 1, "", "latin_synonym"], [337, 4, 1, "", "ncbi_id"]], "pypath.inputs.uniprot.UniprotQuery": [[338, 2, 1, "", "__init__"], [338, 2, 1, "", "__iter__"], [338, 4, 1, "", "fail_on_empty"], [338, 4, 1, "", "name_process"], [338, 2, 1, "", "perform"], [338, 5, 1, "", "url"], [338, 5, 1, "", "url_plain"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[339, 2, 1, "", "__init__"], [339, 2, 1, "", "count"], [339, 4, 1, "", "database"], [339, 4, 1, "", "date"], [339, 4, 1, "", "entry_name"], [339, 4, 1, "", "entry_version"], [339, 2, 1, "", "index"], [339, 4, 1, "", "number"], [339, 4, 1, "", "replaced_by"], [339, 4, 1, "", "replaces"], [339, 4, 1, "", "sequence_version"]], "pypath.inputs.uniprot_db": [[363, 3, 1, "", "all_swissprots"], [364, 3, 1, "", "all_trembls"], [365, 3, 1, "", "all_uniprots"], [366, 3, 1, "", "get_db"], [367, 3, 1, "", "init_db"], [368, 3, 1, "", "is_swissprot"], [369, 3, 1, "", "is_trembl"], [370, 3, 1, "", "is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[372, 3, 1, "", "idtypes"]], "pypath.internals": [[374, 0, 0, "-", "input_formats"], [388, 0, 0, "-", "license"], [394, 0, 0, "-", "maps"], [395, 0, 0, "-", "refs"], [398, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[375, 1, 1, "", "ArrayMapping"], [376, 1, 1, "", "BiomartMapping"], [377, 1, 1, "", "FileMapping"], [378, 1, 1, "", "HmdbMapping"], [379, 1, 1, "", "MappingInput"], [380, 1, 1, "", "NetworkInput"], [381, 1, 1, "", "PickleMapping"], [382, 1, 1, "", "ProMapping"], [383, 1, 1, "", "RampMapping"], [384, 1, 1, "", "ReadList"], [385, 1, 1, "", "UnichemMapping"], [386, 1, 1, "", "UniprotListMapping"], [387, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[375, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[376, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[377, 2, 1, "", "__init__"]], "pypath.internals.input_formats.HmdbMapping": [[378, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[379, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[380, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[381, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[382, 2, 1, "", "__init__"]], "pypath.internals.input_formats.RampMapping": [[383, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[384, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[385, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[386, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[387, 2, 1, "", "__init__"], [387, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[389, 1, 1, "", "License"], [390, 1, 1, "", "LicenseAttrib"], [391, 1, 1, "", "LicenseFeature"], [392, 1, 1, "", "LicensePurpose"], [393, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[389, 2, 1, "", "__init__"], [389, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[390, 2, 1, "", "__init__"], [390, 2, 1, "", "check_level"], [390, 2, 1, "", "int_to_level"], [390, 2, 1, "", "level_to_int"], [390, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[391, 2, 1, "", "__init__"], [391, 2, 1, "", "check_level"], [391, 2, 1, "", "int_to_level"], [391, 2, 1, "", "level_to_int"], [391, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[392, 2, 1, "", "__init__"], [392, 2, 1, "", "check_level"], [392, 2, 1, "", "int_to_level"], [392, 2, 1, "", "level_to_int"], [392, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[393, 2, 1, "", "__init__"], [393, 2, 1, "", "check_level"], [393, 2, 1, "", "int_to_level"], [393, 2, 1, "", "level_to_int"], [393, 2, 1, "", "to_int"]], "pypath.internals.refs": [[396, 1, 1, "", "Reference"], [397, 3, 1, "", "get_pubmed_data"]], "pypath.internals.refs.Reference": [[396, 2, 1, "", "__init__"]], "pypath.internals.resource": [[399, 1, 1, "", "AbstractResource"], [400, 1, 1, "", "EnzymeSubstrateResource"], [401, 1, 1, "", "EnzymeSubstrateResourceKey"], [402, 1, 1, "", "NetworkDataset"], [403, 1, 1, "", "NetworkResource"], [404, 1, 1, "", "NetworkResourceKey"], [405, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[399, 2, 1, "", "__init__"], [399, 2, 1, "", "load_data"], [399, 2, 1, "", "process"], [399, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[400, 2, 1, "", "__init__"], [400, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[401, 2, 1, "", "__init__"], [401, 2, 1, "", "count"], [401, 4, 1, "", "data_type"], [401, 2, 1, "", "index"], [401, 4, 1, "", "name"], [401, 4, 1, "", "via"]], "pypath.internals.resource.NetworkDataset": [[402, 2, 1, "", "__init__"], [402, 2, 1, "", "clear"], [402, 2, 1, "", "get"], [402, 2, 1, "", "items"], [402, 2, 1, "", "keys"], [402, 2, 1, "", "pop"], [402, 2, 1, "", "popitem"], [402, 2, 1, "", "setdefault"], [402, 2, 1, "", "update"], [402, 2, 1, "", "values"]], "pypath.internals.resource.NetworkResource": [[403, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[404, 2, 1, "", "__init__"], [404, 2, 1, "", "count"], [404, 4, 1, "", "data_model"], [404, 4, 1, "", "data_type"], [404, 2, 1, "", "index"], [404, 4, 1, "", "interaction_type"], [404, 5, 1, "", "label"], [404, 5, 1, "", "last"], [404, 4, 1, "", "name"], [404, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[405, 2, 1, "", "__init__"]], "pypath.legacy": [[407, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[408, 3, 1, "", "get_categories"], [409, 3, 1, "", "get_category"]], "pypath.resources": [[412, 0, 0, "-", "controller"], [414, 0, 0, "-", "data"], [415, 0, 0, "-", "data_formats"], [424, 3, 1, "", "get_controller"], [425, 0, 0, "-", "licenses"], [427, 0, 0, "-", "network"], [428, 0, 0, "-", "urls"]], "pypath.resources.controller": [[413, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[413, 2, 1, "", "__init__"], [413, 2, 1, "", "add_resource_attrs"], [413, 2, 1, "", "collect_interaction"], [413, 2, 1, "", "collect_network"], [413, 2, 1, "", "license_filter"], [413, 2, 1, "", "secondary_resources"], [413, 2, 1, "", "update"]], "pypath.resources.data_formats": [[416, 6, 1, "", "activity_flow"], [417, 6, 1, "", "enzyme_substrate"], [418, 6, 1, "", "interaction"], [419, 6, 1, "", "interaction_htp"], [420, 6, 1, "", "pathway_bad"], [421, 6, 1, "", "reaction_pc"], [422, 6, 1, "", "transcription_deprecated"], [423, 6, 1, "", "transcription_onebyone"]], "pypath.resources.licenses": [[426, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[426, 2, 1, "", "__init__"]], "pypath.share": [[430, 0, 0, "-", "cache"], [434, 0, 0, "-", "common"], [435, 0, 0, "-", "constants"], [436, 0, 0, "-", "curl"], [453, 0, 0, "-", "progress"], [455, 0, 0, "-", "session"], [456, 0, 0, "-", "settings"]], "pypath.share.cache": [[431, 3, 1, "", "cache_item"], [432, 3, 1, "", "cache_path"], [433, 3, 1, "", "get_cachedir"]], "pypath.share.curl": [[437, 1, 1, "", "Curl"], [438, 1, 1, "", "FileOpener"], [439, 1, 1, "", "RemoteFile"], [440, 1, 1, "", "cache_delete_off"], [441, 1, 1, "", "cache_delete_on"], [442, 1, 1, "", "cache_off"], [443, 1, 1, "", "cache_on"], [444, 1, 1, "", "cache_print_off"], [445, 1, 1, "", "cache_print_on"], [446, 1, 1, "", "debug_off"], [447, 1, 1, "", "debug_on"], [448, 1, 1, "", "dryrun_off"], [449, 1, 1, "", "dryrun_on"], [450, 3, 1, "", "is_url"], [451, 1, 1, "", "preserve_off"], [452, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[437, 2, 1, "", "__init__"], [437, 2, 1, "", "cache_path"], [437, 2, 1, "", "close"], [437, 2, 1, "", "construct_binary_data"], [437, 2, 1, "", "extract"], [437, 2, 1, "", "is_quoted"], [437, 2, 1, "", "open"], [437, 2, 1, "", "open_tgz"], [437, 2, 1, "", "replace_forbidden"], [437, 2, 1, "", "set_binary_data"], [437, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[438, 2, 1, "", "__init__"], [438, 2, 1, "", "extract"], [438, 2, 1, "", "open"], [438, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[439, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[440, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[441, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[442, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[443, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[444, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[445, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[446, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[447, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[448, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[449, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[451, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[452, 2, 1, "", "__init__"]], "pypath.share.progress": [[454, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[454, 2, 1, "", "__init__"], [454, 2, 1, "", "get_desc"], [454, 2, 1, "", "init_tqdm"], [454, 2, 1, "", "set_done"], [454, 2, 1, "", "set_status"], [454, 2, 1, "", "set_total"], [454, 2, 1, "", "step"], [454, 2, 1, "", "terminate"]], "pypath.visual": [[458, 0, 0, "-", "drawing"], [461, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[459, 1, 1, "", "InterSet"], [460, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[459, 2, 1, "", "__init__"], [459, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[460, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[462, 1, 1, "", "AbstractCairoGraphDrawer"], [463, 4, 1, "", "ArrowEdgeDrawer"], [464, 1, 1, "", "DefaultGraphDrawerFFsupport"], [465, 4, 1, "", "DefaultVertexDrawer"], [466, 4, 1, "", "TextDrawer"], [467, 0, 0, "-", "edge"], [474, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[462, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[464, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[468, 1, 1, "", "AbstractEdgeDrawer"], [469, 1, 1, "", "AlphaVaryingEdgeDrawer"], [470, 1, 1, "", "ArrowEdgeDrawer"], [471, 1, 1, "", "DarkToLightEdgeDrawer"], [472, 1, 1, "", "LightToDarkEdgeDrawer"], [473, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "draw_directed_edge"], [468, 2, 1, "", "draw_loop_edge"], [468, 2, 1, "", "draw_undirected_edge"], [468, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "draw_directed_edge"], [469, 2, 1, "", "draw_loop_edge"], [469, 2, 1, "", "draw_undirected_edge"], [469, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[470, 2, 1, "", "__init__"], [470, 2, 1, "", "draw_directed_edge"], [470, 2, 1, "", "draw_loop_edge"], [470, 2, 1, "", "draw_undirected_edge"], [470, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "draw_directed_edge"], [471, 2, 1, "", "draw_loop_edge"], [471, 2, 1, "", "draw_undirected_edge"], [471, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "draw_directed_edge"], [472, 2, 1, "", "draw_loop_edge"], [472, 2, 1, "", "draw_undirected_edge"], [472, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "draw_directed_edge"], [473, 2, 1, "", "draw_loop_edge"], [473, 2, 1, "", "draw_undirected_edge"], [473, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[475, 1, 1, "", "AbstractCairoDrawer"], [476, 1, 1, "", "AbstractCairoVertexDrawer"], [477, 1, 1, "", "AbstractDrawer"], [478, 1, 1, "", "AbstractVertexDrawer"], [479, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[475, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[477, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[479, 2, 1, "", "__init__"], [479, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pypathcore": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 57, 58, 59, 60, 61, 62, 63, 434, 482], "filter_network_df": 5, "data": [6, 414, 482], "disclaim": 7, "info": [8, 332, 482], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 482], "ab": [10, 11], "abs_interact": 11, "acsn": [12, 13, 14], "acsn_interact": 13, "acsn_interactions_sif": 14, "adrec": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "adrecsadr": 16, "adrecschildpar": 17, "adrecsdrug": 18, "adrecsdrugadr": 19, "adrecsterm": 20, "adrecs_adr_ontologi": 21, "adrecs_drug_adr": 22, "adrecs_drug_identifi": 23, "adrecs_hierarchi": 24, "biogrid": [25, 26, 27], "biogrid_all_interact": 26, "biogrid_interact": 27, "biomart": [28, 29, 30, 31, 32, 33], "biomart_homologi": 29, "biomart_microarrai": [30, 32], "biomart_microarray_typ": 31, "biomart_queri": 33, "biomodel": [34, 35, 36, 37, 38, 39], "download_single_model": 35, "get_all_model": 36, "get_biomodel": 37, "get_biomodels_req": 38, "get_single_model": 39, "ca1": [40, 41], "ca1_interact": 41, "cancercellmap": [42, 43], "ccmap_interact": 43, "cell": [44, 45], "cell_supplementari": 45, "chembl": [46, 47, 48, 49, 50, 51, 52, 53], "chembl_act": 47, "chembl_assai": 48, "chembl_docu": 49, "chembl_drug_ind": 50, "chembl_mechan": 51, "chembl_molecul": 52, "chembl_target": 53, "clinvar": [54, 55, 56], "clinvar_cit": 55, "clinvar_raw": 56, "csv_sep_chang": 58, "glom_field": 59, "json_extract": 60, "json_read": 61, "read_tabl": 62, "read_xl": 63, "compath": [64, 65], "compath_map": 65, "cpdb": [66, 67, 68], "cpdb_interact": 67, "cpdb_interactions_ltp": 68, "credenti": [69, 70], "ctdbase": [71, 72, 73], "ctdbase_rel": 72, "ctdbase_vocabulari": 73, "ddinter": [74, 75, 76, 77, 78, 79], "ddinter_drug_interact": 75, "ddinter_identifi": 76, "ddinter_interact": 77, "ddinter_map": 78, "ddinter_n_drug": 79, "deathdomain": [80, 81, 82], "deathdomain_interact": 81, "deathdomain_interactions_rescu": 82, "dip": [83, 84, 85], "dip_interact": 84, "dip_login": 85, "diseas": [86, 87, 88, 89, 90, 91, 92, 93], "diseases_gener": 87, "experiments_filt": 88, "experiments_ful": 89, "knowledge_filt": 90, "knowledge_ful": 91, "textmining_filt": 92, "textmining_ful": 93, "drugbank": [94, 95, 96, 97, 98, 99, 100], "drugbankful": 95, "drugbank_annot": 96, "drugbank_drug": 97, "drugbank_interact": 98, "drugbank_map": 99, "drugbank_raw_interact": 100, "ebi": [101, 102], "ebi_rest": 102, "elm": [103, 104, 105, 106, 107], "elm_class": 104, "elm_domain": 105, "elm_inst": 106, "elm_interact": 107, "embopress": [108, 109], "embopress_supplementari": 109, "encod": [110, 111], "encode_tf_mirna_interact": 111, "ensembl": [112, 113], "ensembl_organ": 113, "eutil": [114, 115], "esummari": 115, "expasi": [116, 117, 118], "expasy_enzyme_class": 117, "expasy_enzym": 118, "genecard": [119, 120, 121, 122], "genecards_datasheet": 120, "genecards_soup": 121, "genecards_summari": 122, "get_method": 123, "graphviz": [124, 125], "graphviz_attr": 125, "hprd": [126, 127, 128, 129, 130], "get_hprd": 127, "hprd_enzyme_substr": 128, "hprd_interact": 129, "hprd_interactions_htp": 130, "htri": [131, 132], "htri_interact": 132, "humsavar": [133, 134], "uniprot_vari": 134, "ielm": [135, 136, 137], "get_ielm": 136, "get_ielm_hug": 137, "imweb": [138, 139, 140], "get_imweb": 139, "get_imweb_req": 140, "innatedb": [141, 142], "innatedb_interact": 142, "instruct": [143, 144, 145], "get_instruct": 144, "get_instruct_offset": 145, "intact": [146, 147], "intact_interact": 147, "interpro": [148, 149, 150, 151, 152], "interpro2go_annot": 149, "interpro_annot": 150, "interpro_entri": 151, "interpro_xref": 152, "ipi": [153, 154], "ipi_uniprot": 154, "kegg_api": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "disease_to_drug": 156, "disease_to_gen": 157, "disease_to_pathwai": 158, "drug_to_diseas": 159, "drug_to_drug": 160, "drug_to_gen": 161, "drug_to_pathwai": 162, "gene_to_diseas": 163, "gene_to_drug": 164, "gene_to_pathwai": 165, "kegg_drug_to_chebi": 166, "kegg_gene_to_ncbi_geneid": 167, "kegg_gene_to_uniprot": 168, "pathway_to_diseas": 169, "pathway_to_drug": 170, "pathway_to_gen": 171, "kirouac2010": [172, 173], "kirouac2010_interact": 173, "laudanna": [174, 175, 176], "laudanna_direct": 175, "laudanna_effect": 176, "linc": [177, 178], "lincs_compound": 178, "macrophag": [179, 180], "macrophage_interact": 180, "main": 181, "mimp": [182, 183, 184, 185], "get_kinase_class": 183, "mimp_enzyme_substr": 184, "mimp_interact": 185, "mir2diseas": [186, 187], "mir2disease_interact": 187, "mirdeathdb": [188, 189], "mirdeathdb_interact": 189, "mitab": [190, 191, 192], "mitab_field_list": 191, "mitab_field_uniprot": 192, "mppi": [193, 194], "mppi_interact": 194, "ncrdeathdb": [195, 196], "ncrdeathdb_interact": 196, "negatom": [197, 198], "negatome_interact": 198, "netbiol": [199, 200, 201], "arn_interact": 200, "nrf2ome_interact": 201, "offsid": [202, 203], "offsides_side_effect": 203, "ontologi": [204, 205, 206, 482], "listof_ontologi": 205, "opentarget": [207, 208, 209, 210, 211, 212], "opentargets_adverse_react": 208, "opentargets_baseline_express": 209, "opentargets_direct_scor": 210, "opentargets_gener": 211, "opentargets_indirect_scor": 212, "pathophenodb": [213, 214, 215], "diseasepathogen": 214, "disease_pathogen_interact": 215, "pathwaycommon": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "pathwaycommonsinteract": 217, "pathwaycommonsresourc": 218, "pathwaycommons_bind_interact": 219, "pathwaycommons_biogrid_interact": 220, "pathwaycommons_corum_interact": 221, "pathwaycommons_dip_interact": 222, "pathwaycommons_hprd_interact": 223, "pathwaycommons_inoh_interact": 224, "pathwaycommons_intact_interact": 225, "pathwaycommons_interact": 226, "pathwaycommons_kegg_interact": 227, "pathwaycommons_netpath_interact": 228, "pathwaycommons_panther_interact": 229, "pathwaycommons_phosphosite_interact": 230, "pathwaycommons_reactome_interact": 231, "pathwaycommons_wikipathways_interact": 232, "pazar": [233, 234], "pazar_interact": 234, "pepcyb": [235, 236, 237], "pepcyber_detail": 236, "pepcyber_interact": 237, "pharo": [238, 239, 240, 241, 242, 243, 244, 245, 246], "pharos_diseas": 239, "pharos_express": 240, "pharos_gener": 241, "pharos_gtex": 242, "pharos_ligand": 243, "pharos_ortholog": 244, "pharos_target": 245, "pharos_xref": 246, "phobiu": [247, 248], "phobius_annot": 248, "phosphonetwork": [249, 250, 251], "phosphonetworks_enzyme_substr": 250, "phosphonetworks_interact": 251, "phosphopoint": [252, 253, 254], "phosphopoint_direct": 253, "phosphopoint_interact": 254, "pro": [255, 256, 257], "get_pro": 256, "pro_map": 257, "protmapp": [258, 259, 260, 261], "get_protmapp": 259, "protmapper_enzyme_substr": 260, "protmapper_interact": 261, "pubchem": [262, 263], "pubchem_map": 263, "pubm": [264, 265, 266, 267, 268, 269, 270], "get_pmid": 265, "get_pubm": 266, "only_pmid": 267, "open_pubm": 268, "pmids_dict": 269, "pmids_list": 270, "ramp": [271, 482], "rdata": 272, "reaction": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "acsn_biopax": 274, "acsn_interactions_2": 275, "get_acsn_effect": 276, "get_control": [277, 424], "get_interact": 278, "get_react": 279, "get_soup": 280, "panther_biopax": 281, "panther_interact": 282, "pid_biopax": 283, "pid_interact": 284, "process_complex": 285, "process_control": 286, "process_react": 287, "reactions_biopax": 288, "reactome_biopax": 289, "reactome_b": 290, "reactome_interact": 291, "reactome_sbml": 292, "reactom": [293, 294, 295, 296, 297], "reactome_chebi": 294, "reactome_pathway_rel": 295, "reactome_pathwai": 296, "reactome_uniprot": 297, "scienc": [298, 299], "science_download": 299, "sider": [300, 301, 302, 303, 304, 305, 306, 307, 308], "siderdrug": 301, "sidersideeffect": 302, "sidersideeffectmeddra": 303, "sidersideeffetfrequ": 304, "sider_drug_nam": 305, "sider_meddra_side_effect": 306, "sider_side_effect_frequ": 307, "sider_side_effect": 308, "stitch": [309, 310, 311], "stitch_actions_interact": 310, "stitch_links_interact": 311, "string": [312, 313, 314, 315, 316], "string_effect": 313, "string_links_interact": 314, "string_physical_interact": 315, "string_speci": 316, "swisslipid": [317, 482], "switches_elm": [318, 319], "get_switches_elm": 319, "transmir": [320, 321], "transmir_interact": 321, "trip": [322, 323, 324, 325, 326, 327, 328], "take_a_trip": 323, "trip_find_uniprot": 324, "trip_get_uniprot": 325, "trip_interact": 326, "trip_process": 327, "trip_process_t": 328, "twosid": [329, 330], "twosides_interact": 330, "unichem": [331, 332, 333, 334, 335], "unichem_info": 333, "unichem_map": 334, "unichem_sourc": 335, "uniprot": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 482], "taxon": 337, "uniprotqueri": 338, "uniprotrecordhistori": 339, "deleted_uniprot_genesymbol": 340, "get_uniprot_sec": 341, "protein_datasheet": 342, "query_build": 343, "swissprot_delet": 344, "trembl_delet": 345, "uniprot_data": 346, "uniprot_delet": 347, "uniprot_famili": 348, "uniprot_histori": 349, "uniprot_history_recent_datasheet": 350, "uniprot_keyword": 351, "uniprot_loc": 352, "uniprot_ncbi_taxid": 353, "uniprot_ncbi_taxids_2": 354, "uniprot_preprocess": 355, "uniprot_queri": 356, "uniprot_recent_vers": 357, "uniprot_taxonomi": 358, "uniprot_tissu": 359, "uniprot_topologi": 360, "valid_uniprot": 361, "uniprot_db": [362, 363, 364, 365, 366, 367, 368, 369, 370], "all_swissprot": 363, "all_trembl": 364, "all_uniprot": 365, "get_db": 366, "init_db": 367, "is_swissprot": 368, "is_trembl": 369, "is_uniprot": 370, "uniprot_idmap": [371, 372], "idtyp": 372, "intern": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "input_format": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "arraymap": 375, "biomartmap": 376, "filemap": 377, "hmdbmap": 378, "mappinginput": 379, "networkinput": 380, "picklemap": 381, "promap": 382, "rampmap": 383, "readlist": 384, "unichemmap": 385, "uniprotlistmap": 386, "uniprotmap": 387, "licens": [388, 389, 390, 391, 392, 393, 425, 426, 482], "licenseattrib": 390, "licensefeatur": 391, "licensepurpos": 392, "licenseshar": 393, "map": [394, 482], "ref": [395, 396, 397], "refer": [396, 482, 483], "get_pubmed_data": 397, "resourc": [398, 399, 400, 401, 402, 403, 404, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 482], "abstractresourc": 399, "enzymesubstrateresourc": 400, "enzymesubstrateresourcekei": 401, "networkdataset": 402, "networkresourc": 403, "networkresourcekei": 404, "resourceattribut": 405, "legaci": [406, 407, 408, 409, 482], "db_categori": [407, 408, 409], "get_categori": [408, 409], "log": [410, 482], "control": [412, 413], "resourcecontrol": 413, "data_format": [415, 416, 417, 418, 419, 420, 421, 422, 423], "activity_flow": 416, "enzyme_substr": 417, "interact": [418, 482, 485], "interaction_htp": 419, "pathway_bad": 420, "reaction_pc": 421, "transcription_deprec": 422, "transcription_onebyon": 423, "network": [427, 482, 485], "url": 428, "share": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "cach": [430, 431, 432, 433, 482], "cache_item": 431, "cache_path": 432, "get_cachedir": 433, "constant": 435, "curl": [436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 482], "fileopen": 438, "remotefil": 439, "cache_delete_off": 440, "cache_delete_on": 441, "cache_off": 442, "cache_on": 443, "cache_print_off": 444, "cache_print_on": 445, "debug_off": 446, "debug_on": 447, "dryrun_off": 448, "dryrun_on": 449, "is_url": 450, "preserve_off": 451, "preserve_on": 452, "progress": [453, 454], "session": [455, 482], "set": 456, "visual": [457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "draw": [458, 459, 460], "interset": 459, "plot": [460, 482], "igraph_draw": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "abstractcairographdraw": 462, "arrowedgedraw": [463, 470], "defaultgraphdrawerffsupport": 464, "defaultvertexdraw": [465, 479], "textdraw": 466, "edg": [467, 468, 469, 470, 471, 472, 473, 482], "abstractedgedraw": 468, "alphavaryingedgedraw": 469, "darktolightedgedraw": 471, "lighttodarkedgedraw": 472, "taperededgedraw": 473, "vertex": [474, 475, 476, 477, 478, 479], "abstractcairodraw": 475, "abstractcairovertexdraw": 476, "abstractdraw": 477, "abstractvertexdraw": 478, "content": [480, 482], "welcom": 481, "omnipath": [481, 482], "do": [481, 482], "you": [481, 482], "need": 481, "instal": 481, "doc": 481, "get": 481, "help": 481, "featur": 481, "integr": 481, "databas": [481, 482], "manag": [481, 482], "further": 481, "modul": [481, 482], "id": [481, 482], "convers": 481, "homologi": 481, "translat": [481, 482], "faq": 481, "contact": 481, "impressum": 481, "histori": [481, 482, 484], "releas": [481, 484], "The": 482, "book": 482, "introduct": 482, "build": 482, "load": 482, "save": 482, "app": 482, "built": 482, "definit": 482, "strictli": 482, "literatur": 482, "curat": 482, "extra": 482, "activ": 482, "flow": 482, "enzym": [482, 485], "substrat": [482, 485], "ligand": 482, "receptor": 482, "transcript": 482, "regul": 482, "from": 482, "dorothea": 482, "other": 482, "mirna": 482, "post": 482, "lncrna": 482, "mrna": 482, "small": 482, "molecul": 482, "protein": 482, "relationship": 482, "complex": [482, 485], "annot": [482, 485], "inter": [482, 485], "cellular": [482, 485], "commun": [482, 485], "role": [482, 485], "directli": 482, "origin": 482, "interest": 482, "tl": 482, "dr": 482, "hmdb": 482, "human": 482, "metabolom": 482, "direct": 482, "access": 482, "higher": 482, "level": 482, "lipid": 482, "ncbi": 482, "e": 482, "util": 482, "download": 482, "custom": 482, "failur": 482, "corrupt": 482, "issu": 482, "look": 482, "debug": 482, "timeout": 482, "inspect": 482, "object": 482, "i": 482, "fail": 482, "onli": 482, "read": 482, "ssl": 482, "http": 482, "error": 482, "exampl": [482, 485], "commerci": 482, "us": 482, "inform": 482, "certain": 482, "dataset": [482, 485], "which": 482, "ar": 482, "pre": 482, "defin": 482, "panda": 482, "datafram": 482, "self": 482, "loop": 482, "molecular": [482, 485], "identifi": 482, "tabl": 482, "orthologi": 482, "dictionari": 482, "frame": 482, "taxonomi": 482, "scientif": 482, "name": 482, "organ": 482, "all": 482, "one": 482, "format": 482, "valid": 482, "singl": 482, "datasheet": 482, "record": 482, "rest": 482, "api": 482, "process": 482, "sanit": 482, "sequenc": 482, "full": 482, "select": 482, "signal": 482, "an": 482, "intercellular": 482, "quantit": 482, "overview": 482, "intercel": 482, "brows": 482, "categori": 482, "gene": 482, "pickl": 482, "messag": 482, "basic": 482, "about": 482, "file": 482, "consol": 482, "disabl": 482, "write": 482, "send": 482, "connect": 482, "class": 482, "logger": 482, "bel": 482, "export": 482, "cellphonedb": 482, "igraph": 482, "base": 482, "just": 482, "want": 482, "quickli": 482, "plai": 482, "around": 482, "how": [482, 483], "ani": 482, "creat": 482, "2": [482, 484], "test": 482, "structur": 482, "sign": 482, "node": 482, "queri": [482, 485], "our": 482, "without": 482, "causal": 482, "navig": 483, "0": 484, "1": 484, "3": 484, "4": 484, "5": 484, "32": 484, "6": 484, "31": 484, "7": 484, "74": 484, "93": 484, "110": 484, "8": 484, "9": 484, "10": 484, "11": 484, "12": 484, "13": 484, "14": 484, "upcom": 484, "webservic": 485, "type": 485, "mous": 485, "rat": 485, "explor": 485, "possibl": 485, "paramet": 485}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "pypath.inputs.abs.abs_interactions": [[11, "pypath-inputs-abs-abs-interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "pypath.inputs.acsn.acsn_interactions": [[13, "pypath-inputs-acsn-acsn-interactions"]], "pypath.inputs.acsn.acsn_interactions_sif": [[14, "pypath-inputs-acsn-acsn-interactions-sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, "pypath-inputs-adrecs-adrecsadr"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, "pypath-inputs-adrecs-adrecschildparent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, "pypath-inputs-adrecs-adrecsdrug"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, "pypath-inputs-adrecs-adrecsdrugadr"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, "pypath-inputs-adrecs-adrecsterm"]], "pypath.inputs.adrecs.adrecs_adr_ontology": [[21, "pypath-inputs-adrecs-adrecs-adr-ontology"]], "pypath.inputs.adrecs.adrecs_drug_adr": [[22, "pypath-inputs-adrecs-adrecs-drug-adr"]], "pypath.inputs.adrecs.adrecs_drug_identifiers": [[23, "pypath-inputs-adrecs-adrecs-drug-identifiers"]], "pypath.inputs.adrecs.adrecs_hierarchy": [[24, "pypath-inputs-adrecs-adrecs-hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "pypath.inputs.biogrid.biogrid_all_interactions": [[26, "pypath-inputs-biogrid-biogrid-all-interactions"]], "pypath.inputs.biogrid.biogrid_interactions": [[27, "pypath-inputs-biogrid-biogrid-interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "pypath.inputs.biomart.biomart_homology": [[29, "pypath-inputs-biomart-biomart-homology"]], "pypath.inputs.biomart.biomart_microarray": [[30, "pypath-inputs-biomart-biomart-microarray"]], "pypath.inputs.biomart.biomart_microarray_types": [[31, "pypath-inputs-biomart-biomart-microarray-types"]], "pypath.inputs.biomart.biomart_microarrays": [[32, "pypath-inputs-biomart-biomart-microarrays"]], "pypath.inputs.biomart.biomart_query": [[33, "pypath-inputs-biomart-biomart-query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "pypath.inputs.biomodels.download_single_model": [[35, "pypath-inputs-biomodels-download-single-model"]], "pypath.inputs.biomodels.get_all_models": [[36, "pypath-inputs-biomodels-get-all-models"]], "pypath.inputs.biomodels.get_biomodels": [[37, "pypath-inputs-biomodels-get-biomodels"]], "pypath.inputs.biomodels.get_biomodels_req": [[38, "pypath-inputs-biomodels-get-biomodels-req"]], "pypath.inputs.biomodels.get_single_model": [[39, "pypath-inputs-biomodels-get-single-model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "pypath.inputs.ca1.ca1_interactions": [[41, "pypath-inputs-ca1-ca1-interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "pypath.inputs.cancercellmap.ccmap_interactions": [[43, "pypath-inputs-cancercellmap-ccmap-interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[45, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "pypath.inputs.chembl.chembl_activities": [[47, "pypath-inputs-chembl-chembl-activities"]], "pypath.inputs.chembl.chembl_assays": [[48, "pypath-inputs-chembl-chembl-assays"]], "pypath.inputs.chembl.chembl_documents": [[49, "pypath-inputs-chembl-chembl-documents"]], "pypath.inputs.chembl.chembl_drug_indications": [[50, "pypath-inputs-chembl-chembl-drug-indications"]], "pypath.inputs.chembl.chembl_mechanisms": [[51, "pypath-inputs-chembl-chembl-mechanisms"]], "pypath.inputs.chembl.chembl_molecules": [[52, "pypath-inputs-chembl-chembl-molecules"]], "pypath.inputs.chembl.chembl_targets": [[53, "pypath-inputs-chembl-chembl-targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "pypath.inputs.clinvar.clinvar_citations": [[55, "pypath-inputs-clinvar-clinvar-citations"]], "pypath.inputs.clinvar.clinvar_raw": [[56, "pypath-inputs-clinvar-clinvar-raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[58, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[59, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[60, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[61, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[62, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[63, "pypath-inputs-common-read-xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "pypath.inputs.compath.compath_mappings": [[65, "pypath-inputs-compath-compath-mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "pypath.inputs.cpdb.cpdb_interactions": [[67, "pypath-inputs-cpdb-cpdb-interactions"]], "pypath.inputs.cpdb.cpdb_interactions_ltp": [[68, "pypath-inputs-cpdb-cpdb-interactions-ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[70, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "pypath.inputs.ctdbase.ctdbase_relations": [[72, "pypath-inputs-ctdbase-ctdbase-relations"]], "pypath.inputs.ctdbase.ctdbase_vocabulary": [[73, "pypath-inputs-ctdbase-ctdbase-vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "pypath.inputs.ddinter.ddinter_drug_interactions": [[75, "pypath-inputs-ddinter-ddinter-drug-interactions"]], "pypath.inputs.ddinter.ddinter_identifiers": [[76, "pypath-inputs-ddinter-ddinter-identifiers"]], "pypath.inputs.ddinter.ddinter_interactions": [[77, "pypath-inputs-ddinter-ddinter-interactions"]], "pypath.inputs.ddinter.ddinter_mappings": [[78, "pypath-inputs-ddinter-ddinter-mappings"]], "pypath.inputs.ddinter.ddinter_n_drugs": [[79, "pypath-inputs-ddinter-ddinter-n-drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "pypath.inputs.deathdomain.deathdomain_interactions": [[81, "pypath-inputs-deathdomain-deathdomain-interactions"]], "pypath.inputs.deathdomain.deathdomain_interactions_rescued": [[82, "pypath-inputs-deathdomain-deathdomain-interactions-rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "pypath.inputs.dip.dip_interactions": [[84, "pypath-inputs-dip-dip-interactions"]], "pypath.inputs.dip.dip_login": [[85, "pypath-inputs-dip-dip-login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "pypath.inputs.diseases.diseases_general": [[87, "pypath-inputs-diseases-diseases-general"]], "pypath.inputs.diseases.experiments_filtered": [[88, "pypath-inputs-diseases-experiments-filtered"]], "pypath.inputs.diseases.experiments_full": [[89, "pypath-inputs-diseases-experiments-full"]], "pypath.inputs.diseases.knowledge_filtered": [[90, "pypath-inputs-diseases-knowledge-filtered"]], "pypath.inputs.diseases.knowledge_full": [[91, "pypath-inputs-diseases-knowledge-full"]], "pypath.inputs.diseases.textmining_filtered": [[92, "pypath-inputs-diseases-textmining-filtered"]], "pypath.inputs.diseases.textmining_full": [[93, "pypath-inputs-diseases-textmining-full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "pypath.inputs.drugbank.DrugbankFull": [[95, "pypath-inputs-drugbank-drugbankfull"]], "pypath.inputs.drugbank.drugbank_annotations": [[96, "pypath-inputs-drugbank-drugbank-annotations"]], "pypath.inputs.drugbank.drugbank_drugs": [[97, "pypath-inputs-drugbank-drugbank-drugs"]], "pypath.inputs.drugbank.drugbank_interactions": [[98, "pypath-inputs-drugbank-drugbank-interactions"]], "pypath.inputs.drugbank.drugbank_mapping": [[99, "pypath-inputs-drugbank-drugbank-mapping"]], "pypath.inputs.drugbank.drugbank_raw_interactions": [[100, "pypath-inputs-drugbank-drugbank-raw-interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[102, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "pypath.inputs.elm.elm_classes": [[104, "pypath-inputs-elm-elm-classes"]], "pypath.inputs.elm.elm_domains": [[105, "pypath-inputs-elm-elm-domains"]], "pypath.inputs.elm.elm_instances": [[106, "pypath-inputs-elm-elm-instances"]], "pypath.inputs.elm.elm_interactions": [[107, "pypath-inputs-elm-elm-interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[109, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "pypath.inputs.encode.encode_tf_mirna_interactions": [[111, "pypath-inputs-encode-encode-tf-mirna-interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "pypath.inputs.ensembl.ensembl_organisms": [[113, "pypath-inputs-ensembl-ensembl-organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "pypath.inputs.eutils.esummary": [[115, "pypath-inputs-eutils-esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "pypath.inputs.expasy.expasy_enzyme_classes": [[117, "pypath-inputs-expasy-expasy-enzyme-classes"]], "pypath.inputs.expasy.expasy_enzymes": [[118, "pypath-inputs-expasy-expasy-enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "pypath.inputs.genecards.genecards_datasheet": [[120, "pypath-inputs-genecards-genecards-datasheet"]], "pypath.inputs.genecards.genecards_soup": [[121, "pypath-inputs-genecards-genecards-soup"]], "pypath.inputs.genecards.genecards_summaries": [[122, "pypath-inputs-genecards-genecards-summaries"]], "pypath.inputs.get_method": [[123, "pypath-inputs-get-method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "pypath.inputs.graphviz.graphviz_attrs": [[125, "pypath-inputs-graphviz-graphviz-attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "pypath.inputs.hprd.get_hprd": [[127, "pypath-inputs-hprd-get-hprd"]], "pypath.inputs.hprd.hprd_enzyme_substrate": [[128, "pypath-inputs-hprd-hprd-enzyme-substrate"]], "pypath.inputs.hprd.hprd_interactions": [[129, "pypath-inputs-hprd-hprd-interactions"]], "pypath.inputs.hprd.hprd_interactions_htp": [[130, "pypath-inputs-hprd-hprd-interactions-htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "pypath.inputs.htri.htri_interactions": [[132, "pypath-inputs-htri-htri-interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "pypath.inputs.humsavar.uniprot_variants": [[134, "pypath-inputs-humsavar-uniprot-variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "pypath.inputs.ielm.get_ielm": [[136, "pypath-inputs-ielm-get-ielm"]], "pypath.inputs.ielm.get_ielm_huge": [[137, "pypath-inputs-ielm-get-ielm-huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "pypath.inputs.imweb.get_imweb": [[139, "pypath-inputs-imweb-get-imweb"]], "pypath.inputs.imweb.get_imweb_req": [[140, "pypath-inputs-imweb-get-imweb-req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "pypath.inputs.innatedb.innatedb_interactions": [[142, "pypath-inputs-innatedb-innatedb-interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "pypath.inputs.instruct.get_instruct": [[144, "pypath-inputs-instruct-get-instruct"]], "pypath.inputs.instruct.get_instruct_offsets": [[145, "pypath-inputs-instruct-get-instruct-offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "pypath.inputs.intact.intact_interactions": [[147, "pypath-inputs-intact-intact-interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "pypath.inputs.interpro.interpro2go_annotations": [[149, "pypath-inputs-interpro-interpro2go-annotations"]], "pypath.inputs.interpro.interpro_annotations": [[150, "pypath-inputs-interpro-interpro-annotations"]], "pypath.inputs.interpro.interpro_entries": [[151, "pypath-inputs-interpro-interpro-entries"]], "pypath.inputs.interpro.interpro_xrefs": [[152, "pypath-inputs-interpro-interpro-xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "pypath.inputs.ipi.ipi_uniprot": [[154, "pypath-inputs-ipi-ipi-uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "pypath.inputs.kegg_api.disease_to_drug": [[156, "pypath-inputs-kegg-api-disease-to-drug"]], "pypath.inputs.kegg_api.disease_to_gene": [[157, "pypath-inputs-kegg-api-disease-to-gene"]], "pypath.inputs.kegg_api.disease_to_pathway": [[158, "pypath-inputs-kegg-api-disease-to-pathway"]], "pypath.inputs.kegg_api.drug_to_disease": [[159, "pypath-inputs-kegg-api-drug-to-disease"]], "pypath.inputs.kegg_api.drug_to_drug": [[160, "pypath-inputs-kegg-api-drug-to-drug"]], "pypath.inputs.kegg_api.drug_to_gene": [[161, "pypath-inputs-kegg-api-drug-to-gene"]], "pypath.inputs.kegg_api.drug_to_pathway": [[162, "pypath-inputs-kegg-api-drug-to-pathway"]], "pypath.inputs.kegg_api.gene_to_disease": [[163, "pypath-inputs-kegg-api-gene-to-disease"]], "pypath.inputs.kegg_api.gene_to_drug": [[164, "pypath-inputs-kegg-api-gene-to-drug"]], "pypath.inputs.kegg_api.gene_to_pathway": [[165, "pypath-inputs-kegg-api-gene-to-pathway"]], "pypath.inputs.kegg_api.kegg_drug_to_chebi": [[166, "pypath-inputs-kegg-api-kegg-drug-to-chebi"]], "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid": [[167, "pypath-inputs-kegg-api-kegg-gene-to-ncbi-geneid"]], "pypath.inputs.kegg_api.kegg_gene_to_uniprot": [[168, "pypath-inputs-kegg-api-kegg-gene-to-uniprot"]], "pypath.inputs.kegg_api.pathway_to_disease": [[169, "pypath-inputs-kegg-api-pathway-to-disease"]], "pypath.inputs.kegg_api.pathway_to_drug": [[170, "pypath-inputs-kegg-api-pathway-to-drug"]], "pypath.inputs.kegg_api.pathway_to_gene": [[171, "pypath-inputs-kegg-api-pathway-to-gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "pypath.inputs.kirouac2010.kirouac2010_interactions": [[173, "pypath-inputs-kirouac2010-kirouac2010-interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "pypath.inputs.laudanna.laudanna_directions": [[175, "pypath-inputs-laudanna-laudanna-directions"]], "pypath.inputs.laudanna.laudanna_effects": [[176, "pypath-inputs-laudanna-laudanna-effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "pypath.inputs.lincs.lincs_compounds": [[178, "pypath-inputs-lincs-lincs-compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "pypath.inputs.macrophage.macrophage_interactions": [[180, "pypath-inputs-macrophage-macrophage-interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "pypath.inputs.mimp.get_kinase_class": [[183, "pypath-inputs-mimp-get-kinase-class"]], "pypath.inputs.mimp.mimp_enzyme_substrate": [[184, "pypath-inputs-mimp-mimp-enzyme-substrate"]], "pypath.inputs.mimp.mimp_interactions": [[185, "pypath-inputs-mimp-mimp-interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "pypath.inputs.mir2disease.mir2disease_interactions": [[187, "pypath-inputs-mir2disease-mir2disease-interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "pypath.inputs.mirdeathdb.mirdeathdb_interactions": [[189, "pypath-inputs-mirdeathdb-mirdeathdb-interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[191, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[192, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "pypath.inputs.mppi.mppi_interactions": [[194, "pypath-inputs-mppi-mppi-interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions": [[196, "pypath-inputs-ncrdeathdb-ncrdeathdb-interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "pypath.inputs.negatome.negatome_interactions": [[198, "pypath-inputs-negatome-negatome-interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "pypath.inputs.netbiol.arn_interactions": [[200, "pypath-inputs-netbiol-arn-interactions"]], "pypath.inputs.netbiol.nrf2ome_interactions": [[201, "pypath-inputs-netbiol-nrf2ome-interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "pypath.inputs.offsides.offsides_side_effects": [[203, "pypath-inputs-offsides-offsides-side-effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "pypath.inputs.ontology.listof_ontologies": [[205, "pypath-inputs-ontology-listof-ontologies"]], "pypath.inputs.ontology.ontology": [[206, "pypath-inputs-ontology-ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "pypath.inputs.opentargets.opentargets_adverse_reactions": [[208, "pypath-inputs-opentargets-opentargets-adverse-reactions"]], "pypath.inputs.opentargets.opentargets_baseline_expression": [[209, "pypath-inputs-opentargets-opentargets-baseline-expression"]], "pypath.inputs.opentargets.opentargets_direct_score": [[210, "pypath-inputs-opentargets-opentargets-direct-score"]], "pypath.inputs.opentargets.opentargets_general": [[211, "pypath-inputs-opentargets-opentargets-general"]], "pypath.inputs.opentargets.opentargets_indirect_score": [[212, "pypath-inputs-opentargets-opentargets-indirect-score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, "pypath-inputs-pathophenodb-diseasepathogen"]], "pypath.inputs.pathophenodb.disease_pathogen_interactions": [[215, "pypath-inputs-pathophenodb-disease-pathogen-interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, "pypath-inputs-pathwaycommons-pathwaycommonsinteraction"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, "pypath-inputs-pathwaycommons-pathwaycommonsresource"]], "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions": [[219, "pypath-inputs-pathwaycommons-pathwaycommons-bind-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions": [[220, "pypath-inputs-pathwaycommons-pathwaycommons-biogrid-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions": [[221, "pypath-inputs-pathwaycommons-pathwaycommons-corum-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions": [[222, "pypath-inputs-pathwaycommons-pathwaycommons-dip-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions": [[223, "pypath-inputs-pathwaycommons-pathwaycommons-hprd-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions": [[224, "pypath-inputs-pathwaycommons-pathwaycommons-inoh-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions": [[225, "pypath-inputs-pathwaycommons-pathwaycommons-intact-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_interactions": [[226, "pypath-inputs-pathwaycommons-pathwaycommons-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions": [[227, "pypath-inputs-pathwaycommons-pathwaycommons-kegg-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions": [[228, "pypath-inputs-pathwaycommons-pathwaycommons-netpath-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions": [[229, "pypath-inputs-pathwaycommons-pathwaycommons-panther-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions": [[230, "pypath-inputs-pathwaycommons-pathwaycommons-phosphosite-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions": [[231, "pypath-inputs-pathwaycommons-pathwaycommons-reactome-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions": [[232, "pypath-inputs-pathwaycommons-pathwaycommons-wikipathways-interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pypath.inputs.pazar.pazar_interactions": [[234, "pypath-inputs-pazar-pazar-interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pypath.inputs.pepcyber.pepcyber_details": [[236, "pypath-inputs-pepcyber-pepcyber-details"]], "pypath.inputs.pepcyber.pepcyber_interactions": [[237, "pypath-inputs-pepcyber-pepcyber-interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pypath.inputs.pharos.pharos_diseases": [[239, "pypath-inputs-pharos-pharos-diseases"]], "pypath.inputs.pharos.pharos_expression": [[240, "pypath-inputs-pharos-pharos-expression"]], "pypath.inputs.pharos.pharos_general": [[241, "pypath-inputs-pharos-pharos-general"]], "pypath.inputs.pharos.pharos_gtex": [[242, "pypath-inputs-pharos-pharos-gtex"]], "pypath.inputs.pharos.pharos_ligands": [[243, "pypath-inputs-pharos-pharos-ligands"]], "pypath.inputs.pharos.pharos_orthologs": [[244, "pypath-inputs-pharos-pharos-orthologs"]], "pypath.inputs.pharos.pharos_targets": [[245, "pypath-inputs-pharos-pharos-targets"]], "pypath.inputs.pharos.pharos_xrefs": [[246, "pypath-inputs-pharos-pharos-xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "pypath.inputs.phobius.phobius_annotations": [[248, "pypath-inputs-phobius-phobius-annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate": [[250, "pypath-inputs-phosphonetworks-phosphonetworks-enzyme-substrate"]], "pypath.inputs.phosphonetworks.phosphonetworks_interactions": [[251, "pypath-inputs-phosphonetworks-phosphonetworks-interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "pypath.inputs.phosphopoint.phosphopoint_directions": [[253, "pypath-inputs-phosphopoint-phosphopoint-directions"]], "pypath.inputs.phosphopoint.phosphopoint_interactions": [[254, "pypath-inputs-phosphopoint-phosphopoint-interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "pypath.inputs.pro.get_pro": [[256, "pypath-inputs-pro-get-pro"]], "pypath.inputs.pro.pro_mapping": [[257, "pypath-inputs-pro-pro-mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "pypath.inputs.protmapper.get_protmapper": [[259, "pypath-inputs-protmapper-get-protmapper"]], "pypath.inputs.protmapper.protmapper_enzyme_substrate": [[260, "pypath-inputs-protmapper-protmapper-enzyme-substrate"]], "pypath.inputs.protmapper.protmapper_interactions": [[261, "pypath-inputs-protmapper-protmapper-interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pypath.inputs.pubchem.pubchem_mapping": [[263, "pypath-inputs-pubchem-pubchem-mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "pypath.inputs.pubmed.get_pmid": [[265, "pypath-inputs-pubmed-get-pmid"]], "pypath.inputs.pubmed.get_pubmeds": [[266, "pypath-inputs-pubmed-get-pubmeds"]], "pypath.inputs.pubmed.only_pmids": [[267, "pypath-inputs-pubmed-only-pmids"]], "pypath.inputs.pubmed.open_pubmed": [[268, "pypath-inputs-pubmed-open-pubmed"]], "pypath.inputs.pubmed.pmids_dict": [[269, "pypath-inputs-pubmed-pmids-dict"]], "pypath.inputs.pubmed.pmids_list": [[270, "pypath-inputs-pubmed-pmids-list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "pypath.inputs.rdata": [[272, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[273, "module-pypath.inputs.reaction"]], "pypath.inputs.reaction.acsn_biopax": [[274, "pypath-inputs-reaction-acsn-biopax"]], "pypath.inputs.reaction.acsn_interactions_2": [[275, "pypath-inputs-reaction-acsn-interactions-2"]], "pypath.inputs.reaction.get_acsn_effects": [[276, "pypath-inputs-reaction-get-acsn-effects"]], "pypath.inputs.reaction.get_controls": [[277, "pypath-inputs-reaction-get-controls"]], "pypath.inputs.reaction.get_interactions": [[278, "pypath-inputs-reaction-get-interactions"]], "pypath.inputs.reaction.get_reactions": [[279, "pypath-inputs-reaction-get-reactions"]], "pypath.inputs.reaction.get_soup": [[280, "pypath-inputs-reaction-get-soup"]], "pypath.inputs.reaction.panther_biopax": [[281, "pypath-inputs-reaction-panther-biopax"]], "pypath.inputs.reaction.panther_interactions": [[282, "pypath-inputs-reaction-panther-interactions"]], "pypath.inputs.reaction.pid_biopax": [[283, "pypath-inputs-reaction-pid-biopax"]], "pypath.inputs.reaction.pid_interactions": [[284, "pypath-inputs-reaction-pid-interactions"]], "pypath.inputs.reaction.process_complex": [[285, "pypath-inputs-reaction-process-complex"]], "pypath.inputs.reaction.process_controls": [[286, "pypath-inputs-reaction-process-controls"]], "pypath.inputs.reaction.process_reactions": [[287, "pypath-inputs-reaction-process-reactions"]], "pypath.inputs.reaction.reactions_biopax": [[288, "pypath-inputs-reaction-reactions-biopax"]], "pypath.inputs.reaction.reactome_biopax": [[289, "pypath-inputs-reaction-reactome-biopax"]], "pypath.inputs.reaction.reactome_bs": [[290, "pypath-inputs-reaction-reactome-bs"]], "pypath.inputs.reaction.reactome_interactions": [[291, "pypath-inputs-reaction-reactome-interactions"]], "pypath.inputs.reaction.reactome_sbml": [[292, "pypath-inputs-reaction-reactome-sbml"]], "pypath.inputs.reactome": [[293, "module-pypath.inputs.reactome"]], "pypath.inputs.reactome.reactome_chebis": [[294, "pypath-inputs-reactome-reactome-chebis"]], "pypath.inputs.reactome.reactome_pathway_relations": [[295, "pypath-inputs-reactome-reactome-pathway-relations"]], "pypath.inputs.reactome.reactome_pathways": [[296, "pypath-inputs-reactome-reactome-pathways"]], "pypath.inputs.reactome.reactome_uniprots": [[297, "pypath-inputs-reactome-reactome-uniprots"]], "pypath.inputs.science": [[298, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[299, "pypath-inputs-science-science-download"]], "pypath.inputs.sider": [[300, "module-pypath.inputs.sider"]], "pypath.inputs.sider.SiderDrug": [[301, "pypath-inputs-sider-siderdrug"]], "pypath.inputs.sider.SiderSideeffect": [[302, "pypath-inputs-sider-sidersideeffect"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[303, "pypath-inputs-sider-sidersideeffectmeddra"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[304, "pypath-inputs-sider-sidersideeffetfrequency"]], "pypath.inputs.sider.sider_drug_names": [[305, "pypath-inputs-sider-sider-drug-names"]], "pypath.inputs.sider.sider_meddra_side_effects": [[306, "pypath-inputs-sider-sider-meddra-side-effects"]], "pypath.inputs.sider.sider_side_effect_frequencies": [[307, "pypath-inputs-sider-sider-side-effect-frequencies"]], "pypath.inputs.sider.sider_side_effects": [[308, "pypath-inputs-sider-sider-side-effects"]], "pypath.inputs.stitch": [[309, "module-pypath.inputs.stitch"]], "pypath.inputs.stitch.stitch_actions_interactions": [[310, "pypath-inputs-stitch-stitch-actions-interactions"]], "pypath.inputs.stitch.stitch_links_interactions": [[311, "pypath-inputs-stitch-stitch-links-interactions"]], "pypath.inputs.string": [[312, "module-pypath.inputs.string"]], "pypath.inputs.string.string_effects": [[313, "pypath-inputs-string-string-effects"]], "pypath.inputs.string.string_links_interactions": [[314, "pypath-inputs-string-string-links-interactions"]], "pypath.inputs.string.string_physical_interactions": [[315, "pypath-inputs-string-string-physical-interactions"]], "pypath.inputs.string.string_species": [[316, "pypath-inputs-string-string-species"]], "pypath.inputs.swisslipids": [[317, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[318, "module-pypath.inputs.switches_elm"]], "pypath.inputs.switches_elm.get_switches_elm": [[319, "pypath-inputs-switches-elm-get-switches-elm"]], "pypath.inputs.transmir": [[320, "module-pypath.inputs.transmir"]], "pypath.inputs.transmir.transmir_interactions": [[321, "pypath-inputs-transmir-transmir-interactions"]], "pypath.inputs.trip": [[322, "module-pypath.inputs.trip"]], "pypath.inputs.trip.take_a_trip": [[323, "pypath-inputs-trip-take-a-trip"]], "pypath.inputs.trip.trip_find_uniprot": [[324, "pypath-inputs-trip-trip-find-uniprot"]], "pypath.inputs.trip.trip_get_uniprot": [[325, "pypath-inputs-trip-trip-get-uniprot"]], "pypath.inputs.trip.trip_interactions": [[326, "pypath-inputs-trip-trip-interactions"]], "pypath.inputs.trip.trip_process": [[327, "pypath-inputs-trip-trip-process"]], "pypath.inputs.trip.trip_process_table": [[328, "pypath-inputs-trip-trip-process-table"]], "pypath.inputs.twosides": [[329, "module-pypath.inputs.twosides"]], "pypath.inputs.twosides.twosides_interactions": [[330, "pypath-inputs-twosides-twosides-interactions"]], "pypath.inputs.unichem": [[331, "module-pypath.inputs.unichem"]], "pypath.inputs.unichem.info": [[332, "pypath-inputs-unichem-info"]], "pypath.inputs.unichem.unichem_info": [[333, "pypath-inputs-unichem-unichem-info"]], "pypath.inputs.unichem.unichem_mapping": [[334, "pypath-inputs-unichem-unichem-mapping"]], "pypath.inputs.unichem.unichem_sources": [[335, "pypath-inputs-unichem-unichem-sources"]], "pypath.inputs.uniprot": [[336, "module-pypath.inputs.uniprot"]], "pypath.inputs.uniprot.Taxon": [[337, "pypath-inputs-uniprot-taxon"]], "pypath.inputs.uniprot.UniprotQuery": [[338, "pypath-inputs-uniprot-uniprotquery"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[339, "pypath-inputs-uniprot-uniprotrecordhistory"]], "pypath.inputs.uniprot.deleted_uniprot_genesymbol": [[340, "pypath-inputs-uniprot-deleted-uniprot-genesymbol"]], "pypath.inputs.uniprot.get_uniprot_sec": [[341, "pypath-inputs-uniprot-get-uniprot-sec"]], "pypath.inputs.uniprot.protein_datasheet": [[342, "pypath-inputs-uniprot-protein-datasheet"]], "pypath.inputs.uniprot.query_builder": [[343, "pypath-inputs-uniprot-query-builder"]], "pypath.inputs.uniprot.swissprot_deleted": [[344, "pypath-inputs-uniprot-swissprot-deleted"]], "pypath.inputs.uniprot.trembl_deleted": [[345, "pypath-inputs-uniprot-trembl-deleted"]], "pypath.inputs.uniprot.uniprot_data": [[346, "pypath-inputs-uniprot-uniprot-data"]], "pypath.inputs.uniprot.uniprot_deleted": [[347, "pypath-inputs-uniprot-uniprot-deleted"]], "pypath.inputs.uniprot.uniprot_families": [[348, "pypath-inputs-uniprot-uniprot-families"]], "pypath.inputs.uniprot.uniprot_history": [[349, "pypath-inputs-uniprot-uniprot-history"]], "pypath.inputs.uniprot.uniprot_history_recent_datasheet": [[350, "pypath-inputs-uniprot-uniprot-history-recent-datasheet"]], "pypath.inputs.uniprot.uniprot_keywords": [[351, "pypath-inputs-uniprot-uniprot-keywords"]], "pypath.inputs.uniprot.uniprot_locations": [[352, "pypath-inputs-uniprot-uniprot-locations"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids": [[353, "pypath-inputs-uniprot-uniprot-ncbi-taxids"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids_2": [[354, "pypath-inputs-uniprot-uniprot-ncbi-taxids-2"]], "pypath.inputs.uniprot.uniprot_preprocess": [[355, "pypath-inputs-uniprot-uniprot-preprocess"]], "pypath.inputs.uniprot.uniprot_query": [[356, "pypath-inputs-uniprot-uniprot-query"]], "pypath.inputs.uniprot.uniprot_recent_version": [[357, "pypath-inputs-uniprot-uniprot-recent-version"]], "pypath.inputs.uniprot.uniprot_taxonomy": [[358, "pypath-inputs-uniprot-uniprot-taxonomy"]], "pypath.inputs.uniprot.uniprot_tissues": [[359, "pypath-inputs-uniprot-uniprot-tissues"]], "pypath.inputs.uniprot.uniprot_topology": [[360, "pypath-inputs-uniprot-uniprot-topology"]], "pypath.inputs.uniprot.valid_uniprot": [[361, "pypath-inputs-uniprot-valid-uniprot"]], "pypath.inputs.uniprot_db": [[362, "module-pypath.inputs.uniprot_db"]], "pypath.inputs.uniprot_db.all_swissprots": [[363, "pypath-inputs-uniprot-db-all-swissprots"]], "pypath.inputs.uniprot_db.all_trembls": [[364, "pypath-inputs-uniprot-db-all-trembls"]], "pypath.inputs.uniprot_db.all_uniprots": [[365, "pypath-inputs-uniprot-db-all-uniprots"]], "pypath.inputs.uniprot_db.get_db": [[366, "pypath-inputs-uniprot-db-get-db"]], "pypath.inputs.uniprot_db.init_db": [[367, "pypath-inputs-uniprot-db-init-db"]], "pypath.inputs.uniprot_db.is_swissprot": [[368, "pypath-inputs-uniprot-db-is-swissprot"]], "pypath.inputs.uniprot_db.is_trembl": [[369, "pypath-inputs-uniprot-db-is-trembl"]], "pypath.inputs.uniprot_db.is_uniprot": [[370, "pypath-inputs-uniprot-db-is-uniprot"]], "pypath.inputs.uniprot_idmapping": [[371, "module-pypath.inputs.uniprot_idmapping"]], "pypath.inputs.uniprot_idmapping.idtypes": [[372, "pypath-inputs-uniprot-idmapping-idtypes"]], "pypath.internals": [[373, "module-pypath.internals"]], "pypath.internals.input_formats": [[374, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[375, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[376, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[377, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.HmdbMapping": [[378, "pypath-internals-input-formats-hmdbmapping"]], "pypath.internals.input_formats.MappingInput": [[379, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[380, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[381, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[382, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.RampMapping": [[383, "pypath-internals-input-formats-rampmapping"]], "pypath.internals.input_formats.ReadList": [[384, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[385, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[386, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[387, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[388, "module-pypath.internals.license"]], "pypath.internals.license.License": [[389, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[390, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[391, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[392, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[393, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[394, "module-pypath.internals.maps"]], "pypath.internals.refs": [[395, "module-pypath.internals.refs"]], "pypath.internals.refs.Reference": [[396, "pypath-internals-refs-reference"]], "pypath.internals.refs.get_pubmed_data": [[397, "pypath-internals-refs-get-pubmed-data"]], "pypath.internals.resource": [[398, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[399, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[400, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[401, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkDataset": [[402, "pypath-internals-resource-networkdataset"]], "pypath.internals.resource.NetworkResource": [[403, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[404, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[405, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[406, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[407, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[408, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[409, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[410, "pypath-log"]], "pypath.resources": [[411, "module-pypath.resources"]], "pypath.resources.controller": [[412, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[413, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[414, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[415, "module-pypath.resources.data_formats"]], "pypath.resources.data_formats.activity_flow": [[416, "pypath-resources-data-formats-activity-flow"]], "pypath.resources.data_formats.enzyme_substrate": [[417, "pypath-resources-data-formats-enzyme-substrate"]], "pypath.resources.data_formats.interaction": [[418, "pypath-resources-data-formats-interaction"]], "pypath.resources.data_formats.interaction_htp": [[419, "pypath-resources-data-formats-interaction-htp"]], "pypath.resources.data_formats.pathway_bad": [[420, "pypath-resources-data-formats-pathway-bad"]], "pypath.resources.data_formats.reaction_pc": [[421, "pypath-resources-data-formats-reaction-pc"]], "pypath.resources.data_formats.transcription_deprecated": [[422, "pypath-resources-data-formats-transcription-deprecated"]], "pypath.resources.data_formats.transcription_onebyone": [[423, "pypath-resources-data-formats-transcription-onebyone"]], "pypath.resources.get_controller": [[424, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[425, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[426, "pypath-resources-licenses-licenses"]], "pypath.resources.network": [[427, "module-pypath.resources.network"]], "pypath.resources.urls": [[428, "module-pypath.resources.urls"]], "pypath.share": [[429, "module-pypath.share"]], "pypath.share.cache": [[430, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[431, "pypath-share-cache-cache-item"]], "pypath.share.cache.cache_path": [[432, "pypath-share-cache-cache-path"]], "pypath.share.cache.get_cachedir": [[433, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[434, "module-pypath.share.common"]], "pypath.share.constants": [[435, "module-pypath.share.constants"]], "pypath.share.curl": [[436, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[437, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[438, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[439, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[440, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[441, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[442, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[443, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[444, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[445, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[446, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[447, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[448, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[449, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[450, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[451, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[452, "pypath-share-curl-preserve-on"]], "pypath.share.progress": [[453, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[454, "pypath-share-progress-progress"]], "pypath.share.session": [[455, "module-pypath.share.session"]], "pypath.share.settings": [[456, "module-pypath.share.settings"]], "pypath.visual": [[457, "module-pypath.visual"]], "pypath.visual.drawing": [[458, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[459, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[460, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[461, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[462, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[463, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[464, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[465, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[466, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[467, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[468, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[469, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[470, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[471, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[472, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[473, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[474, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[475, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[476, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[477, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[478, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[479, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[480, "contents"]], "Welcome to pypath!": [[481, "welcome-to-pypath"]], "OmniPath": [[481, "omnipath"]], "Do you need pypath?": [[481, "do-you-need-pypath"]], "Installation": [[481, "installation"]], "Docs": [[481, "docs"]], "Get help": [[481, "get-help"]], "Features": [[481, "features"]], "Integrated databases": [[481, "integrated-databases"]], "Database management": [[481, "database-management"]], "Further modules in pypath": [[481, "further-modules-in-pypath"]], "ID conversion": [[481, "id-conversion"]], "Homology translation": [[481, "homology-translation"]], "FAQ": [[481, "faq"]], "Contact": [[481, "contact"]], "Impressum": [[481, "impressum"]], "History and releases": [[481, "history-and-releases"]], "The pypath book": [[482, "The-pypath-book"]], "Introduction": [[482, "Introduction"]], "Build, load and save databases": [[482, "Build,-load-and-save-databases"]], "The OmniPath app": [[482, "The-OmniPath-app"]], "Built-in database definitions": [[482, "Built-in-database-definitions"]], "Networks": [[482, "Networks"]], "Strictly literature curated network": [[482, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[482, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[482, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[482, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[482, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[482, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[482, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[482, "Enzyme-substrate-relationships"]], "Protein complexes": [[482, "Protein-complexes"], [482, "id2"]], "Annotations": [[482, "Annotations"], [482, "id1"], [485, "annotations"]], "Inter-cellular communication roles": [[482, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[482, "Data-directly-from-the-original-resources"]], "Interesting resources": [[482, "Interesting-resources"]], "RaMP": [[482, "RaMP"]], "TL;DR": [[482, "TL;DR"]], "HMDB (Human Metabolome Database)": [[482, "HMDB-(Human-Metabolome-Database)"]], "Direct access to HMDB data": [[482, "Direct-access-to-HMDB-data"]], "Higher level access to HMDB data": [[482, "Higher-level-access-to-HMDB-data"]], "ID translation with HMDB": [[482, "ID-translation-with-HMDB"]], "SwissLipids": [[482, "SwissLipids"]], "LIPID MAPS": [[482, "LIPID-MAPS"]], "NCBI E-Utils": [[482, "NCBI-E-Utils"]], "Download management": [[482, "Download-management"]], "Cache management and customization": [[482, "Cache-management-and-customization"]], "Download failures": [[482, "Download-failures"]], "Corrupted cache content": [[482, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[482, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[482, "Timeouts"]], "Access and inspect the Curl object": [[482, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[482, "Is-it-failing-only-for-you?"]], "Read the log": [[482, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[482, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[482, "Resources"]], "Licenses": [[482, "Licenses"]], "Example: build a network for commercial use": [[482, "Example:-build-a-network-for-commercial-use"]], "Resource information": [[482, "Resource-information"]], "Resource definitions for a certain database or dataset": [[482, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[482, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[482, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[482, "The-Network-object"]], "Network in pandas.DataFrame": [[482, "Network-in-pandas.DataFrame"]], "Self interactions (loop edges) in the network": [[482, "Self-interactions-(loop-edges)-in-the-network"]], "Molecular complexes in the network": [[482, "Molecular-complexes-in-the-network"]], "Translating identifiers": [[482, "Translating-identifiers"]], "Pre-defined ID translation tables": [[482, "Pre-defined-ID-translation-tables"]], "Direct access to ID translation tables": [[482, "Direct-access-to-ID-translation-tables"]], "Orthology translation": [[482, "Orthology-translation"]], "Orthology translation tables as dictionaries": [[482, "Orthology-translation-tables-as-dictionaries"]], "Orthology translation data frames": [[482, "Orthology-translation-data-frames"]], "Taxonomy": [[482, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[482, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[482, "Organism-from-UniProt-ID"]], "UniProt": [[482, "UniProt"]], "The UniProt input module": [[482, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[482, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[482, "UniProt-ID-format-validation"]], "UniProt ID validation": [[482, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[482, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[482, "History-of-UniProt-records"]], "UniProt REST API": [[482, "UniProt-REST-API"]], "Processed UniProt annotations": [[482, "Processed-UniProt-annotations"]], "The UniProt utils module": [[482, "The-UniProt-utils-module"]], "Datasheets": [[482, "Datasheets"]], "Tables": [[482, "Tables"]], "Sanitizing UniProt IDs": [[482, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[482, "Enzyme-substrate-interactions"], [485, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[482, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[482, "Enzyme-substrate-data-frame"]], "Protein sequences": [[482, "Protein-sequences"]], "Load a single annotation resource": [[482, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[482, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[482, "Load-only-selected-annotations"]], "Data frames of annotations": [[482, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[482, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[482, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[482, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[482, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[482, "Browse-intercell-categories"]], "Gene Ontology": [[482, "Gene-Ontology"]], "Protein complex objects": [[482, "Protein-complex-objects"]], "Protein complex data frame": [[482, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[482, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[482, "Log-messages-and-sessions"]], "Basic info about the session": [[482, "Basic-info-about-the-session"]], "Read the log file": [[482, "Read-the-log-file"]], "Logging to the console": [[482, "Logging-to-the-console"]], "Disable logging": [[482, "Disable-logging"]], "Write to the log": [[482, "Write-to-the-log"]], "Sending a single message": [[482, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[482, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[482, "BEL-export"]], "CellPhoneDB export": [[482, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[482, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[482, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[482, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[482, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[482, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[482, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[482, "Directions-and-signs"]], "Accessing nodes in the network": [[482, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[482, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[482, "Accessing-edges-by-identifiers"]], "Literature references": [[482, "Literature-references"]], "Plotting the network with igraph": [[482, "Plotting-the-network-with-igraph"]], "Reference": [[483, "reference"]], "How to navigate the reference?": [[483, "how-to-navigate-the-reference"]], "Release history": [[484, "release-history"]], "0.1.0": [[484, "id1"]], "0.2.0": [[484, "id2"]], "0.3.0": [[484, "id3"]], "0.4.0": [[484, "id4"]], "0.5.0": [[484, "id5"]], "0.5.32": [[484, "id6"]], "0.6.31": [[484, "id7"]], "0.7.0": [[484, "id8"]], "0.7.74": [[484, "id9"]], "0.7.93": [[484, "id10"]], "0.7.110": [[484, "id11"]], "0.8": [[484, "id12"]], "0.9": [[484, "id13"]], "0.10.0": [[484, "id14"]], "0.11.0": [[484, "id15"]], "0.12.0": [[484, "id16"]], "0.13.0": [[484, "id17"]], "0.14.0": [[484, "id18"]], "Upcoming": [[484, "upcoming"]], "Webservice": [[485, "webservice"]], "Query types": [[485, "query-types"]], "Interaction datasets": [[485, "interaction-datasets"]], "Mouse and rat": [[485, "mouse-and-rat"]], "Examples": [[485, "examples"]], "Molecular interaction network": [[485, "molecular-interaction-network"]], "Molecular complexes": [[485, "molecular-complexes"]], "Roles in inter-cellular communication": [[485, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[485, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.abs"], [12, "module-pypath.inputs.acsn"], [15, "module-pypath.inputs.adrecs"], [25, "module-pypath.inputs.biogrid"], [28, "module-pypath.inputs.biomart"], [34, "module-pypath.inputs.biomodels"], [40, "module-pypath.inputs.ca1"], [42, "module-pypath.inputs.cancercellmap"], [44, "module-pypath.inputs.cell"], [46, "module-pypath.inputs.chembl"], [54, "module-pypath.inputs.clinvar"], [57, "module-pypath.inputs.common"], [64, "module-pypath.inputs.compath"], [66, "module-pypath.inputs.cpdb"], [69, "module-pypath.inputs.credentials"], [71, "module-pypath.inputs.ctdbase"], [74, "module-pypath.inputs.ddinter"], [80, "module-pypath.inputs.deathdomain"], [83, "module-pypath.inputs.dip"], [86, "module-pypath.inputs.diseases"], [94, "module-pypath.inputs.drugbank"], [101, "module-pypath.inputs.ebi"], [103, "module-pypath.inputs.elm"], [108, "module-pypath.inputs.embopress"], [110, "module-pypath.inputs.encode"], [112, "module-pypath.inputs.ensembl"], [114, "module-pypath.inputs.eutils"], [116, "module-pypath.inputs.expasy"], [119, "module-pypath.inputs.genecards"], [124, "module-pypath.inputs.graphviz"], [126, "module-pypath.inputs.hprd"], [131, "module-pypath.inputs.htri"], [133, "module-pypath.inputs.humsavar"], [135, "module-pypath.inputs.ielm"], [138, "module-pypath.inputs.imweb"], [141, "module-pypath.inputs.innatedb"], [143, "module-pypath.inputs.instruct"], [146, "module-pypath.inputs.intact"], [148, "module-pypath.inputs.interpro"], [153, "module-pypath.inputs.ipi"], [155, "module-pypath.inputs.kegg_api"], [172, "module-pypath.inputs.kirouac2010"], [174, "module-pypath.inputs.laudanna"], [177, "module-pypath.inputs.lincs"], [179, "module-pypath.inputs.macrophage"], [181, "module-pypath.inputs.main"], [182, "module-pypath.inputs.mimp"], [186, "module-pypath.inputs.mir2disease"], [188, "module-pypath.inputs.mirdeathdb"], [190, "module-pypath.inputs.mitab"], [193, "module-pypath.inputs.mppi"], [195, "module-pypath.inputs.ncrdeathdb"], [197, "module-pypath.inputs.negatome"], [199, "module-pypath.inputs.netbiol"], [202, "module-pypath.inputs.offsides"], [204, "module-pypath.inputs.ontology"], [207, "module-pypath.inputs.opentargets"], [213, "module-pypath.inputs.pathophenodb"], [216, "module-pypath.inputs.pathwaycommons"], [233, "module-pypath.inputs.pazar"], [235, "module-pypath.inputs.pepcyber"], [238, "module-pypath.inputs.pharos"], [247, "module-pypath.inputs.phobius"], [249, "module-pypath.inputs.phosphonetworks"], [252, "module-pypath.inputs.phosphopoint"], [255, "module-pypath.inputs.pro"], [258, "module-pypath.inputs.protmapper"], [262, "module-pypath.inputs.pubchem"], [264, "module-pypath.inputs.pubmed"], [271, "module-pypath.inputs.ramp"], [272, "module-pypath.inputs.rdata"], [273, "module-pypath.inputs.reaction"], [293, "module-pypath.inputs.reactome"], [298, "module-pypath.inputs.science"], [300, "module-pypath.inputs.sider"], [309, "module-pypath.inputs.stitch"], [312, "module-pypath.inputs.string"], [317, "module-pypath.inputs.swisslipids"], [318, "module-pypath.inputs.switches_elm"], [320, "module-pypath.inputs.transmir"], [322, "module-pypath.inputs.trip"], [329, "module-pypath.inputs.twosides"], [331, "module-pypath.inputs.unichem"], [336, "module-pypath.inputs.uniprot"], [362, "module-pypath.inputs.uniprot_db"], [371, "module-pypath.inputs.uniprot_idmapping"], [373, "module-pypath.internals"], [374, "module-pypath.internals.input_formats"], [388, "module-pypath.internals.license"], [394, "module-pypath.internals.maps"], [395, "module-pypath.internals.refs"], [398, "module-pypath.internals.resource"], [406, "module-pypath.legacy"], [407, "module-pypath.legacy.db_categories"], [411, "module-pypath.resources"], [412, "module-pypath.resources.controller"], [414, "module-pypath.resources.data"], [415, "module-pypath.resources.data_formats"], [425, "module-pypath.resources.licenses"], [427, "module-pypath.resources.network"], [428, "module-pypath.resources.urls"], [429, "module-pypath.share"], [430, "module-pypath.share.cache"], [434, "module-pypath.share.common"], [435, "module-pypath.share.constants"], [436, "module-pypath.share.curl"], [453, "module-pypath.share.progress"], [455, "module-pypath.share.session"], [456, "module-pypath.share.settings"], [457, "module-pypath.visual"], [458, "module-pypath.visual.drawing"], [461, "module-pypath.visual.igraph_drawing"], [467, "module-pypath.visual.igraph_drawing.edge"], [474, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "abs_interactions() (in module pypath.inputs.abs)": [[11, "pypath.inputs.abs.abs_interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "acsn_interactions() (in module pypath.inputs.acsn)": [[13, "pypath.inputs.acsn.acsn_interactions"]], "acsn_interactions_sif() (in module pypath.inputs.acsn)": [[14, "pypath.inputs.acsn.acsn_interactions_sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "adrecsadr (class in pypath.inputs.adrecs)": [[16, "pypath.inputs.adrecs.AdrecsAdr"]], "__init__() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.__init__"]], "adr_class (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.adr_class"]], "badd (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.badd"]], "count() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.count"]], "index() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.index"]], "adrecschildparent (class in pypath.inputs.adrecs)": [[17, "pypath.inputs.adrecs.AdrecsChildParent"]], "__init__() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.__init__"]], "child (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.child"]], "count() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.count"]], "index() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.index"]], "parent (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.parent"]], "adrecsdrug (class in pypath.inputs.adrecs)": [[18, "pypath.inputs.adrecs.AdrecsDrug"]], "__init__() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.__init__"]], "badd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.badd"]], "count() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.count"]], "drug (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drug"]], "drugbank (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drugbank"]], "index() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.index"]], "kegg (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.kegg"]], "mesh (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.mesh"]], "pubchem_cid (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.pubchem_cid"]], "synonyms (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.synonyms"]], "tdd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.tdd"]], "adrecsdrugadr (class in pypath.inputs.adrecs)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr"]], "__init__() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.__init__"]], "adr (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr"]], "adr_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr_badd"]], "count() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.count"]], "drug (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug"]], "drug_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug_badd"]], "index() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.index"]], "adrecsterm (class in pypath.inputs.adrecs)": [[20, "pypath.inputs.adrecs.AdrecsTerm"]], "__init__() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.__init__"]], "adrecs_class (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.adrecs_class"]], "badd (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.badd"]], "count() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.count"]], "index() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.index"]], "meddra (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.meddra"]], "name (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.name"]], "synonyms (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.synonyms"]], "adrecs_adr_ontology() (in module pypath.inputs.adrecs)": [[21, "pypath.inputs.adrecs.adrecs_adr_ontology"]], "adrecs_drug_adr() (in module pypath.inputs.adrecs)": [[22, "pypath.inputs.adrecs.adrecs_drug_adr"]], "adrecs_drug_identifiers() (in module pypath.inputs.adrecs)": [[23, "pypath.inputs.adrecs.adrecs_drug_identifiers"]], "adrecs_hierarchy() (in module pypath.inputs.adrecs)": [[24, "pypath.inputs.adrecs.adrecs_hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "biogrid_all_interactions() (in module pypath.inputs.biogrid)": [[26, "pypath.inputs.biogrid.biogrid_all_interactions"]], "biogrid_interactions() (in module pypath.inputs.biogrid)": [[27, "pypath.inputs.biogrid.biogrid_interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "biomart_homology() (in module pypath.inputs.biomart)": [[29, "pypath.inputs.biomart.biomart_homology"]], "biomart_microarray() (in module pypath.inputs.biomart)": [[30, "pypath.inputs.biomart.biomart_microarray"]], "biomart_microarray_types() (in module pypath.inputs.biomart)": [[31, "pypath.inputs.biomart.biomart_microarray_types"]], "biomart_microarrays() (in module pypath.inputs.biomart)": [[32, "pypath.inputs.biomart.biomart_microarrays"]], "biomart_query() (in module pypath.inputs.biomart)": [[33, "pypath.inputs.biomart.biomart_query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "download_single_model() (in module pypath.inputs.biomodels)": [[35, "pypath.inputs.biomodels.download_single_model"]], "get_all_models() (in module pypath.inputs.biomodels)": [[36, "pypath.inputs.biomodels.get_all_models"]], "get_biomodels() (in module pypath.inputs.biomodels)": [[37, "pypath.inputs.biomodels.get_biomodels"]], "get_biomodels_req() (in module pypath.inputs.biomodels)": [[38, "pypath.inputs.biomodels.get_biomodels_req"]], "get_single_model() (in module pypath.inputs.biomodels)": [[39, "pypath.inputs.biomodels.get_single_model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "ca1_interactions() (in module pypath.inputs.ca1)": [[41, "pypath.inputs.ca1.ca1_interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "ccmap_interactions() (in module pypath.inputs.cancercellmap)": [[43, "pypath.inputs.cancercellmap.ccmap_interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[45, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "chembl_activities() (in module pypath.inputs.chembl)": [[47, "pypath.inputs.chembl.chembl_activities"]], "chembl_assays() (in module pypath.inputs.chembl)": [[48, "pypath.inputs.chembl.chembl_assays"]], "chembl_documents() (in module pypath.inputs.chembl)": [[49, "pypath.inputs.chembl.chembl_documents"]], "chembl_drug_indications() (in module pypath.inputs.chembl)": [[50, "pypath.inputs.chembl.chembl_drug_indications"]], "chembl_mechanisms() (in module pypath.inputs.chembl)": [[51, "pypath.inputs.chembl.chembl_mechanisms"]], "chembl_molecules() (in module pypath.inputs.chembl)": [[52, "pypath.inputs.chembl.chembl_molecules"]], "chembl_targets() (in module pypath.inputs.chembl)": [[53, "pypath.inputs.chembl.chembl_targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "clinvar_citations() (in module pypath.inputs.clinvar)": [[55, "pypath.inputs.clinvar.clinvar_citations"]], "clinvar_raw() (in module pypath.inputs.clinvar)": [[56, "pypath.inputs.clinvar.clinvar_raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[58, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[59, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[60, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[61, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[62, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[63, "pypath.inputs.common.read_xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "compath_mappings() (in module pypath.inputs.compath)": [[65, "pypath.inputs.compath.compath_mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "cpdb_interactions() (in module pypath.inputs.cpdb)": [[67, "pypath.inputs.cpdb.cpdb_interactions"]], "cpdb_interactions_ltp() (in module pypath.inputs.cpdb)": [[68, "pypath.inputs.cpdb.cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[70, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "ctdbase_relations() (in module pypath.inputs.ctdbase)": [[72, "pypath.inputs.ctdbase.ctdbase_relations"]], "ctdbase_vocabulary() (in module pypath.inputs.ctdbase)": [[73, "pypath.inputs.ctdbase.ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "ddinter_drug_interactions() (in module pypath.inputs.ddinter)": [[75, "pypath.inputs.ddinter.ddinter_drug_interactions"]], "ddinter_identifiers() (in module pypath.inputs.ddinter)": [[76, "pypath.inputs.ddinter.ddinter_identifiers"]], "ddinter_interactions() (in module pypath.inputs.ddinter)": [[77, "pypath.inputs.ddinter.ddinter_interactions"]], "ddinter_mappings() (in module pypath.inputs.ddinter)": [[78, "pypath.inputs.ddinter.ddinter_mappings"]], "ddinter_n_drugs() (in module pypath.inputs.ddinter)": [[79, "pypath.inputs.ddinter.ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "deathdomain_interactions() (in module pypath.inputs.deathdomain)": [[81, "pypath.inputs.deathdomain.deathdomain_interactions"]], "deathdomain_interactions_rescued() (in module pypath.inputs.deathdomain)": [[82, "pypath.inputs.deathdomain.deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "dip_interactions() (in module pypath.inputs.dip)": [[84, "pypath.inputs.dip.dip_interactions"]], "dip_login() (in module pypath.inputs.dip)": [[85, "pypath.inputs.dip.dip_login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "diseases_general() (in module pypath.inputs.diseases)": [[87, "pypath.inputs.diseases.diseases_general"]], "experiments_filtered() (in module pypath.inputs.diseases)": [[88, "pypath.inputs.diseases.experiments_filtered"]], "experiments_full() (in module pypath.inputs.diseases)": [[89, "pypath.inputs.diseases.experiments_full"]], "knowledge_filtered() (in module pypath.inputs.diseases)": [[90, "pypath.inputs.diseases.knowledge_filtered"]], "knowledge_full() (in module pypath.inputs.diseases)": [[91, "pypath.inputs.diseases.knowledge_full"]], "textmining_filtered() (in module pypath.inputs.diseases)": [[92, "pypath.inputs.diseases.textmining_filtered"]], "textmining_full() (in module pypath.inputs.diseases)": [[93, "pypath.inputs.diseases.textmining_full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "drugbankfull (class in pypath.inputs.drugbank)": [[95, "pypath.inputs.drugbank.DrugbankFull"]], "__init__() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.__init__"]], "drugbank_drugs_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_drugs_full"]], "drugbank_external_ids_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_external_ids_full"]], "drugbank_properties_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_properties_full"]], "drugbank_targets_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_targets_full"]], "drugbank_annotations() (in module pypath.inputs.drugbank)": [[96, "pypath.inputs.drugbank.drugbank_annotations"]], "drugbank_drugs() (in module pypath.inputs.drugbank)": [[97, "pypath.inputs.drugbank.drugbank_drugs"]], "drugbank_interactions() (in module pypath.inputs.drugbank)": [[98, "pypath.inputs.drugbank.drugbank_interactions"]], "drugbank_mapping() (in module pypath.inputs.drugbank)": [[99, "pypath.inputs.drugbank.drugbank_mapping"]], "drugbank_raw_interactions() (in module pypath.inputs.drugbank)": [[100, "pypath.inputs.drugbank.drugbank_raw_interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[102, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "elm_classes() (in module pypath.inputs.elm)": [[104, "pypath.inputs.elm.elm_classes"]], "elm_domains() (in module pypath.inputs.elm)": [[105, "pypath.inputs.elm.elm_domains"]], "elm_instances() (in module pypath.inputs.elm)": [[106, "pypath.inputs.elm.elm_instances"]], "elm_interactions() (in module pypath.inputs.elm)": [[107, "pypath.inputs.elm.elm_interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[109, "pypath.inputs.embopress.embopress_supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "encode_tf_mirna_interactions() (in module pypath.inputs.encode)": [[111, "pypath.inputs.encode.encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "ensembl_organisms() (in module pypath.inputs.ensembl)": [[113, "pypath.inputs.ensembl.ensembl_organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "esummary() (in module pypath.inputs.eutils)": [[115, "pypath.inputs.eutils.esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "expasy_enzyme_classes() (in module pypath.inputs.expasy)": [[117, "pypath.inputs.expasy.expasy_enzyme_classes"]], "expasy_enzymes() (in module pypath.inputs.expasy)": [[118, "pypath.inputs.expasy.expasy_enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "genecards_datasheet() (in module pypath.inputs.genecards)": [[120, "pypath.inputs.genecards.genecards_datasheet"]], "genecards_soup() (in module pypath.inputs.genecards)": [[121, "pypath.inputs.genecards.genecards_soup"]], "genecards_summaries() (in module pypath.inputs.genecards)": [[122, "pypath.inputs.genecards.genecards_summaries"]], "get_method() (in module pypath.inputs)": [[123, "pypath.inputs.get_method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "graphviz_attrs() (in module pypath.inputs.graphviz)": [[125, "pypath.inputs.graphviz.graphviz_attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "get_hprd() (in module pypath.inputs.hprd)": [[127, "pypath.inputs.hprd.get_hprd"]], "hprd_enzyme_substrate() (in module pypath.inputs.hprd)": [[128, "pypath.inputs.hprd.hprd_enzyme_substrate"]], "hprd_interactions() (in module pypath.inputs.hprd)": [[129, "pypath.inputs.hprd.hprd_interactions"]], "hprd_interactions_htp() (in module pypath.inputs.hprd)": [[130, "pypath.inputs.hprd.hprd_interactions_htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "htri_interactions() (in module pypath.inputs.htri)": [[132, "pypath.inputs.htri.htri_interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "uniprot_variants() (in module pypath.inputs.humsavar)": [[134, "pypath.inputs.humsavar.uniprot_variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "get_ielm() (in module pypath.inputs.ielm)": [[136, "pypath.inputs.ielm.get_ielm"]], "get_ielm_huge() (in module pypath.inputs.ielm)": [[137, "pypath.inputs.ielm.get_ielm_huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "get_imweb() (in module pypath.inputs.imweb)": [[139, "pypath.inputs.imweb.get_imweb"]], "get_imweb_req() (in module pypath.inputs.imweb)": [[140, "pypath.inputs.imweb.get_imweb_req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "innatedb_interactions() (in module pypath.inputs.innatedb)": [[142, "pypath.inputs.innatedb.innatedb_interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "get_instruct() (in module pypath.inputs.instruct)": [[144, "pypath.inputs.instruct.get_instruct"]], "get_instruct_offsets() (in module pypath.inputs.instruct)": [[145, "pypath.inputs.instruct.get_instruct_offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "intact_interactions() (in module pypath.inputs.intact)": [[147, "pypath.inputs.intact.intact_interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "interpro2go_annotations() (in module pypath.inputs.interpro)": [[149, "pypath.inputs.interpro.interpro2go_annotations"]], "interpro_annotations() (in module pypath.inputs.interpro)": [[150, "pypath.inputs.interpro.interpro_annotations"]], "interpro_entries() (in module pypath.inputs.interpro)": [[151, "pypath.inputs.interpro.interpro_entries"]], "interpro_xrefs() (in module pypath.inputs.interpro)": [[152, "pypath.inputs.interpro.interpro_xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "ipi_uniprot() (in module pypath.inputs.ipi)": [[154, "pypath.inputs.ipi.ipi_uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "disease_to_drug() (in module pypath.inputs.kegg_api)": [[156, "pypath.inputs.kegg_api.disease_to_drug"]], "disease_to_gene() (in module pypath.inputs.kegg_api)": [[157, "pypath.inputs.kegg_api.disease_to_gene"]], "disease_to_pathway() (in module pypath.inputs.kegg_api)": [[158, "pypath.inputs.kegg_api.disease_to_pathway"]], "drug_to_disease() (in module pypath.inputs.kegg_api)": [[159, "pypath.inputs.kegg_api.drug_to_disease"]], "drug_to_drug() (in module pypath.inputs.kegg_api)": [[160, "pypath.inputs.kegg_api.drug_to_drug"]], "drug_to_gene() (in module pypath.inputs.kegg_api)": [[161, "pypath.inputs.kegg_api.drug_to_gene"]], "drug_to_pathway() (in module pypath.inputs.kegg_api)": [[162, "pypath.inputs.kegg_api.drug_to_pathway"]], "gene_to_disease() (in module pypath.inputs.kegg_api)": [[163, "pypath.inputs.kegg_api.gene_to_disease"]], "gene_to_drug() (in module pypath.inputs.kegg_api)": [[164, "pypath.inputs.kegg_api.gene_to_drug"]], "gene_to_pathway() (in module pypath.inputs.kegg_api)": [[165, "pypath.inputs.kegg_api.gene_to_pathway"]], "kegg_drug_to_chebi() (in module pypath.inputs.kegg_api)": [[166, "pypath.inputs.kegg_api.kegg_drug_to_chebi"]], "kegg_gene_to_ncbi_geneid() (in module pypath.inputs.kegg_api)": [[167, "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid"]], "kegg_gene_to_uniprot() (in module pypath.inputs.kegg_api)": [[168, "pypath.inputs.kegg_api.kegg_gene_to_uniprot"]], "pathway_to_disease() (in module pypath.inputs.kegg_api)": [[169, "pypath.inputs.kegg_api.pathway_to_disease"]], "pathway_to_drug() (in module pypath.inputs.kegg_api)": [[170, "pypath.inputs.kegg_api.pathway_to_drug"]], "pathway_to_gene() (in module pypath.inputs.kegg_api)": [[171, "pypath.inputs.kegg_api.pathway_to_gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "kirouac2010_interactions() (in module pypath.inputs.kirouac2010)": [[173, "pypath.inputs.kirouac2010.kirouac2010_interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "laudanna_directions() (in module pypath.inputs.laudanna)": [[175, "pypath.inputs.laudanna.laudanna_directions"]], "laudanna_effects() (in module pypath.inputs.laudanna)": [[176, "pypath.inputs.laudanna.laudanna_effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "lincs_compounds() (in module pypath.inputs.lincs)": [[178, "pypath.inputs.lincs.lincs_compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "macrophage_interactions() (in module pypath.inputs.macrophage)": [[180, "pypath.inputs.macrophage.macrophage_interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "get_kinase_class() (in module pypath.inputs.mimp)": [[183, "pypath.inputs.mimp.get_kinase_class"]], "mimp_enzyme_substrate() (in module pypath.inputs.mimp)": [[184, "pypath.inputs.mimp.mimp_enzyme_substrate"]], "mimp_interactions() (in module pypath.inputs.mimp)": [[185, "pypath.inputs.mimp.mimp_interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "mir2disease_interactions() (in module pypath.inputs.mir2disease)": [[187, "pypath.inputs.mir2disease.mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "mirdeathdb_interactions() (in module pypath.inputs.mirdeathdb)": [[189, "pypath.inputs.mirdeathdb.mirdeathdb_interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[191, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[192, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "mppi_interactions() (in module pypath.inputs.mppi)": [[194, "pypath.inputs.mppi.mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "ncrdeathdb_interactions() (in module pypath.inputs.ncrdeathdb)": [[196, "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "negatome_interactions() (in module pypath.inputs.negatome)": [[198, "pypath.inputs.negatome.negatome_interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "arn_interactions() (in module pypath.inputs.netbiol)": [[200, "pypath.inputs.netbiol.arn_interactions"]], "nrf2ome_interactions() (in module pypath.inputs.netbiol)": [[201, "pypath.inputs.netbiol.nrf2ome_interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "offsides_side_effects() (in module pypath.inputs.offsides)": [[203, "pypath.inputs.offsides.offsides_side_effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "listof_ontologies() (in module pypath.inputs.ontology)": [[205, "pypath.inputs.ontology.listof_ontologies"]], "ontology() (in module pypath.inputs.ontology)": [[206, "pypath.inputs.ontology.ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "opentargets_adverse_reactions() (in module pypath.inputs.opentargets)": [[208, "pypath.inputs.opentargets.opentargets_adverse_reactions"]], "opentargets_baseline_expression() (in module pypath.inputs.opentargets)": [[209, "pypath.inputs.opentargets.opentargets_baseline_expression"]], "opentargets_direct_score() (in module pypath.inputs.opentargets)": [[210, "pypath.inputs.opentargets.opentargets_direct_score"]], "opentargets_general() (in module pypath.inputs.opentargets)": [[211, "pypath.inputs.opentargets.opentargets_general"]], "opentargets_indirect_score() (in module pypath.inputs.opentargets)": [[212, "pypath.inputs.opentargets.opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "diseasepathogen (class in pypath.inputs.pathophenodb)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen"]], "__init__() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.__init__"]], "count() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.count"]], "disease (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease"]], "disease_id (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease_id"]], "evidence (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.evidence"]], "index() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.index"]], "pathogen (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen"]], "pathogen_taxid (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen_taxid"]], "disease_pathogen_interactions() (in module pypath.inputs.pathophenodb)": [[215, "pypath.inputs.pathophenodb.disease_pathogen_interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pathwaycommonsinteraction (class in pypath.inputs.pathwaycommons)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.count"]], "id_a (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_a"]], "id_b (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_b"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.index"]], "interaction_type (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.interaction_type"]], "resource (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.resource"]], "pathwaycommonsresource (class in pypath.inputs.pathwaycommons)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.count"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.index"]], "name (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.name"]], "pc_label (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.pc_label"]], "version (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.version"]], "pathwaycommons_bind_interactions() (in module pypath.inputs.pathwaycommons)": [[219, "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions"]], "pathwaycommons_biogrid_interactions() (in module pypath.inputs.pathwaycommons)": [[220, "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions"]], "pathwaycommons_corum_interactions() (in module pypath.inputs.pathwaycommons)": [[221, "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions"]], "pathwaycommons_dip_interactions() (in module pypath.inputs.pathwaycommons)": [[222, "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions"]], "pathwaycommons_hprd_interactions() (in module pypath.inputs.pathwaycommons)": [[223, "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions"]], "pathwaycommons_inoh_interactions() (in module pypath.inputs.pathwaycommons)": [[224, "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions"]], "pathwaycommons_intact_interactions() (in module pypath.inputs.pathwaycommons)": [[225, "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions"]], "pathwaycommons_interactions() (in module pypath.inputs.pathwaycommons)": [[226, "pypath.inputs.pathwaycommons.pathwaycommons_interactions"]], "pathwaycommons_kegg_interactions() (in module pypath.inputs.pathwaycommons)": [[227, "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions"]], "pathwaycommons_netpath_interactions() (in module pypath.inputs.pathwaycommons)": [[228, "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions"]], "pathwaycommons_panther_interactions() (in module pypath.inputs.pathwaycommons)": [[229, "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions"]], "pathwaycommons_phosphosite_interactions() (in module pypath.inputs.pathwaycommons)": [[230, "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions"]], "pathwaycommons_reactome_interactions() (in module pypath.inputs.pathwaycommons)": [[231, "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions"]], "pathwaycommons_wikipathways_interactions() (in module pypath.inputs.pathwaycommons)": [[232, "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pazar_interactions() (in module pypath.inputs.pazar)": [[234, "pypath.inputs.pazar.pazar_interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pepcyber_details() (in module pypath.inputs.pepcyber)": [[236, "pypath.inputs.pepcyber.pepcyber_details"]], "pepcyber_interactions() (in module pypath.inputs.pepcyber)": [[237, "pypath.inputs.pepcyber.pepcyber_interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pharos_diseases() (in module pypath.inputs.pharos)": [[239, "pypath.inputs.pharos.pharos_diseases"]], "pharos_expression() (in module pypath.inputs.pharos)": [[240, "pypath.inputs.pharos.pharos_expression"]], "pharos_general() (in module pypath.inputs.pharos)": [[241, "pypath.inputs.pharos.pharos_general"]], "pharos_gtex() (in module pypath.inputs.pharos)": [[242, "pypath.inputs.pharos.pharos_gtex"]], "pharos_ligands() (in module pypath.inputs.pharos)": [[243, "pypath.inputs.pharos.pharos_ligands"]], "pharos_orthologs() (in module pypath.inputs.pharos)": [[244, "pypath.inputs.pharos.pharos_orthologs"]], "pharos_targets() (in module pypath.inputs.pharos)": [[245, "pypath.inputs.pharos.pharos_targets"]], "pharos_xrefs() (in module pypath.inputs.pharos)": [[246, "pypath.inputs.pharos.pharos_xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "phobius_annotations() (in module pypath.inputs.phobius)": [[248, "pypath.inputs.phobius.phobius_annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "phosphonetworks_enzyme_substrate() (in module pypath.inputs.phosphonetworks)": [[250, "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate"]], "phosphonetworks_interactions() (in module pypath.inputs.phosphonetworks)": [[251, "pypath.inputs.phosphonetworks.phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "phosphopoint_directions() (in module pypath.inputs.phosphopoint)": [[253, "pypath.inputs.phosphopoint.phosphopoint_directions"]], "phosphopoint_interactions() (in module pypath.inputs.phosphopoint)": [[254, "pypath.inputs.phosphopoint.phosphopoint_interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "get_pro() (in module pypath.inputs.pro)": [[256, "pypath.inputs.pro.get_pro"]], "pro_mapping() (in module pypath.inputs.pro)": [[257, "pypath.inputs.pro.pro_mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "get_protmapper() (in module pypath.inputs.protmapper)": [[259, "pypath.inputs.protmapper.get_protmapper"]], "protmapper_enzyme_substrate() (in module pypath.inputs.protmapper)": [[260, "pypath.inputs.protmapper.protmapper_enzyme_substrate"]], "protmapper_interactions() (in module pypath.inputs.protmapper)": [[261, "pypath.inputs.protmapper.protmapper_interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pubchem_mapping() (in module pypath.inputs.pubchem)": [[263, "pypath.inputs.pubchem.pubchem_mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "get_pmid() (in module pypath.inputs.pubmed)": [[265, "pypath.inputs.pubmed.get_pmid"]], "get_pubmeds() (in module pypath.inputs.pubmed)": [[266, "pypath.inputs.pubmed.get_pubmeds"]], "only_pmids() (in module pypath.inputs.pubmed)": [[267, "pypath.inputs.pubmed.only_pmids"]], "open_pubmed() (in module pypath.inputs.pubmed)": [[268, "pypath.inputs.pubmed.open_pubmed"]], "pmids_dict() (in module pypath.inputs.pubmed)": [[269, "pypath.inputs.pubmed.pmids_dict"]], "pmids_list() (in module pypath.inputs.pubmed)": [[270, "pypath.inputs.pubmed.pmids_list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "pypath.inputs.rdata": [[272, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[273, "module-pypath.inputs.reaction"]], "acsn_biopax() (in module pypath.inputs.reaction)": [[274, "pypath.inputs.reaction.acsn_biopax"]], "acsn_interactions_2() (in module pypath.inputs.reaction)": [[275, "pypath.inputs.reaction.acsn_interactions_2"]], "get_acsn_effects() (in module pypath.inputs.reaction)": [[276, "pypath.inputs.reaction.get_acsn_effects"]], "get_controls() (in module pypath.inputs.reaction)": [[277, "pypath.inputs.reaction.get_controls"]], "get_interactions() (in module pypath.inputs.reaction)": [[278, "pypath.inputs.reaction.get_interactions"]], "get_reactions() (in module pypath.inputs.reaction)": [[279, "pypath.inputs.reaction.get_reactions"]], "get_soup() (in module pypath.inputs.reaction)": [[280, "pypath.inputs.reaction.get_soup"]], "panther_biopax() (in module pypath.inputs.reaction)": [[281, "pypath.inputs.reaction.panther_biopax"]], "panther_interactions() (in module pypath.inputs.reaction)": [[282, "pypath.inputs.reaction.panther_interactions"]], "pid_biopax() (in module pypath.inputs.reaction)": [[283, "pypath.inputs.reaction.pid_biopax"]], "pid_interactions() (in module pypath.inputs.reaction)": [[284, "pypath.inputs.reaction.pid_interactions"]], "process_complex() (in module pypath.inputs.reaction)": [[285, "pypath.inputs.reaction.process_complex"]], "process_controls() (in module pypath.inputs.reaction)": [[286, "pypath.inputs.reaction.process_controls"]], "process_reactions() (in module pypath.inputs.reaction)": [[287, "pypath.inputs.reaction.process_reactions"]], "reactions_biopax() (in module pypath.inputs.reaction)": [[288, "pypath.inputs.reaction.reactions_biopax"]], "reactome_biopax() (in module pypath.inputs.reaction)": [[289, "pypath.inputs.reaction.reactome_biopax"]], "reactome_bs() (in module pypath.inputs.reaction)": [[290, "pypath.inputs.reaction.reactome_bs"]], "reactome_interactions() (in module pypath.inputs.reaction)": [[291, "pypath.inputs.reaction.reactome_interactions"]], "reactome_sbml() (in module pypath.inputs.reaction)": [[292, "pypath.inputs.reaction.reactome_sbml"]], "pypath.inputs.reactome": [[293, "module-pypath.inputs.reactome"]], "reactome_chebis() (in module pypath.inputs.reactome)": [[294, "pypath.inputs.reactome.reactome_chebis"]], "reactome_pathway_relations() (in module pypath.inputs.reactome)": [[295, "pypath.inputs.reactome.reactome_pathway_relations"]], "reactome_pathways() (in module pypath.inputs.reactome)": [[296, "pypath.inputs.reactome.reactome_pathways"]], "reactome_uniprots() (in module pypath.inputs.reactome)": [[297, "pypath.inputs.reactome.reactome_uniprots"]], "pypath.inputs.science": [[298, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[299, "pypath.inputs.science.science_download"]], "pypath.inputs.sider": [[300, "module-pypath.inputs.sider"]], "siderdrug (class in pypath.inputs.sider)": [[301, "pypath.inputs.sider.SiderDrug"]], "__init__() (pypath.inputs.sider.siderdrug method)": [[301, "pypath.inputs.sider.SiderDrug.__init__"]], "atc (pypath.inputs.sider.siderdrug attribute)": [[301, "pypath.inputs.sider.SiderDrug.atc"]], "count() (pypath.inputs.sider.siderdrug method)": [[301, "pypath.inputs.sider.SiderDrug.count"]], "index() (pypath.inputs.sider.siderdrug method)": [[301, "pypath.inputs.sider.SiderDrug.index"]], "name (pypath.inputs.sider.siderdrug attribute)": [[301, "pypath.inputs.sider.SiderDrug.name"]], "sidersideeffect (class in pypath.inputs.sider)": [[302, "pypath.inputs.sider.SiderSideeffect"]], "__init__() (pypath.inputs.sider.sidersideeffect method)": [[302, "pypath.inputs.sider.SiderSideeffect.__init__"]], "count() (pypath.inputs.sider.sidersideeffect method)": [[302, "pypath.inputs.sider.SiderSideeffect.count"]], "index() (pypath.inputs.sider.sidersideeffect method)": [[302, "pypath.inputs.sider.SiderSideeffect.index"]], "side_effect (pypath.inputs.sider.sidersideeffect attribute)": [[302, "pypath.inputs.sider.SiderSideeffect.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffect attribute)": [[302, "pypath.inputs.sider.SiderSideeffect.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffect attribute)": [[302, "pypath.inputs.sider.SiderSideeffect.umls_concept_on_label"]], "sidersideeffectmeddra (class in pypath.inputs.sider)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra"]], "__init__() (pypath.inputs.sider.sidersideeffectmeddra method)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.__init__"]], "cid (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.cid"]], "count() (pypath.inputs.sider.sidersideeffectmeddra method)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.count"]], "index() (pypath.inputs.sider.sidersideeffectmeddra method)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.index"]], "meddra_id (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.meddra_id"]], "side_effect_name (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[303, "pypath.inputs.sider.SiderSideeffectMeddra.side_effect_name"]], "sidersideeffetfrequency (class in pypath.inputs.sider)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency"]], "__init__() (pypath.inputs.sider.sidersideeffetfrequency method)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.__init__"]], "count() (pypath.inputs.sider.sidersideeffetfrequency method)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.count"]], "frequency (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.frequency"]], "index() (pypath.inputs.sider.sidersideeffetfrequency method)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.index"]], "side_effect (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[304, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_on_label"]], "sider_drug_names() (in module pypath.inputs.sider)": [[305, "pypath.inputs.sider.sider_drug_names"]], "sider_meddra_side_effects() (in module pypath.inputs.sider)": [[306, "pypath.inputs.sider.sider_meddra_side_effects"]], "sider_side_effect_frequencies() (in module pypath.inputs.sider)": [[307, "pypath.inputs.sider.sider_side_effect_frequencies"]], "sider_side_effects() (in module pypath.inputs.sider)": [[308, "pypath.inputs.sider.sider_side_effects"]], "pypath.inputs.stitch": [[309, "module-pypath.inputs.stitch"]], "stitch_actions_interactions() (in module pypath.inputs.stitch)": [[310, "pypath.inputs.stitch.stitch_actions_interactions"]], "stitch_links_interactions() (in module pypath.inputs.stitch)": [[311, "pypath.inputs.stitch.stitch_links_interactions"]], "pypath.inputs.string": [[312, "module-pypath.inputs.string"]], "string_effects() (in module pypath.inputs.string)": [[313, "pypath.inputs.string.string_effects"]], "string_links_interactions() (in module pypath.inputs.string)": [[314, "pypath.inputs.string.string_links_interactions"]], "string_physical_interactions() (in module pypath.inputs.string)": [[315, "pypath.inputs.string.string_physical_interactions"]], "string_species() (in module pypath.inputs.string)": [[316, "pypath.inputs.string.string_species"]], "pypath.inputs.swisslipids": [[317, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[318, "module-pypath.inputs.switches_elm"]], "get_switches_elm() (in module pypath.inputs.switches_elm)": [[319, "pypath.inputs.switches_elm.get_switches_elm"]], "pypath.inputs.transmir": [[320, "module-pypath.inputs.transmir"]], "transmir_interactions() (in module pypath.inputs.transmir)": [[321, "pypath.inputs.transmir.transmir_interactions"]], "pypath.inputs.trip": [[322, "module-pypath.inputs.trip"]], "take_a_trip() (in module pypath.inputs.trip)": [[323, "pypath.inputs.trip.take_a_trip"]], "trip_find_uniprot() (in module pypath.inputs.trip)": [[324, "pypath.inputs.trip.trip_find_uniprot"]], "trip_get_uniprot() (in module pypath.inputs.trip)": [[325, "pypath.inputs.trip.trip_get_uniprot"]], "trip_interactions() (in module pypath.inputs.trip)": [[326, "pypath.inputs.trip.trip_interactions"]], "trip_process() (in module pypath.inputs.trip)": [[327, "pypath.inputs.trip.trip_process"]], "trip_process_table() (in module pypath.inputs.trip)": [[328, "pypath.inputs.trip.trip_process_table"]], "pypath.inputs.twosides": [[329, "module-pypath.inputs.twosides"]], "twosides_interactions() (in module pypath.inputs.twosides)": [[330, "pypath.inputs.twosides.twosides_interactions"]], "pypath.inputs.unichem": [[331, "module-pypath.inputs.unichem"]], "info() (in module pypath.inputs.unichem)": [[332, "pypath.inputs.unichem.info"]], "unichem_info() (in module pypath.inputs.unichem)": [[333, "pypath.inputs.unichem.unichem_info"]], "unichem_mapping() (in module pypath.inputs.unichem)": [[334, "pypath.inputs.unichem.unichem_mapping"]], "unichem_sources() (in module pypath.inputs.unichem)": [[335, "pypath.inputs.unichem.unichem_sources"]], "pypath.inputs.uniprot": [[336, "module-pypath.inputs.uniprot"]], "taxon (class in pypath.inputs.uniprot)": [[337, "pypath.inputs.uniprot.Taxon"]], "__init__() (pypath.inputs.uniprot.taxon method)": [[337, "pypath.inputs.uniprot.Taxon.__init__"]], "count() (pypath.inputs.uniprot.taxon method)": [[337, "pypath.inputs.uniprot.Taxon.count"]], "english (pypath.inputs.uniprot.taxon attribute)": [[337, "pypath.inputs.uniprot.Taxon.english"]], "index() (pypath.inputs.uniprot.taxon method)": [[337, "pypath.inputs.uniprot.Taxon.index"]], "latin (pypath.inputs.uniprot.taxon attribute)": [[337, "pypath.inputs.uniprot.Taxon.latin"]], "latin_synonym (pypath.inputs.uniprot.taxon attribute)": [[337, "pypath.inputs.uniprot.Taxon.latin_synonym"]], "ncbi_id (pypath.inputs.uniprot.taxon attribute)": [[337, "pypath.inputs.uniprot.Taxon.ncbi_id"]], "uniprotquery (class in pypath.inputs.uniprot)": [[338, "pypath.inputs.uniprot.UniprotQuery"]], "__init__() (pypath.inputs.uniprot.uniprotquery method)": [[338, "pypath.inputs.uniprot.UniprotQuery.__init__"]], "__iter__() (pypath.inputs.uniprot.uniprotquery method)": [[338, "pypath.inputs.uniprot.UniprotQuery.__iter__"]], "fail_on_empty (pypath.inputs.uniprot.uniprotquery attribute)": [[338, "pypath.inputs.uniprot.UniprotQuery.fail_on_empty"]], "name_process (pypath.inputs.uniprot.uniprotquery attribute)": [[338, "pypath.inputs.uniprot.UniprotQuery.name_process"]], "perform() (pypath.inputs.uniprot.uniprotquery method)": [[338, "pypath.inputs.uniprot.UniprotQuery.perform"]], "url (pypath.inputs.uniprot.uniprotquery property)": [[338, "pypath.inputs.uniprot.UniprotQuery.url"]], "url_plain (pypath.inputs.uniprot.uniprotquery property)": [[338, "pypath.inputs.uniprot.UniprotQuery.url_plain"]], "uniprotrecordhistory (class in pypath.inputs.uniprot)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory"]], "__init__() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.__init__"]], "count() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.count"]], "database (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.database"]], "date (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.date"]], "entry_name (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.entry_name"]], "entry_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.entry_version"]], "index() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.index"]], "number (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.number"]], "replaced_by (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.replaced_by"]], "replaces (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.replaces"]], "sequence_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[339, "pypath.inputs.uniprot.UniprotRecordHistory.sequence_version"]], "deleted_uniprot_genesymbol() (in module pypath.inputs.uniprot)": [[340, "pypath.inputs.uniprot.deleted_uniprot_genesymbol"]], "get_uniprot_sec() (in module pypath.inputs.uniprot)": [[341, "pypath.inputs.uniprot.get_uniprot_sec"]], "protein_datasheet() (in module pypath.inputs.uniprot)": [[342, "pypath.inputs.uniprot.protein_datasheet"]], "query_builder() (in module pypath.inputs.uniprot)": [[343, "pypath.inputs.uniprot.query_builder"]], "swissprot_deleted() (in module pypath.inputs.uniprot)": [[344, "pypath.inputs.uniprot.swissprot_deleted"]], "trembl_deleted() (in module pypath.inputs.uniprot)": [[345, "pypath.inputs.uniprot.trembl_deleted"]], "uniprot_data() (in module pypath.inputs.uniprot)": [[346, "pypath.inputs.uniprot.uniprot_data"]], "uniprot_deleted() (in module pypath.inputs.uniprot)": [[347, "pypath.inputs.uniprot.uniprot_deleted"]], "uniprot_families() (in module pypath.inputs.uniprot)": [[348, "pypath.inputs.uniprot.uniprot_families"]], "uniprot_history() (in module pypath.inputs.uniprot)": [[349, "pypath.inputs.uniprot.uniprot_history"]], "uniprot_history_recent_datasheet() (in module pypath.inputs.uniprot)": [[350, "pypath.inputs.uniprot.uniprot_history_recent_datasheet"]], "uniprot_keywords() (in module pypath.inputs.uniprot)": [[351, "pypath.inputs.uniprot.uniprot_keywords"]], "uniprot_locations() (in module pypath.inputs.uniprot)": [[352, "pypath.inputs.uniprot.uniprot_locations"]], "uniprot_ncbi_taxids() (in module pypath.inputs.uniprot)": [[353, "pypath.inputs.uniprot.uniprot_ncbi_taxids"]], "uniprot_ncbi_taxids_2() (in module pypath.inputs.uniprot)": [[354, "pypath.inputs.uniprot.uniprot_ncbi_taxids_2"]], "uniprot_preprocess() (in module pypath.inputs.uniprot)": [[355, "pypath.inputs.uniprot.uniprot_preprocess"]], "uniprot_query() (in module pypath.inputs.uniprot)": [[356, "pypath.inputs.uniprot.uniprot_query"]], "uniprot_recent_version() (in module pypath.inputs.uniprot)": [[357, "pypath.inputs.uniprot.uniprot_recent_version"]], "uniprot_taxonomy() (in module pypath.inputs.uniprot)": [[358, "pypath.inputs.uniprot.uniprot_taxonomy"]], "uniprot_tissues() (in module pypath.inputs.uniprot)": [[359, "pypath.inputs.uniprot.uniprot_tissues"]], "uniprot_topology() (in module pypath.inputs.uniprot)": [[360, "pypath.inputs.uniprot.uniprot_topology"]], "valid_uniprot() (in module pypath.inputs.uniprot)": [[361, "pypath.inputs.uniprot.valid_uniprot"]], "pypath.inputs.uniprot_db": [[362, "module-pypath.inputs.uniprot_db"]], "all_swissprots() (in module pypath.inputs.uniprot_db)": [[363, "pypath.inputs.uniprot_db.all_swissprots"]], "all_trembls() (in module pypath.inputs.uniprot_db)": [[364, "pypath.inputs.uniprot_db.all_trembls"]], "all_uniprots() (in module pypath.inputs.uniprot_db)": [[365, "pypath.inputs.uniprot_db.all_uniprots"]], "get_db() (in module pypath.inputs.uniprot_db)": [[366, "pypath.inputs.uniprot_db.get_db"]], "init_db() (in module pypath.inputs.uniprot_db)": [[367, "pypath.inputs.uniprot_db.init_db"]], "is_swissprot() (in module pypath.inputs.uniprot_db)": [[368, "pypath.inputs.uniprot_db.is_swissprot"]], "is_trembl() (in module pypath.inputs.uniprot_db)": [[369, "pypath.inputs.uniprot_db.is_trembl"]], "is_uniprot() (in module pypath.inputs.uniprot_db)": [[370, "pypath.inputs.uniprot_db.is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[371, "module-pypath.inputs.uniprot_idmapping"]], "idtypes() (in module pypath.inputs.uniprot_idmapping)": [[372, "pypath.inputs.uniprot_idmapping.idtypes"]], "pypath.internals": [[373, "module-pypath.internals"]], "pypath.internals.input_formats": [[374, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[375, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[375, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[376, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[376, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[377, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[377, "pypath.internals.input_formats.FileMapping.__init__"]], "hmdbmapping (class in pypath.internals.input_formats)": [[378, "pypath.internals.input_formats.HmdbMapping"]], "__init__() (pypath.internals.input_formats.hmdbmapping method)": [[378, "pypath.internals.input_formats.HmdbMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[379, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[379, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[380, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[380, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[381, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[381, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[382, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[382, "pypath.internals.input_formats.ProMapping.__init__"]], "rampmapping (class in pypath.internals.input_formats)": [[383, "pypath.internals.input_formats.RampMapping"]], "__init__() (pypath.internals.input_formats.rampmapping method)": [[383, "pypath.internals.input_formats.RampMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[384, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[384, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[385, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[385, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[386, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[386, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[387, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[387, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[387, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[388, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[389, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[389, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[389, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[390, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[390, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[390, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[390, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[390, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[390, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[391, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[391, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[391, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[391, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[391, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[391, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[392, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[392, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[392, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[392, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[392, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[392, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[393, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[393, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[393, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[393, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[393, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[393, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[394, "module-pypath.internals.maps"]], "pypath.internals.refs": [[395, "module-pypath.internals.refs"]], "reference (class in pypath.internals.refs)": [[396, "pypath.internals.refs.Reference"]], "__init__() (pypath.internals.refs.reference method)": [[396, "pypath.internals.refs.Reference.__init__"]], "get_pubmed_data() (in module pypath.internals.refs)": [[397, "pypath.internals.refs.get_pubmed_data"]], "pypath.internals.resource": [[398, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[399, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[399, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[399, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[399, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[399, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[400, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[400, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[400, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[401, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkdataset (class in pypath.internals.resource)": [[402, "pypath.internals.resource.NetworkDataset"]], "__init__() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.__init__"]], "clear() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.clear"]], "get() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.get"]], "items() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.items"]], "keys() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.keys"]], "pop() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.pop"]], "popitem() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.popitem"]], "setdefault() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.setdefault"]], "update() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.update"]], "values() (pypath.internals.resource.networkdataset method)": [[402, "pypath.internals.resource.NetworkDataset.values"]], "networkresource (class in pypath.internals.resource)": [[403, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[403, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[404, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[404, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[404, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[404, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[404, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[404, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[404, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[404, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[404, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[404, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[404, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[405, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[405, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[406, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[407, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[408, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[409, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[410, "pypath.log"]], "pypath.resources": [[411, "module-pypath.resources"]], "pypath.resources.controller": [[412, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[413, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.__init__"]], "add_resource_attrs() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.add_resource_attrs"]], "collect_interaction() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.collect_interaction"]], "collect_network() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.collect_network"]], "license_filter() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.license_filter"]], "secondary_resources() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.secondary_resources"]], "update() (pypath.resources.controller.resourcecontroller method)": [[413, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[414, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[415, "module-pypath.resources.data_formats"]], "activity_flow (in module pypath.resources.data_formats)": [[416, "pypath.resources.data_formats.activity_flow"]], "enzyme_substrate (in module pypath.resources.data_formats)": [[417, "pypath.resources.data_formats.enzyme_substrate"]], "interaction (in module pypath.resources.data_formats)": [[418, "pypath.resources.data_formats.interaction"]], "interaction_htp (in module pypath.resources.data_formats)": [[419, "pypath.resources.data_formats.interaction_htp"]], "pathway_bad (in module pypath.resources.data_formats)": [[420, "pypath.resources.data_formats.pathway_bad"]], "reaction_pc (in module pypath.resources.data_formats)": [[421, "pypath.resources.data_formats.reaction_pc"]], "transcription_deprecated (in module pypath.resources.data_formats)": [[422, "pypath.resources.data_formats.transcription_deprecated"]], "transcription_onebyone (in module pypath.resources.data_formats)": [[423, "pypath.resources.data_formats.transcription_onebyone"]], "get_controller() (in module pypath.resources)": [[424, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[425, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[426, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[426, "pypath.resources.licenses.Licenses.__init__"]], "pypath.resources.network": [[427, "module-pypath.resources.network"]], "pypath.resources.urls": [[428, "module-pypath.resources.urls"]], "pypath.share": [[429, "module-pypath.share"]], "pypath.share.cache": [[430, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[431, "pypath.share.cache.cache_item"]], "cache_path() (in module pypath.share.cache)": [[432, "pypath.share.cache.cache_path"]], "get_cachedir() (in module pypath.share.cache)": [[433, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[434, "module-pypath.share.common"]], "pypath.share.constants": [[435, "module-pypath.share.constants"]], "pypath.share.curl": [[436, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[437, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.__init__"]], "cache_path() (pypath.share.curl.curl class method)": [[437, "pypath.share.curl.Curl.cache_path"]], "close() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[437, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[437, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[438, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[438, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[438, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[438, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[438, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[439, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[439, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[440, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[440, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[441, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[441, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[442, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[442, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[443, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[443, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[444, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[444, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[445, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[445, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[446, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[446, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[447, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[447, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[448, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[448, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[449, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[449, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[450, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[451, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[451, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[452, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[452, "pypath.share.curl.preserve_on"]], "pypath.share.progress": [[453, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[454, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[454, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[455, "module-pypath.share.session"]], "pypath.share.settings": [[456, "module-pypath.share.settings"]], "pypath.visual": [[457, "module-pypath.visual"]], "pypath.visual.drawing": [[458, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[459, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[459, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[459, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[460, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[460, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[461, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[462, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[462, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[463, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[464, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[464, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[465, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[466, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[467, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[468, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[469, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[470, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[471, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[472, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[473, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[474, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[475, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[475, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[476, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[476, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[476, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[477, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[477, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[478, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[478, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[478, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[479, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[479, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[479, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})