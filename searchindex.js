Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.abs", "api/pypath.inputs.abs.abs_interactions", "api/pypath.inputs.acsn", "api/pypath.inputs.acsn.acsn_interactions", "api/pypath.inputs.acsn.acsn_interactions_sif", "api/pypath.inputs.adrecs", "api/pypath.inputs.adrecs.AdrecsAdr", "api/pypath.inputs.adrecs.AdrecsChildParent", "api/pypath.inputs.adrecs.AdrecsDrug", "api/pypath.inputs.adrecs.AdrecsDrugAdr", "api/pypath.inputs.adrecs.AdrecsTerm", "api/pypath.inputs.adrecs.adrecs_adr_ontology", "api/pypath.inputs.adrecs.adrecs_drug_adr", "api/pypath.inputs.adrecs.adrecs_drug_identifiers", "api/pypath.inputs.adrecs.adrecs_hierarchy", "api/pypath.inputs.biogrid", "api/pypath.inputs.biogrid.biogrid_all_interactions", "api/pypath.inputs.biogrid.biogrid_interactions", "api/pypath.inputs.biomart", "api/pypath.inputs.biomart.biomart_homology", "api/pypath.inputs.biomart.biomart_microarray", "api/pypath.inputs.biomart.biomart_microarray_types", "api/pypath.inputs.biomart.biomart_microarrays", "api/pypath.inputs.biomart.biomart_query", "api/pypath.inputs.biomodels", "api/pypath.inputs.biomodels.download_single_model", "api/pypath.inputs.biomodels.get_all_models", "api/pypath.inputs.biomodels.get_biomodels", "api/pypath.inputs.biomodels.get_biomodels_req", "api/pypath.inputs.biomodels.get_single_model", "api/pypath.inputs.ca1", "api/pypath.inputs.ca1.ca1_interactions", "api/pypath.inputs.cancercellmap", "api/pypath.inputs.cancercellmap.ccmap_interactions", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.chembl", "api/pypath.inputs.chembl.chembl_activities", "api/pypath.inputs.chembl.chembl_assays", "api/pypath.inputs.chembl.chembl_documents", "api/pypath.inputs.chembl.chembl_drug_indications", "api/pypath.inputs.chembl.chembl_mechanisms", "api/pypath.inputs.chembl.chembl_molecules", "api/pypath.inputs.chembl.chembl_targets", "api/pypath.inputs.clinvar", "api/pypath.inputs.clinvar.clinvar_citations", "api/pypath.inputs.clinvar.clinvar_raw", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.compath", "api/pypath.inputs.compath.compath_mappings", "api/pypath.inputs.cpdb", "api/pypath.inputs.cpdb.cpdb_interactions", "api/pypath.inputs.cpdb.cpdb_interactions_ltp", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ctdbase", "api/pypath.inputs.ctdbase.ctdbase_relations", "api/pypath.inputs.ctdbase.ctdbase_vocabulary", "api/pypath.inputs.dbptm", "api/pypath.inputs.dbptm.dbptm_enzyme_substrate", "api/pypath.inputs.dbptm.dbptm_enzyme_substrate_old", "api/pypath.inputs.dbptm.dbptm_interactions", "api/pypath.inputs.ddinter", "api/pypath.inputs.ddinter.ddinter_drug_interactions", "api/pypath.inputs.ddinter.ddinter_identifiers", "api/pypath.inputs.ddinter.ddinter_interactions", "api/pypath.inputs.ddinter.ddinter_mappings", "api/pypath.inputs.ddinter.ddinter_n_drugs", "api/pypath.inputs.deathdomain", "api/pypath.inputs.deathdomain.deathdomain_interactions", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued", "api/pypath.inputs.dip", "api/pypath.inputs.dip.dip_interactions", "api/pypath.inputs.dip.dip_login", "api/pypath.inputs.diseases", "api/pypath.inputs.diseases.diseases_general", "api/pypath.inputs.diseases.experiments_filtered", "api/pypath.inputs.diseases.experiments_full", "api/pypath.inputs.diseases.knowledge_filtered", "api/pypath.inputs.diseases.knowledge_full", "api/pypath.inputs.diseases.textmining_filtered", "api/pypath.inputs.diseases.textmining_full", "api/pypath.inputs.dorothea", "api/pypath.inputs.dorothea.DorotheaInteraction", "api/pypath.inputs.dorothea.dorothea_full_raw", "api/pypath.inputs.dorothea.dorothea_interactions", "api/pypath.inputs.dorothea.dorothea_interactions_old", "api/pypath.inputs.dorothea.dorothea_old_csv", "api/pypath.inputs.dorothea.dorothea_rda_raw", "api/pypath.inputs.dorothea.get_dorothea_old", "api/pypath.inputs.dorothea.get_tfregulons", "api/pypath.inputs.dorothea.tfregulons_interactions", "api/pypath.inputs.dorothea.tfregulons_interactions_old", "api/pypath.inputs.drugbank", "api/pypath.inputs.drugbank.DrugbankFull", "api/pypath.inputs.drugbank.drugbank_annotations", "api/pypath.inputs.drugbank.drugbank_drugs", "api/pypath.inputs.drugbank.drugbank_interactions", "api/pypath.inputs.drugbank.drugbank_mapping", "api/pypath.inputs.drugbank.drugbank_raw_interactions", "api/pypath.inputs.drugcentral", "api/pypath.inputs.drugcentral.drugcentral_drugs", "api/pypath.inputs.drugcentral.drugcentral_interactions", "api/pypath.inputs.drugcentral.drugcentral_mapping", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.elm", "api/pypath.inputs.elm.elm_classes", "api/pypath.inputs.elm.elm_domains", "api/pypath.inputs.elm.elm_instances", "api/pypath.inputs.elm.elm_interactions", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.encode", "api/pypath.inputs.encode.encode_tf_mirna_interactions", "api/pypath.inputs.ensembl", "api/pypath.inputs.ensembl.ensembl_organisms", "api/pypath.inputs.eutils", "api/pypath.inputs.eutils.esummary", "api/pypath.inputs.exocarta", "api/pypath.inputs.exocarta.get_exocarta", "api/pypath.inputs.exocarta.get_vesiclepedia", "api/pypath.inputs.expasy", "api/pypath.inputs.expasy.expasy_enzyme_classes", "api/pypath.inputs.expasy.expasy_enzymes", "api/pypath.inputs.genecards", "api/pypath.inputs.genecards.genecards_datasheet", "api/pypath.inputs.genecards.genecards_soup", "api/pypath.inputs.genecards.genecards_summaries", "api/pypath.inputs.get_method", "api/pypath.inputs.go", "api/pypath.inputs.go.get_go_desc", "api/pypath.inputs.go.get_go_quick", "api/pypath.inputs.go.get_goslim", "api/pypath.inputs.go.go_ancestors", "api/pypath.inputs.go.go_ancestors_goose", "api/pypath.inputs.go.go_ancestors_quickgo", "api/pypath.inputs.go.go_annotations", "api/pypath.inputs.go.go_annotations_all", "api/pypath.inputs.go.go_annotations_goa", "api/pypath.inputs.go.go_annotations_goose", "api/pypath.inputs.go.go_annotations_quickgo", "api/pypath.inputs.go.go_annotations_solr", "api/pypath.inputs.go.go_annotations_uniprot", "api/pypath.inputs.go.go_descendants", "api/pypath.inputs.go.go_descendants_goose", "api/pypath.inputs.go.go_descendants_quickgo", "api/pypath.inputs.go.go_descendants_to_ancestors", "api/pypath.inputs.go.go_terms", "api/pypath.inputs.go.go_terms_goose", "api/pypath.inputs.go.go_terms_quickgo", "api/pypath.inputs.go.go_terms_solr", "api/pypath.inputs.gpcrdb", "api/pypath.inputs.gpcrdb.gpcrdb_annotations", "api/pypath.inputs.graphviz", "api/pypath.inputs.graphviz.graphviz_attrs", "api/pypath.inputs.hmdb", "api/pypath.inputs.hmdb.common", "api/pypath.inputs.hmdb.common.iter", "api/pypath.inputs.hmdb.common.mapping", "api/pypath.inputs.hmdb.common.raw", "api/pypath.inputs.hmdb.common.table", "api/pypath.inputs.hmdb.metabolites", "api/pypath.inputs.hmdb.metabolites.iter", "api/pypath.inputs.hmdb.metabolites.mapping", "api/pypath.inputs.hmdb.metabolites.raw", "api/pypath.inputs.hmdb.metabolites.table", "api/pypath.inputs.hmdb.proteins", "api/pypath.inputs.hmdb.proteins.iter", "api/pypath.inputs.hmdb.proteins.mapping", "api/pypath.inputs.hmdb.proteins.raw", "api/pypath.inputs.hmdb.proteins.table", "api/pypath.inputs.hmdb.schema", "api/pypath.inputs.hmdb.schema.common", "api/pypath.inputs.hmdb.schema.common.Field", "api/pypath.inputs.hmdb.schema.metabolites", "api/pypath.inputs.hmdb.schema.proteins", "api/pypath.inputs.hmdb.structures", "api/pypath.inputs.hmdb.structures.sdf", "api/pypath.inputs.hmdb.visual", "api/pypath.inputs.hmdb.visual.show_structure", "api/pypath.inputs.hmdb.visual.structure_svg", "api/pypath.inputs.hmdb.xml", "api/pypath.inputs.hmdb.xml.hmdb_xml", "api/pypath.inputs.hprd", "api/pypath.inputs.hprd.get_hprd", "api/pypath.inputs.hprd.hprd_enzyme_substrate", "api/pypath.inputs.hprd.hprd_interactions", "api/pypath.inputs.hprd.hprd_interactions_htp", "api/pypath.inputs.htri", "api/pypath.inputs.htri.htri_interactions", "api/pypath.inputs.humsavar", "api/pypath.inputs.humsavar.uniprot_variants", "api/pypath.inputs.i3d", "api/pypath.inputs.i3d.get_i3d", "api/pypath.inputs.ielm", "api/pypath.inputs.ielm.get_ielm", "api/pypath.inputs.ielm.get_ielm_huge", "api/pypath.inputs.imweb", "api/pypath.inputs.imweb.get_imweb", "api/pypath.inputs.imweb.get_imweb_req", "api/pypath.inputs.innatedb", "api/pypath.inputs.innatedb.innatedb_interactions", "api/pypath.inputs.instruct", "api/pypath.inputs.instruct.get_instruct", "api/pypath.inputs.instruct.get_instruct_offsets", "api/pypath.inputs.intact", "api/pypath.inputs.intact.intact_interactions", "api/pypath.inputs.interpro", "api/pypath.inputs.interpro.interpro2go_annotations", "api/pypath.inputs.interpro.interpro_annotations", "api/pypath.inputs.interpro.interpro_entries", "api/pypath.inputs.interpro.interpro_xrefs", "api/pypath.inputs.ipi", "api/pypath.inputs.ipi.ipi_uniprot", "api/pypath.inputs.kegg_api", "api/pypath.inputs.kegg_api.disease_to_drug", "api/pypath.inputs.kegg_api.disease_to_gene", "api/pypath.inputs.kegg_api.disease_to_pathway", "api/pypath.inputs.kegg_api.drug_to_disease", "api/pypath.inputs.kegg_api.drug_to_drug", "api/pypath.inputs.kegg_api.drug_to_gene", "api/pypath.inputs.kegg_api.drug_to_pathway", "api/pypath.inputs.kegg_api.gene_to_disease", "api/pypath.inputs.kegg_api.gene_to_drug", "api/pypath.inputs.kegg_api.gene_to_pathway", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot", "api/pypath.inputs.kegg_api.pathway_to_disease", "api/pypath.inputs.kegg_api.pathway_to_drug", "api/pypath.inputs.kegg_api.pathway_to_gene", "api/pypath.inputs.kirouac2010", "api/pypath.inputs.kirouac2010.kirouac2010_interactions", "api/pypath.inputs.laudanna", "api/pypath.inputs.laudanna.laudanna_directions", "api/pypath.inputs.laudanna.laudanna_effects", "api/pypath.inputs.lincs", "api/pypath.inputs.lincs.lincs_compounds", "api/pypath.inputs.lncdisease", "api/pypath.inputs.lncdisease.lncdisease_interactions", "api/pypath.inputs.lncrnadb", "api/pypath.inputs.lncrnadb.lncrnadb_interactions", "api/pypath.inputs.macrophage", "api/pypath.inputs.macrophage.macrophage_interactions", "api/pypath.inputs.main", "api/pypath.inputs.mimp", "api/pypath.inputs.mimp.get_kinase_class", "api/pypath.inputs.mimp.mimp_enzyme_substrate", "api/pypath.inputs.mimp.mimp_interactions", "api/pypath.inputs.mir2disease", "api/pypath.inputs.mir2disease.mir2disease_interactions", "api/pypath.inputs.mirbase", "api/pypath.inputs.mirbase.get_mirbase_aliases", "api/pypath.inputs.mirbase.mirbase_ids", "api/pypath.inputs.mirbase.mirbase_mature", "api/pypath.inputs.mirbase.mirbase_mature_all", "api/pypath.inputs.mirbase.mirbase_precursor", "api/pypath.inputs.mirbase.mirbase_precursor_all", "api/pypath.inputs.mirbase.mirbase_precursor_to_mature", "api/pypath.inputs.mirdeathdb", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions", "api/pypath.inputs.mirecords", "api/pypath.inputs.mirecords.mirecords_interactions", "api/pypath.inputs.mirtarbase", "api/pypath.inputs.mirtarbase.mirtarbase_interactions", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.mppi", "api/pypath.inputs.mppi.mppi_interactions", "api/pypath.inputs.ncrdeathdb", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "api/pypath.inputs.negatome", "api/pypath.inputs.negatome.negatome_interactions", "api/pypath.inputs.netbiol", "api/pypath.inputs.netbiol.arn_interactions", "api/pypath.inputs.netbiol.nrf2ome_interactions", "api/pypath.inputs.offsides", "api/pypath.inputs.offsides.offsides_side_effects", "api/pypath.inputs.ontology", "api/pypath.inputs.ontology.listof_ontologies", "api/pypath.inputs.ontology.ontology", "api/pypath.inputs.opentargets", "api/pypath.inputs.opentargets.opentargets_adverse_reactions", "api/pypath.inputs.opentargets.opentargets_baseline_expression", "api/pypath.inputs.opentargets.opentargets_direct_score", "api/pypath.inputs.opentargets.opentargets_general", "api/pypath.inputs.opentargets.opentargets_indirect_score", "api/pypath.inputs.oreganno", "api/pypath.inputs.oreganno.oreganno_interactions", "api/pypath.inputs.oreganno.oreganno_raw", "api/pypath.inputs.pathophenodb", "api/pypath.inputs.pathophenodb.DiseasePathogen", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions", "api/pypath.inputs.pathwaycommons", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "api/pypath.inputs.pazar", "api/pypath.inputs.pazar.pazar_interactions", "api/pypath.inputs.pdzbase", "api/pypath.inputs.pdzbase.pdzbase_interactions", "api/pypath.inputs.pepcyber", "api/pypath.inputs.pepcyber.pepcyber_details", "api/pypath.inputs.pepcyber.pepcyber_interactions", "api/pypath.inputs.pfam", "api/pypath.inputs.pfam.pfam_names", "api/pypath.inputs.pfam.pfam_pdb", "api/pypath.inputs.pfam.pfam_regions", "api/pypath.inputs.pfam.pfam_uniprot", "api/pypath.inputs.pharos", "api/pypath.inputs.pharos.pharos_diseases", "api/pypath.inputs.pharos.pharos_expression", "api/pypath.inputs.pharos.pharos_general", "api/pypath.inputs.pharos.pharos_gtex", "api/pypath.inputs.pharos.pharos_ligands", "api/pypath.inputs.pharos.pharos_orthologs", "api/pypath.inputs.pharos.pharos_targets", "api/pypath.inputs.pharos.pharos_xrefs", "api/pypath.inputs.phobius", "api/pypath.inputs.phobius.phobius_annotations", "api/pypath.inputs.phosphoelm", "api/pypath.inputs.phosphoelm.phosphoelm_enzyme_substrate", "api/pypath.inputs.phosphoelm.phosphoelm_interactions", "api/pypath.inputs.phosphoelm.phosphoelm_kinases", "api/pypath.inputs.phosphonetworks", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions", "api/pypath.inputs.phosphopoint", "api/pypath.inputs.phosphopoint.phosphopoint_directions", "api/pypath.inputs.phosphopoint.phosphopoint_interactions", "api/pypath.inputs.pro", "api/pypath.inputs.pro.get_pro", "api/pypath.inputs.pro.pro_mapping", "api/pypath.inputs.proteins", "api/pypath.inputs.proteins.variants", "api/pypath.inputs.protmapper", "api/pypath.inputs.protmapper.get_protmapper", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate", "api/pypath.inputs.protmapper.protmapper_interactions", "api/pypath.inputs.pubchem", "api/pypath.inputs.pubchem.pubchem_mapping", "api/pypath.inputs.pubmed", "api/pypath.inputs.pubmed.get_pmid", "api/pypath.inputs.pubmed.get_pubmeds", "api/pypath.inputs.pubmed.only_pmids", "api/pypath.inputs.pubmed.open_pubmed", "api/pypath.inputs.pubmed.pmids_dict", "api/pypath.inputs.pubmed.pmids_list", "api/pypath.inputs.ramp", "api/pypath.inputs.ramp.ramp_id_types", "api/pypath.inputs.ramp.ramp_id_types_2", "api/pypath.inputs.ramp.ramp_list_tables", "api/pypath.inputs.ramp.ramp_mapping", "api/pypath.inputs.ramp.ramp_raw", "api/pypath.inputs.ramp.ramp_show_tables", "api/pypath.inputs.rdata", "api/pypath.inputs.reaction", "api/pypath.inputs.reaction.acsn_biopax", "api/pypath.inputs.reaction.acsn_interactions_2", "api/pypath.inputs.reaction.get_acsn_effects", "api/pypath.inputs.reaction.get_controls", "api/pypath.inputs.reaction.get_interactions", "api/pypath.inputs.reaction.get_reactions", "api/pypath.inputs.reaction.get_soup", "api/pypath.inputs.reaction.panther_biopax", "api/pypath.inputs.reaction.panther_interactions", "api/pypath.inputs.reaction.pid_biopax", "api/pypath.inputs.reaction.pid_interactions", "api/pypath.inputs.reaction.process_complex", "api/pypath.inputs.reaction.process_controls", "api/pypath.inputs.reaction.process_reactions", "api/pypath.inputs.reaction.reactions_biopax", "api/pypath.inputs.reaction.reactome_biopax", "api/pypath.inputs.reaction.reactome_bs", "api/pypath.inputs.reaction.reactome_interactions", "api/pypath.inputs.reaction.reactome_sbml", "api/pypath.inputs.reactome", "api/pypath.inputs.reactome.reactome_chebis", "api/pypath.inputs.reactome.reactome_pathway_relations", "api/pypath.inputs.reactome.reactome_pathways", "api/pypath.inputs.reactome.reactome_uniprots", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.inputs.sider", "api/pypath.inputs.sider.SiderDrug", "api/pypath.inputs.sider.SiderSideeffect", "api/pypath.inputs.sider.SiderSideeffectMeddra", "api/pypath.inputs.sider.SiderSideeffetFrequency", "api/pypath.inputs.sider.sider_drug_names", "api/pypath.inputs.sider.sider_meddra_side_effects", "api/pypath.inputs.sider.sider_side_effect_frequencies", "api/pypath.inputs.sider.sider_side_effects", "api/pypath.inputs.stitch", "api/pypath.inputs.stitch.stitch_actions_interactions", "api/pypath.inputs.stitch.stitch_links_interactions", "api/pypath.inputs.string", "api/pypath.inputs.string.string_effects", "api/pypath.inputs.string.string_links_interactions", "api/pypath.inputs.string.string_physical_interactions", "api/pypath.inputs.string.string_species", "api/pypath.inputs.switches_elm", "api/pypath.inputs.switches_elm.get_switches_elm", "api/pypath.inputs.transmir", "api/pypath.inputs.transmir.transmir_interactions", "api/pypath.inputs.trip", "api/pypath.inputs.trip.take_a_trip", "api/pypath.inputs.trip.trip_find_uniprot", "api/pypath.inputs.trip.trip_get_uniprot", "api/pypath.inputs.trip.trip_interactions", "api/pypath.inputs.trip.trip_process", "api/pypath.inputs.trip.trip_process_table", "api/pypath.inputs.trrust", "api/pypath.inputs.trrust.trrust_human", "api/pypath.inputs.trrust.trrust_interactions", "api/pypath.inputs.trrust.trrust_mouse", "api/pypath.inputs.twosides", "api/pypath.inputs.twosides.twosides_interactions", "api/pypath.inputs.unichem", "api/pypath.inputs.unichem.info", "api/pypath.inputs.unichem.unichem_info", "api/pypath.inputs.unichem.unichem_mapping", "api/pypath.inputs.unichem.unichem_sources", "api/pypath.inputs.uniprot", "api/pypath.inputs.uniprot.Taxon", "api/pypath.inputs.uniprot.UniprotQuery", "api/pypath.inputs.uniprot.UniprotRecordHistory", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol", "api/pypath.inputs.uniprot.get_uniprot_sec", "api/pypath.inputs.uniprot.idmapping_idtypes", "api/pypath.inputs.uniprot.protein_datasheet", "api/pypath.inputs.uniprot.query_builder", "api/pypath.inputs.uniprot.swissprot_deleted", "api/pypath.inputs.uniprot.trembl_deleted", "api/pypath.inputs.uniprot.uniprot_data", "api/pypath.inputs.uniprot.uniprot_deleted", "api/pypath.inputs.uniprot.uniprot_families", "api/pypath.inputs.uniprot.uniprot_history", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet", "api/pypath.inputs.uniprot.uniprot_keywords", "api/pypath.inputs.uniprot.uniprot_locations", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "api/pypath.inputs.uniprot.uniprot_preprocess", "api/pypath.inputs.uniprot.uniprot_query", "api/pypath.inputs.uniprot.uniprot_recent_version", "api/pypath.inputs.uniprot.uniprot_taxonomy", "api/pypath.inputs.uniprot.uniprot_tissues", "api/pypath.inputs.uniprot.uniprot_topology", "api/pypath.inputs.uniprot.valid_uniprot", "api/pypath.inputs.uniprot_db", "api/pypath.inputs.uniprot_db.all_swissprots", "api/pypath.inputs.uniprot_db.all_trembls", "api/pypath.inputs.uniprot_db.all_uniprots", "api/pypath.inputs.uniprot_db.get_db", "api/pypath.inputs.uniprot_db.init_db", "api/pypath.inputs.uniprot_db.is_swissprot", "api/pypath.inputs.uniprot_db.is_trembl", "api/pypath.inputs.uniprot_db.is_uniprot", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.HmdbMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.RampMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.refs", "api/pypath.internals.refs.Reference", "api/pypath.internals.refs.get_pubmed_data", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkDataset", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.data_formats", "api/pypath.resources.data_formats.activity_flow", "api/pypath.resources.data_formats.enzyme_substrate", "api/pypath.resources.data_formats.interaction", "api/pypath.resources.data_formats.interaction_htp", "api/pypath.resources.data_formats.pathway_bad", "api/pypath.resources.data_formats.reaction_pc", "api/pypath.resources.data_formats.transcription_deprecated", "api/pypath.resources.data_formats.transcription_onebyone", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.resources.network", "api/pypath.resources.network.choose_dataset", "api/pypath.resources.network.dataset_priority", "api/pypath.resources.network.dorothea_expand_levels", "api/pypath.resources.urls", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.cache_path", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.settings", "api/pypath.utils", "api/pypath.utils.go", "api/pypath.utils.go.GOAnnotation", "api/pypath.utils.go.GOCustomAnnotation", "api/pypath.utils.go.GeneOntology", "api/pypath.utils.go.annotate", "api/pypath.utils.go.get_db", "api/pypath.utils.go.init_db", "api/pypath.utils.go.load_go", "api/pypath.utils.pdb", "api/pypath.utils.pdb.Residue", "api/pypath.utils.pdb.ResidueMapper", "api/pypath.utils.pdb.Segment", "api/pypath.utils.pdb.residue_pdb", "api/pypath.utils.proteomicsdb", "api/pypath.utils.proteomicsdb.ProteomicsDB", "api/pypath.utils.reflists", "api/pypath.utils.reflists.ReferenceListManager", "api/pypath.utils.reflists.check", "api/pypath.utils.reflists.get_manager", "api/pypath.utils.reflists.get_reflist", "api/pypath.utils.reflists.init", "api/pypath.utils.reflists.is_not", "api/pypath.utils.reflists.select", "api/pypath.utils.residues", "api/pypath.utils.residues.ResidueMapper", "api/pypath.utils.seq", "api/pypath.utils.seq.Pfam", "api/pypath.utils.seq.Resource", "api/pypath.utils.seq.Seq", "api/pypath.utils.seq.get_isoforms", "api/pypath.utils.seq.read_fasta", "api/pypath.utils.seq.swissprot_seq", "api/pypath.utils.taxonomy", "api/pypath.utils.taxonomy.ensure_common_name", "api/pypath.utils.taxonomy.ensure_ensembl_name", "api/pypath.utils.taxonomy.ensure_latin_name", "api/pypath.utils.taxonomy.ensure_ncbi_tax_id", "api/pypath.utils.taxonomy.get_db", "api/pypath.utils.taxonomy.init_db", "api/pypath.utils.taxonomy.short_latin_names", "api/pypath.utils.taxonomy.shorten_latin_name", "api/pypath.utils.taxonomy.taxid_from_common_name", "api/pypath.utils.taxonomy.taxid_from_dbptm_taxon_name", "api/pypath.utils.taxonomy.taxid_from_ensembl_name", "api/pypath.utils.taxonomy.taxid_from_latin_name", "api/pypath.utils.taxonomy.taxid_from_nonstandard", "api/pypath.utils.taxonomy.uniprot_taxid", "api/pypath.utils.unichem", "api/pypath.utils.unichem.Unichem", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.abs.rst", "api/pypath.inputs.abs.abs_interactions.rst", "api/pypath.inputs.acsn.rst", "api/pypath.inputs.acsn.acsn_interactions.rst", "api/pypath.inputs.acsn.acsn_interactions_sif.rst", "api/pypath.inputs.adrecs.rst", "api/pypath.inputs.adrecs.AdrecsAdr.rst", "api/pypath.inputs.adrecs.AdrecsChildParent.rst", "api/pypath.inputs.adrecs.AdrecsDrug.rst", "api/pypath.inputs.adrecs.AdrecsDrugAdr.rst", "api/pypath.inputs.adrecs.AdrecsTerm.rst", "api/pypath.inputs.adrecs.adrecs_adr_ontology.rst", "api/pypath.inputs.adrecs.adrecs_drug_adr.rst", "api/pypath.inputs.adrecs.adrecs_drug_identifiers.rst", "api/pypath.inputs.adrecs.adrecs_hierarchy.rst", "api/pypath.inputs.biogrid.rst", "api/pypath.inputs.biogrid.biogrid_all_interactions.rst", "api/pypath.inputs.biogrid.biogrid_interactions.rst", "api/pypath.inputs.biomart.rst", "api/pypath.inputs.biomart.biomart_homology.rst", "api/pypath.inputs.biomart.biomart_microarray.rst", "api/pypath.inputs.biomart.biomart_microarray_types.rst", "api/pypath.inputs.biomart.biomart_microarrays.rst", "api/pypath.inputs.biomart.biomart_query.rst", "api/pypath.inputs.biomodels.rst", "api/pypath.inputs.biomodels.download_single_model.rst", "api/pypath.inputs.biomodels.get_all_models.rst", "api/pypath.inputs.biomodels.get_biomodels.rst", "api/pypath.inputs.biomodels.get_biomodels_req.rst", "api/pypath.inputs.biomodels.get_single_model.rst", "api/pypath.inputs.ca1.rst", "api/pypath.inputs.ca1.ca1_interactions.rst", "api/pypath.inputs.cancercellmap.rst", "api/pypath.inputs.cancercellmap.ccmap_interactions.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.chembl.rst", "api/pypath.inputs.chembl.chembl_activities.rst", "api/pypath.inputs.chembl.chembl_assays.rst", "api/pypath.inputs.chembl.chembl_documents.rst", "api/pypath.inputs.chembl.chembl_drug_indications.rst", "api/pypath.inputs.chembl.chembl_mechanisms.rst", "api/pypath.inputs.chembl.chembl_molecules.rst", "api/pypath.inputs.chembl.chembl_targets.rst", "api/pypath.inputs.clinvar.rst", "api/pypath.inputs.clinvar.clinvar_citations.rst", "api/pypath.inputs.clinvar.clinvar_raw.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.compath.rst", "api/pypath.inputs.compath.compath_mappings.rst", "api/pypath.inputs.cpdb.rst", "api/pypath.inputs.cpdb.cpdb_interactions.rst", "api/pypath.inputs.cpdb.cpdb_interactions_ltp.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ctdbase.rst", "api/pypath.inputs.ctdbase.ctdbase_relations.rst", "api/pypath.inputs.ctdbase.ctdbase_vocabulary.rst", "api/pypath.inputs.dbptm.rst", "api/pypath.inputs.dbptm.dbptm_enzyme_substrate.rst", "api/pypath.inputs.dbptm.dbptm_enzyme_substrate_old.rst", "api/pypath.inputs.dbptm.dbptm_interactions.rst", "api/pypath.inputs.ddinter.rst", "api/pypath.inputs.ddinter.ddinter_drug_interactions.rst", "api/pypath.inputs.ddinter.ddinter_identifiers.rst", "api/pypath.inputs.ddinter.ddinter_interactions.rst", "api/pypath.inputs.ddinter.ddinter_mappings.rst", "api/pypath.inputs.ddinter.ddinter_n_drugs.rst", "api/pypath.inputs.deathdomain.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued.rst", "api/pypath.inputs.dip.rst", "api/pypath.inputs.dip.dip_interactions.rst", "api/pypath.inputs.dip.dip_login.rst", "api/pypath.inputs.diseases.rst", "api/pypath.inputs.diseases.diseases_general.rst", "api/pypath.inputs.diseases.experiments_filtered.rst", "api/pypath.inputs.diseases.experiments_full.rst", "api/pypath.inputs.diseases.knowledge_filtered.rst", "api/pypath.inputs.diseases.knowledge_full.rst", "api/pypath.inputs.diseases.textmining_filtered.rst", "api/pypath.inputs.diseases.textmining_full.rst", "api/pypath.inputs.dorothea.rst", "api/pypath.inputs.dorothea.DorotheaInteraction.rst", "api/pypath.inputs.dorothea.dorothea_full_raw.rst", "api/pypath.inputs.dorothea.dorothea_interactions.rst", "api/pypath.inputs.dorothea.dorothea_interactions_old.rst", "api/pypath.inputs.dorothea.dorothea_old_csv.rst", "api/pypath.inputs.dorothea.dorothea_rda_raw.rst", "api/pypath.inputs.dorothea.get_dorothea_old.rst", "api/pypath.inputs.dorothea.get_tfregulons.rst", "api/pypath.inputs.dorothea.tfregulons_interactions.rst", "api/pypath.inputs.dorothea.tfregulons_interactions_old.rst", "api/pypath.inputs.drugbank.rst", "api/pypath.inputs.drugbank.DrugbankFull.rst", "api/pypath.inputs.drugbank.drugbank_annotations.rst", "api/pypath.inputs.drugbank.drugbank_drugs.rst", "api/pypath.inputs.drugbank.drugbank_interactions.rst", "api/pypath.inputs.drugbank.drugbank_mapping.rst", "api/pypath.inputs.drugbank.drugbank_raw_interactions.rst", "api/pypath.inputs.drugcentral.rst", "api/pypath.inputs.drugcentral.drugcentral_drugs.rst", "api/pypath.inputs.drugcentral.drugcentral_interactions.rst", "api/pypath.inputs.drugcentral.drugcentral_mapping.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.elm.rst", "api/pypath.inputs.elm.elm_classes.rst", "api/pypath.inputs.elm.elm_domains.rst", "api/pypath.inputs.elm.elm_instances.rst", "api/pypath.inputs.elm.elm_interactions.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.encode.rst", "api/pypath.inputs.encode.encode_tf_mirna_interactions.rst", "api/pypath.inputs.ensembl.rst", "api/pypath.inputs.ensembl.ensembl_organisms.rst", "api/pypath.inputs.eutils.rst", "api/pypath.inputs.eutils.esummary.rst", "api/pypath.inputs.exocarta.rst", "api/pypath.inputs.exocarta.get_exocarta.rst", "api/pypath.inputs.exocarta.get_vesiclepedia.rst", "api/pypath.inputs.expasy.rst", "api/pypath.inputs.expasy.expasy_enzyme_classes.rst", "api/pypath.inputs.expasy.expasy_enzymes.rst", "api/pypath.inputs.genecards.rst", "api/pypath.inputs.genecards.genecards_datasheet.rst", "api/pypath.inputs.genecards.genecards_soup.rst", "api/pypath.inputs.genecards.genecards_summaries.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.go.rst", "api/pypath.inputs.go.get_go_desc.rst", "api/pypath.inputs.go.get_go_quick.rst", "api/pypath.inputs.go.get_goslim.rst", "api/pypath.inputs.go.go_ancestors.rst", "api/pypath.inputs.go.go_ancestors_goose.rst", "api/pypath.inputs.go.go_ancestors_quickgo.rst", "api/pypath.inputs.go.go_annotations.rst", "api/pypath.inputs.go.go_annotations_all.rst", "api/pypath.inputs.go.go_annotations_goa.rst", "api/pypath.inputs.go.go_annotations_goose.rst", "api/pypath.inputs.go.go_annotations_quickgo.rst", "api/pypath.inputs.go.go_annotations_solr.rst", "api/pypath.inputs.go.go_annotations_uniprot.rst", "api/pypath.inputs.go.go_descendants.rst", "api/pypath.inputs.go.go_descendants_goose.rst", "api/pypath.inputs.go.go_descendants_quickgo.rst", "api/pypath.inputs.go.go_descendants_to_ancestors.rst", "api/pypath.inputs.go.go_terms.rst", "api/pypath.inputs.go.go_terms_goose.rst", "api/pypath.inputs.go.go_terms_quickgo.rst", "api/pypath.inputs.go.go_terms_solr.rst", "api/pypath.inputs.gpcrdb.rst", "api/pypath.inputs.gpcrdb.gpcrdb_annotations.rst", "api/pypath.inputs.graphviz.rst", "api/pypath.inputs.graphviz.graphviz_attrs.rst", "api/pypath.inputs.hmdb.rst", "api/pypath.inputs.hmdb.common.rst", "api/pypath.inputs.hmdb.common.iter.rst", "api/pypath.inputs.hmdb.common.mapping.rst", "api/pypath.inputs.hmdb.common.raw.rst", "api/pypath.inputs.hmdb.common.table.rst", "api/pypath.inputs.hmdb.metabolites.rst", "api/pypath.inputs.hmdb.metabolites.iter.rst", "api/pypath.inputs.hmdb.metabolites.mapping.rst", "api/pypath.inputs.hmdb.metabolites.raw.rst", "api/pypath.inputs.hmdb.metabolites.table.rst", "api/pypath.inputs.hmdb.proteins.rst", "api/pypath.inputs.hmdb.proteins.iter.rst", "api/pypath.inputs.hmdb.proteins.mapping.rst", "api/pypath.inputs.hmdb.proteins.raw.rst", "api/pypath.inputs.hmdb.proteins.table.rst", "api/pypath.inputs.hmdb.schema.rst", "api/pypath.inputs.hmdb.schema.common.rst", "api/pypath.inputs.hmdb.schema.common.Field.rst", "api/pypath.inputs.hmdb.schema.metabolites.rst", "api/pypath.inputs.hmdb.schema.proteins.rst", "api/pypath.inputs.hmdb.structures.rst", "api/pypath.inputs.hmdb.structures.sdf.rst", "api/pypath.inputs.hmdb.visual.rst", "api/pypath.inputs.hmdb.visual.show_structure.rst", "api/pypath.inputs.hmdb.visual.structure_svg.rst", "api/pypath.inputs.hmdb.xml.rst", "api/pypath.inputs.hmdb.xml.hmdb_xml.rst", "api/pypath.inputs.hprd.rst", "api/pypath.inputs.hprd.get_hprd.rst", "api/pypath.inputs.hprd.hprd_enzyme_substrate.rst", "api/pypath.inputs.hprd.hprd_interactions.rst", "api/pypath.inputs.hprd.hprd_interactions_htp.rst", "api/pypath.inputs.htri.rst", "api/pypath.inputs.htri.htri_interactions.rst", "api/pypath.inputs.humsavar.rst", "api/pypath.inputs.humsavar.uniprot_variants.rst", "api/pypath.inputs.i3d.rst", "api/pypath.inputs.i3d.get_i3d.rst", "api/pypath.inputs.ielm.rst", "api/pypath.inputs.ielm.get_ielm.rst", "api/pypath.inputs.ielm.get_ielm_huge.rst", "api/pypath.inputs.imweb.rst", "api/pypath.inputs.imweb.get_imweb.rst", "api/pypath.inputs.imweb.get_imweb_req.rst", "api/pypath.inputs.innatedb.rst", "api/pypath.inputs.innatedb.innatedb_interactions.rst", "api/pypath.inputs.instruct.rst", "api/pypath.inputs.instruct.get_instruct.rst", "api/pypath.inputs.instruct.get_instruct_offsets.rst", "api/pypath.inputs.intact.rst", "api/pypath.inputs.intact.intact_interactions.rst", "api/pypath.inputs.interpro.rst", "api/pypath.inputs.interpro.interpro2go_annotations.rst", "api/pypath.inputs.interpro.interpro_annotations.rst", "api/pypath.inputs.interpro.interpro_entries.rst", "api/pypath.inputs.interpro.interpro_xrefs.rst", "api/pypath.inputs.ipi.rst", "api/pypath.inputs.ipi.ipi_uniprot.rst", "api/pypath.inputs.kegg_api.rst", "api/pypath.inputs.kegg_api.disease_to_drug.rst", "api/pypath.inputs.kegg_api.disease_to_gene.rst", "api/pypath.inputs.kegg_api.disease_to_pathway.rst", "api/pypath.inputs.kegg_api.drug_to_disease.rst", "api/pypath.inputs.kegg_api.drug_to_drug.rst", "api/pypath.inputs.kegg_api.drug_to_gene.rst", "api/pypath.inputs.kegg_api.drug_to_pathway.rst", "api/pypath.inputs.kegg_api.gene_to_disease.rst", "api/pypath.inputs.kegg_api.gene_to_drug.rst", "api/pypath.inputs.kegg_api.gene_to_pathway.rst", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot.rst", "api/pypath.inputs.kegg_api.pathway_to_disease.rst", "api/pypath.inputs.kegg_api.pathway_to_drug.rst", "api/pypath.inputs.kegg_api.pathway_to_gene.rst", "api/pypath.inputs.kirouac2010.rst", "api/pypath.inputs.kirouac2010.kirouac2010_interactions.rst", "api/pypath.inputs.laudanna.rst", "api/pypath.inputs.laudanna.laudanna_directions.rst", "api/pypath.inputs.laudanna.laudanna_effects.rst", "api/pypath.inputs.lincs.rst", "api/pypath.inputs.lincs.lincs_compounds.rst", "api/pypath.inputs.lncdisease.rst", "api/pypath.inputs.lncdisease.lncdisease_interactions.rst", "api/pypath.inputs.lncrnadb.rst", "api/pypath.inputs.lncrnadb.lncrnadb_interactions.rst", "api/pypath.inputs.macrophage.rst", "api/pypath.inputs.macrophage.macrophage_interactions.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mimp.rst", "api/pypath.inputs.mimp.get_kinase_class.rst", "api/pypath.inputs.mimp.mimp_enzyme_substrate.rst", "api/pypath.inputs.mimp.mimp_interactions.rst", "api/pypath.inputs.mir2disease.rst", "api/pypath.inputs.mir2disease.mir2disease_interactions.rst", "api/pypath.inputs.mirbase.rst", "api/pypath.inputs.mirbase.get_mirbase_aliases.rst", "api/pypath.inputs.mirbase.mirbase_ids.rst", "api/pypath.inputs.mirbase.mirbase_mature.rst", "api/pypath.inputs.mirbase.mirbase_mature_all.rst", "api/pypath.inputs.mirbase.mirbase_precursor.rst", "api/pypath.inputs.mirbase.mirbase_precursor_all.rst", "api/pypath.inputs.mirbase.mirbase_precursor_to_mature.rst", "api/pypath.inputs.mirdeathdb.rst", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions.rst", "api/pypath.inputs.mirecords.rst", "api/pypath.inputs.mirecords.mirecords_interactions.rst", "api/pypath.inputs.mirtarbase.rst", "api/pypath.inputs.mirtarbase.mirtarbase_interactions.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.mppi.rst", "api/pypath.inputs.mppi.mppi_interactions.rst", "api/pypath.inputs.ncrdeathdb.rst", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions.rst", "api/pypath.inputs.negatome.rst", "api/pypath.inputs.negatome.negatome_interactions.rst", "api/pypath.inputs.netbiol.rst", "api/pypath.inputs.netbiol.arn_interactions.rst", "api/pypath.inputs.netbiol.nrf2ome_interactions.rst", "api/pypath.inputs.offsides.rst", "api/pypath.inputs.offsides.offsides_side_effects.rst", "api/pypath.inputs.ontology.rst", "api/pypath.inputs.ontology.listof_ontologies.rst", "api/pypath.inputs.ontology.ontology.rst", "api/pypath.inputs.opentargets.rst", "api/pypath.inputs.opentargets.opentargets_adverse_reactions.rst", "api/pypath.inputs.opentargets.opentargets_baseline_expression.rst", "api/pypath.inputs.opentargets.opentargets_direct_score.rst", "api/pypath.inputs.opentargets.opentargets_general.rst", "api/pypath.inputs.opentargets.opentargets_indirect_score.rst", "api/pypath.inputs.oreganno.rst", "api/pypath.inputs.oreganno.oreganno_interactions.rst", "api/pypath.inputs.oreganno.oreganno_raw.rst", "api/pypath.inputs.pathophenodb.rst", "api/pypath.inputs.pathophenodb.DiseasePathogen.rst", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions.rst", "api/pypath.inputs.pathwaycommons.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions.rst", "api/pypath.inputs.pazar.rst", "api/pypath.inputs.pazar.pazar_interactions.rst", "api/pypath.inputs.pdzbase.rst", "api/pypath.inputs.pdzbase.pdzbase_interactions.rst", "api/pypath.inputs.pepcyber.rst", "api/pypath.inputs.pepcyber.pepcyber_details.rst", "api/pypath.inputs.pepcyber.pepcyber_interactions.rst", "api/pypath.inputs.pfam.rst", "api/pypath.inputs.pfam.pfam_names.rst", "api/pypath.inputs.pfam.pfam_pdb.rst", "api/pypath.inputs.pfam.pfam_regions.rst", "api/pypath.inputs.pfam.pfam_uniprot.rst", "api/pypath.inputs.pharos.rst", "api/pypath.inputs.pharos.pharos_diseases.rst", "api/pypath.inputs.pharos.pharos_expression.rst", "api/pypath.inputs.pharos.pharos_general.rst", "api/pypath.inputs.pharos.pharos_gtex.rst", "api/pypath.inputs.pharos.pharos_ligands.rst", "api/pypath.inputs.pharos.pharos_orthologs.rst", "api/pypath.inputs.pharos.pharos_targets.rst", "api/pypath.inputs.pharos.pharos_xrefs.rst", "api/pypath.inputs.phobius.rst", "api/pypath.inputs.phobius.phobius_annotations.rst", "api/pypath.inputs.phosphoelm.rst", "api/pypath.inputs.phosphoelm.phosphoelm_enzyme_substrate.rst", "api/pypath.inputs.phosphoelm.phosphoelm_interactions.rst", "api/pypath.inputs.phosphoelm.phosphoelm_kinases.rst", "api/pypath.inputs.phosphonetworks.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions.rst", "api/pypath.inputs.phosphopoint.rst", "api/pypath.inputs.phosphopoint.phosphopoint_directions.rst", "api/pypath.inputs.phosphopoint.phosphopoint_interactions.rst", "api/pypath.inputs.pro.rst", "api/pypath.inputs.pro.get_pro.rst", "api/pypath.inputs.pro.pro_mapping.rst", "api/pypath.inputs.proteins.rst", "api/pypath.inputs.proteins.variants.rst", "api/pypath.inputs.protmapper.rst", "api/pypath.inputs.protmapper.get_protmapper.rst", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate.rst", "api/pypath.inputs.protmapper.protmapper_interactions.rst", "api/pypath.inputs.pubchem.rst", "api/pypath.inputs.pubchem.pubchem_mapping.rst", "api/pypath.inputs.pubmed.rst", "api/pypath.inputs.pubmed.get_pmid.rst", "api/pypath.inputs.pubmed.get_pubmeds.rst", "api/pypath.inputs.pubmed.only_pmids.rst", "api/pypath.inputs.pubmed.open_pubmed.rst", "api/pypath.inputs.pubmed.pmids_dict.rst", "api/pypath.inputs.pubmed.pmids_list.rst", "api/pypath.inputs.ramp.rst", "api/pypath.inputs.ramp.ramp_id_types.rst", "api/pypath.inputs.ramp.ramp_id_types_2.rst", "api/pypath.inputs.ramp.ramp_list_tables.rst", "api/pypath.inputs.ramp.ramp_mapping.rst", "api/pypath.inputs.ramp.ramp_raw.rst", "api/pypath.inputs.ramp.ramp_show_tables.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.reaction.rst", "api/pypath.inputs.reaction.acsn_biopax.rst", "api/pypath.inputs.reaction.acsn_interactions_2.rst", "api/pypath.inputs.reaction.get_acsn_effects.rst", "api/pypath.inputs.reaction.get_controls.rst", "api/pypath.inputs.reaction.get_interactions.rst", "api/pypath.inputs.reaction.get_reactions.rst", "api/pypath.inputs.reaction.get_soup.rst", "api/pypath.inputs.reaction.panther_biopax.rst", "api/pypath.inputs.reaction.panther_interactions.rst", "api/pypath.inputs.reaction.pid_biopax.rst", "api/pypath.inputs.reaction.pid_interactions.rst", "api/pypath.inputs.reaction.process_complex.rst", "api/pypath.inputs.reaction.process_controls.rst", "api/pypath.inputs.reaction.process_reactions.rst", "api/pypath.inputs.reaction.reactions_biopax.rst", "api/pypath.inputs.reaction.reactome_biopax.rst", "api/pypath.inputs.reaction.reactome_bs.rst", "api/pypath.inputs.reaction.reactome_interactions.rst", "api/pypath.inputs.reaction.reactome_sbml.rst", "api/pypath.inputs.reactome.rst", "api/pypath.inputs.reactome.reactome_chebis.rst", "api/pypath.inputs.reactome.reactome_pathway_relations.rst", "api/pypath.inputs.reactome.reactome_pathways.rst", "api/pypath.inputs.reactome.reactome_uniprots.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.inputs.sider.rst", "api/pypath.inputs.sider.SiderDrug.rst", "api/pypath.inputs.sider.SiderSideeffect.rst", "api/pypath.inputs.sider.SiderSideeffectMeddra.rst", "api/pypath.inputs.sider.SiderSideeffetFrequency.rst", "api/pypath.inputs.sider.sider_drug_names.rst", "api/pypath.inputs.sider.sider_meddra_side_effects.rst", "api/pypath.inputs.sider.sider_side_effect_frequencies.rst", "api/pypath.inputs.sider.sider_side_effects.rst", "api/pypath.inputs.stitch.rst", "api/pypath.inputs.stitch.stitch_actions_interactions.rst", "api/pypath.inputs.stitch.stitch_links_interactions.rst", "api/pypath.inputs.string.rst", "api/pypath.inputs.string.string_effects.rst", "api/pypath.inputs.string.string_links_interactions.rst", "api/pypath.inputs.string.string_physical_interactions.rst", "api/pypath.inputs.string.string_species.rst", "api/pypath.inputs.switches_elm.rst", "api/pypath.inputs.switches_elm.get_switches_elm.rst", "api/pypath.inputs.transmir.rst", "api/pypath.inputs.transmir.transmir_interactions.rst", "api/pypath.inputs.trip.rst", "api/pypath.inputs.trip.take_a_trip.rst", "api/pypath.inputs.trip.trip_find_uniprot.rst", "api/pypath.inputs.trip.trip_get_uniprot.rst", "api/pypath.inputs.trip.trip_interactions.rst", "api/pypath.inputs.trip.trip_process.rst", "api/pypath.inputs.trip.trip_process_table.rst", "api/pypath.inputs.trrust.rst", "api/pypath.inputs.trrust.trrust_human.rst", "api/pypath.inputs.trrust.trrust_interactions.rst", "api/pypath.inputs.trrust.trrust_mouse.rst", "api/pypath.inputs.twosides.rst", "api/pypath.inputs.twosides.twosides_interactions.rst", "api/pypath.inputs.unichem.rst", "api/pypath.inputs.unichem.info.rst", "api/pypath.inputs.unichem.unichem_info.rst", "api/pypath.inputs.unichem.unichem_mapping.rst", "api/pypath.inputs.unichem.unichem_sources.rst", "api/pypath.inputs.uniprot.rst", "api/pypath.inputs.uniprot.Taxon.rst", "api/pypath.inputs.uniprot.UniprotQuery.rst", "api/pypath.inputs.uniprot.UniprotRecordHistory.rst", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol.rst", "api/pypath.inputs.uniprot.get_uniprot_sec.rst", "api/pypath.inputs.uniprot.idmapping_idtypes.rst", "api/pypath.inputs.uniprot.protein_datasheet.rst", "api/pypath.inputs.uniprot.query_builder.rst", "api/pypath.inputs.uniprot.swissprot_deleted.rst", "api/pypath.inputs.uniprot.trembl_deleted.rst", "api/pypath.inputs.uniprot.uniprot_data.rst", "api/pypath.inputs.uniprot.uniprot_deleted.rst", "api/pypath.inputs.uniprot.uniprot_families.rst", "api/pypath.inputs.uniprot.uniprot_history.rst", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet.rst", "api/pypath.inputs.uniprot.uniprot_keywords.rst", "api/pypath.inputs.uniprot.uniprot_locations.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2.rst", "api/pypath.inputs.uniprot.uniprot_preprocess.rst", "api/pypath.inputs.uniprot.uniprot_query.rst", "api/pypath.inputs.uniprot.uniprot_recent_version.rst", "api/pypath.inputs.uniprot.uniprot_taxonomy.rst", "api/pypath.inputs.uniprot.uniprot_tissues.rst", "api/pypath.inputs.uniprot.uniprot_topology.rst", "api/pypath.inputs.uniprot.valid_uniprot.rst", "api/pypath.inputs.uniprot_db.rst", "api/pypath.inputs.uniprot_db.all_swissprots.rst", "api/pypath.inputs.uniprot_db.all_trembls.rst", "api/pypath.inputs.uniprot_db.all_uniprots.rst", "api/pypath.inputs.uniprot_db.get_db.rst", "api/pypath.inputs.uniprot_db.init_db.rst", "api/pypath.inputs.uniprot_db.is_swissprot.rst", "api/pypath.inputs.uniprot_db.is_trembl.rst", "api/pypath.inputs.uniprot_db.is_uniprot.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.HmdbMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.RampMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.refs.rst", "api/pypath.internals.refs.Reference.rst", "api/pypath.internals.refs.get_pubmed_data.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkDataset.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.data_formats.rst", "api/pypath.resources.data_formats.activity_flow.rst", "api/pypath.resources.data_formats.enzyme_substrate.rst", "api/pypath.resources.data_formats.interaction.rst", "api/pypath.resources.data_formats.interaction_htp.rst", "api/pypath.resources.data_formats.pathway_bad.rst", "api/pypath.resources.data_formats.reaction_pc.rst", "api/pypath.resources.data_formats.transcription_deprecated.rst", "api/pypath.resources.data_formats.transcription_onebyone.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.resources.network.rst", "api/pypath.resources.network.choose_dataset.rst", "api/pypath.resources.network.dataset_priority.rst", "api/pypath.resources.network.dorothea_expand_levels.rst", "api/pypath.resources.urls.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.cache_path.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.settings.rst", "api/pypath.utils.rst", "api/pypath.utils.go.rst", "api/pypath.utils.go.GOAnnotation.rst", "api/pypath.utils.go.GOCustomAnnotation.rst", "api/pypath.utils.go.GeneOntology.rst", "api/pypath.utils.go.annotate.rst", "api/pypath.utils.go.get_db.rst", "api/pypath.utils.go.init_db.rst", "api/pypath.utils.go.load_go.rst", "api/pypath.utils.pdb.rst", "api/pypath.utils.pdb.Residue.rst", "api/pypath.utils.pdb.ResidueMapper.rst", "api/pypath.utils.pdb.Segment.rst", "api/pypath.utils.pdb.residue_pdb.rst", "api/pypath.utils.proteomicsdb.rst", "api/pypath.utils.proteomicsdb.ProteomicsDB.rst", "api/pypath.utils.reflists.rst", "api/pypath.utils.reflists.ReferenceListManager.rst", "api/pypath.utils.reflists.check.rst", "api/pypath.utils.reflists.get_manager.rst", "api/pypath.utils.reflists.get_reflist.rst", "api/pypath.utils.reflists.init.rst", "api/pypath.utils.reflists.is_not.rst", "api/pypath.utils.reflists.select.rst", "api/pypath.utils.residues.rst", "api/pypath.utils.residues.ResidueMapper.rst", "api/pypath.utils.seq.rst", "api/pypath.utils.seq.Pfam.rst", "api/pypath.utils.seq.Resource.rst", "api/pypath.utils.seq.Seq.rst", "api/pypath.utils.seq.get_isoforms.rst", "api/pypath.utils.seq.read_fasta.rst", "api/pypath.utils.seq.swissprot_seq.rst", "api/pypath.utils.taxonomy.rst", "api/pypath.utils.taxonomy.ensure_common_name.rst", "api/pypath.utils.taxonomy.ensure_ensembl_name.rst", "api/pypath.utils.taxonomy.ensure_latin_name.rst", "api/pypath.utils.taxonomy.ensure_ncbi_tax_id.rst", "api/pypath.utils.taxonomy.get_db.rst", "api/pypath.utils.taxonomy.init_db.rst", "api/pypath.utils.taxonomy.short_latin_names.rst", "api/pypath.utils.taxonomy.shorten_latin_name.rst", "api/pypath.utils.taxonomy.taxid_from_common_name.rst", "api/pypath.utils.taxonomy.taxid_from_dbptm_taxon_name.rst", "api/pypath.utils.taxonomy.taxid_from_ensembl_name.rst", "api/pypath.utils.taxonomy.taxid_from_latin_name.rst", "api/pypath.utils.taxonomy.taxid_from_nonstandard.rst", "api/pypath.utils.taxonomy.uniprot_taxid.rst", "api/pypath.utils.unichem.rst", "api/pypath.utils.unichem.Unichem.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.abs", "pypath.inputs.abs.abs_interactions", "pypath.inputs.acsn", "pypath.inputs.acsn.acsn_interactions", "pypath.inputs.acsn.acsn_interactions_sif", "pypath.inputs.adrecs", "pypath.inputs.adrecs.AdrecsAdr", "pypath.inputs.adrecs.AdrecsChildParent", "pypath.inputs.adrecs.AdrecsDrug", "pypath.inputs.adrecs.AdrecsDrugAdr", "pypath.inputs.adrecs.AdrecsTerm", "pypath.inputs.adrecs.adrecs_adr_ontology", "pypath.inputs.adrecs.adrecs_drug_adr", "pypath.inputs.adrecs.adrecs_drug_identifiers", "pypath.inputs.adrecs.adrecs_hierarchy", "pypath.inputs.biogrid", "pypath.inputs.biogrid.biogrid_all_interactions", "pypath.inputs.biogrid.biogrid_interactions", "pypath.inputs.biomart", "pypath.inputs.biomart.biomart_homology", "pypath.inputs.biomart.biomart_microarray", "pypath.inputs.biomart.biomart_microarray_types", "pypath.inputs.biomart.biomart_microarrays", "pypath.inputs.biomart.biomart_query", "pypath.inputs.biomodels", "pypath.inputs.biomodels.download_single_model", "pypath.inputs.biomodels.get_all_models", "pypath.inputs.biomodels.get_biomodels", "pypath.inputs.biomodels.get_biomodels_req", "pypath.inputs.biomodels.get_single_model", "pypath.inputs.ca1", "pypath.inputs.ca1.ca1_interactions", "pypath.inputs.cancercellmap", "pypath.inputs.cancercellmap.ccmap_interactions", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.chembl", "pypath.inputs.chembl.chembl_activities", "pypath.inputs.chembl.chembl_assays", "pypath.inputs.chembl.chembl_documents", "pypath.inputs.chembl.chembl_drug_indications", "pypath.inputs.chembl.chembl_mechanisms", "pypath.inputs.chembl.chembl_molecules", "pypath.inputs.chembl.chembl_targets", "pypath.inputs.clinvar", "pypath.inputs.clinvar.clinvar_citations", "pypath.inputs.clinvar.clinvar_raw", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.compath", "pypath.inputs.compath.compath_mappings", "pypath.inputs.cpdb", "pypath.inputs.cpdb.cpdb_interactions", "pypath.inputs.cpdb.cpdb_interactions_ltp", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ctdbase", "pypath.inputs.ctdbase.ctdbase_relations", "pypath.inputs.ctdbase.ctdbase_vocabulary", "pypath.inputs.dbptm", "pypath.inputs.dbptm.dbptm_enzyme_substrate", "pypath.inputs.dbptm.dbptm_enzyme_substrate_old", "pypath.inputs.dbptm.dbptm_interactions", "pypath.inputs.ddinter", "pypath.inputs.ddinter.ddinter_drug_interactions", "pypath.inputs.ddinter.ddinter_identifiers", "pypath.inputs.ddinter.ddinter_interactions", "pypath.inputs.ddinter.ddinter_mappings", "pypath.inputs.ddinter.ddinter_n_drugs", "pypath.inputs.deathdomain", "pypath.inputs.deathdomain.deathdomain_interactions", "pypath.inputs.deathdomain.deathdomain_interactions_rescued", "pypath.inputs.dip", "pypath.inputs.dip.dip_interactions", "pypath.inputs.dip.dip_login", "pypath.inputs.diseases", "pypath.inputs.diseases.diseases_general", "pypath.inputs.diseases.experiments_filtered", "pypath.inputs.diseases.experiments_full", "pypath.inputs.diseases.knowledge_filtered", "pypath.inputs.diseases.knowledge_full", "pypath.inputs.diseases.textmining_filtered", "pypath.inputs.diseases.textmining_full", "pypath.inputs.dorothea", "pypath.inputs.dorothea.DorotheaInteraction", "pypath.inputs.dorothea.dorothea_full_raw", "pypath.inputs.dorothea.dorothea_interactions", "pypath.inputs.dorothea.dorothea_interactions_old", "pypath.inputs.dorothea.dorothea_old_csv", "pypath.inputs.dorothea.dorothea_rda_raw", "pypath.inputs.dorothea.get_dorothea_old", "pypath.inputs.dorothea.get_tfregulons", "pypath.inputs.dorothea.tfregulons_interactions", "pypath.inputs.dorothea.tfregulons_interactions_old", "pypath.inputs.drugbank", "pypath.inputs.drugbank.DrugbankFull", "pypath.inputs.drugbank.drugbank_annotations", "pypath.inputs.drugbank.drugbank_drugs", "pypath.inputs.drugbank.drugbank_interactions", "pypath.inputs.drugbank.drugbank_mapping", "pypath.inputs.drugbank.drugbank_raw_interactions", "pypath.inputs.drugcentral", "pypath.inputs.drugcentral.drugcentral_drugs", "pypath.inputs.drugcentral.drugcentral_interactions", "pypath.inputs.drugcentral.drugcentral_mapping", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.elm", "pypath.inputs.elm.elm_classes", "pypath.inputs.elm.elm_domains", "pypath.inputs.elm.elm_instances", "pypath.inputs.elm.elm_interactions", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.encode", "pypath.inputs.encode.encode_tf_mirna_interactions", "pypath.inputs.ensembl", "pypath.inputs.ensembl.ensembl_organisms", "pypath.inputs.eutils", "pypath.inputs.eutils.esummary", "pypath.inputs.exocarta", "pypath.inputs.exocarta.get_exocarta", "pypath.inputs.exocarta.get_vesiclepedia", "pypath.inputs.expasy", "pypath.inputs.expasy.expasy_enzyme_classes", "pypath.inputs.expasy.expasy_enzymes", "pypath.inputs.genecards", "pypath.inputs.genecards.genecards_datasheet", "pypath.inputs.genecards.genecards_soup", "pypath.inputs.genecards.genecards_summaries", "pypath.inputs.get_method", "pypath.inputs.go", "pypath.inputs.go.get_go_desc", "pypath.inputs.go.get_go_quick", "pypath.inputs.go.get_goslim", "pypath.inputs.go.go_ancestors", "pypath.inputs.go.go_ancestors_goose", "pypath.inputs.go.go_ancestors_quickgo", "pypath.inputs.go.go_annotations", "pypath.inputs.go.go_annotations_all", "pypath.inputs.go.go_annotations_goa", "pypath.inputs.go.go_annotations_goose", "pypath.inputs.go.go_annotations_quickgo", "pypath.inputs.go.go_annotations_solr", "pypath.inputs.go.go_annotations_uniprot", "pypath.inputs.go.go_descendants", "pypath.inputs.go.go_descendants_goose", "pypath.inputs.go.go_descendants_quickgo", "pypath.inputs.go.go_descendants_to_ancestors", "pypath.inputs.go.go_terms", "pypath.inputs.go.go_terms_goose", "pypath.inputs.go.go_terms_quickgo", "pypath.inputs.go.go_terms_solr", "pypath.inputs.gpcrdb", "pypath.inputs.gpcrdb.gpcrdb_annotations", "pypath.inputs.graphviz", "pypath.inputs.graphviz.graphviz_attrs", "pypath.inputs.hmdb", "pypath.inputs.hmdb.common", "pypath.inputs.hmdb.common.iter", "pypath.inputs.hmdb.common.mapping", "pypath.inputs.hmdb.common.raw", "pypath.inputs.hmdb.common.table", "pypath.inputs.hmdb.metabolites", "pypath.inputs.hmdb.metabolites.iter", "pypath.inputs.hmdb.metabolites.mapping", "pypath.inputs.hmdb.metabolites.raw", "pypath.inputs.hmdb.metabolites.table", "pypath.inputs.hmdb.proteins", "pypath.inputs.hmdb.proteins.iter", "pypath.inputs.hmdb.proteins.mapping", "pypath.inputs.hmdb.proteins.raw", "pypath.inputs.hmdb.proteins.table", "pypath.inputs.hmdb.schema", "pypath.inputs.hmdb.schema.common", "pypath.inputs.hmdb.schema.common.Field", "pypath.inputs.hmdb.schema.metabolites", "pypath.inputs.hmdb.schema.proteins", "pypath.inputs.hmdb.structures", "pypath.inputs.hmdb.structures.sdf", "pypath.inputs.hmdb.visual", "pypath.inputs.hmdb.visual.show_structure", "pypath.inputs.hmdb.visual.structure_svg", "pypath.inputs.hmdb.xml", "pypath.inputs.hmdb.xml.hmdb_xml", "pypath.inputs.hprd", "pypath.inputs.hprd.get_hprd", "pypath.inputs.hprd.hprd_enzyme_substrate", "pypath.inputs.hprd.hprd_interactions", "pypath.inputs.hprd.hprd_interactions_htp", "pypath.inputs.htri", "pypath.inputs.htri.htri_interactions", "pypath.inputs.humsavar", "pypath.inputs.humsavar.uniprot_variants", "pypath.inputs.i3d", "pypath.inputs.i3d.get_i3d", "pypath.inputs.ielm", "pypath.inputs.ielm.get_ielm", "pypath.inputs.ielm.get_ielm_huge", "pypath.inputs.imweb", "pypath.inputs.imweb.get_imweb", "pypath.inputs.imweb.get_imweb_req", "pypath.inputs.innatedb", "pypath.inputs.innatedb.innatedb_interactions", "pypath.inputs.instruct", "pypath.inputs.instruct.get_instruct", "pypath.inputs.instruct.get_instruct_offsets", "pypath.inputs.intact", "pypath.inputs.intact.intact_interactions", "pypath.inputs.interpro", "pypath.inputs.interpro.interpro2go_annotations", "pypath.inputs.interpro.interpro_annotations", "pypath.inputs.interpro.interpro_entries", "pypath.inputs.interpro.interpro_xrefs", "pypath.inputs.ipi", "pypath.inputs.ipi.ipi_uniprot", "pypath.inputs.kegg_api", "pypath.inputs.kegg_api.disease_to_drug", "pypath.inputs.kegg_api.disease_to_gene", "pypath.inputs.kegg_api.disease_to_pathway", "pypath.inputs.kegg_api.drug_to_disease", "pypath.inputs.kegg_api.drug_to_drug", "pypath.inputs.kegg_api.drug_to_gene", "pypath.inputs.kegg_api.drug_to_pathway", "pypath.inputs.kegg_api.gene_to_disease", "pypath.inputs.kegg_api.gene_to_drug", "pypath.inputs.kegg_api.gene_to_pathway", "pypath.inputs.kegg_api.kegg_drug_to_chebi", "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "pypath.inputs.kegg_api.kegg_gene_to_uniprot", "pypath.inputs.kegg_api.pathway_to_disease", "pypath.inputs.kegg_api.pathway_to_drug", "pypath.inputs.kegg_api.pathway_to_gene", "pypath.inputs.kirouac2010", "pypath.inputs.kirouac2010.kirouac2010_interactions", "pypath.inputs.laudanna", "pypath.inputs.laudanna.laudanna_directions", "pypath.inputs.laudanna.laudanna_effects", "pypath.inputs.lincs", "pypath.inputs.lincs.lincs_compounds", "pypath.inputs.lncdisease", "pypath.inputs.lncdisease.lncdisease_interactions", "pypath.inputs.lncrnadb", "pypath.inputs.lncrnadb.lncrnadb_interactions", "pypath.inputs.macrophage", "pypath.inputs.macrophage.macrophage_interactions", "pypath.inputs.main", "pypath.inputs.mimp", "pypath.inputs.mimp.get_kinase_class", "pypath.inputs.mimp.mimp_enzyme_substrate", "pypath.inputs.mimp.mimp_interactions", "pypath.inputs.mir2disease", "pypath.inputs.mir2disease.mir2disease_interactions", "pypath.inputs.mirbase", "pypath.inputs.mirbase.get_mirbase_aliases", "pypath.inputs.mirbase.mirbase_ids", "pypath.inputs.mirbase.mirbase_mature", "pypath.inputs.mirbase.mirbase_mature_all", "pypath.inputs.mirbase.mirbase_precursor", "pypath.inputs.mirbase.mirbase_precursor_all", "pypath.inputs.mirbase.mirbase_precursor_to_mature", "pypath.inputs.mirdeathdb", "pypath.inputs.mirdeathdb.mirdeathdb_interactions", "pypath.inputs.mirecords", "pypath.inputs.mirecords.mirecords_interactions", "pypath.inputs.mirtarbase", "pypath.inputs.mirtarbase.mirtarbase_interactions", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.mppi", "pypath.inputs.mppi.mppi_interactions", "pypath.inputs.ncrdeathdb", "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "pypath.inputs.negatome", "pypath.inputs.negatome.negatome_interactions", "pypath.inputs.netbiol", "pypath.inputs.netbiol.arn_interactions", "pypath.inputs.netbiol.nrf2ome_interactions", "pypath.inputs.offsides", "pypath.inputs.offsides.offsides_side_effects", "pypath.inputs.ontology", "pypath.inputs.ontology.listof_ontologies", "pypath.inputs.ontology.ontology", "pypath.inputs.opentargets", "pypath.inputs.opentargets.opentargets_adverse_reactions", "pypath.inputs.opentargets.opentargets_baseline_expression", "pypath.inputs.opentargets.opentargets_direct_score", "pypath.inputs.opentargets.opentargets_general", "pypath.inputs.opentargets.opentargets_indirect_score", "pypath.inputs.oreganno", "pypath.inputs.oreganno.oreganno_interactions", "pypath.inputs.oreganno.oreganno_raw", "pypath.inputs.pathophenodb", "pypath.inputs.pathophenodb.DiseasePathogen", "pypath.inputs.pathophenodb.disease_pathogen_interactions", "pypath.inputs.pathwaycommons", "pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "pypath.inputs.pathwaycommons.PathwayCommonsResource", "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "pypath.inputs.pazar", "pypath.inputs.pazar.pazar_interactions", "pypath.inputs.pdzbase", "pypath.inputs.pdzbase.pdzbase_interactions", "pypath.inputs.pepcyber", "pypath.inputs.pepcyber.pepcyber_details", "pypath.inputs.pepcyber.pepcyber_interactions", "pypath.inputs.pfam", "pypath.inputs.pfam.pfam_names", "pypath.inputs.pfam.pfam_pdb", "pypath.inputs.pfam.pfam_regions", "pypath.inputs.pfam.pfam_uniprot", "pypath.inputs.pharos", "pypath.inputs.pharos.pharos_diseases", "pypath.inputs.pharos.pharos_expression", "pypath.inputs.pharos.pharos_general", "pypath.inputs.pharos.pharos_gtex", "pypath.inputs.pharos.pharos_ligands", "pypath.inputs.pharos.pharos_orthologs", "pypath.inputs.pharos.pharos_targets", "pypath.inputs.pharos.pharos_xrefs", "pypath.inputs.phobius", "pypath.inputs.phobius.phobius_annotations", "pypath.inputs.phosphoelm", "pypath.inputs.phosphoelm.phosphoelm_enzyme_substrate", "pypath.inputs.phosphoelm.phosphoelm_interactions", "pypath.inputs.phosphoelm.phosphoelm_kinases", "pypath.inputs.phosphonetworks", "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "pypath.inputs.phosphonetworks.phosphonetworks_interactions", "pypath.inputs.phosphopoint", "pypath.inputs.phosphopoint.phosphopoint_directions", "pypath.inputs.phosphopoint.phosphopoint_interactions", "pypath.inputs.pro", "pypath.inputs.pro.get_pro", "pypath.inputs.pro.pro_mapping", "pypath.inputs.proteins", "pypath.inputs.proteins.variants", "pypath.inputs.protmapper", "pypath.inputs.protmapper.get_protmapper", "pypath.inputs.protmapper.protmapper_enzyme_substrate", "pypath.inputs.protmapper.protmapper_interactions", "pypath.inputs.pubchem", "pypath.inputs.pubchem.pubchem_mapping", "pypath.inputs.pubmed", "pypath.inputs.pubmed.get_pmid", "pypath.inputs.pubmed.get_pubmeds", "pypath.inputs.pubmed.only_pmids", "pypath.inputs.pubmed.open_pubmed", "pypath.inputs.pubmed.pmids_dict", "pypath.inputs.pubmed.pmids_list", "pypath.inputs.ramp", "pypath.inputs.ramp.ramp_id_types", "pypath.inputs.ramp.ramp_id_types_2", "pypath.inputs.ramp.ramp_list_tables", "pypath.inputs.ramp.ramp_mapping", "pypath.inputs.ramp.ramp_raw", "pypath.inputs.ramp.ramp_show_tables", "pypath.inputs.rdata", "pypath.inputs.reaction", "pypath.inputs.reaction.acsn_biopax", "pypath.inputs.reaction.acsn_interactions_2", "pypath.inputs.reaction.get_acsn_effects", "pypath.inputs.reaction.get_controls", "pypath.inputs.reaction.get_interactions", "pypath.inputs.reaction.get_reactions", "pypath.inputs.reaction.get_soup", "pypath.inputs.reaction.panther_biopax", "pypath.inputs.reaction.panther_interactions", "pypath.inputs.reaction.pid_biopax", "pypath.inputs.reaction.pid_interactions", "pypath.inputs.reaction.process_complex", "pypath.inputs.reaction.process_controls", "pypath.inputs.reaction.process_reactions", "pypath.inputs.reaction.reactions_biopax", "pypath.inputs.reaction.reactome_biopax", "pypath.inputs.reaction.reactome_bs", "pypath.inputs.reaction.reactome_interactions", "pypath.inputs.reaction.reactome_sbml", "pypath.inputs.reactome", "pypath.inputs.reactome.reactome_chebis", "pypath.inputs.reactome.reactome_pathway_relations", "pypath.inputs.reactome.reactome_pathways", "pypath.inputs.reactome.reactome_uniprots", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.inputs.sider", "pypath.inputs.sider.SiderDrug", "pypath.inputs.sider.SiderSideeffect", "pypath.inputs.sider.SiderSideeffectMeddra", "pypath.inputs.sider.SiderSideeffetFrequency", "pypath.inputs.sider.sider_drug_names", "pypath.inputs.sider.sider_meddra_side_effects", "pypath.inputs.sider.sider_side_effect_frequencies", "pypath.inputs.sider.sider_side_effects", "pypath.inputs.stitch", "pypath.inputs.stitch.stitch_actions_interactions", "pypath.inputs.stitch.stitch_links_interactions", "pypath.inputs.string", "pypath.inputs.string.string_effects", "pypath.inputs.string.string_links_interactions", "pypath.inputs.string.string_physical_interactions", "pypath.inputs.string.string_species", "pypath.inputs.switches_elm", "pypath.inputs.switches_elm.get_switches_elm", "pypath.inputs.transmir", "pypath.inputs.transmir.transmir_interactions", "pypath.inputs.trip", "pypath.inputs.trip.take_a_trip", "pypath.inputs.trip.trip_find_uniprot", "pypath.inputs.trip.trip_get_uniprot", "pypath.inputs.trip.trip_interactions", "pypath.inputs.trip.trip_process", "pypath.inputs.trip.trip_process_table", "pypath.inputs.trrust", "pypath.inputs.trrust.trrust_human", "pypath.inputs.trrust.trrust_interactions", "pypath.inputs.trrust.trrust_mouse", "pypath.inputs.twosides", "pypath.inputs.twosides.twosides_interactions", "pypath.inputs.unichem", "pypath.inputs.unichem.info", "pypath.inputs.unichem.unichem_info", "pypath.inputs.unichem.unichem_mapping", "pypath.inputs.unichem.unichem_sources", "pypath.inputs.uniprot", "pypath.inputs.uniprot.Taxon", "pypath.inputs.uniprot.UniprotQuery", "pypath.inputs.uniprot.UniprotRecordHistory", "pypath.inputs.uniprot.deleted_uniprot_genesymbol", "pypath.inputs.uniprot.get_uniprot_sec", "pypath.inputs.uniprot.idmapping_idtypes", "pypath.inputs.uniprot.protein_datasheet", "pypath.inputs.uniprot.query_builder", "pypath.inputs.uniprot.swissprot_deleted", "pypath.inputs.uniprot.trembl_deleted", "pypath.inputs.uniprot.uniprot_data", "pypath.inputs.uniprot.uniprot_deleted", "pypath.inputs.uniprot.uniprot_families", "pypath.inputs.uniprot.uniprot_history", "pypath.inputs.uniprot.uniprot_history_recent_datasheet", "pypath.inputs.uniprot.uniprot_keywords", "pypath.inputs.uniprot.uniprot_locations", "pypath.inputs.uniprot.uniprot_ncbi_taxids", "pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "pypath.inputs.uniprot.uniprot_preprocess", "pypath.inputs.uniprot.uniprot_query", "pypath.inputs.uniprot.uniprot_recent_version", "pypath.inputs.uniprot.uniprot_taxonomy", "pypath.inputs.uniprot.uniprot_tissues", "pypath.inputs.uniprot.uniprot_topology", "pypath.inputs.uniprot.valid_uniprot", "pypath.inputs.uniprot_db", "pypath.inputs.uniprot_db.all_swissprots", "pypath.inputs.uniprot_db.all_trembls", "pypath.inputs.uniprot_db.all_uniprots", "pypath.inputs.uniprot_db.get_db", "pypath.inputs.uniprot_db.init_db", "pypath.inputs.uniprot_db.is_swissprot", "pypath.inputs.uniprot_db.is_trembl", "pypath.inputs.uniprot_db.is_uniprot", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.HmdbMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.RampMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.refs", "pypath.internals.refs.Reference", "pypath.internals.refs.get_pubmed_data", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkDataset", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.data_formats", "pypath.resources.data_formats.activity_flow", "pypath.resources.data_formats.enzyme_substrate", "pypath.resources.data_formats.interaction", "pypath.resources.data_formats.interaction_htp", "pypath.resources.data_formats.pathway_bad", "pypath.resources.data_formats.reaction_pc", "pypath.resources.data_formats.transcription_deprecated", "pypath.resources.data_formats.transcription_onebyone", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.resources.network", "pypath.resources.network.choose_dataset", "pypath.resources.network.dataset_priority", "pypath.resources.network.dorothea_expand_levels", "pypath.resources.urls", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.cache_path", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.settings", "pypath.utils", "pypath.utils.go", "pypath.utils.go.GOAnnotation", "pypath.utils.go.GOCustomAnnotation", "pypath.utils.go.GeneOntology", "pypath.utils.go.annotate", "pypath.utils.go.get_db", "pypath.utils.go.init_db", "pypath.utils.go.load_go", "pypath.utils.pdb", "pypath.utils.pdb.Residue", "pypath.utils.pdb.ResidueMapper", "pypath.utils.pdb.Segment", "pypath.utils.pdb.residue_pdb", "pypath.utils.proteomicsdb", "pypath.utils.proteomicsdb.ProteomicsDB", "pypath.utils.reflists", "pypath.utils.reflists.ReferenceListManager", "pypath.utils.reflists.check", "pypath.utils.reflists.get_manager", "pypath.utils.reflists.get_reflist", "pypath.utils.reflists.init", "pypath.utils.reflists.is_not", "pypath.utils.reflists.select", "pypath.utils.residues", "pypath.utils.residues.ResidueMapper", "pypath.utils.seq", "pypath.utils.seq.Pfam", "pypath.utils.seq.Resource", "pypath.utils.seq.Seq", "pypath.utils.seq.get_isoforms", "pypath.utils.seq.read_fasta", "pypath.utils.seq.swissprot_seq", "pypath.utils.taxonomy", "pypath.utils.taxonomy.ensure_common_name", "pypath.utils.taxonomy.ensure_ensembl_name", "pypath.utils.taxonomy.ensure_latin_name", "pypath.utils.taxonomy.ensure_ncbi_tax_id", "pypath.utils.taxonomy.get_db", "pypath.utils.taxonomy.init_db", "pypath.utils.taxonomy.short_latin_names", "pypath.utils.taxonomy.shorten_latin_name", "pypath.utils.taxonomy.taxid_from_common_name", "pypath.utils.taxonomy.taxid_from_dbptm_taxon_name", "pypath.utils.taxonomy.taxid_from_ensembl_name", "pypath.utils.taxonomy.taxid_from_latin_name", "pypath.utils.taxonomy.taxid_from_nonstandard", "pypath.utils.taxonomy.uniprot_taxid", "pypath.utils.unichem", "pypath.utils.unichem.Unichem", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 16, 17, 18, 19, 20, 47, 50, 70, 72, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 126, 134, 156, 157, 158, 161, 176, 177, 181, 182, 186, 187, 213, 228, 300, 301, 302, 303, 304, 309, 312, 313, 338, 347, 371, 374, 381, 384, 415, 416, 417, 418, 422, 425, 428, 432, 454, 455, 456, 459, 461, 464, 474, 486, 487, 488, 491, 498, 502, 503, 506, 507, 508, 509, 517, 518, 520, 529, 539, 540, 546, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 580, 586, 588, 591, 593, 594, 605, 610, 617, 625, 633, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 653, 654], "python": [0, 34, 182, 187, 591, 650, 651, 653, 654], "modul": [0, 1, 4, 6, 9, 34, 70, 145, 172, 175, 180, 185, 188, 371, 436, 489, 491, 498, 502, 515, 522, 527, 529, 531, 540, 542, 548, 551, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 576, 578, 579, 580, 583, 587, 591, 593, 626, 629, 630, 643, 649, 652, 653, 654], "build": [0, 461, 649, 650, 653], "molecular": [0, 175, 180, 185, 432, 649, 650, 653], "biologi": [0, 650, 651], "databas": [0, 7, 11, 21, 22, 23, 54, 56, 65, 79, 81, 83, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 108, 110, 112, 132, 134, 139, 140, 228, 236, 267, 290, 295, 303, 306, 307, 333, 334, 340, 343, 347, 367, 380, 381, 382, 384, 385, 419, 420, 421, 422, 436, 444, 447, 456, 494, 499, 524, 525, 534, 536, 537, 556, 582, 583, 613, 649, 653, 654], "With": [0, 650], "you": [0, 175, 176, 180, 181, 185, 186, 384, 503, 529, 556, 557, 560, 566, 571, 580, 591, 633, 649, 652, 654], "can": [0, 3, 32, 175, 177, 180, 182, 185, 187, 210, 298, 384, 425, 428, 429, 455, 461, 464, 474, 503, 529, 551, 556, 578, 580, 587, 630, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648, 650, 651, 652, 653, 654], "access": [0, 4, 70, 110, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 182, 187, 336, 479, 503, 540, 571, 578, 580, 649, 650, 653], "process": [0, 13, 26, 27, 41, 43, 102, 103, 108, 175, 176, 177, 180, 181, 182, 185, 186, 187, 202, 203, 251, 252, 269, 381, 390, 402, 405, 439, 441, 455, 458, 459, 461, 464, 474, 515, 529, 550, 551, 556, 578, 591, 650, 653], "combin": [0, 101, 102, 103, 105, 107, 108, 425, 428, 650, 651, 654], "more": [0, 26, 27, 32, 33, 70, 121, 134, 156, 161, 374, 384, 421, 450, 452, 455, 461, 464, 474, 529, 578, 587, 591, 625, 637, 638, 639, 640, 641, 642, 650, 651, 653, 654], "than": [0, 26, 27, 134, 175, 180, 185, 374, 421, 650, 651, 654], "170": 0, "public": [0, 101, 107, 401], "resourc": [0, 5, 67, 68, 70, 101, 102, 103, 105, 107, 108, 144, 312, 321, 432, 450, 451, 496, 556, 603, 649, 650, 653, 654], "interact": [0, 11, 13, 14, 26, 27, 41, 43, 67, 68, 75, 76, 79, 81, 85, 86, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 118, 126, 202, 203, 213, 220, 223, 236, 267, 277, 279, 281, 290, 292, 293, 306, 331, 333, 334, 352, 368, 402, 405, 425, 428, 429, 439, 440, 441, 444, 447, 496, 513, 529, 535, 536, 537, 649, 650, 653], "network": [0, 5, 41, 428, 518, 529, 630, 649, 650, 653], "includ": [0, 6, 13, 30, 32, 33, 36, 47, 104, 106, 118, 153, 155, 177, 182, 187, 297, 298, 338, 352, 428, 429, 440, 455, 461, 464, 474, 491, 498, 502, 529, 534, 536, 537, 578, 580, 651, 653, 654], "annot": [0, 111, 112, 148, 153, 155, 156, 157, 158, 161, 208, 225, 226, 578, 579, 583, 584, 591, 649, 650, 653], "about": [0, 7, 8, 100, 110, 121, 132, 227, 333, 341, 342, 343, 344, 345, 346, 347, 348, 374, 421, 449, 450, 563, 564, 573, 580, 591, 625, 649, 650, 654], "function": [0, 3, 4, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 62, 63, 64, 66, 69, 71, 74, 78, 84, 87, 90, 98, 109, 116, 120, 122, 127, 129, 131, 133, 135, 138, 141, 146, 168, 170, 173, 175, 178, 180, 183, 185, 193, 195, 198, 200, 205, 207, 209, 211, 214, 217, 219, 222, 224, 229, 231, 248, 250, 253, 255, 257, 259, 262, 266, 268, 276, 278, 280, 282, 285, 287, 289, 291, 294, 296, 299, 305, 308, 311, 328, 330, 332, 335, 340, 349, 351, 355, 358, 361, 364, 366, 370, 372, 379, 387, 407, 412, 414, 421, 423, 426, 428, 431, 432, 433, 435, 442, 446, 448, 453, 455, 461, 464, 474, 480, 511, 523, 527, 543, 549, 550, 555, 556, 577, 585, 591, 592, 602, 609, 628, 633, 650, 651, 652, 653, 654], "local": [0, 13, 650, 651, 653, 654], "structur": [0, 117, 176, 181, 186, 196, 197, 220, 228, 455, 461, 464, 474, 587, 625, 645, 647, 648, 649, 650, 653], "other": [0, 3, 61, 158, 161, 175, 180, 185, 337, 338, 339, 491, 494, 498, 499, 501, 502, 533, 556, 580, 591, 605, 613, 650, 654], "properti": [0, 110, 455, 520, 637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "gene": [0, 29, 30, 32, 33, 72, 73, 142, 143, 144, 233, 237, 239, 240, 241, 243, 244, 247, 267, 277, 279, 281, 333, 380, 381, 434, 444, 457, 578, 579, 580, 581, 584, 649, 650, 653, 654], "protein": [0, 113, 115, 136, 137, 142, 143, 148, 156, 157, 174, 175, 176, 177, 213, 220, 223, 226, 290, 292, 333, 334, 362, 425, 428, 429, 441, 464, 493, 496, 498, 500, 591, 602, 603, 604, 605, 649, 650, 653, 654], "also": [0, 7, 177, 182, 187, 213, 518, 630, 651, 654], "provid": [0, 3, 70, 100, 110, 118, 156, 158, 161, 177, 182, 187, 213, 338, 455, 461, 464, 474, 491, 498, 502, 515, 518, 529, 540, 579, 580, 593, 594, 598, 599, 603, 643, 650, 651, 653, 654], "number": [0, 16, 17, 18, 19, 20, 26, 27, 32, 62, 72, 83, 99, 121, 134, 210, 213, 220, 223, 226, 309, 312, 313, 341, 342, 344, 345, 346, 347, 348, 374, 415, 416, 417, 418, 424, 425, 454, 456, 479, 503, 513, 517, 520, 573, 578, 580, 586, 587, 588, 601, 625, 650, 651, 654], "util": [0, 375, 513, 649, 650, 653], "id": [0, 23, 26, 27, 30, 31, 32, 33, 36, 39, 43, 49, 79, 81, 100, 101, 104, 106, 107, 114, 118, 119, 132, 134, 142, 143, 144, 148, 153, 155, 156, 157, 158, 175, 180, 185, 196, 213, 226, 228, 236, 242, 243, 244, 254, 298, 333, 337, 338, 339, 352, 371, 373, 374, 375, 376, 404, 420, 421, 422, 430, 438, 441, 444, 449, 450, 451, 452, 455, 457, 458, 459, 464, 474, 476, 486, 487, 488, 491, 494, 498, 499, 501, 502, 503, 513, 578, 579, 581, 584, 587, 608, 610, 613, 623, 625, 649, 654], "translat": [0, 114, 119, 175, 180, 185, 242, 243, 244, 371, 375, 451, 455, 461, 464, 474, 476, 494, 499, 501, 503, 579, 604, 625, 649, 653, 654], "orthologi": [0, 29, 649, 653], "handl": [0, 556, 613, 650, 651], "taxonomi": [0, 26, 27, 43, 100, 101, 104, 106, 107, 118, 153, 155, 156, 157, 158, 182, 187, 338, 339, 352, 444, 457, 458, 476, 503, 608, 649, 650], "sequenc": [0, 210, 220, 587, 602, 603, 604, 605, 606, 607, 608, 649], "serv": [0, 441, 515, 587, 601, 654], "web": [0, 6, 33, 121, 196, 376, 461, 503, 625, 650, 651, 653], "server": [0, 529, 650, 651, 653, 654], "etc": [0, 175, 180, 185, 551, 650, 651, 653, 654], "member": [0, 1, 2, 4, 6, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 64, 66, 69, 71, 74, 78, 84, 87, 90, 98, 109, 116, 120, 122, 127, 129, 131, 133, 135, 138, 141, 146, 168, 170, 172, 173, 178, 183, 188, 189, 191, 192, 193, 195, 198, 200, 205, 207, 209, 211, 214, 217, 219, 222, 224, 229, 231, 248, 250, 253, 255, 257, 259, 261, 262, 266, 268, 276, 278, 280, 282, 285, 287, 289, 291, 294, 296, 299, 305, 308, 311, 328, 330, 332, 335, 340, 349, 351, 355, 358, 361, 364, 366, 370, 372, 379, 386, 387, 407, 412, 414, 423, 426, 431, 433, 435, 442, 446, 448, 453, 480, 489, 490, 504, 510, 511, 514, 522, 523, 527, 528, 530, 531, 541, 543, 547, 548, 549, 553, 554, 555, 572, 574, 575, 576, 577, 585, 590, 592, 600, 602, 609, 624, 626, 627, 630, 636, 637, 638, 639, 640, 641, 642, 643, 651], "class": [2, 3, 15, 16, 17, 18, 19, 20, 24, 98, 99, 109, 110, 121, 139, 182, 187, 189, 190, 308, 309, 311, 312, 313, 414, 415, 416, 417, 418, 453, 454, 455, 456, 464, 474, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 528, 529, 541, 542, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 577, 578, 579, 580, 585, 586, 587, 588, 590, 591, 592, 593, 600, 601, 602, 603, 604, 605, 624, 625, 627, 628, 629, 630, 631, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654], "none": [3, 5, 26, 27, 32, 33, 47, 59, 62, 63, 65, 67, 70, 88, 104, 106, 110, 111, 112, 113, 114, 115, 118, 121, 128, 136, 137, 145, 149, 154, 156, 157, 160, 162, 175, 176, 177, 180, 181, 182, 185, 186, 187, 196, 197, 212, 213, 236, 297, 298, 321, 338, 339, 343, 365, 368, 380, 381, 384, 385, 391, 393, 405, 424, 436, 455, 461, 464, 474, 483, 484, 485, 488, 492, 493, 495, 496, 497, 498, 500, 502, 503, 505, 513, 515, 516, 518, 519, 521, 529, 542, 546, 552, 556, 557, 561, 562, 573, 578, 579, 580, 582, 583, 587, 591, 593, 594, 596, 598, 599, 603, 604, 610, 625, 628, 629, 651], "kwarg": [3, 5, 70, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 369, 384, 389, 396, 398, 405, 455, 461, 464, 474, 505, 515, 516, 519, 520, 521, 529, 556, 629, 651], "sourc": [3, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 128, 130, 132, 134, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 169, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 190, 194, 196, 197, 199, 201, 202, 203, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 221, 223, 225, 226, 227, 228, 230, 236, 249, 251, 252, 254, 256, 258, 260, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 283, 284, 286, 288, 290, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307, 310, 321, 329, 331, 333, 334, 336, 337, 338, 339, 343, 347, 350, 352, 353, 354, 356, 357, 359, 360, 362, 363, 365, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 513, 515, 516, 518, 519, 520, 521, 524, 525, 526, 529, 540, 542, 544, 545, 546, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 578, 579, 580, 581, 582, 583, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 628, 629, 631, 633, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 653, 654], "base": [3, 16, 17, 18, 19, 20, 99, 101, 102, 103, 105, 107, 108, 110, 190, 309, 312, 313, 367, 415, 416, 417, 418, 454, 455, 456, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 515, 516, 517, 518, 519, 520, 521, 529, 542, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 586, 587, 588, 591, 593, 601, 603, 604, 605, 625, 628, 629, 631, 633, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 653], "object": [3, 4, 60, 62, 110, 143, 190, 403, 404, 406, 455, 495, 496, 500, 505, 507, 512, 513, 518, 521, 529, 532, 533, 534, 535, 536, 537, 538, 539, 546, 556, 558, 573, 578, 579, 580, 581, 584, 591, 601, 604, 605, 608, 625, 628, 631, 633, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 652], "which": [3, 4, 47, 50, 110, 156, 161, 375, 425, 428, 529, 533, 559, 560, 563, 564, 565, 566, 567, 568, 570, 571, 578, 580, 591, 593, 598, 599, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 650, 653, 654], "carri": [3, 651], "custom": [3, 70, 425, 428, 429, 491, 494, 498, 499, 501, 502, 515, 529, 573, 579, 649, 650], "attribut": [3, 16, 17, 18, 19, 20, 33, 36, 47, 99, 171, 208, 251, 252, 309, 312, 313, 415, 416, 417, 418, 454, 455, 456, 464, 474, 496, 503, 505, 506, 507, 508, 509, 512, 516, 517, 518, 519, 520, 521, 529, 531, 556, 557, 578, 580, 581, 583, 584, 586, 588, 625, 637, 638, 639, 640, 641, 642, 651, 654], "data": [3, 5, 7, 13, 21, 22, 23, 29, 32, 35, 47, 48, 50, 51, 52, 53, 54, 56, 60, 61, 62, 65, 79, 81, 82, 86, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 108, 121, 139, 140, 156, 157, 161, 175, 176, 177, 180, 181, 182, 185, 186, 187, 201, 202, 203, 213, 236, 300, 301, 302, 303, 304, 307, 331, 334, 340, 341, 342, 344, 345, 346, 347, 348, 371, 381, 390, 408, 409, 410, 411, 428, 429, 436, 440, 441, 447, 451, 459, 502, 503, 515, 516, 520, 529, 550, 556, 557, 560, 561, 580, 591, 603, 604, 649, 650, 653, 654], "dedic": [3, 651], "dict": [3, 36, 39, 49, 59, 60, 61, 62, 70, 75, 76, 110, 111, 114, 119, 121, 134, 140, 144, 148, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 171, 175, 176, 177, 180, 181, 182, 185, 186, 187, 208, 225, 226, 228, 236, 242, 243, 244, 254, 297, 298, 300, 301, 302, 303, 304, 333, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 352, 365, 371, 374, 382, 383, 384, 406, 419, 422, 430, 440, 441, 451, 452, 455, 459, 461, 464, 474, 476, 518, 529, 546, 579, 591, 607, 608, 616, 651, 653], "under": [3, 505, 651], "__init__": [3, 16, 17, 18, 19, 20, 89, 99, 110, 190, 309, 312, 313, 415, 416, 417, 418, 454, 455, 456, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 515, 516, 517, 518, 519, 520, 521, 529, 542, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 586, 587, 588, 591, 593, 601, 603, 604, 605, 625, 628, 629, 631, 633, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 651], "method": [3, 4, 16, 17, 18, 19, 20, 91, 99, 102, 103, 108, 110, 145, 156, 157, 158, 160, 161, 162, 190, 213, 309, 312, 313, 415, 416, 417, 418, 440, 454, 455, 456, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 515, 516, 517, 518, 519, 520, 521, 529, 542, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 586, 587, 588, 591, 593, 601, 603, 604, 605, 625, 628, 629, 631, 633, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 653], "serial": 3, "gener": [3, 22, 59, 62, 63, 65, 91, 92, 93, 94, 95, 96, 97, 102, 103, 108, 295, 300, 301, 302, 303, 304, 408, 409, 410, 411, 447, 467, 515, 529, 591, 651, 653, 654], "json": [3, 60, 61, 121, 343, 459, 529, 591, 651], "string": [3, 60, 61, 62, 70, 121, 142, 177, 182, 187, 197, 371, 404, 449, 451, 455, 461, 464, 474, 551, 556, 573, 578, 591, 625, 651], "full": [3, 30, 91, 93, 95, 97, 110, 176, 181, 186, 297, 298, 451, 591, 640, 641, 649, 650, 653], "content": [3, 132, 367, 384, 459, 529, 556, 650, 652, 653], "without": [3, 4, 47, 421, 529, 532, 556, 649, 654], "ani": [3, 61, 62, 70, 156, 161, 338, 551, 578, 581, 584, 633, 649, 650, 653, 654], "whitespac": 3, "line": [3, 62, 101, 102, 103, 105, 107, 108, 455, 637, 638, 639, 640, 641, 642, 651], "break": [3, 213], "return": [3, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 65, 70, 72, 73, 75, 76, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 99, 100, 104, 106, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 132, 139, 140, 142, 143, 144, 145, 148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 171, 175, 176, 180, 181, 185, 186, 197, 202, 203, 208, 225, 226, 227, 228, 236, 251, 252, 254, 297, 300, 301, 302, 303, 304, 309, 310, 312, 313, 331, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 352, 367, 371, 375, 383, 384, 390, 403, 406, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 430, 437, 439, 440, 450, 451, 452, 454, 455, 456, 457, 459, 461, 464, 467, 474, 476, 486, 487, 503, 506, 507, 508, 509, 516, 517, 518, 520, 529, 540, 546, 550, 552, 556, 557, 573, 578, 579, 580, 586, 587, 588, 591, 593, 598, 607, 608, 610, 613, 616, 617, 623, 625, 633, 637, 638, 639, 640, 641, 642, 650, 651, 654], "str": [3, 16, 18, 19, 20, 29, 30, 31, 32, 33, 39, 45, 49, 59, 60, 61, 62, 70, 72, 73, 79, 80, 100, 101, 104, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 121, 128, 134, 142, 143, 144, 154, 169, 175, 177, 180, 182, 185, 187, 196, 197, 208, 213, 225, 226, 228, 236, 297, 298, 303, 304, 338, 343, 365, 368, 371, 374, 375, 376, 380, 381, 382, 383, 384, 413, 415, 416, 417, 418, 419, 422, 427, 430, 436, 438, 440, 441, 444, 449, 451, 455, 459, 461, 464, 474, 476, 491, 496, 498, 502, 503, 515, 518, 520, 529, 544, 545, 550, 551, 552, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 578, 579, 580, 587, 591, 608, 610, 616, 617, 625], "The": [3, 30, 45, 50, 65, 91, 96, 97, 100, 110, 111, 114, 119, 121, 134, 156, 161, 176, 181, 186, 197, 213, 254, 298, 338, 339, 343, 347, 371, 381, 383, 405, 409, 410, 413, 425, 428, 429, 437, 438, 449, 455, 459, 461, 464, 474, 503, 513, 520, 529, 540, 542, 551, 556, 557, 573, 579, 580, 583, 587, 593, 625, 629, 633, 637, 638, 639, 640, 641, 642, 648, 649, 650, 653, 654], "update_attr": 3, "updat": [3, 89, 156, 161, 518, 529, 573, 651, 653, 654], "store": [3, 529, 540, 587, 591, 601, 625, 650, 651, 653], "here": [3, 121, 343, 573, 591, 633, 650, 651, 654], "ident": [3, 157, 529, 651], "kei": [3, 30, 32, 36, 49, 62, 70, 114, 119, 121, 140, 144, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 175, 177, 180, 182, 185, 187, 225, 226, 228, 236, 254, 297, 298, 300, 301, 302, 303, 304, 333, 338, 371, 384, 430, 451, 452, 455, 461, 464, 474, 476, 506, 507, 508, 509, 518, 529, 550, 551, 556, 579, 607, 608, 614, 615, 625, 651, 654], "ar": [3, 32, 47, 62, 72, 89, 91, 96, 97, 104, 106, 110, 111, 134, 148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 169, 175, 180, 185, 212, 220, 226, 228, 233, 237, 239, 240, 241, 243, 244, 247, 297, 371, 374, 375, 384, 405, 429, 439, 444, 451, 455, 461, 464, 474, 491, 498, 502, 529, 533, 536, 537, 550, 556, 578, 580, 591, 593, 598, 599, 625, 637, 638, 639, 640, 641, 642, 647, 649, 650, 652, 653, 654], "merg": [3, 651], "us": [3, 4, 33, 34, 36, 39, 101, 102, 103, 105, 107, 108, 114, 119, 175, 176, 177, 180, 181, 182, 185, 186, 187, 213, 298, 300, 301, 302, 303, 304, 367, 371, 375, 384, 425, 428, 429, 440, 491, 498, 502, 503, 505, 529, 533, 550, 551, 556, 562, 566, 571, 578, 579, 587, 601, 625, 630, 633, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 650, 654], "share": [3, 505, 529, 651, 653], "common": [3, 36, 610, 613, 649], "combine_attr": 3, "new": [3, 58, 384, 529, 539, 650, 651, 653, 654], "three": [3, 633], "wai": [3, 70, 161, 163, 177, 182, 187, 337, 338, 339, 384, 451, 455, 461, 464, 474, 491, 498, 502, 651], "an": [3, 30, 31, 32, 33, 102, 103, 108, 114, 119, 121, 175, 177, 180, 182, 185, 187, 210, 230, 297, 298, 333, 334, 339, 341, 342, 344, 345, 346, 348, 384, 422, 451, 455, 461, 464, 474, 503, 506, 507, 508, 509, 518, 520, 529, 539, 551, 578, 580, 591, 608, 610, 625, 630, 633, 637, 638, 639, 640, 641, 642, 649, 650, 654], "call": [3, 68, 160, 162, 298, 439, 440, 505, 515, 556, 557, 650, 651], "dictionari": [3, 30, 32, 36, 39, 49, 62, 70, 110, 226, 228, 230, 300, 301, 302, 303, 304, 333, 336, 383, 384, 441, 451, 476, 546, 649, 650], "keyword": [3, 633, 651], "argument": [3, 177, 182, 187, 439, 491, 498, 502, 556, 633, 651], "work": [4, 89, 121, 175, 180, 185, 381, 529, 602, 650, 651, 654], "from": [4, 11, 13, 14, 21, 22, 23, 26, 27, 29, 34, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 65, 67, 68, 70, 75, 76, 79, 81, 85, 86, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 121, 126, 134, 139, 140, 142, 143, 144, 145, 148, 153, 155, 156, 160, 161, 162, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 199, 210, 221, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 249, 251, 252, 267, 269, 277, 279, 281, 290, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307, 310, 331, 333, 334, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 352, 367, 371, 381, 382, 383, 384, 385, 408, 411, 413, 419, 420, 421, 422, 434, 436, 437, 438, 441, 444, 447, 451, 457, 459, 464, 467, 476, 494, 496, 498, 499, 502, 503, 515, 516, 518, 520, 529, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 578, 579, 580, 591, 593, 598, 603, 604, 630, 637, 638, 639, 640, 641, 642, 647, 649, 650, 653, 654], "might": [4, 176, 177, 181, 182, 186, 187, 341, 342, 344, 345, 346, 348, 381, 529, 651, 654], "import": [4, 156, 157, 161, 182, 187, 539, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 650, 651], "main": [4, 35, 628, 650, 651, 654], "df": [5, 182, 187, 651], "entity_typ": [5, 380, 381, 493, 500, 651], "data_model": [5, 496, 519, 520, 529], "interaction_typ": [5, 312, 496, 519, 520, 529, 651], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": [5, 223], "effect": [5, 99, 252, 295, 390, 420, 421, 422, 651], "entiti": [5, 651, 653, 654], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 13, 26, 27, 30, 32, 88, 101, 107, 121, 134, 201, 202, 203, 212, 213, 226, 236, 281, 300, 301, 302, 303, 304, 334, 338, 352, 374, 375, 392, 400, 402, 403, 405, 425, 428, 455, 459, 461, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 496, 503, 524, 556, 557, 558, 560, 562, 564, 566, 568, 571, 573, 578, 580, 582, 583, 591, 608, 617, 651], "remove_loop": 5, "entities_or": 5, "fals": [5, 21, 22, 23, 30, 32, 33, 47, 63, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 105, 107, 108, 113, 115, 118, 121, 139, 140, 148, 153, 155, 158, 175, 180, 185, 212, 223, 236, 281, 297, 300, 301, 302, 303, 304, 321, 334, 347, 363, 368, 383, 384, 408, 409, 410, 411, 422, 439, 440, 459, 464, 476, 486, 487, 492, 496, 500, 516, 524, 529, 540, 556, 559, 560, 561, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 580, 591, 608, 610, 651], "filter": [5, 29, 33, 91, 92, 94, 96, 529, 651], "frame": [5, 21, 22, 23, 65, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 100, 139, 140, 175, 177, 180, 182, 185, 187, 300, 301, 302, 303, 304, 334, 408, 409, 410, 411, 649, 650, 653], "licens": [6, 7, 529, 649, 653], "collect": [6, 34, 91, 114, 119, 121, 175, 180, 185, 529, 651, 654], "page": [6, 45, 121, 529, 650, 651, 652, 654], "compon": [6, 371, 455, 461, 464, 474, 651, 654], "biomart": [6, 651], "goos": [6, 151, 156, 161, 165], "queri": [6, 33, 121, 134, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 212, 213, 236, 298, 338, 339, 343, 347, 374, 436, 455, 461, 464, 474, 503, 591, 625, 649, 653], "templat": [6, 651], "configur": [6, 651], "file": [6, 13, 34, 35, 39, 43, 45, 60, 61, 62, 63, 70, 72, 73, 102, 103, 108, 110, 114, 157, 176, 194, 197, 199, 334, 338, 371, 402, 403, 406, 413, 436, 529, 550, 556, 557, 559, 560, 591, 607, 649, 650, 653], "print": [7, 8, 449, 561, 562, 563, 564, 565, 566, 625, 651], "copyright": [7, 651], "point": [7, 290, 384, 455, 464, 474, 529, 650, 651], "further": [7, 70, 220, 440, 587, 591, 601, 649, 651, 654], "inform": [7, 8, 34, 55, 110, 227, 295, 333, 367, 419, 420, 421, 422, 449, 450, 452, 529, 565, 566, 573, 625, 649, 654], "loglevel": 8, "9": [8, 99, 649, 650, 651], "basic": [8, 464, 474, 649], "current": [8, 121, 158, 506, 507, 508, 509, 526, 573, 582, 630, 650, 651, 654], "session": [8, 529, 649, 650], "tf": [11, 99, 100, 101, 102, 103, 105, 107, 108, 306, 307, 434, 651, 653, 654], "target": [11, 29, 53, 65, 99, 100, 101, 102, 103, 105, 107, 108, 110, 118, 267, 277, 279, 281, 300, 301, 302, 303, 304, 306, 307, 371, 496, 538, 580, 625, 637, 638, 639, 640, 641, 642, 651, 653, 654], "transcript": [11, 30, 32, 33, 492, 529, 535, 539, 650, 654], "regul": [11, 432, 654], "keep_in_complex_interact": 13, "list": [13, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 41, 43, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 72, 73, 75, 76, 79, 80, 81, 82, 110, 111, 112, 113, 115, 117, 118, 121, 128, 132, 134, 139, 154, 156, 157, 171, 176, 181, 186, 202, 203, 208, 213, 223, 227, 228, 236, 249, 251, 252, 297, 298, 300, 301, 302, 303, 304, 310, 331, 333, 334, 341, 342, 344, 345, 346, 347, 348, 352, 365, 373, 374, 375, 380, 381, 382, 384, 390, 410, 419, 420, 421, 424, 425, 427, 428, 429, 430, 439, 440, 444, 450, 451, 455, 459, 461, 464, 474, 502, 503, 518, 529, 556, 578, 579, 580, 587, 591, 593, 594, 599, 625, 650, 651, 653, 654], "bool": [13, 21, 22, 23, 26, 27, 30, 32, 33, 47, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 105, 107, 108, 113, 115, 118, 121, 134, 139, 140, 158, 175, 180, 185, 213, 223, 226, 236, 297, 300, 301, 302, 303, 304, 334, 338, 343, 347, 352, 375, 383, 384, 408, 409, 410, 411, 422, 425, 428, 440, 459, 464, 476, 502, 503, 529, 578, 580, 591, 608, 610, 617], "whether": [13, 47, 213, 375, 440, 651], "complex": [13, 399, 428, 429, 455, 461, 464, 474, 579, 649, 650, 653], "expans": 13, "retriev": [14, 29, 31, 32, 47, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 83, 91, 101, 102, 103, 105, 107, 108, 112, 115, 118, 121, 136, 137, 142, 143, 144, 145, 158, 197, 208, 230, 267, 277, 279, 281, 295, 310, 333, 340, 341, 342, 343, 344, 345, 346, 347, 348, 383, 384, 419, 420, 421, 422, 447, 457, 464, 467, 503, 578, 582, 591, 651], "sif": [14, 651, 653], "format": [14, 36, 197, 375, 403, 404, 406, 479, 573, 613, 630, 653, 654], "distribut": [14, 650], "offici": [14, 651], "websit": [14, 455, 464, 474], "adr_class": 16, "badd": [16, 18, 20, 24], "namedtupl": [16, 17, 18, 19, 20, 50, 51, 80, 81, 82, 110, 415, 416, 417, 418], "alia": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588, 632, 634, 635], "field": [16, 17, 18, 19, 20, 29, 59, 60, 62, 70, 72, 99, 101, 107, 110, 112, 121, 154, 176, 177, 181, 182, 186, 187, 283, 284, 297, 298, 309, 312, 313, 365, 415, 416, 417, 418, 420, 454, 455, 456, 461, 464, 473, 474, 517, 520, 556, 586, 588, 651, 654], "0": [16, 17, 18, 19, 20, 37, 50, 63, 99, 215, 223, 309, 312, 313, 415, 416, 417, 418, 427, 454, 456, 493, 496, 500, 517, 520, 573, 586, 588, 591, 625, 629, 649, 650, 651], "1": [16, 17, 18, 19, 20, 26, 27, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 494, 496, 498, 499, 501, 517, 520, 573, 586, 588, 591, 605, 625, 629, 649, 651, 654], "count": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588, 651], "valu": [16, 17, 18, 19, 20, 30, 32, 36, 47, 49, 61, 62, 70, 99, 114, 119, 136, 137, 144, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 177, 182, 187, 225, 226, 228, 236, 254, 297, 309, 312, 313, 333, 337, 338, 343, 371, 384, 415, 416, 417, 418, 425, 428, 429, 430, 451, 452, 454, 455, 456, 461, 464, 474, 476, 503, 506, 507, 508, 509, 517, 518, 520, 529, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 579, 580, 586, 588, 591, 607, 608, 638, 640, 641, 651, 654], "occurr": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588], "index": [16, 17, 18, 19, 20, 23, 99, 281, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588, 651], "start": [16, 17, 18, 19, 20, 99, 309, 312, 313, 337, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588, 591, 650, 651, 653], "stop": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 559, 563, 586, 588, 651], "9223372036854775807": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588], "first": [16, 17, 18, 19, 20, 70, 99, 110, 139, 175, 176, 177, 180, 181, 182, 185, 186, 187, 309, 312, 313, 336, 337, 339, 383, 415, 416, 417, 418, 454, 456, 502, 517, 520, 540, 586, 588, 591, 608, 650, 651, 653], "rais": [16, 17, 18, 19, 20, 70, 99, 309, 312, 313, 415, 416, 417, 418, 454, 455, 456, 517, 518, 520, 586, 588], "valueerror": [16, 17, 18, 19, 20, 99, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 520, 586, 588], "present": [16, 17, 18, 19, 20, 24, 99, 134, 309, 312, 313, 415, 416, 417, 418, 454, 456, 517, 518, 520, 586, 588, 650, 651], "child": [17, 24, 651], "parent": [17, 24, 371, 580, 651], "adrecsadr": 17, "drug": [18, 19, 21, 22, 23, 50, 53, 79, 80, 81, 82, 83, 110, 111, 112, 113, 115, 117, 118, 119, 208, 232, 235, 236, 237, 238, 240, 242, 246, 295, 300, 419, 420, 421, 422, 447, 625, 651, 653], "synonym": [18, 20, 23, 182, 187, 303, 371, 438, 529, 613, 651], "drugbank": [18, 23, 80, 82], "pubchem_cid": 18, "mesh": [18, 23], "kegg": [18, 23, 65, 101, 107, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 539, 651], "tdd": [18, 23], "3": [18, 19, 20, 62, 99, 139, 171, 309, 312, 418, 454, 455, 456, 461, 464, 474, 520, 586, 588, 628, 649, 650, 651], "6": [18, 99, 223, 456, 649, 651], "5": [18, 99, 177, 182, 187, 456, 628, 649, 650, 651], "4": [18, 20, 99, 309, 456, 520, 588, 628, 633, 645, 648, 649, 651, 654], "2": [18, 19, 20, 62, 99, 148, 309, 312, 313, 333, 416, 417, 418, 454, 456, 517, 518, 520, 586, 588, 591, 633, 645, 648, 649], "7": [18, 43, 99, 177, 182, 187, 456, 649, 650, 651, 654], "drug_badd": 19, "adr_badd": 19, "adr": [19, 21, 22, 303], "adrecs_class": 20, "name": [20, 23, 29, 30, 31, 32, 33, 36, 39, 47, 48, 52, 53, 55, 56, 65, 67, 68, 70, 79, 81, 100, 101, 104, 106, 107, 112, 114, 117, 118, 121, 132, 139, 144, 145, 148, 153, 155, 156, 157, 158, 164, 165, 166, 167, 177, 182, 187, 190, 208, 227, 228, 233, 237, 239, 240, 241, 243, 244, 247, 254, 297, 300, 301, 302, 303, 304, 306, 313, 331, 336, 338, 343, 371, 384, 415, 419, 420, 421, 422, 430, 437, 440, 444, 450, 455, 464, 474, 476, 479, 486, 487, 488, 491, 494, 496, 498, 499, 500, 501, 502, 505, 515, 516, 517, 518, 519, 520, 521, 524, 529, 536, 542, 550, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 581, 584, 587, 593, 594, 598, 599, 604, 608, 610, 613, 616, 617, 629, 649, 652, 654], "meddra": [20, 420, 421, 422], "tupl": [20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 47, 48, 50, 51, 52, 53, 55, 56, 59, 65, 70, 72, 73, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 99, 110, 111, 112, 113, 115, 117, 118, 121, 132, 139, 140, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 177, 182, 187, 208, 223, 225, 227, 236, 249, 254, 295, 297, 298, 306, 307, 309, 310, 312, 313, 331, 334, 338, 365, 404, 408, 409, 410, 411, 419, 420, 421, 422, 424, 425, 427, 428, 429, 447, 450, 454, 455, 456, 459, 461, 464, 474, 517, 518, 551, 556, 578, 580, 586, 587, 588, 591, 605, 633, 637, 638, 639, 640, 641, 642, 645, 648, 651], "return_df": [21, 22, 23, 65, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 139, 140, 175, 180, 185, 300, 301, 302, 303, 304, 383, 408, 409, 410, 411, 651], "adrecsterm": 21, "datafram": [21, 22, 23, 65, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 100, 139, 140, 175, 177, 180, 182, 185, 187, 300, 301, 302, 303, 304, 334, 383, 384, 408, 409, 410, 411, 459, 649, 650], "advers": [21, 295, 300, 447, 651], "reaction": [21, 300, 529, 651, 654], "ontologi": [21, 24, 161, 362, 409, 498, 578, 579, 580, 581, 584, 649, 650, 653], "paramet": [21, 22, 23, 65, 72, 73, 79, 80, 81, 82, 89, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 121, 134, 136, 137, 139, 140, 142, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 169, 175, 176, 177, 180, 181, 182, 185, 186, 187, 196, 197, 212, 213, 300, 301, 302, 303, 304, 341, 342, 343, 344, 345, 346, 347, 348, 352, 368, 374, 383, 384, 408, 409, 410, 411, 422, 436, 444, 455, 458, 459, 461, 464, 474, 476, 491, 494, 496, 498, 499, 501, 502, 503, 513, 529, 542, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 581, 584, 587, 591, 593, 608, 610, 625, 629, 633, 649, 650, 651], "panda": [21, 22, 23, 65, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 100, 139, 300, 301, 302, 303, 304, 334, 383, 384, 408, 409, 410, 411, 591, 649, 650, 653, 654], "term": [21, 24, 148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 225, 228, 298, 578, 579, 580, 651], "adrecsdrugadr": 22, "pd": [22, 65, 91, 92, 93, 94, 95, 96, 97, 140, 180, 182, 185, 187, 300, 301, 302, 303, 304, 384, 408, 409, 410, 411, 651], "pair": [22, 65, 70, 223, 249, 290, 336, 337, 339, 458, 459, 518, 556, 651, 654], "identifi": [23, 24, 30, 32, 36, 62, 79, 80, 82, 110, 112, 114, 115, 119, 134, 175, 180, 185, 196, 197, 223, 371, 380, 381, 383, 451, 455, 457, 459, 460, 464, 467, 468, 475, 476, 551, 580, 593, 594, 598, 599, 625, 649, 650], "iupac": [23, 371, 651], "http": [23, 33, 121, 134, 213, 249, 267, 277, 292, 293, 334, 343, 367, 444, 450, 455, 461, 464, 474, 556, 591, 625, 630, 650, 654], "www": [23, 33, 134, 249, 267, 277, 334, 367, 450, 455, 461, 464, 474, 591, 625, 630, 651], "bio": 23, "add": [23, 210, 529, 581, 584, 650, 651, 653, 654], "org": [23, 33, 171, 249, 267, 292, 293, 334, 367, 455, 461, 464, 474, 503, 591, 630, 651, 654], "jsp": 23, "set": [24, 30, 32, 67, 68, 70, 101, 102, 103, 105, 107, 108, 111, 114, 119, 126, 134, 136, 137, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 175, 180, 185, 208, 213, 220, 225, 226, 337, 338, 339, 368, 371, 374, 380, 381, 383, 419, 422, 436, 451, 455, 459, 476, 491, 496, 498, 502, 503, 506, 507, 508, 509, 515, 516, 518, 529, 534, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 578, 579, 580, 625, 651, 653, 654], "adrecschildpar": 24, "relationship": [24, 118, 161, 163, 310, 649, 650], "between": [24, 65, 175, 180, 185, 242, 243, 244, 292, 336, 337, 339, 383, 425, 428, 458, 633, 638, 640, 641, 650, 651, 653, 654], "repres": [24, 110, 117, 118, 227, 297, 450, 518, 604, 651], "both": [24, 156, 157, 158, 338, 421, 422, 428, 464, 488, 556, 650, 651, 654], "numer": [24, 134, 449, 452, 476, 625, 651], "organ": [26, 27, 29, 30, 31, 32, 43, 75, 76, 88, 100, 101, 104, 106, 107, 118, 132, 136, 137, 147, 148, 153, 154, 155, 156, 157, 158, 159, 169, 218, 223, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 269, 270, 271, 272, 273, 274, 275, 286, 306, 338, 339, 352, 353, 365, 402, 403, 430, 440, 444, 455, 458, 461, 464, 466, 469, 470, 473, 474, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 503, 516, 578, 581, 582, 583, 584, 593, 594, 598, 599, 603, 604, 606, 608, 610, 649, 650, 653, 654], "int": [26, 27, 29, 30, 31, 32, 43, 50, 62, 83, 100, 101, 104, 106, 107, 118, 121, 128, 134, 154, 156, 157, 158, 169, 175, 176, 177, 180, 181, 182, 185, 186, 187, 213, 223, 226, 338, 339, 341, 342, 344, 345, 346, 347, 348, 352, 365, 374, 376, 425, 427, 428, 429, 430, 444, 449, 451, 458, 464, 476, 503, 545, 573, 587, 591, 608, 610, 616, 625], "9606": [26, 27, 29, 30, 31, 32, 43, 75, 76, 88, 100, 101, 104, 106, 107, 136, 137, 147, 148, 156, 157, 158, 159, 169, 218, 223, 226, 269, 270, 271, 272, 273, 274, 275, 286, 306, 338, 339, 352, 365, 402, 403, 425, 427, 428, 429, 455, 458, 461, 464, 466, 469, 470, 473, 474, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 496, 502, 503, 515, 578, 579, 581, 582, 583, 584, 603, 604, 606, 608, 651], "htp_limit": [26, 27], "ltp": [26, 27], "download": [26, 27, 32, 34, 35, 41, 43, 45, 75, 76, 85, 91, 121, 153, 155, 171, 194, 199, 201, 213, 225, 226, 227, 228, 236, 251, 252, 269, 298, 303, 306, 307, 331, 334, 338, 352, 362, 381, 403, 405, 406, 413, 425, 428, 429, 430, 436, 437, 438, 440, 441, 458, 502, 515, 556, 560, 561, 567, 568, 587, 591, 601, 649, 650, 653], "all": [26, 32, 34, 82, 100, 110, 118, 121, 156, 157, 175, 176, 177, 180, 181, 182, 185, 186, 187, 194, 208, 226, 281, 338, 371, 384, 439, 455, 461, 464, 474, 513, 518, 529, 542, 556, 557, 568, 578, 579, 580, 587, 591, 593, 603, 604, 606, 608, 616, 629, 637, 647, 650, 653, 654], "keep": [26, 27, 223, 297, 338, 368, 375, 591, 650, 651], "onli": [26, 27, 47, 70, 72, 100, 101, 102, 103, 105, 107, 108, 113, 115, 121, 169, 175, 176, 177, 180, 181, 182, 185, 186, 187, 220, 223, 226, 352, 368, 375, 455, 461, 464, 474, 491, 498, 502, 518, 529, 536, 539, 540, 556, 557, 565, 570, 580, 591, 608, 617, 649, 650, 653, 654], "low": [26, 27, 68, 352, 536], "throughput": [26, 27, 68, 352, 513, 536, 651], "arg": [26, 27, 30, 31, 32, 33, 39, 45, 47, 50, 60, 67, 68, 70, 100, 110, 111, 112, 113, 114, 115, 118, 119, 121, 226, 228, 233, 236, 237, 239, 240, 241, 243, 244, 247, 297, 298, 334, 338, 339, 371, 413, 425, 428, 429, 449, 451, 520, 550, 580, 587, 625], "ncbi": [26, 27, 43, 100, 101, 104, 106, 107, 118, 134, 153, 155, 156, 157, 158, 243, 338, 339, 352, 375, 444, 457, 458, 476, 503, 513, 608, 610, 613, 623, 649, 650, 654], "exclud": [26, 27, 67, 68, 427, 651], "refer": [26, 27, 112, 158, 213, 228, 290, 306, 333, 455, 461, 464, 474, 496, 513, 529, 532, 533, 536, 537, 570, 571, 593, 594, 599, 649, 650, 654], "cite": [26, 27], "thi": [26, 27, 34, 70, 89, 102, 103, 108, 110, 126, 134, 145, 156, 158, 161, 163, 175, 176, 177, 180, 181, 182, 185, 186, 187, 197, 213, 338, 371, 374, 384, 421, 422, 436, 441, 455, 461, 464, 474, 491, 496, 498, 502, 506, 507, 508, 509, 516, 518, 529, 542, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 579, 583, 587, 591, 593, 601, 605, 625, 628, 629, 630, 633, 637, 638, 639, 640, 641, 642, 643, 650, 651, 653, 654], "physic": [27, 425, 428, 429], "multi": [27, 651, 653], "valid": [27, 50, 210, 281, 368, 455, 506, 507, 508, 509], "source_organ": 29, "target_organ": 29, "10090": [29, 169, 455, 461, 464, 474, 650, 651, 654], "extra_field": 29, "iter": [29, 134, 427, 455, 464, 467, 474, 518, 529, 573, 580, 603, 604, 651], "external_gene_nam": 29, "ensembl": [29, 30, 32, 33, 650, 651], "have": [29, 158, 425, 428, 503, 529, 536, 560, 566, 571, 578, 591, 650, 651, 653, 654], "orthologu": 29, "homologi": [29, 649, 651, 654], "relat": [29, 47, 72, 115, 132, 157, 160, 162, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 580, 650, 651, 654], "array_typ": 30, "peptid": [30, 32, 33, 651], "microarrai": [30, 31, 32, 491, 651], "probe": [30, 32, 491, 651], "map": [30, 32, 65, 80, 82, 210, 230, 269, 336, 337, 338, 339, 383, 408, 411, 458, 459, 491, 498, 502, 503, 518, 587, 601, 637, 638, 639, 640, 641, 642, 645, 647, 648, 650, 651, 653], "model": [30, 32, 34, 35, 36, 39, 529], "shown": [30, 303, 438, 651], "webpag": [30, 45, 85, 413, 436, 437, 438, 441, 591, 651, 654], "correspond": [30, 112, 373, 455, 464, 474, 506, 507, 508, 509, 518, 579, 587, 601, 651], "code": [30, 153, 155, 156, 157, 158, 164, 165, 166, 167, 182, 187, 452, 645, 647, 648, 651, 653], "For": [30, 32, 62, 72, 101, 102, 103, 105, 107, 108, 298, 373, 451, 452, 455, 461, 464, 474, 486, 487, 503, 505, 513, 529, 550, 578, 579, 580, 587, 591, 613, 616, 617, 623, 625, 650, 651, 654], "avail": [30, 31, 34, 36, 70, 100, 101, 107, 114, 119, 297, 298, 334, 381, 444, 455, 461, 464, 474, 503, 591, 625, 650, 651, 654], "see": [30, 101, 102, 103, 105, 107, 108, 175, 176, 180, 181, 185, 186, 368, 439, 450, 451, 452, 455, 461, 464, 474, 566, 578, 625, 630, 633, 645, 647, 648, 650, 651, 654], "biomart_microarray_typ": 30, "A": [30, 32, 36, 67, 68, 70, 79, 100, 101, 102, 103, 105, 107, 108, 110, 121, 134, 142, 143, 144, 176, 181, 186, 226, 227, 228, 236, 333, 336, 337, 339, 343, 371, 383, 420, 450, 451, 452, 455, 461, 464, 474, 476, 518, 520, 539, 550, 578, 579, 587, 591, 608, 625, 651, 653, 654], "type": [31, 32, 72, 111, 114, 119, 136, 137, 175, 180, 185, 213, 228, 321, 333, 368, 371, 380, 381, 383, 393, 420, 450, 451, 452, 455, 459, 491, 494, 498, 499, 501, 502, 503, 529, 556, 557, 580, 625, 649, 650, 651], "vendor": 32, "multipl": [32, 101, 102, 103, 105, 107, 108, 177, 182, 187, 213, 579, 650, 651, 654], "arrai": [32, 177, 182, 187, 529, 651], "one": [32, 63, 70, 79, 121, 156, 157, 158, 164, 165, 166, 167, 176, 177, 181, 182, 186, 187, 212, 213, 227, 341, 342, 344, 345, 346, 347, 348, 375, 438, 441, 449, 450, 455, 464, 474, 491, 494, 498, 499, 501, 502, 503, 513, 529, 578, 580, 587, 591, 603, 604, 608, 625, 633, 640, 641, 650, 654], "option": [32, 156, 157, 175, 177, 180, 182, 185, 187, 197, 384, 587, 591, 605, 608, 651, 654], "limit": [32, 213, 425, 428, 429, 651], "note": [32, 102, 103, 108, 175, 180, 185, 341, 342, 344, 345, 346, 348, 529, 651, 654], "depend": [32, 176, 181, 186, 651, 653], "take": [32, 341, 342, 344, 345, 346, 347, 348, 591, 633, 650, 651], "minut": [32, 650, 651], "One": [32, 33, 72, 73, 134, 374, 384, 441, 464, 474, 587, 625, 651], "mean": [32, 177, 182, 187, 220, 381, 516, 529, 550, 591, 651], "human": [32, 100, 101, 104, 106, 107, 153, 154, 155, 156, 157, 158, 169, 208, 336, 403, 406, 439, 440, 444, 464, 494, 649, 650, 654], "possibl": [32, 136, 137, 371, 580, 591, 613, 649, 651], "affi": [32, 651], "illumina": 32, "agil": [32, 651], "codelink": 32, "phalanx": 32, "attr": [33, 529], "dataset": [33, 91, 92, 93, 94, 95, 96, 97, 174, 175, 176, 177, 199, 300, 301, 302, 303, 304, 421, 422, 496, 518, 519, 521, 529, 533, 539, 545, 649, 650], "hsapiens_gene_ensembl": 33, "servic": [33, 121, 161, 297, 298, 371, 459, 503, 625, 650, 651, 653], "martview": 33, "check": [33, 479, 505, 506, 507, 508, 509, 593, 650, 651, 654], "result": [33, 62, 118, 121, 156, 157, 160, 162, 175, 177, 180, 182, 185, 187, 226, 338, 441, 455, 560, 566, 567, 568, 571, 580, 591, 625, 651], "yield": [33, 157, 177, 182, 187, 295, 306, 307, 404, 405, 447, 455, 458, 605, 651], "request": [33, 121, 134, 213, 297, 374, 556, 557, 651, 654], "each": [33, 59, 62, 110, 112, 117, 176, 177, 181, 182, 186, 187, 213, 227, 228, 297, 333, 337, 347, 450, 455, 546, 579, 591, 650, 651, 653, 654], "record": [33, 47, 48, 52, 53, 83, 121, 134, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 223, 300, 301, 302, 304, 307, 341, 342, 344, 345, 346, 347, 348, 367, 374, 376, 467, 654], "repositori": [34, 653], "bioservic": [34, 36, 39], "individu": [34, 236, 295, 591, 651], "pars": [34, 176, 177, 181, 182, 186, 187, 331, 343, 607, 651], "relev": [34, 35, 651], "enter": 34, "model_id": [35, 39], "singl": [35, 39, 79, 80, 177, 182, 187, 375, 578, 579, 580, 649], "extract": [35, 60, 85, 121, 176, 181, 186, 202, 203, 381, 402, 405, 459, 556, 557, 591, 651], "integr": [35, 539, 649, 651, 653], "should": [35, 47, 147, 148, 157, 159, 221, 441, 529, 579, 637, 638, 639, 640, 641, 642, 650, 651, 654], "cach": [35, 134, 212, 213, 334, 338, 374, 381, 403, 441, 556, 559, 560, 561, 562, 563, 564, 567, 568, 587, 601, 649, 650], "fetch": [36, 347, 373, 503, 630, 651], "smbl": 36, "being": [36, 645, 647, 648], "most": [36, 156, 161, 467, 537, 562, 650, 651], "submiss": 36, "modif": [36, 604, 651], "date": [36, 102, 103, 108, 157, 161, 456, 625, 651], "author": [36, 651], "verbos": [37, 215, 563, 564, 651, 653], "get": [39, 156, 158, 161, 210, 503, 518, 556, 580, 591, 649, 651, 654], "contain": [39, 65, 110, 121, 176, 181, 186, 210, 220, 337, 375, 420, 428, 432, 441, 520, 591, 630, 637, 638, 639, 640, 641, 642, 650, 651, 654], "specif": [39, 60, 121, 233, 237, 239, 240, 241, 243, 244, 247, 254, 613, 650, 651, 654], "eg": 39, "descript": [39, 368, 573, 651, 653], "associ": [39, 302, 304, 428, 633, 645, 647, 648, 651], "signal": [41, 295, 447, 649, 654], "ma": 41, "ayan": 41, "2005": [41, 651], "match": [43, 226, 605, 651, 654], "column": [43, 62, 177, 182, 187, 368, 650, 651, 654], "node": [43, 578, 580, 581, 584, 633], "supp_url": 45, "article_url": 45, "supplementari": [45, 367, 368, 413], "materi": [45, 367, 413], "journal": [45, 413, 591], "url": [45, 88, 121, 128, 149, 303, 413, 455, 505, 556, 569, 651, 654], "articl": [45, 277, 444, 651], "path": [45, 70, 114, 197, 413, 436, 529, 550, 551, 552, 556, 650, 651], "standard_rel": 47, "liter": [47, 65, 91, 174, 175, 176, 177, 199, 228, 303, 380, 381, 425, 428, 429, 529], "pchembl_value_non": 47, "activ": [47, 113, 115, 427, 532, 654], "todo": 47, "allow": [47, 529, 651], "must": [47, 177, 182, 187, 529, 633, 651, 654], "pchembl": 47, "standard": [47, 126, 625, 651], "need": [47, 176, 181, 186, 210, 220, 441, 557, 591, 649, 651, 654], "standard_unit": 47, "why": [47, 651], "data_validity_com": 47, "part": [47, 101, 107, 212, 429, 529, 651, 653, 654], "assai": 48, "document": [49, 650, 651, 652], "pubm": [49, 99, 134, 158, 333, 513, 651], "convers": [49, 503, 649, 651, 653], "max_phase_threshold": 50, "indic": [50, 429, 556, 578, 637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "threshold": [50, 424, 651], "maximum": 50, "phase": 50, "mechan": [51, 432, 651], "molecul": [52, 111, 136, 137, 650, 654], "variant": [54, 55, 56, 208, 650, 651], "citat": 55, "csv": [58, 63, 102, 103, 108, 367, 368, 651], "old": [58, 102, 103, 108, 529, 573, 650, 651], "callabl": [59, 121, 365, 515, 529], "glom": [59, 60, 121, 298], "spec": [59, 60, 121, 298], "protect": 59, "coalesc": 59, "io": [60, 61, 121], "arbitrari": [60, 651, 654], "depth": [60, 399], "like": [60, 62, 176, 181, 186, 341, 342, 344, 345, 346, 347, 348, 503, 518, 546, 650, 651], "read": [61, 62, 63, 121, 334, 343, 367, 529, 557, 560, 567, 568, 591, 625, 649, 650, 653], "pass": [61, 439, 455, 461, 464, 474, 503, 591, 651], "through": [61, 513, 650, 651], "col": [62, 628, 651], "fileobject": 62, "sep": [62, 558], "t": [62, 176, 181, 186, 558, 559, 562, 563, 650, 651, 652, 654], "sep2": 62, "rem": 62, "hdr": 62, "encod": [62, 556, 557, 651, 654], "ascii": 62, "tabl": [62, 85, 114, 119, 175, 180, 185, 210, 269, 331, 368, 382, 384, 385, 437, 438, 441, 491, 494, 498, 499, 502, 503, 649, 650, 652, 653], "open": [62, 194, 199, 300, 301, 302, 303, 304, 376, 556, 557, 591, 650, 651], "stringio": 62, "buffer": 62, "separ": [62, 177, 182, 187, 493, 496, 500, 520, 529, 546, 651, 653], "subfield": 62, "prefix": [62, 134, 573, 651], "e": [62, 72, 110, 111, 112, 113, 114, 115, 145, 175, 177, 180, 182, 185, 187, 368, 375, 440, 464, 513, 518, 529, 578, 580, 591, 604, 633, 643, 645, 648, 649, 650, 653, 654], "g": [62, 145, 175, 180, 185, 368, 440, 464, 529, 578, 604, 650, 651, 653, 654], "header": [62, 212, 213, 455, 493, 496, 500, 556, 558, 607, 651], "If": [62, 70, 104, 106, 110, 118, 156, 157, 160, 162, 228, 236, 297, 300, 301, 302, 303, 304, 338, 384, 436, 455, 488, 503, 518, 578, 579, 580, 591, 650, 651, 654], "assum": [62, 70], "remov": [62, 147, 148, 159, 383, 518, 529, 580, 587, 601, 603, 604, 651, 653], "element": [62, 375, 441, 455, 461, 464, 474, 578, 651], "replac": [62, 156, 161, 456, 556, 651], "xls_file": 63, "sheet": [63, 128], "use_openpyxl": 63, "cell_rang": 63, "m": [63, 651], "excel": [63, 651], "xl": 63, "convert": [63, 441, 455, 461, 464, 474, 580, 587, 591, 601, 630, 650, 651], "source_db": 65, "wikipathwai": 65, "reactom": [65, 403, 404, 405, 406], "target_db": 65, "cross": [65, 112, 228], "pathwai": [65, 73, 175, 180, 185, 234, 238, 241, 245, 246, 247, 293, 404, 409, 410, 529, 532, 537, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 650, 651, 654], "propos": 65, "accept": [65, 578, 633, 645, 648, 651, 654], "user": [65, 70, 89, 110, 111, 112, 113, 114, 115, 425, 428, 429, 558, 591, 650, 651], "curat": [65, 72, 99, 101, 102, 103, 105, 107, 108, 126, 267, 277, 279, 281, 290, 292, 293, 536, 537, 654], "across": [65, 651], "specifi": [65, 440, 518, 638, 645, 647, 648], "direct": [65, 251, 302, 338, 496, 534, 537, 578, 580, 637, 638, 639, 640, 641, 642, 649], "consensuspathdb": [67, 68], "cpdb_interact": 68, "hprd": [68, 535, 651], "biogrid": [68, 534, 535, 651], "phosphopoint": 68, "mint": 68, "bind": [68, 334, 425, 428, 578, 651], "intact": [68, 534, 535, 651], "from_fil": 70, "requir": [70, 405, 425, 428, 429, 479, 650, 651], "restrict": [70, 111, 176, 181, 186, 464, 651], "two": [70, 110, 175, 180, 185, 383, 633, 637, 638, 639, 640, 641, 642, 650, 651], "password": [70, 110, 111, 112, 113, 114, 115, 591], "apart": [70, 297, 298, 650, 651], "rest": [70, 121, 150, 152, 157, 160, 162, 164, 166, 455, 461, 464, 474, 654], "ignor": [70, 520, 529], "_credenti": 70, "exist": [70, 290, 384, 436, 550, 552, 556, 557, 561, 582, 651], "its": [70, 112, 145, 157, 337, 455, 461, 464, 474, 550, 552, 563, 564, 578, 580, 581, 584, 617, 623, 645, 647, 648, 651, 653], "locat": [70, 650, 651, 653, 654], "": [70, 110, 236, 295, 297, 447, 503, 518, 520, 566, 650, 651, 653], "default": [70, 110, 134, 156, 157, 158, 176, 181, 186, 213, 297, 298, 300, 301, 302, 303, 304, 347, 374, 384, 436, 455, 461, 464, 474, 518, 529, 539, 540, 545, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 578, 591, 605, 608, 610, 633, 637, 638, 639, 640, 641, 642, 643, 648, 650, 651, 654], "secret": [70, 556, 651, 654], "directori": [70, 338, 552, 650, 651, 653], "unchang": [70, 375, 580], "explicit": 70, "runtimeerror": 70, "relation_typ": 72, "diseas": [72, 73, 232, 233, 234, 235, 236, 239, 245, 302, 304, 309, 310, 341, 347, 365], "those": [72, 375, 578, 651], "directevid": 72, "non": [72, 290, 529, 580, 651], "too": [72, 651], "larg": [72, 405, 534, 556, 557, 591, 650, 651, 653, 654], "follow": [72, 73, 420, 518, 556, 650, 651], "chemical_gen": 72, "chemical_diseas": 72, "disease_pathwai": 72, "chemical_phenotyp": 72, "gene_diseas": 72, "vocabulary_typ": 73, "vocabulari": 73, "chemic": [73, 425, 625], "anatomi": 73, "phenotyp": 73, "enzym": [75, 76, 139, 140, 529, 649, 650, 653], "substrat": [75, 76, 202, 352, 529, 649, 650, 653], "level": [79, 81, 99, 101, 102, 103, 105, 107, 108, 164, 165, 166, 167, 177, 182, 187, 300, 301, 302, 303, 304, 432, 455, 464, 474, 506, 507, 508, 509, 529, 539, 546, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 578, 579, 580, 587, 601, 650, 654], "action": [79, 81], "chembl": [80, 82, 114, 254, 625, 651, 653], "pubchem": [80, 82, 254, 419, 420, 422, 651], "html": [85, 121, 142, 331, 441, 591, 651, 654], "load": [86, 148, 213, 223, 436, 515, 529, 539, 550, 578, 580, 587, 603, 604, 606, 608, 649, 650, 653], "rescu": 86, "core_onli": 88, "direct_onli": 88, "small_scale_onli": 88, "passwd": [89, 110, 111, 112, 113, 114, 115, 558], "doe": [89, 213, 436, 518, 550, 560, 565, 570, 580, 582, 650, 651], "unknown": [89, 496, 500, 651], "reason": [89, 213, 650, 651], "In": [89, 156, 157, 158, 518, 529, 546, 556, 591, 617, 650, 651], "addit": [89, 104, 106, 213, 297, 298, 455, 461, 464, 474, 529, 556, 578, 651, 654], "binary_data": [89, 556], "curl": [89, 591, 654], "ha": [89, 156, 161, 254, 518, 529, 539, 556, 580, 591, 650, 651, 653, 654], "been": [89, 156, 158, 161, 529, 560, 650, 651, 653, 654], "chang": [89, 455, 461, 464, 474, 559, 562, 573, 650, 651], "below": [89, 208, 455, 461, 464, 474, 650, 651], "necessari": [89, 515, 650, 651], "data_origin": 91, "textmin": [91, 96, 97], "knowledg": [91, 94, 95, 290, 367], "experi": [91, 92, 93, 290, 651], "jensen": [91, 92, 93, 94, 95, 96, 97], "lab": [91, 92, 93, 94, 95, 96, 97, 251, 252, 650, 651], "warn": [91, 96, 97, 651], "enorm": [91, 96, 97], "instead": [91, 175, 180, 185, 334, 383, 384, 551, 560, 651, 652, 654], "chipseq": 99, "predict": [99, 101, 102, 103, 105, 107, 108, 213, 439, 440], "coexp": 99, "curated_sourc": 99, "chipseq_sourc": 99, "predicted_sourc": 99, "coexp_sourc": 99, "all_sourc": 99, "kegg_pathwai": [99, 101, 107], "12": [99, 321, 649, 651], "11": [99, 649, 651], "8": [99, 556, 557, 649, 650, 651], "14": [99, 529, 649, 651], "10": [99, 134, 182, 187, 249, 367, 374, 591, 593, 629, 649, 651, 654], "13": [99, 649, 651], "r": [100, 556, 557, 650, 651, 654], "packag": [100, 650, 651], "complet": [100, 347, 455, 461, 464, 474, 617, 650, 651, 653], "detail": [100, 104, 106, 110, 121, 227, 333, 425, 450, 455, 461, 464, 474, 650, 651], "origin": [100, 516, 649, 650, 653], "b": [101, 102, 103, 105, 107, 108, 539, 651], "c": [101, 107, 148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 539, 581, 584, 637, 638, 639, 640, 641, 642, 651], "d": [101, 107, 518, 539, 651], "only_cur": [101, 102, 103, 105, 107, 108], "confidence_pairwis": [101, 107], "regulon": [101, 107, 654], "confid": [101, 102, 103, 105, 107, 108, 425, 428, 429, 539, 546, 651, 654], "literatur": [101, 102, 103, 105, 107, 108, 267, 277, 279, 290, 292, 293, 306, 529, 532, 536, 537, 649, 654], "comprehens": [101, 102, 103, 105, 107, 108, 591, 650, 651, 653, 654], "evid": [101, 102, 103, 105, 107, 108, 153, 155, 309, 333, 368, 425, 428, 651, 653], "chip": [101, 102, 103, 105, 107, 108], "seq": [101, 102, 103, 105, 107, 108, 651], "pwm": [101, 102, 103, 105, 107, 108], "hocomoco": [101, 102, 103, 105, 107, 108], "jaspar": [101, 102, 103, 105, 107, 108], "matric": [101, 102, 103, 105, 107, 108], "gtex": [101, 102, 103, 105, 107, 108, 344, 347], "express": [101, 102, 103, 105, 107, 108, 301, 342, 347, 427, 578, 579, 591, 650, 651, 654], "aracn": [101, 102, 103, 105, 107, 108], "As": [101, 107, 562, 563, 651, 654], "longer": [101, 107, 651], "version": [101, 102, 103, 107, 108, 313, 321, 529, 617, 650, 651, 653], "alwai": [101, 107, 546, 651], "empti": [101, 107, 455, 518, 650, 651], "saezlab": [101, 102, 103, 105, 107, 108, 650], "2018": [102, 103, 108], "up": [102, 103, 108, 157, 161, 437, 438, 441, 515, 587, 601, 603, 604, 605, 625, 651], "pleas": [102, 103, 108, 213, 578, 650, 651], "dorothea_interact": [102, 103, 108], "mous": [104, 106, 169, 444, 649, 650, 651], "support": [104, 106, 156, 161, 169, 220, 650, 651, 653], "credentials_fnam": [110, 111, 112, 113, 114, 115], "wrapper": [110, 518, 556, 573, 591, 651], "around": [110, 337, 338, 339, 518, 556, 573, 649, 650], "xml": [110, 176, 181, 186, 591, 651], "drugbank_drugs_ful": 110, "drugbank_targets_ful": 110, "second": [110, 213, 336, 337, 339, 383, 651], "mail": [110, 111, 112, 113, 114, 115, 591], "address": [110, 111, 112, 113, 114, 115, 591, 651], "regist": [110, 111, 112, 113, 114, 115, 551, 591], "account": [110, 111, 112, 113, 114, 115, 651], "drugbank_external_ids_ful": 110, "extern": [110, 228, 651], "drugbank_properties_ful": 110, "calcul": [110, 220], "statu": [111, 556, 573, 651], "variou": [112, 132, 177, 182, 187, 476, 613, 636, 650, 651], "pharma_act": [113, 115], "pharmacolog": [113, 115], "id_typ": [114, 119, 212, 213, 500, 503, 593, 594, 596, 598, 599, 625, 651], "target_id_typ": [114, 119, 363, 503, 651], "group": [114, 300, 301, 302, 303, 304, 591, 629, 650, 651, 653], "ca": [114, 119, 651], "inchikei": [114, 119, 651], "inchi": [114, 119, 254, 371, 625, 651], "smile": [114, 119, 182, 187, 254, 371, 625, 651], "formula": 114, "kegg_compound": 114, "kegg_drug": 114, "pubchem_compound": 114, "pubchem_subst": 114, "chebi": [114, 242, 254, 408, 651], "pharmgkb": 114, "het": [114, 651], "login": 114, "credenti": 114, "central": [117, 118, 119, 529, 651], "comment": [118, 651], "retain": 118, "inn": 119, "q": [121, 365], "pagin": [121, 651], "page_length": 121, "500": [121, 160, 162, 212, 213, 455, 461, 464, 474, 651], "size_param": 121, "size": [121, 213, 557, 591, 629, 651], "page_param": 121, "offset": [121, 210, 220, 221, 586, 587, 605, 651], "by_pag": 121, "page_field": 121, "total_field": 121, "totalpag": 121, "record_nam": 121, "append": [121, 529], "until": [121, 651, 652], "end": [121, 337, 651], "per": [121, 428, 429, 591], "item": [121, 518, 550, 551, 573, 651], "total": [121, 573, 640, 641], "readthedoc": 121, "en": [121, 651], "latest": [121, 651], "tutori": [121, 650, 651], "downlod": 126, "manual": [126, 536, 537, 651], "gold": 126, "init_url": [128, 556], "taxon": [132, 476, 613, 651], "metadata": [132, 374, 513, 518, 651], "db": [134, 583, 650, 651], "cache_smal": [134, 374], "metainform": 134, "client": [134, 464, 474, 625, 650, 651], "api": [134, 150, 152, 157, 160, 162, 164, 166, 381, 455, 461, 464, 474, 503, 591, 650, 653, 654], "endpoint": [134, 651], "nlm": 134, "nih": [134, 340, 343, 347, 375], "gov": [134, 343], "book": [134, 649, 650], "nbk25499": 134, "chapter4": 134, "interst": 134, "understand": [134, 213, 651], "letter": [134, 156, 157, 158, 164, 165, 166, 167, 651], "strip": [134, 455, 651], "geoprofil": [134, 651], "small": [134, 374, 381, 629, 637, 638, 639, 640, 641, 642, 650, 653], "less": [134, 374, 651], "except": [134, 374, 654], "lower": [134, 164, 165, 166, 167, 374, 422, 610, 651], "mrna": [136, 137, 653, 654], "classif": 139, "digit": 139, "ec": [139, 651], "datasheet": [142, 143, 144, 457], "symbol": [142, 143, 144, 177, 182, 187, 333, 457, 491, 498, 502, 650, 651, 654], "uniprot": [142, 143, 144, 148, 153, 155, 156, 157, 158, 210, 220, 221, 226, 230, 244, 333, 338, 339, 365, 402, 411, 437, 438, 441, 488, 496, 500, 502, 503, 516, 578, 579, 581, 584, 586, 587, 588, 601, 603, 604, 606, 608, 623, 649, 650, 653, 654], "bs4": [143, 404, 437, 441], "beautifulsoup": [143, 404, 437], "summari": [144, 651, 653], "text": [144, 367, 455, 461, 464, 474, 651], "module_nam": 145, "method_nam": 145, "submodul": [145, 650, 651, 653], "uniprot_db": 145, "all_uniprot": [145, 578, 651], "go_id": [147, 651], "deprec": [147, 148, 159], "soon": [147, 148, 159, 651], "slim": 148, "names_onli": 148, "aspect": [148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 578, 580, 581, 584, 651, 654], "f": [148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 518, 581, 584], "p": [148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 581, 584, 651], "quickgo": [148, 150, 152, 157, 160, 161, 162, 164, 166], "ancestor": [150, 151, 152, 163, 578, 580], "where": [150, 151, 152, 160, 161, 162, 164, 165, 166, 167, 228, 520, 556, 637, 638, 639, 640, 641, 642, 651, 654], "cellular_compon": [150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167], "molecular_funct": [150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167], "biological_process": [150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167], "respect": [150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 651], "amigo": [151, 156, 158, 161, 165, 167], "evidence_cod": [153, 155], "goa": [153, 155, 157, 651], "output": [153, 155, 175, 180, 185, 381, 428, 625, 651], "prefer": [156, 157, 158, 161, 371, 650, 651], "recent": [156, 157, 161, 467, 650, 651], "go_annotations_solr": 156, "mysql": [156, 161, 381, 651, 653], "instanc": [156, 161, 437, 529, 540, 542, 556, 557, 571, 573, 582, 587, 593, 598, 629, 633, 650, 651, 654], "sinc": [156, 161, 651], "dec": [156, 161], "2016": [156, 161], "unfortun": [156, 161, 651], "ceas": [156, 161], "flexibl": [156, 161, 529, 651], "highest": [156, 161, 580, 654], "perform": [156, 161, 212, 213, 300, 301, 302, 303, 304, 455, 461, 464, 474, 556, 567, 568, 651], "solr": [156, 158, 161, 167], "far": [156, 161], "same": [156, 161, 175, 177, 180, 182, 185, 187, 212, 381, 441, 451, 455, 461, 464, 474, 491, 496, 498, 502, 516, 529, 651], "featur": [156, 161, 506, 507, 508, 509, 603, 604, 649, 651], "is_a": 157, "part_of": 157, "go_annotations_goa": 157, "contrari": 157, "super": 157, "slow": [157, 381, 556, 651], "otherwis": [157, 226, 228, 297, 459, 518, 651], "befor": [158, 529, 573, 651], "now": [158, 573, 591, 651], "implement": [158, 236, 573, 591, 633, 637, 638, 639, 640, 641, 642, 643, 647, 648, 650, 653, 654], "swissprot": [159, 338, 464, 476, 483, 484, 485, 486, 487, 488, 502, 503, 608, 650, 651], "ye": [159, 503], "quickgo_download_s": [160, 162], "descend": [160, 161, 162, 163, 578, 580], "go_terms_solr": [160, 162], "go_descendants_quickgo": 161, "exampl": [161, 182, 187, 455, 461, 464, 474, 505, 539, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 578, 625, 649, 650], "unabl": 161, "graph": [161, 580, 581, 584, 629, 630, 633, 636, 643, 645, 647, 648, 651, 653], "nice": [161, 651], "desc": 163, "turn": [163, 560, 561, 562], "swap": 163, "upper": [164, 165, 166, 167], "graph_attr": 171, "vertex_attr": 171, "edge_attr": 171, "metabolit": [174, 175, 176, 177, 186, 196, 197, 199, 651, 653], "itert": [174, 179, 184], "over": [174, 179, 184, 455, 467, 603, 604, 653], "id_type_a": [175, 180, 185, 383, 451, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 651], "id_type_b": [175, 180, 185, 383, 451, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 651], "head": [175, 176, 177, 180, 181, 182, 185, 186, 187, 651], "purpos": [175, 180, 185, 505, 529, 651], "weight": [175, 180, 185, 651], "though": [175, 180, 185, 651, 654], "guarante": [175, 180, 185, 651], "meaning": [175, 180, 185], "id_field": [175, 180, 185], "simple_field": [175, 180, 185], "anoth": [175, 177, 180, 182, 185, 187, 578, 625, 650, 651, 654], "n": [175, 176, 177, 180, 181, 182, 185, 186, 187, 651], "peek": [175, 176, 177, 180, 181, 182, 185, 186, 187, 651], "schema": [176, 177, 181, 182, 186, 187, 651], "either": [176, 303, 338, 371, 384, 451, 518, 556, 580, 591, 625, 651, 654], "defin": [176, 181, 186, 337, 425, 428, 429, 503, 529, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 650, 654], "By": [176, 181, 186, 436, 455, 529, 565, 570, 578, 580, 591, 651, 654], "cover": [176, 181, 186, 464, 650, 651], "nearli": [176, 181, 186], "don": [176, 181, 186, 650, 651, 652, 654], "within": [176, 181, 186, 455, 461, 464, 474, 518, 573, 633, 645, 648, 650, 651, 654], "task": [176, 181, 186, 573], "case": [176, 177, 181, 182, 186, 187, 213, 518, 537, 557, 579, 591, 650, 651, 654], "metabolite_schema": 176, "proteins_schema": [176, 186, 651], "creat": [176, 181, 186, 496, 529, 546, 556, 573, 578, 650], "your": [176, 181, 186, 591, 651, 654], "own": [176, 181, 186, 651, 653], "interest": [176, 181, 186, 503, 649, 650, 652], "These": [176, 177, 181, 182, 186, 187, 221, 290, 455, 461, 464, 474, 491, 498, 502, 503, 534, 536, 537, 550, 651, 654], "deepli": [176, 181, 186], "nest": [176, 177, 181, 182, 186, 187, 455, 461, 464, 474, 651], "named_field": [177, 182, 187], "simpl": [177, 182, 187, 455, 461, 464, 474, 529, 650, 651, 654], "altern": [177, 182, 187, 213, 455, 461, 464, 474, 579, 650, 651, 654], "sequeti": [177, 182, 187], "step": [177, 182, 187, 529, 568, 573, 651], "special": [177, 182, 187, 333, 529, 651, 653], "sub": [177, 182, 187], "while": [177, 182, 187, 338, 381, 384, 529, 556, 573, 650, 651], "expand": [177, 182, 187, 651], "row": [177, 182, 187, 421, 651, 654], "Be": [177, 182, 187], "care": [177, 182, 187, 651], "latter": [177, 182, 187, 503, 651], "becaus": [177, 182, 187, 341, 342, 344, 345, 346, 347, 348, 533, 651, 654], "appli": [177, 182, 187, 405, 455, 529, 567, 651], "combinatori": [177, 182, 187, 651], "rown": [177, 182, 187], "alreadi": [177, 182, 187, 381, 441, 529, 539, 580, 651], "35": [177, 182, 187, 651], "excess": [177, 182, 187], "memori": [177, 182, 187, 223, 384, 405, 587, 601, 603, 604, 650, 651, 653], "time": [177, 182, 187, 213, 226, 436, 529, 650, 651], "differ": [177, 182, 187, 455, 503, 529, 546, 650, 651, 653, 654], "top": [177, 182, 187, 300, 301, 302, 303, 304, 455, 464, 474, 524, 651], "metabolites_schema": [181, 651], "block": [182, 187], "hmdb_metabolites_t": 182, "state": [182, 187, 651], "substitu": [182, 187, 651], "proteins_t": [187, 651], "definit": [190, 439, 529, 546, 649, 650, 653], "hmdb_id": [196, 197], "show": [196, 385, 556, 651, 654], "2d": [196, 197, 633], "given": [196, 210, 220, 300, 301, 302, 303, 304, 338, 518, 578, 591, 593, 598, 603, 604, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "browser": [196, 376, 651, 654], "pictur": 197, "svg": 197, "save": [197, 436, 649, 650], "iterpars": 199, "in_vivo": [201, 202, 203], "preprocess": [201, 362, 436, 455, 603, 604, 650], "ptm": [202, 529, 533, 534, 651, 653, 654], "kinas": [202, 352, 455, 461, 464, 474, 651, 654], "missens": 208, "uniprotkb": [208, 226, 363, 651], "swiss": [208, 651], "prot": [208, 651], "interaction3d": 210, "residu": [210, 220, 587, 589, 605, 651], "chain": [210, 220, 337, 586, 587, 589, 651], "pdb": [210, 220, 221, 337, 601, 651, 654], "stuctur": 210, "so": [210, 441, 559, 565, 567, 570, 650, 651], "we": [210, 425, 428, 633, 645, 648, 650, 651, 652, 654], "obtain": [210, 439, 503, 513, 651], "instruct": [210, 651], "pfam": [210, 651], "ppi": [212, 213, 519, 650, 651], "uniprotkb_ac": [212, 213], "mydomain": [212, 213], "hmm": [212, 213], "maxwait": [212, 213], "180": [212, 213], "part_siz": [212, 213], "get_ielm_hug": 212, "domain": [213, 220, 337, 432, 441, 603, 604, 651, 654], "motif": [213, 432, 604, 651], "chunk": [213, 347], "retri": [213, 556], "failur": [213, 649], "reduc": [213, 651], "feedback": 213, "consol": [213, 556, 560, 649], "suppli": [213, 534], "what": [213, 566, 651, 654], "detect": [213, 440], "wait": 213, "everyth": [213, 651], "again": [213, 529, 560, 637, 638, 639, 640, 641, 642, 650, 651], "send": [213, 529, 542, 556, 557, 587, 593, 629, 630], "understood": [221, 633], "miscor": 223, "complex_expans": 223, "only_id": 223, "smaller": [223, 651, 654], "footprint": 223, "go": [225, 228, 566, 650, 651, 653], "entri": [225, 226, 227, 228, 651], "page_s": 226, "200": 226, "review": [226, 455, 461, 464, 466, 469, 470, 473, 474, 477, 478, 503, 608, 651], "tax_id": 226, "thei": [226, 650, 651, 653], "db_type": 228, "join": [236, 651], "asynchron": 236, "els": [236, 518], "them": [236, 529, 591, 650, 651, 654], "togeth": [236, 503, 651], "mutual": 236, "yet": [236, 582, 651, 654], "ligand": [249, 345, 347, 654], "receptor": [249, 654], "kirouac": 249, "et": [249, 367, 591, 651], "al": [249, 367, 591, 651], "2010": 249, "embopress": 249, "doi": [249, 373, 375], "1038": 249, "msb": 249, "71": 249, "signalingflow": 251, "edg": [251, 252, 633, 649], "signalingdirect": 252, "brand": 254, "compani": [254, 651], "compound": [254, 380, 381, 625, 651, 653], "mirna": [267, 277, 279, 281, 434, 538, 650, 653, 654], "natur": [277, 591, 650], "com": [277, 279, 444, 556, 591, 650, 651], "cdd201287": 277, "c1": [279, 651], "accurasci": 279, "strong": [281, 651], "experiment": [281, 651], "cuhk": 281, "edu": 281, "cn": [281, 651], "mirtarbase_2019": 281, "php": [281, 556, 651], "do": [290, 383, 441, 529, 565, 568, 570, 649, 654], "best": [290, 651], "our": [290, 649, 650], "paper": [290, 651, 654], "test": [290, 529, 556, 653], "find": [290, 591, 650, 651], "neg": [290, 529, 651], "outcom": 290, "autophagi": 292, "autophagyregul": 292, "nrf2": [293, 532, 651], "nrf2ome": [293, 651], "side": [295, 420, 421, 422, 651], "off": [295, 561, 573], "label": [295, 421, 422, 451, 452, 491, 498, 503, 506, 507, 508, 509, 520, 529, 542, 550, 556, 557, 579, 587, 593, 625, 629, 633, 637, 638, 639, 640, 641, 642, 651], "mine": [295, 367, 447], "fda": [295, 303, 447], "event": [295, 447], "report": [295, 447, 651], "system": [295, 447, 556, 650, 651], "full_config": 297, "ebi": [297, 298, 450, 625, 650], "lookup": [297, 298], "ones": [297, 298, 580, 587, 601, 651], "config": [297, 551], "extra": 297, "abbrevi": 297, "describ": [297, 455, 461, 464, 474, 625], "ol": 298, "listof_ontologi": 298, "simpli": [298, 651], "section": [298, 591, 651], "respons": [298, 343, 455, 650, 651], "variabl": [300, 301, 302, 303, 304, 343, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651], "baselin": 301, "score": [302, 304, 425, 428, 429, 651], "assoc_direct": 303, "assoc_indirect": 303, "expr": [303, 578], "associationbyoverallindirect": 303, "associationbyoveralldirect": 303, "significantadversedrugreact": 303, "baselineexpress": 303, "shorthand": 303, "indirect": [304, 651], "raw": [307, 367, 384, 459, 591, 603, 604, 645, 647, 648, 650, 651], "disease_id": 309, "pathogen_taxid": 309, "pathogen": [309, 310, 653], "id_a": [312, 651], "id_b": [312, 651], "pc_label": 313, "by_interact": 321, "num": 333, "length": [333, 455, 461, 464, 474, 651], "refseq": 333, "_ref": 333, "hold": [333, 591], "categori": [333, 432, 579, 649, 653, 654], "phosphoprotein": [334, 651], "intermedi": [334, 651], "readabl": [336, 651], "ac": [337, 339, 450, 579, 625, 650, 651], "inner": 337, "posit": [337, 573, 587, 637, 638, 639, 640, 641, 642, 651], "keepfil": 338, "neither": [338, 375, 651], "chunk_siz": [341, 342, 344, 345, 346, 347, 348], "100": [341, 342, 344, 345, 346, 347, 348, 455, 461, 464, 474, 650, 651], "half": [341, 342, 344, 345, 346, 347, 348, 651], "hour": [341, 342, 344, 345, 346, 347, 348, 651], "batch": [341, 342, 344, 345, 346, 347, 348, 503], "better": [341, 342, 344, 345, 346, 347, 348, 518, 651, 653, 654], "stai": [341, 342, 344, 345, 346, 347, 348, 651], "higher": [341, 342, 344, 345, 346, 347, 348, 650], "caus": [341, 342, 344, 345, 346, 347, 348], "timeout": [341, 342, 344, 345, 346, 347, 348, 556], "error": [341, 342, 344, 345, 346, 347, 348, 455, 650, 654], "graphql": [343, 347], "boolean": [343, 496, 651], "ortholog": [346, 347, 650, 651], "xref": [347, 348], "consist": [347, 573, 650, 651], "thousand": [347, 651], "ltp_onli": 352, "homo": [353, 464, 651], "sapien": [353, 464, 651], "uniprot_isoform": 363, "sourcetyp": 365, "mix": [365, 651, 654], "consequencetyp": 365, "feature_field": 365, "dictread": 367, "bachman": 367, "2019": [367, 651], "assembl": 367, "phosphoproteom": 367, "normal": [367, 591, 650, 651], "phosphosit": [367, 651, 653, 654], "biorxiv": 367, "1101": 367, "822668v3": 367, "only_evid": 368, "only_literatur": 368, "nonetyp": [368, 529], "cid": [371, 417, 419, 420, 421, 422], "ftp": [371, 556, 651], "simpler": 371, "lowercas": [371, 610, 651], "sid": 371, "idlist": [373, 375, 377, 378], "pmc": [373, 375], "pmid": [373, 374, 375, 376, 512, 651], "strict": [375, 439, 440, 651], "compli": 375, "attempt": [375, 438, 540, 587, 601, 650, 651], "manuscript": [375, 653], "ramp_id_typ": [381, 651], "former": [381, 503, 651, 653], "dump": [381, 382, 384, 385, 436, 515, 550, 651], "fast": [381, 651], "sql": [381, 382, 384, 385, 651], "huge": [381, 496, 591, 651, 652], "curi": 383, "sqlite": [384, 651], "sqlite3": [384, 651], "connect": [384, 633, 650, 653, 654], "temporari": 384, "acsn": [390, 537], "protein_name_typ": [391, 402], "mandatory_ref": [392, 400], "elem": 394, "cref": 399, "entity_uniprot": [399, 401], "complexvari": 399, "cplex": [399, 651], "stoichiometri": [399, 651], "control": [400, 540, 633, 651, 653], "biopax_fil": 402, "clean": [402, 587, 601, 651], "biopax": [402, 405, 650, 653], "binari": [402, 405, 556], "sbml": [403, 404, 406], "representationa": 404, "pathwaya": 404, "cachefil": [405, 436, 513], "ask": [405, 651], "criteria": 405, "veri": [405, 650, 651, 654], "stringent": 405, "few": [405, 650, 651, 653], "free": [405, 529, 587, 591, 601, 603, 604, 650, 651, 653], "approx": [405, 651], "2g": 405, "hierarchi": 409, "atc": [415, 419], "umls_concept_on_label": [416, 418], "umls_concept_in_meddra": [416, 418], "side_effect": [416, 418], "meddra_id": [417, 420], "side_effect_nam": [417, 420], "frequenc": [418, 421, 422], "float": 418, "uml": [421, 422], "concept": [421, 422, 651], "attent": 421, "sider_side_effect": 421, "20k": 421, "freq": 422, "independ": [422, 651], "coverag": [422, 539, 654], "ncbi_tax_id": [425, 427, 428, 429, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 515, 579, 593, 594, 596, 598, 599, 603, 604, 651, 654], "score_threshold": [425, 427, 428, 429], "highest_confid": [425, 428, 429], "high_confid": [425, 428, 429], "medium_confid": [425, 428, 429], "low_confid": [425, 428, 429], "physical_interaction_scor": [425, 428], "link": 425, "subscor": [425, 428, 429], "interactor": [425, 441], "minimum": [425, 428, 429], "pre": [425, 428, 429, 649], "stimul": [427, 651], "inhibit": [427, 651], "channel": [428, 429, 651, 654], "form": [428, 556], "subnetwork": 429, "tax": [430, 503], "scientif": [430, 613, 649], "switch": 432, "elm": [432, 533], "resolut": 432, "classifi": [432, 651, 654], "accord": [432, 505, 591, 633, 651], "intract": 434, "next": [436, 550, 651], "pickl": [436, 649, 650], "soup": 437, "look": [437, 438, 441, 503, 515, 591, 605], "trip_get_uniprot": 437, "syn": [438, 651], "exclude_method": [439, 440], "infer": [439, 440, 651], "specul": [439, 440], "speci": [439, 440, 651, 653], "trip_process": 439, "dadio": 440, "take_a_trip": 440, "provcess": 440, "discard": 440, "bait": 440, "tab": [441, 455], "intr": 441, "trp_uniprot": 441, "tag": [441, 651], "fill": 441, "twice": 441, "trp": 441, "trrustinteract": 444, "regulatori": [444, 535, 650, 653], "v2": 444, "academ": [444, 505, 529, 651], "oup": 444, "nar": [444, 651], "46": [444, 651], "d1": [444, 651], "d380": 444, "4566018": 444, "safeti": 447, "uk": [450, 625], "ucqueri": [450, 625], "listsourc": [450, 625], "integ": [451, 506, 507, 508, 509, 637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "unichem_sourc": 451, "unichem_info": 452, "ncbi_id": [454, 651], "latin": [454, 616, 617, 651], "english": [454, 610, 613, 651], "latin_synonym": [454, 651], "construct": [455, 556, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648], "readi": [455, 461, 464, 474, 651], "bypass": [455, 461, 464, 474], "concaten": [455, 461, 464, 474], "built": [455, 461, 464, 474, 503, 529, 578, 579, 649, 650], "sever": [455, 461, 464, 474, 650, 651], "query_build": [455, 464, 474, 651], "AND": [455, 461, 464, 474, 578, 591, 651, 654], "organism_id": [455, 461, 464, 474, 651], "abov": [455, 461, 464, 474, 491, 498, 502, 513, 650, 651, 654], "oper": [455, 461, 464, 474, 578, 651], "OR": [455, 461, 464, 474, 578, 651], "10116": [455, 461, 464, 474, 651, 654], "op": [455, 461, 464, 474, 650, 651], "underscor": [455, 461, 464, 474, 520, 529, 651], "mass": [455, 461, 464, 474, 651], "50000": [455, 461, 464, 474, 651], "TO": [455, 461, 464, 474, 651], "lit_author": [455, 461, 464, 474, 651], "huang": [455, 461, 464, 474, 651], "kovac": [455, 461, 464, 474, 651], "_and": [455, 461, 464, 474, 651], "parenthes": [455, 461, 464, 474, 578, 651], "interv": [455, 461, 464, 474, 573], "help": [455, 461, 464, 474, 649], "search": [455, 461, 464, 474, 591, 625], "syntax": [455, 461, 464, 474], "_field_synonym": [455, 464, 474], "return_field": [455, 464, 474], "__iter__": 455, "skip": [455, 628], "linebreak": 455, "split": [455, 653], "fail_on_empti": 455, "name_process": 455, "appropri": [455, 650, 651], "especi": [455, 651, 653], "were": [455, 464, 474, 518, 651], "exactli": [455, 464, 474, 651, 654], "wa": [455, 464, 474, 546, 650, 651], "kind": [455, 464, 474, 651, 654], "previou": [455, 464, 474], "urlencod": 455, "suitabl": [455, 651], "url_plain": 455, "plain": [455, 651], "entry_vers": [456, 651], "sequence_vers": [456, 651], "entry_nam": [456, 651], "replaced_bi": [456, 651], "archiv": [457, 556, 557], "delet": [457, 559, 560, 650, 651, 653], "secondari": [458, 520, 529, 650, 651], "primari": [458, 520, 529, 650, 651], "site": [461, 604, 651, 653], "insert": 461, "confirm": [463, 465], "trembl": [464, 486, 487, 488, 503, 650, 651], "uniprotqueri": [464, 474, 651], "histori": [467, 649], "oldest": [467, 650], "fit": [479, 651], "tell": [486, 487, 488, 578, 580, 651, 654], "consid": [488, 513, 578, 651], "mappinginput": [491, 492, 493, 494, 497, 498, 499, 501, 502, 503], "pro_id_type_a": [491, 498], "pro": [491, 498, 651], "automat": [491, 498, 502, 650, 651, 653], "give": [491, 498, 502, 573, 591, 651], "overrid": [491, 498, 502, 503], "pro_id_type_b": [491, 498], "just": [491, 498, 502, 546, 649], "biomart_id_type_a": 492, "biomart_id_type_b": 492, "input_": 493, "col_a": 493, "col_b": 493, "paramat": [494, 499, 501], "metabolom": [494, 649, 650], "type_": 495, "resource_id_type_a": [495, 651], "resource_id_type_b": [495, 651], "input_method": [495, 515, 516, 651], "id_col_a": [496, 651], "id_col_b": [496, 651], "entity_type_a": 496, "entity_type_b": 496, "is_direct": [496, 651], "sign": [496, 537], "input": [496, 500, 503, 515, 649, 650, 653], "extra_edge_attr": [496, 651], "extra_node_attrs_a": 496, "extra_node_attrs_b": 496, "taxon_a": 496, "taxon_b": 496, "post_transl": [496, 529, 651], "positive_filt": 496, "negative_filt": 496, "mark_sourc": 496, "mark_target": 496, "input_arg": [496, 515, 539], "curl_arg": 496, "must_have_refer": 496, "unique_field": 496, "expand_complex": 496, "allow_loop": [496, 651], "only_default_organ": 496, "vertex": [496, 581, 584, 633, 637, 638, 639, 640, 641, 642, 651], "particular": [496, 505, 651], "vertic": [496, 633, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 651], "fname": [497, 651], "consortium": [498, 651], "ramp": [499, 649], "id_col": 500, "extra_attr": [500, 516, 651], "unichem": [501, 651, 653], "uniprot_id_type_a": 502, "uniprot_id_type_b": 502, "upload": 502, "webservic": [502, 649], "would": [503, 651, 652], "directli": [503, 520, 630, 649, 650, 654], "To": [503, 591, 651, 654], "programmat": [503, 651], "interfac": [503, 650, 651], "slightli": [503, 529], "capabl": 503, "some": [503, 518, 566, 571, 580, 591, 650, 651, 654], "static": [503, 625], "resource_id_typ": 503, "known": [503, 651, 654], "full_nam": [505, 651], "attrib": [505, 529], "enabl": [505, 591, 651], "redistribut": [505, 529, 651, 653], "compat": [505, 529, 653], "alik": [505, 529], "licensefeatur": [506, 508, 509], "classmethod": [506, 507, 508, 509, 556], "check_level": [506, 507, 508, 509], "int_to_level": [506, 507, 508, 509], "nearest": [506, 507, 508, 509], "ordin": [506, 507, 508, 509], "scale": [506, 507, 508, 509, 645, 647, 648, 651], "level_to_int": [506, 507, 508, 509], "to_int": [506, 507, 508, 509], "pp": 513, "htp_threshold": 513, "20": [513, 651], "studi": [513, 650, 651], "high": [513, 651], "data_attr_nam": 515, "logger": [515, 529, 542, 556, 557, 578, 579, 580, 587, 593, 629], "load_data": 515, "_process_method": 515, "set_method": 515, "evidence_typ": [516, 519, 521], "via": [516, 517, 519, 520], "id_type_enzym": [516, 651], "id_type_substr": 516, "organisms_support": 516, "resource_attr": 516, "resourceattribut": [516, 519], "get_via": 516, "copi": [516, 650, 651], "come": [516, 650, 651, 654], "data_typ": [517, 520, 521], "mutablemap": 518, "formerli": [518, 651], "thin": 518, "solut": [518, 651], "organis": 518, "clear": [518, 651], "k": [518, 651], "view": [518, 650], "pop": 518, "v": [518, 651], "found": [518, 587, 651], "keyerror": 518, "popitem": 518, "setdefault": 518, "lack": [518, 533], "networkresourcekeybas": 520, "last": [520, 651], "came": 520, "brows": [526, 649], "logfil": [526, 651], "resource_info_path": 529, "posixpath": 529, "home": [529, 651], "runner": 529, "use_package_path": 529, "aim": [529, 650, 651], "commun": [529, 649, 650, 653], "01": [529, 651], "2020": [529, 651], "initi": [529, 573, 582, 583, 617, 651, 653], "develop": [529, 650], "info": [529, 625, 649, 654], "02": [529, 651], "inherit": [529, 651], "make": [529, 542, 556, 557, 564, 570, 571, 587, 593, 629, 651, 654], "prepend": [529, 542, 556, 557, 587, 593, 629], "messag": [529, 542, 556, 557, 560, 563, 564, 587, 593, 629, 649, 654], "add_resource_attr": 529, "abstractresourc": 529, "It": [529, 550, 556, 557, 630, 650, 651, 654], "modifi": [529, 563], "place": [529, 651], "noth": [529, 560], "collect_interact": 529, "pathway_noref": [529, 651], "pathway_al": [529, 651], "activity_flow": [529, 651], "mirna_target": [529, 651], "dorothea": [529, 546, 653, 654], "tfregulon": [529, 539], "omnipath": [529, 534, 536, 537, 649, 653, 654], "reaction_pc": 529, "enzyme_substr": [529, 651], "extra_direct": 529, "small_molecule_protein": [529, 651], "tf_mirna": [529, 651], "pathwaycommon": [529, 651, 653], "pathwaycommons_transcript": 529, "interaction_htp": 529, "interaction_misc": [529, 651], "ligand_receptor": [529, 651, 653], "lncrna_target": 529, "transcription_onebyon": [529, 651], "transcription_dorothea": 529, "ptm_noref": [529, 651], "ptm_all": [529, 651], "reaction_misc": [529, 651], "post_transcript": 529, "process_descript": 529, "drug_target": 529, "license_purpos": [529, 651], "commerci": 529, "profit": [529, 651], "license_shar": 529, "noderiv": 529, "noshar": 529, "deriv": [529, 637, 647, 651, 654], "license_attrib": 529, "noattrib": 529, "composit": [529, 651, 654], "incld": 529, "mani": [529, 556, 650, 651, 653, 654], "overlap": [529, 637, 638, 639, 640, 641, 642, 651], "among": [529, 651, 654], "safest": 529, "sequenti": 529, "legal": [529, 651], "desir": [529, 573, 637, 638, 639, 640, 641, 642], "condit": [529, 651], "alter": [529, 651], "even": [529, 561, 651, 653, 654], "mention": [529, 651], "who": 529, "networkinput": [529, 532, 533, 534, 535, 536, 537, 538, 539, 651], "__resource__": 529, "whole": [529, 651], "networkresourc": [529, 546, 651], "equal": 529, "incid": 529, "collect_network": [529, 651], "license_filt": 529, "secondary_resourc": 529, "postfix": [529, 651], "tfacts_collectri": 529, "forc": [529, 573, 651], "remove_old": 529, "py": 529, "potenti": [529, 651], "overwrit": 529, "adhesom": [532, 651], "intern": [532, 533, 534, 535, 536, 537, 538, 539, 651, 653], "input_format": [532, 533, 534, 535, 536, 537, 538, 539, 650, 651], "arn": [532, 651], "baccin2019": [532, 651], "ca1": [532, 651], "cellchatdb": [532, 651], "cellink": [532, 651], "cellphonedb": [532, 649], "celltalkdb": [532, 651], "connectomedb": [532, 651], "death": [532, 651], "guide2pharma": [532, 651], "hpmr": [532, 651], "icellnet": [532, 651], "lrdb": [532, 651], "macrophag": [532, 651], "pdz": [532, 651], "ramilowski2015": [532, 651], "scconnect": [532, 651], "signalink3": [532, 651, 654], "signor": [532, 539, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651, 654], "spike": [532, 651, 654], "talklr": [532, 651], "trip": [532, 651], "flow": [532, 654], "dbptm": [533, 651], "depod": [533, 651], "domino": 533, "hprd_p": 533, "iptmnet": [533, 651], "kea": [533, 651], "lmpid": 533, "phelm": 533, "psite": 533, "alz": 534, "ccmap": [534, 535], "dip": [534, 535], "innatedb": [534, 535], "lit17": 534, "matrixdb": [534, 535, 651], "mppi": [534, 535], "netpath": [534, 651], "laudanna_direct": 536, "laudanna_effect": 536, "subset": 536, "undirect": [536, 637, 638, 639, 640, 641, 642, 651], "oreganno_old": 538, "ab": 539, "encode_dist": 539, "encode_prox": 539, "htri": 539, "medicu": 539, "oreganno": 539, "pazar": 539, "trrust": 539, "suffici": 539, "pa": [539, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651], "init_network": [539, 651], "reload": [540, 578, 579, 580, 583, 651], "instanti": [540, 651], "onc": [540, 556, 591, 650, 651], "demand": [540, 651], "license_dir": 542, "dataset_a": 544, "dataset_b": 544, "50": [545, 651], "No": [546, 651], "matter": [546, 650, 651], "actual": [550, 633, 651, 652], "typic": [550, 650, 651], "quicker": 550, "uniqu": [551, 651, 654], "similar": [551, 625, 650, 651, 654], "cache_item": 551, "md5": 551, "hash": [551, 651], "anyth": [551, 559, 562, 580, 633, 645, 648, 651], "cachedir": 552, "ensur": [552, 650, 651], "silent": [556, 591], "post": [556, 604], "req_head": [556, 651], "debug": [556, 565, 566, 571], "outf": [556, 628], "compr": [556, 557], "files_need": [556, 557], "connect_timeout": 556, "ignore_content_length": 556, "init_fun": 556, "get_jsessionid": 556, "init_use_cach": 556, "default_mod": [556, 557], "override_post": 556, "init_head": 556, "return_head": 556, "compress": [556, 557], "write_cach": 556, "force_quot": 556, "sftp_user": 556, "sftp_passwd": 556, "sftp_passwd_fil": 556, "sftp_port": 556, "22": [556, 558, 651, 654], "sftp_host": 556, "sftp_ask": 556, "setup": [556, 568, 651], "cache_dir": 556, "bypass_url_encod": 556, "empty_attempt_again": 556, "keep_fail": 556, "alpn": 556, "http2": 556, "fileopen": 556, "pycurl": [556, 651], "vast": [556, 651], "amount": [556, 651], "cooki": 556, "param": [556, 591, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648], "multipart": 556, "quot": 556, "redirect": 556, "pointer": [556, 557], "gzip": [556, 557], "tar": [556, 557], "gz": [556, 557], "zip": [556, 557], "abl": [556, 650, 651], "progress": 556, "cache_path": 556, "close": [556, 591, 651], "construct_binary_data": 556, "byte": [556, 591], "is_quot": 556, "stackoverflow": 556, "question": [556, 650], "1637762": 556, "open_tgz": [556, 557], "replace_forbidden": 556, "repl": 556, "_": 556, "charact": [556, 651], "forbidden": 556, "certain": [556, 557, 591, 649], "slash": 556, "unix": 556, "window": 556, "environ": [556, 651], "set_binary_data": 556, "transmit": 556, "attach": [556, 637, 638, 639, 640, 641, 642], "filenam": [556, 558, 629, 651], "url_fix": 556, "charset": 556, "utf": [556, 557], "121017": 556, "854988": 556, "file_param": 557, "_open": 557, "set_fileobj": 557, "bz2": 557, "select": [557, 578, 593, 649, 654], "multifil": 557, "examin": 557, "host": [558, 651, 653], "port": 558, "rownam": 558, "_global_context_off": [559, 561, 563, 565, 567, 570], "context": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 633, 637, 638, 639, 640, 641, 642, 645, 648, 651], "handler": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571], "behaviour": [559, 562, 563, 567, 651], "won": [559, 562, 563, 651], "behind": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651], "scene": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651], "cachedel": [559, 560], "data_format": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651, 653], "load_resourc": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 651], "_global_context_on": [560, 562, 564, 566, 568, 571], "Then": [560, 651], "dryrun": [560, 567, 568], "upon": [560, 651], "let": [560, 651], "know": [560, 651], "cache_on": 561, "probabl": [562, 651], "cacheprint": [563, 564], "avoid": [565, 570, 637, 638, 639, 640, 641, 642, 650, 651], "restor": [565, 567, 570], "cache_debug_off": 565, "issu": [566, 571, 650], "want": [566, 571, 649, 650, 654], "cache_debug_on": 566, "cache_dryrun_off": 567, "cache_dryrun_on": 568, "itself": [570, 571, 651], "lastcurl": [570, 571, 651], "preserv": [570, 571, 651], "cache_preserve_off": 570, "cache_preserve_on": 571, "percent": 573, "done": [573, 650], "init": 573, "unit": 573, "had": 573, "my": [573, 650], "progressbar": 573, "great": [573, 651], "tqdm": 573, "move": [573, 653], "oldprogress": 573, "get_desc": 573, "suppos": 573, "someth": [573, 650, 651], "constant": [573, 637, 638, 639, 640, 641, 642], "life": 573, "stage": [573, 651], "init_tqdm": 573, "set_don": 573, "bar": 573, "set_statu": 573, "set_tot": 573, "msg": [573, 651], "busi": 573, "termin": [573, 651], "finish": [573, 651], "destroi": 573, "pickle_fil": [578, 582, 583, 651], "use_pickle_cach": [578, 582, 583], "geneontologi": [578, 651], "expr_names_to_term": 578, "logic": 578, "get_annot": [578, 579], "get_annot_ancestor": 578, "lowest": [578, 580], "get_annots_ancestor": 578, "get_nam": [578, 580, 651], "get_term": [578, 580], "has_any_term": 578, "has_term": 578, "i_select_by_term": 578, "return_uniprot": 578, "evalu": [578, 651], "select_by_expr": 578, "select_by_al": 578, "preced": 578, "0005576": [578, 651], "0070062": 578, "0005887": 578, "hormon": [578, 651], "cell": [578, 651, 654], "surfac": [578, 630, 651], "0009897": 578, "select_by_expr_term": 578, "select_by_nam": 578, "select_by_term": 578, "go_annot": 579, "goannot": [579, 651], "process_categori": 579, "all_from_aspect": 580, "aspect_from_nam": 580, "belong": [580, 651], "flatten": 580, "redund": [580, 651], "get_all_ancestor": 580, "include_se": 580, "get_all_descend": [580, 651], "get_aspect": 580, "is_leaf": 580, "leaf": 580, "is_nam": 580, "is_root": 580, "root": [580, 651, 653], "is_term": 580, "names_to_term": 580, "names_to_terms_aspect": 580, "namess": 580, "set_of": 580, "terms_nam": 580, "to_term": 580, "set_of_nam": 580, "set_of_term": 580, "subgraph_nod": 580, "subgraph": 580, "terms_to_nam": 580, "terms_to_names_aspect": 580, "igraph": [581, 584, 630, 633, 645, 647, 648, 649, 650, 653], "assign": [583, 651, 654], "resnum": [586, 587, 651], "get_residu": 587, "load_map": 587, "pdb_start": 588, "pdb_end": 588, "uniprot_start": 588, "uniprot_end": 588, "usernam": 591, "output_format": 591, "extens": 591, "feel": [591, 650, 651], "write": [591, 649, 650], "out": [591, 650, 651], "wilhelm": 591, "2014": 591, "v509": 591, "n7502": 591, "nature13319": 591, "descritpion": 591, "visit": 591, "coupl": 591, "dai": [591, 651], "admin": [591, 651], "get_express": 591, "tissue_averag": 591, "unnorm": 591, "previous": 591, "disk": [591, 651], "averag": [591, 651], "tissu": [591, 651, 654], "sampl": 591, "get_piec": 591, "20480": 591, "delimit": 591, "hundr": [591, 651], "mb": [591, 650, 651], "segment": [591, 651], "self": [591, 649], "curli": 591, "brace": 591, "largest": 591, "get_protein": 591, "tissue_id": 591, "calculation_method": 591, "swissprot_onli": 591, "no_isoform": 591, "get_tissu": 591, "pandas_matrix": 591, "matrix": [591, 651, 654], "Not": [591, 651], "shold": 591, "written": [591, 651], "tissues_x_protein": 591, "cleanup_period": 593, "lifetim": 593, "300": [593, 651], "is_not": 593, "iterdb": [603, 604], "iterprotein": [603, 604], "processor": [603, 604, 650], "unload": [603, 604, 651], "order": [603, 604, 651, 654], "loader": 604, "isoform": [605, 606, 608, 651, 654], "region": [605, 651], "canon": 605, "findal": [605, 651], "fragment": [605, 651], "fasta": 607, "taxon_id": [610, 611, 612, 613], "capit": 610, "languag": [613, 650, 651], "codenam": 613, "long_nam": 616, "long": [616, 650, 651], "shorten": [616, 617], "dot": 617, "short": [617, 651, 654], "genu": [617, 651], "mark": 617, "taxon_nam": [618, 619, 620, 621, 622], "connectivity_search": 625, "id_list": 625, "cheminformat": 625, "metric": 625, "widesearchinfo": 625, "h": [625, 651], "inchikey2anyth": 625, "lst": [625, 651], "smiles2chembl": 625, "usag": 625, "xsize": 628, "intersect": 628, "cairotest": 628, "pdf": [628, 629], "width": 628, "1024": 628, "height": 628, "bgcol": 628, "embl_gray125": 628, "interscol": 628, "ysize": 628, "ycol": 628, "margin": [628, 629, 651], "24": [628, 651], "mincircl": 628, "cellpad": 628, "graphix_dir": 629, "graphix_format": 629, "title_text": 629, "title_font_famili": 629, "title_font_s": 629, "title_color": 629, "646567": 629, "layout": [629, 633, 645, 647, 648], "fruchterman_reingold": 629, "layout_param": 629, "vertex_label": 629, "vertex_s": [629, 651], "vertex_label_s": [629, 651], "degree_label_s": 629, "edge_width": [629, 651], "vertex_color": [629, 651], "6ea945": 629, "vertex_label_color": [629, 651], "007b7f": 629, "vertex_alpha": 629, "aa": [629, 651], "vertex_frame_color": 629, "ffffff00": 629, "vertex_frame_width": [629, 651], "edge_label": 629, "edge_label_s": 629, "edge_label_color": 629, "edge_curv": 629, "edge_color": [629, 651], "818284": 629, "edge_alpha": 629, "autocurv": 629, "vertex_label_font": 629, "san": 629, "serif": 629, "edge_label_font": 629, "edge_arrow_s": 629, "edge_arrow_width": 629, "palett": [629, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648], "bbox": [629, 633, 645, 648], "dimens": 629, "1280": 629, "draw": [630, 633, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648], "routin": [630, 643], "cairo": [630, 633, 637, 638, 639, 640, 641, 642, 645, 648, 651], "l": [630, 633, 637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "defaultgraphdraw": [630, 645, 647, 648], "ubigraph": 630, "displai": [630, 651], "ubigraphdraw": 630, "u": [630, 650, 651], "ubietylab": 630, "net": [630, 651], "cytoscap": [630, 650, 651], "cytoscaperpc": 630, "plugin": 630, "gforg": 630, "nbic": 630, "nl": 630, "project": 630, "cytoscapegraphdraw": 630, "abstractcairographdraw": [632, 633, 634, 635], "vertex_drawer_factori": 633, "edge_drawer_factori": 633, "label_drawer_factori": 633, "visualis": 633, "plane": 633, "straight": [633, 637, 638, 639, 640, 641, 642, 651], "curv": 633, "when": [633, 637, 638, 639, 640, 641, 642, 645, 647, 648, 650, 651], "invok": 633, "plot": [633, 636, 649, 653], "__plot__": 633, "drawer": [633, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648], "boundingbox": [633, 645, 648], "bound": [633, 645, 647, 648, 651], "box": [633, 645, 647, 648], "constructor": [633, 645, 648], "factori": 633, "abstractcairovertexdraw": [633, 648], "area": 633, "color": [633, 637, 638, 639, 640, 641, 642, 645, 647, 648], "defaultvertexdraw": 633, "abstractedgedraw": [633, 638, 639, 642], "style": [633, 636, 653, 654], "drawn": [633, 637, 638, 639, 640, 641, 642, 645, 647, 648], "arrowedgedraw": 633, "textdraw": 633, "abstract": [637, 645, 647], "concret": [637, 647], "draw_directed_edg": [637, 638, 639, 640, 641, 642], "src_vertex": [637, 638, 639, 640, 641, 642], "dest_vertex": [637, 638, 639, 640, 641, 642], "draw_loop_edg": [637, 638, 639, 640, 641, 642], "loop": [637, 638, 639, 640, 641, 642, 649], "circl": [637, 638, 639, 640, 641, 642], "draw_undirected_edg": [637, 638, 639, 640, 641, 642], "get_label_posit": [637, 638, 639, 640, 641, 642], "midpoint": [637, 638, 639, 640, 641, 642], "align": [637, 638, 639, 640, 641, 642], "tri": [637, 638, 639, 640, 641, 642], "x": [637, 638, 639, 640, 641, 642, 645, 647, 648], "y": [637, 638, 639, 640, 641, 642, 645, 647, 648, 651], "horizont": [637, 638, 639, 640, 641, 642], "taken": [637, 638, 639, 640, 641, 642], "textalign": [637, 638, 639, 640, 641, 642], "alpha_at_src": 638, "alpha_at_dest": 638, "vari": 638, "alpha": [638, 640, 641, 651], "destin": [638, 640, 641, 642], "arrow": 639, "alphavaryingedgedraw": [640, 641], "opac": [640, 641], "zero": [640, 641], "transpar": [640, 641], "interpol": [640, 641], "taper": 642, "wider": 642, "narrow": 642, "abstractvertexdraw": 645, "abstractcairodraw": 645, "canva": 645, "visual_vertex": [645, 647, 648], "coord": [645, 647, 648], "Its": [645, 647, 648, 651], "visualvertexbuild": [645, 647, 648], "coordin": [645, 647, 648, 650, 651], "algorithm": [645, 647, 648], "abstractdraw": 647, "welcom": [649, 651], "pypath": [649, 653, 654], "instal": 649, "doc": [649, 653], "manag": 649, "faq": 649, "contact": [649, 651], "impressum": 649, "releas": [649, 651], "rat": 649, "role": [649, 650], "inter": [649, 650], "cellular": [649, 650], "explor": [649, 651], "32": [649, 651], "31": [649, 651], "74": [649, 651], "93": 649, "110": [649, 651], "upcom": 649, "how": [649, 650], "navig": 649, "introduct": 649, "app": [649, 650], "hmdb": 649, "sanit": 649, "intercellular": [649, 650, 653], "quantit": 649, "overview": 649, "intercel": [649, 650, 653, 654], "log": [649, 650, 653], "disabl": 649, "bel": [649, 650, 653], "export": [649, 650, 653], "legaci": 649, "quickli": 649, "plai": 649, "causal": [649, 654], "omnipathr": [650, 651], "popular": 650, "versatil": [650, 651, 653], "150": [650, 651], "yourself": 650, "try": [650, 651], "builder": 650, "peopl": [650, 651], "satisfi": 650, "realli": [650, 651], "fresh": [650, 651], "pypi": [650, 651], "pip": 650, "git": 650, "github": [650, 651], "guid": [650, 651], "experienc": 650, "well": [650, 651], "platform": 650, "biolog": [650, 651], "major": [650, 651, 653, 654], "distinguish": 650, "overal": [650, 651], "core": [650, 651, 653], "downlad": 650, "applic": [650, 651], "stand": 650, "alon": 650, "begin": 650, "fundament": [650, 651], "design": [650, 651], "principl": 650, "todai": 650, "expos": 650, "rich": [650, 651], "five": [650, 651], "enz_sub": [650, 651, 654], "howev": [650, 651], "often": [650, 651], "get_db": [650, 651], "But": [650, 651], "subsequ": [650, 651], "easi": [650, 651], "gb": [650, 651], "prone": 650, "truncat": [650, 651], "due": [650, 651], "interrupt": 650, "problemat": 650, "possibli": [650, 651], "sometim": [650, 651, 653, 654], "offlin": 650, "encount": 650, "fix": [650, 651, 653], "much": [650, 651, 653, 654], "faster": [650, 651], "still": [650, 651], "standalon": [650, 651], "script": [650, 651], "varieti": [650, 651, 654], "predefin": [650, 651], "map_nam": [650, 651], "p00533": [650, 651, 654], "genesymbol": [650, 651, 654], "egfr": [650, 651, 654], "homologen": [650, 651, 653, 654], "q01279": [650, 651], "run": [650, 651, 654], "doesn": [650, 651], "pyproject": 650, "toml": 650, "besid": [650, 651], "privat": 650, "sensit": 650, "omnipathdb": [650, 651, 654], "gmail": 650, "d\u00e9ne": 650, "t\u00fcrei": 650, "saez": 650, "contribut": 650, "scientist": 650, "erva": 650, "ulusoi": 650, "melih": 650, "darcan": 650, "\u00f6mer": 650, "kaan": 650, "vural": 650, "tennur": 650, "k\u0131l\u0131\u00e7": 650, "elif": 650, "\u00e7evrim": 650, "b\u00fcnyamin": 650, "\u015fen": 650, "atabei": 650, "\u00fcnl\u00fc": 650, "mert": 650, "erg\u00fcn": 650, "hu": [650, 651], "scienc": 650, "pi": [650, 651], "tunca": 650, "do\u011fan": 650, "leila": 650, "gul": 650, "dezs\u0151": 650, "m\u00f3do": 650, "m\u00e1rton": 650, "\u00f6lbei": 650, "tam\u00e1": 650, "korcsm\u00e1ro": 650, "korcsmaro": 650, "michael": 650, "klein": 650, "fabian": 650, "charl": 650, "taplei": 650, "hoyt": 650, "daniel": 650, "domingo": 650, "fern\u00e1ndez": 650, "ad": [650, 651], "olga": 650, "ivanova": 650, "introduc": 650, "sophia": 650, "m\u00fcller": 650, "dott": 650, "collectri": [650, 651], "nicol\u00e0": 650, "palacio": 650, "sebastian": 650, "lobentanz": 650, "ahmet": 650, "rifaioglu": 650, "mainten": [650, 651], "refactor": 650, "aurelien": 650, "dugourd": 650, "christina": 650, "schmidt": 650, "maintain": [650, 651], "francesco": 650, "ceccarelli": 650, "attila": 650, "g\u00e1bor": 650, "alberto": 650, "valdeoliva": 650, "logo": 650, "jakob": 650, "wirbel": 650, "graphic": 650, "spencer": 650, "phillip": 650, "embl": [650, 651], "bird": 650, "ey": 650, "15": 651, "16": 651, "17": 651, "18": 651, "19": 651, "21": 651, "bioconductor": 651, "furthermor": 651, "enjoi": 651, "almost": [651, 653], "unlimit": 651, "tour": 651, "chanc": 651, "hesit": 651, "__version__": 651, "execut": 651, "0m": 651, "49": 651, "47": 651, "2023": 651, "03": 651, "09": 651, "39": 651, "36": 651, "easiest": 651, "henc": [651, 653, 654], "quick": 651, "34": 651, "27": 651, "2022": 651, "lt": 651, "databasemanag": 651, "0x602fb851cd90": 651, "gt": 651, "tf_target": [651, 654], "small_molecul": 651, "mirna_mrna": 651, "lncrna_mrna": 651, "offer": [651, 653], "cu": 651, "83": 651, "7980": 651, "35551": 651, "1m": 651, "55": 651, "18558": 651, "94358": 651, "tft": 651, "2m": 651, "72": 651, "54": 651, "18986": 651, "326708": 651, "mi": 651, "28": 651, "1264": 651, "3288": 651, "tmi": 651, "41": 651, "1032": 651, "4960": 651, "lnc": 651, "33": 651, "243": 651, "217": 651, "alloster": 651, "extend": 651, "futur": [651, 654], "smol": 651, "94": 651, "57": 651, "1980": 651, "3147": 651, "26": 651, "41426": 651, "co": 651, "28173": 651, "quit": 651, "43": 651, "60": 651, "5490653": 651, "50872": 651, "68": 651, "heavi": 651, "ic": 651, "23": 651, "37": 651, "301527": 651, "48570": 651, "biomed": 651, "troublesom": 651, "broken": 651, "daili": 651, "after": [651, 654], "cytosig": 651, "signor_interact": 651, "_interact": 651, "_enz_sub": 651, "_complex": 651, "_annot": 651, "intend": 651, "fulli": 651, "_raw": 651, "_map": 651, "bring": 651, "mai": 651, "observ": 651, "repeat": 651, "pattern": 651, "arbitrarili": 651, "toward": 651, "straightforward": 651, "outsid": 651, "signor_complex": 651, "intera": 651, "complexaggreg": 651, "p23511_p25208_q13952": 651, "nfy": 651, "p68104_p85299_q6r327_q8tb45_q9bvc4": 651, "mtorc2": 651, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 651, "mtorc1": 651, "p63208_q13616_q9y297": 651, "scf": 651, "betatrcp": 651, "q09472_q92793": 651, "cbp": 651, "p300": 651, "q09472_q92793_q92831": 651, "pcaf": 651, "q13485_q15796": 651, "smad2": [651, 654], "smad4": 651, "p84022_q13485": 651, "smad3": 651, "p05412_q13485": 651, "jun": 651, "q15796_q9hau4": 651, "smurf2": 651, "o15105_q01094_q13547": 651, "smad7": 651, "hdac1": 651, "e2f": 651, "p19838_q04206": 651, "nfkb": 651, "p65": 651, "p50": 651, "o14920_o15111": 651, "ik": 651, "1000": 651, "17699": 651, "52": 651, "signorinteract": 651, "o15530": 651, "source_isoform": 651, "target_isoform": 651, "source_typ": 651, "target_typ": 651, "phosphoryl": 651, "10455013": 651, "ptm_type": 651, "ptm_residu": 651, "ser396": 651, "ptm_motif": 651, "sssssshslsasdtg": 651, "q9nq66": 651, "18035": 651, "smallmolecul": 651, "quantiti": 651, "23880553": 651, "catalysi": 651, "p62136": 651, "o15169": 651, "down": 651, "dephosphoryl": 651, "17318175": 651, "ser77": 651, "yepegsasptppylk": 651, "sou": 651, "3285": 651, "signor_enzyme_substr": 651, "easier": 651, "enzymesubstrateaggreg": 651, "58": 651, "typ": 651, "396": 651, "389": 651, "403": 651, "resaa": 651, "enzyme_isoform": 651, "substrate_isoform": 651, "77": 651, "70": 651, "84": 651, "final": 651, "signor_pathway_annot": 651, "practic": 651, "o14733": 651, "48": 651, "signorpathwai": 651, "tnf": 651, "toll": 651, "haven": 651, "four": 651, "signor_protein_famili": 651, "famili": 651, "pf2": 651, "53": 651, "q9hbw0": 651, "q92633": 651, "q9uby5": 651, "showcas": 651, "metabol": 651, "enzymat": 651, "closer": 651, "ramp_list_t": 651, "51": 651, "analyt": 651, "rampid": 651, "analytehasontologi": 651, "rampcompoundid": 651, "rampontologyid": 651, "analytehaspathwai": 651, "pathwayrampid": 651, "pathwaysourc": 651, "analytesynonym": 651, "geneorcompound": 651, "catalyz": 651, "rampgeneid": 651, "chem_prop": 651, "ramp_id": 651, "chem_data_sourc": 651, "chem_source_id": 651, "iso_smil": 651, "inchi_key_prefix": 651, "inchi_kei": 651, "mw": 651, "monoisotop_mass": 651, "common_nam": 651, "mol_formula": 651, "db_version": 651, "ramp_vers": 651, "load_timestamp": 651, "version_not": 651, "met_intersects_json": 651, "gene_intersects_json": 651, "met_intersects_json_pw_map": 651, "gene_intersects_json_pw_map": 651, "db_sql_url": 651, "entity_status_info": 651, "status_categori": 651, "entity_source_id": 651, "entity_source_nam": 651, "entity_count": 651, "metabolite_class": 651, "class_source_id": 651, "class_level_nam": 651, "class_nam": 651, "commonnam": 651, "hmdbontologytyp": 651, "metcount": 651, "pathwayr": 651, "1368": 651, "ramp_raw": 651, "conveni": 651, "At": 651, "bottleneck": 651, "thank": 651, "happen": 651, "25": [651, 654], "sourceid": 651, "idtyp": 651, "priorityhmdbstatu": 651, "datasourc": 651, "pathwaycount": 651, "hmdb0000001": 651, "ramp_c_000000001": 651, "methylhistidin": 651, "quantifi": 651, "hmdb0000479": 651, "50599": 651, "chemspid": 651, "83153": 651, "c01152": 651, "hmdb_kegg": 651, "756552": 651, "h0ydb7": 651, "ramp_g_000009307": 651, "rab38": 651, "null": 651, "wiki": 651, "756553": 651, "a0a024r191": 651, "756554": 651, "h0yea4": 651, "756555": 651, "entrez": 651, "23682": 651, "756556": 651, "gene_symbol": 651, "756557": 651, "physicochem": 651, "00": 651, "oc": 651, "o": 651, "brmwtnujhumwm": 651, "lurjtmiesa": 651, "c7h11n3o2": 651, "169": 651, "181": 651, "085": 651, "cc1": 651, "cn1c": 651, "jdhildinmrgul": 651, "27596": 651, "cn1cncc1c": 651, "methyl": 651, "histidin": 651, "cn1cnc": 651, "tele": 651, "ramp_c_000000002": 651, "hmdb0000002": 651, "ncccn": 651, "xfnjvjplkcpibv": 651, "uhfffaoysa": 651, "c3h10n2": 651, "c4": 651, "h1": 651, "5h2": 651, "1249": 651, "0844": 651, "diaminopropan": 651, "275898": 651, "ramp_c_000258279": 651, "lipidmap": 651, "lmpk15050003": 651, "ccccccccccccc": 651, "uxlmjhnfdrmgpw": 651, "ljqanchmsa": 651, "c24h38o6": 651, "422": 651, "267": 651, "hydroxi": 651, "methoxi": 651, "2r": 651, "acetoxi": 651, "pentadecyl": 651, "275899": 651, "ramp_c_000258280": 651, "lmpk15050004": 651, "cc": 651, "cvznklnahbtint": 651, "jochjyfzsa": 651, "c24h38o5": 651, "406": 651, "272": 651, "benzoq": 651, "275900": 651, "ramp_c_000226089": 651, "lmpk15050005": 651, "ccccccccccc": 651, "jiugzsypfredlg": 651, "hxuwfjfhsa": 651, "c22h34o5": 651, "378": 651, "241": 651, "tridecyl": 651, "benzoqui": 651, "275901": 651, "ramp_c_000258283": 651, "lmpk15050008": 651, "ccccccccccccccc": 651, "gxdurrguxldzkn": 651, "c21h34o4": 651, "350": 651, "246": 651, "suberonon": 651, "275902": 651, "ramp_c_000258284": 651, "lmpk15050009": 651, "amknobhckrzhio": 651, "c19h30o4": 651, "322": 651, "214": 651, "rapanon": 651, "275903": 651, "advantag": 651, "vice": 651, "versa": 651, "con": 651, "56": 651, "07": 651, "0x6fa1e9e4e940": 651, "big": 651, "enough": 651, "period": 651, "format_byt": 651, "python_memory_usag": 651, "44": 651, "list_column": 651, "subqueri": 651, "distinct": 651, "ON": 651, "read_sql_queri": 651, "hmdb00001": 651, "104129": 651, "hmdb0126033": 651, "25882": 651, "104130": 651, "hmdb0141947": 651, "180150": 651, "104131": 651, "hmdb0128505": 651, "7870": 651, "104132": 651, "hmdb0130984": 651, "8227": 651, "104133": 651, "hmdb0130987": 651, "8630": 651, "104134": 651, "Such": 651, "easili": [651, 654], "ramp_map": 651, "45": 651, "brenda": 651, "kegg_glycan": 651, "lipidbank": 651, "ncbiprotein": 651, "plantfa": 651, "swisslipid": 651, "wikidata": 651, "29": 651, "lmfa00000008": 651, "slm": 651, "000390048": 651, "lmfa01010001": 651, "000000510": 651, "lmfa01010002": 651, "000000449": 651, "lmfa01010003": 651, "000001194": 651, "lmfa01010004": 651, "000001195": 651, "lmfa01010005": 651, "000389552": 651, "lmfa01010006": 651, "000001196": 651, "lmfa01010007": 651, "000389947": 651, "lmfa01010008": 651, "000000853": 651, "lmfa01010010": 651, "000000855": 651, "lmfa01010011": 651, "000389946": 651, "lmfa01010012": 651, "000000719": 651, "lmfa01010013": 651, "000001198": 651, "lmfa01010014": 651, "000000825": 651, "lmfa01010015": 651, "000001199": 651, "lmfa01010017": 651, "000001095": 651, "lmfa01010019": 651, "000001205": 651, "lmfa01010020": 651, "000000829": 651, "lmfa01010021": 651, "000001207": 651, "lmfa01010022": 651, "000000827": 651, "lmfa01010023": 651, "000001128": 651, "lmfa01010024": 651, "000000414": 651, "lmfa01010026": 651, "000000539": 651, "lmfa01010027": 651, "000000980": 651, "lmfa01010028": 651, "000000540": 651, "lmfa01010030": 651, "000000543": 651, "lmfa01010032": 651, "000000544": 651, "lmfa01010034": 651, "00000": 651, "44684": 651, "got": 651, "63": 651, "30": 651, "lmst02030086": 651, "000485328": 651, "lmst02030087": 651, "000485330": 651, "lmsp06020013": 651, "000000534": 651, "lmst02020001": 651, "000001055": 651, "000485315": 651, "35218": 651, "lmpr0104010007": 651, "000389242": 651, "35219": 651, "lmpr0104030005": 651, "000390232": 651, "35220": 651, "lmpr0104030006": 651, "000390227": 651, "35221": 651, "lmpr01070626": 651, "000000432": 651, "35222": 651, "lmpr01090015": 651, "000389419": 651, "35223": 651, "get_mapp": 651, "38": 651, "medchemexpress": 651, "actor": 651, "affymetrix": 651, "alzforum": 651, "alzforum_mut": 651, "araport": 651, "atla": [651, 654], "bindingdb": 651, "carotenoiddb": 651, "cas_id": 651, "cgnc": 651, "chemicalbook": 651, "clinicaltri": 651, "clinic": 651, "7422": 651, "mapping_t": 651, "mappingtabledefinit": 651, "input_class": 651, "rampmap": 651, "3238": 651, "insight": 651, "99": 651, "131431": 651, "hmdb0094709": 651, "lxml": 651, "etre": 651, "minim": 651, "iter_metabolit": 651, "04": 651, "0x60b1846262c0": 651, "On": 651, "direct_par": 651, "kingdom": 651, "sub_class": 651, "molecular_framework": 651, "alternative_par": 651, "spectra": 651, "spectrum": 651, "spectrum_id": 651, "biological_properti": 651, "cellular_loc": 651, "biospecimen_loc": 651, "biospecimen": 651, "tissue_loc": 651, "kegg_map_id": 651, "smpdb_id": 651, "experimental_properti": 651, "4037": 651, "gene_properti": 651, "chromosome_loc": 651, "locu": 651, "gene_sequ": 651, "protein_properti": 651, "residue_numb": 651, "molecular_weight": 651, "theoretical_pi": 651, "polypeptide_sequ": 651, "transmembrane_region": 651, "signal_region": 651, "pfam_id": 651, "metabolite_associ": 651, "go_classif": 651, "go_class": 651, "general_refer": 651, "general_": 651, "2072": 651, "metabolites_raw": 651, "proteins_raw": 651, "cystein": 651, "thereof": 651, "amino": 651, "carboxi": 651, "hydrogen": 651, "glycin": 651, "heteroatom": 651, "carboxyl": 651, "acid": 651, "analogu": 651, "aromat": 651, "heteromonocycl": 651, "aralkylamin": 651, "azacycl": 651, "carbonyl": 651, "heteroaromat": 651, "hydrocarbon": 651, "imidazolyl": 651, "monoalkylamin": 651, "monocarboxyl": 651, "substitut": 651, "imidazol": 651, "oxid": 651, "132354": 651, "hmdb0000005": 651, "ketobutyr": 651, "hmdb0000008": 651, "hydroxybutyr": 651, "hmdb0000010": 651, "methoxyestron": 651, "hmdb0000011": 651, "hmdb0000012": 651, "deoxyuridin": 651, "hmdb0000014": 651, "deoxycytidin": 651, "hmdb0000015": 651, "cortexolon": 651, "hmdb0000016": 651, "deoxycorticosteron": 651, "hmdb0000017": 651, "pyridox": 651, "hmdb0000019": 651, "ketoisovaler": 651, "hmdb0000020": 651, "hydroxyphenylacet": 651, "hmdb0000021": 651, "iodotyrosin": 651, "hmdb0000022": 651, "methoxytyramin": 651, "hmdb0000023": 651, "hydroxyisobutyr": 651, "hmdb00": 651, "1291": 651, "gene_nam": 651, "nucleotidas": 651, "nt5e": 651, "deoxycytidyl": 651, "deaminas": 651, "dctd": 651, "ump": 651, "cmp": 651, "cmpk1": 651, "cytosol": 651, "1b": 651, "nt5c1b": 651, "1a": 651, "nt5c1a": 651, "deoxyribonucleotidas": 651, "nt5c": 651, "dck": 651, "mitochondri": 651, "nt5m": 651, "hydroxymethylglutaryl": 651, "coa": 651, "lyas": 651, "hmgcl": 651, "atp": 651, "citrat": 651, "synthas": 651, "acli": 651, "histon": 651, "acetyltransferas": 651, "ep300": 651, "pyruv": 651, "dehydrogenas": 651, "e1": 651, "subunit": 651, "beta": 651, "pdhb": 651, "acetyl": [651, 654], "acat2": 651, "creb": 651, "crebbp": 651, "diamin": 651, "acetyltransf": 651, "1478": 651, "metabolites_t": 651, "nameless": 651, "notat": 651, "_tabl": 651, "nc": 651, "ccc": 651, "tyeybosbbbhjiv": 651, "afendnxgafykqo": 651, "vkhmyheasa": 651, "12ccc": 651, "c3": 651, "wheuwnkscxykbu": 651, "qpwughhjsa": 651, "whbmmwsbfzvssr": 651, "gsvougtgsa": 651, "1o": 651, "n1c": 651, "nc1": 651, "mxhrcpnrjammim": 651, "shyzeuofsa": 651, "1c": 651, "o1": 651, "cktsbutuhbmzgz": 651, "12cc": 651, "whbhbvvogneclv": 651, "obqkjfggsa": 651, "zesrjspzrdmnhi": 651, "yfwfahhusa": 651, "c1o": 651, "hxacouqixzgnbf": 651, "1h": 651, "yl": 651, "propanediamin": 651, "propylenediamin": 651, "ketobutano": 651, "oxobutyr": 651, "met": 651, "hydroxybutano": 651, "meth": 651, "hydro": 651, "du": 651, "deo": 651, "5r": 651, "hydroxymet": 651, "desoxi": 651, "hydroxycorticosteron": 651, "cortodoxo": 651, "pregnen": 651, "dion": 651, "hydroxyp": 651, "hydroxymethylp": 651, "hmdb_synonym": 651, "propano": 651, "mhi": 651, "n1": 651, "dihydrochlorid": 651, "prop": 651, "291": 651, "hydroxymethyl": 651, "isonicotin": 651, "292": 651, "pyridoxin": 651, "293": 651, "pyridoxinecarboxyl": 651, "294": 651, "pyridoxyl": 651, "295": 651, "296": 651, "grow": 651, "taxonomy__alternative_par": 651, "taxonomy__class": 651, "taxonomy__descript": 651, "taxonomy__direct_par": 651, "taxonomy__kingdom": 651, "taxonomy__molecular_framework": 651, "taxonomy__sub_class": 651, "taxonomy__substitu": 651, "compoun": 651, "kno": 651, "amin": 651, "aralkyla": 651, "organopnictogen": 651, "comp": 651, "organonitrogen": 651, "aliphat": 651, "acycl": 651, "keton": 651, "keto": 651, "ket": 651, "fatti": 651, "alcohol": 651, "hy": 651, "unsubstitut": 651, "benzenoid": 651, "oxo": 651, "steroid": 651, "estrogen": 651, "homopolycycl": 651, "estran": 651, "oxost": 651, "hyd": 651, "pyrimidin": 651, "nucleosid": 651, "deoxyribonucleosid": 651, "aminopyrimidin": 651, "hydroxysteroid": 651, "oxosteroid": 651, "del": 651, "delta": 651, "carbo": 651, "pyridin": 651, "pyridinecarboxyl": 651, "heteromon": 651, "gave": 651, "birth": 651, "000": [651, 654], "2235": 651, "vinylog": 651, "organooxygen": 651, "2236": 651, "2237": 651, "2238": 651, "2239": 651, "2240": 651, "metabolites_map": 651, "proteins_map": 651, "c00109": 651, "c00526": 651, "c00847": 651, "c00881": 651, "c00986": 651, "c01089": 651, "c03205": 651, "ccc2": 651, "12c": 651, "c05299": 651, "c05488": 651, "c05984": 651, "pretti": 651, "h3": 651, "6h": 651, "8h2": 651, "1h3": 651, "t6": 651, "m0": 651, "s1": 651, "constitut": 651, "isom": 651, "hydrid": 651, "tau": 651, "n3": 651, "81": 651, "figur": [651, 653], "hmdb_name": 651, "esummari": 651, "eutil": 651, "6063": 651, "uid": 651, "gd": 651, "gpl": 651, "erank": 651, "8esiq": 651, "joaz": 651, "titl": 651, "diurnal": 651, "circadian": 651, "arabidopsi": 651, "thaliana": 651, "gdstype": 651, "profil": 651, "valtyp": 651, "ratio": 651, "idref": 651, "genenam": 651, "genedesc": 651, "ugnam": 651, "at4g11560": 651, "ugdesc": 651, "bromo": 651, "adjac": 651, "bah": 651, "nucdesc": 651, "9366": 651, "lambda": 651, "prl2": 651, "cdna": 651, "clone": 651, "135j10t7": 651, "entrez_gene_id": 651, "gbacc": 651, "t46103": 651, "ptacc": 651, "cloneid": 651, "orf": 651, "spotid": 651, "vmin": 651, "395000": 651, "vmax": 651, "201000": 651, "a1b3c1": 651, "abscal": 651, "aflag": 651, "aoutl": 651, "rstd": 651, "rmean": 651, "get_pubm": 651, "33209674": 651, "42": 651, "pubdat": 651, "oct": 651, "epubd": 651, "transl": 651, "androl": 651, "urol": 651, "kim": 651, "authtyp": 651, "clusterid": 651, "lee": 651, "sh": 651, "dh": 651, "jy": 651, "hong": 651, "ih": 651, "lastauthor": 651, "gemcitabin": 651, "versu": 651, "chemotherapi": 651, "patient": 651, "metastat": 651, "urotheli": 651, "carcinoma": 651, "retrospect": 651, "sorttitl": 651, "volum": 651, "2113": 651, "2121": 651, "lang": 651, "eng": 651, "2263": 651, "1956": 651, "epiderm": 651, "growth": 651, "factor": [651, 654], "currentid": 651, "chromosom": 651, "geneticsourc": 651, "genom": 651, "maploc": 651, "7p11": 651, "otheralias": 651, "erbb": 651, "erbb1": 651, "errp": 651, "her1": 651, "nisbd2": 651, "pig61": 651, "mena": 651, "otherdesign": 651, "viii": 651, "avian": 651, "erythroblast": 651, "leukemia": 651, "viral": 651, "erb": 651, "oncogen": 651, "homolog": [651, 654], "40": 651, "prolifer": 651, "induc": 651, "61": 651, "tyrosin": 651, "b2": 651, "proto": 651, "nomenclaturesymbol": 651, "nomenclaturenam": 651, "nomenclaturestatu": 651, "mim": 651, "131550": 651, "genomicinfo": 651, "chrloc": 651, "chraccver": 651, "nc_000007": 651, "chrstart": 651, "55019016": 651, "chrstop": 651, "55211627": 651, "exoncount": 651, "geneweight": 651, "580393": 651, "5417": 651, "90": 651, "min": 651, "awar": 651, "dozen": [651, 654], "sooner": 651, "later": 651, "accid": 651, "recommend": 651, "remain": 651, "cache_delete_on": 651, "depod_enzyme_substr": 651, "59": 651, "cache_off": 651, "cache_print_on": 651, "dry_run_on": 651, "wrong": 651, "debug_on": 651, "curl_connect_timeout": 651, "establish": 651, "curl_extended_timeout": 651, "exception": 651, "curl_retri": 651, "curl_timeout": 651, "360": 651, "deep": 651, "stack": 651, "investig": 651, "difficult": 651, "preserve_on": 651, "kept": 651, "depod_curl": 651, "0x6947386dc8b0": 651, "fileobj": 651, "bioss": 651, "uni": 651, "freiburg": 651, "de": 651, "depod_201405_human_phosphatas": 651, "mitab": 651, "_io": 651, "textiowrapp": 651, "dene": 651, "6a711369ecf9dcff8c5ed88996685b54": 651, "mode": 651, "iso": 651, "8859": 651, "okai": 651, "wether": 651, "successfulli": 651, "night": 651, "transient": 651, "disappear": 651, "perman": 651, "mayb": 651, "third": 651, "parti": 651, "lot": [651, 653], "notebook": 651, "pypath_log": 651, "s3e92": 651, "535b06d53a59e75bb693369bc5fdc556": 651, "112963": 651, "verifi": 651, "certif": 651, "invalid": 651, "expir": 651, "miss": 651, "softwar": 651, "encrypt": 651, "trust": 651, "And": [651, 654], "reach": [651, 652], "global": 651, "everi": [651, 653], "comput": 651, "program": 651, "correctli": 651, "duti": 651, "procedur": 651, "97": 651, "scan": 651, "cipher": 651, "libcurl": 651, "anaconda": 651, "java": 651, "mozilla": 651, "firefox": 651, "seriou": 651, "think": 651, "rc": 651, "get_control": 651, "resourcecontrol": 651, "0x6cc25e25dcf0": 651, "BY": 651, "sa": 651, "pw_academ": 651, "pw_commerci": 651, "len": 651, "pdzbase": 651, "gplv3": 651, "mit": 651, "net_academ": 651, "net_commerci": 651, "79": 651, "6833": 651, "25607": 651, "6429": 651, "23288": 651, "usabl": 651, "400": 651, "fine": 651, "grain": 651, "analysi": [651, 653], "expert": 651, "thought": 651, "owner": 651, "permiss": 651, "pai": 651, "fee": 651, "product": 651, "yearusedreleas": 651, "2015": 651, "2009": 651, "2011": 651, "bioinformat": 651, "oxfordjourn": 651, "690": 651, "d321": 651, "suppl_1": 651, "d235": 651, "univ": 651, "lyon1": 651, "fr": 651, "omictool": 651, "tool": 651, "19147664": 651, "20852260": 651, "25378329": 651, "mammalia": 651, "extracellular": [651, 654], "bairoch": 651, "partner": [651, 654], "repor": 651, "4479": 651, "197": 651, "collect_enzyme_substr": 651, "08": 651, "enzymesubstrateresourc": 651, "phosphoelm": 651, "li2012": 651, "phosphonetwork": [651, 654], "mimp": 651, "protmapp": 651, "202": 651, "phosphoelm_enzyme_substr": 651, "larger": 651, "netr": 651, "deathdomain": 651, "1864": 651, "05": 651, "7979": 651, "35550": 651, "8002": 651, "35748": 651, "older": 651, "mentin": 651, "focu": 651, "constraint": 651, "unbias": 651, "interactom": 651, "screen": 651, "vidal": 651, "lncrna_protein": 651, "moment": 651, "dict_kei": 651, "06": 651, "connectomedb2020": 651, "popul": 651, "trpc1": 651, "kcnma1": 651, "ppp3ca": 651, "calm2": 651, "calm3": 651, "calm1": 651, "casp1": 651, "casp4": 651, "cacna1c": 651, "cav1": 651, "ev": 651, "118492": 651, "sync": 651, "facilit": 651, "p48995": 651, "q12791": 651, "q08209": 651, "p0dp24": 651, "p0dp25": 651, "p0dp23": 651, "p29466": 651, "p49662": 651, "q13936": 651, "q03135": 651, "p56539": 651, "cav3": 651, "q14247": 651, "cttn": 651, "p14416": 651, "drd2": 651, "p11532": 651, "dmd": 651, "p11362": 651, "fgfr1": 651, "q02790": 651, "fkbp4": 651, "q86ym7": 651, "homer1": 651, "q9nsc5": 651, "homer3": 651, "q99750": 651, "mdfi": 651, "q14571": 651, "itpr2": 651, "q14573": 651, "itpr3": 651, "p29966": 651, "marck": 651, "q13255": 651, "grm1": 651, "p20591": 651, "mx1": 651, "p62166": 651, "ncs1": 651, "q96d31": 651, "orai1": 651, "q96sn7": 651, "orai2": 651, "q9brq5": 651, "orai3": 651, "p11171": 651, "epb41": 651, "p61586": 651, "rhoa": 651, "q9y225": 651, "rnf24": 651, "p21817": 651, "ryr1": 651, "p16615": 651, "atp2a2": 651, "q93084": 651, "atp2a3": 651, "p60880": 651, "snap25": 651, "q13586": 651, "sti": 651, "30573": 651, "egf": 651, "fantom5": 651, "cellsign": 651, "similarli": 651, "ia": 651, "get_resource_nam": 651, "get_refer": 651, "10085134": 651, "10209155": 651, "10788520": 651, "12093292": 651, "12297050": 651, "12620237": 651, "12648462": 651, "15620700": 651, "16274239": 651, "17145710": 651, "19531499": 651, "20458382": 651, "21071413": 651, "23331499": 651, "3494473": 651, "6289330": 651, "8639530": 651, "get_direct": 651, "opposit": 651, "get_sign": 651, "get_": 651, "get_interaction_typ": 651, "_by_": 651, "references_by_resourc": 651, "get_interactions_posit": 651, "Or": [651, 654], "make_df": 651, "type_a": 651, "type_b": 651, "dmodel": 651, "nan": 651, "44033": 651, "q14289": 651, "q9ulz3": 651, "44034": 651, "p54646": 651, "q9y2i7": 651, "44035": 651, "q9bxm7": 651, "q9y2n7": 651, "44036": 651, "p49137": 651, "q9y385": 651, "44037": 651, "q9uhc7": 651, "p04637": 651, "44038": 651, "unique_pair": 651, "65": 651, "source_genesymbol": 651, "target_genesymbol": 651, "is_stimul": 651, "is_inhibit": 651, "consensus_direct": 651, "consensus_stimul": 651, "consensus_inhibit": 651, "19168436": 651, "25139746": 651, "23228564": 651, "11290752": 651, "11983166": 651, "12601176": 651, "36729": 651, "ptk2b": 651, "pycard": 651, "27796369": 651, "36730": 651, "prkaa2": 651, "pikfyv": 651, "24070423": 651, "36731": 651, "pink1": 651, "hif3a": 651, "27551449": 651, "36732": 651, "mapkapk2": 651, "ube2j1": 651, "24020373": 651, "36733": 651, "mkrn1": 651, "tp53": 651, "19536131": 651, "36734": 651, "extra_node_attr": 651, "customis": 651, "webservice_interactions_df": 651, "dorothea_tfb": 651, "dorothea_coexp": 651, "dorothea_level": [651, 654], "curation_effort": 651, "ncbi_tax_id_sourc": 651, "entity_type_sourc": 651, "ncbi_tax_id_target": 651, "entity_type_target": 651, "trip_method": 651, "immunoprecipit": 651, "fluoresc": 651, "downstream": 651, "benefici": 651, "undesir": 651, "grn": 651, "network_allow_loop": 651, "wish": 651, "pw": 651, "gr": 651, "count_loop": 651, "149": 651, "count_interactions_by_interaction_typ": 651, "33571": 651, "281262": 651, "nucleic": 651, "mandatori": [651, 653, 654], "topologi": [651, 654], "network_expand_complex": 651, "pharmacologi": 651, "count_complex": 651, "get_complex": 651, "fos_jun": 651, "fos_junb": 651, "fos_jund": 651, "fosl1_jun": 651, "fosl2_jun": 651, "jun_junb": 651, "jun_jund": 651, "fosb_jun": 651, "fosl1_junb": 651, "fosl1_jund": 651, "fosl2_junb": 651, "fosl2_jund": 651, "junb": 651, "junb_jund": 651, "fosb_junb": 651, "jund": 651, "fosb_jund": 651, "nfkb1": 651, "nfkb1_nfkb2": 651, "nfkb1_relb": 651, "nfkb1_rela": 651, "nfkb1_rel": 651, "nfkb2": 651, "nfkb2_relb": 651, "nfkb2_rela": 651, "nfkb2_rel": 651, "relb": 651, "rela_relb": 651, "rel_relb": 651, "rela": 651, "rel_rela": 651, "rel": 651, "cplex_ent": 651, "q04206_q04864": 651, "isinst": 651, "p17535": 651, "p15407": 651, "p04040": 651, "cat": 651, "extri_collectri": 651, "10022519": 651, "10329043": 651, "collectr": 651, "p05412": 651, "p15408": 651, "p17275": 651, "54980": 651, "p01100": 651, "p01270": 651, "pth": 651, "9989817": 651, "54981": 651, "54982": 651, "p53539": 651, "54983": 651, "54984": 651, "23235": 651, "iloc": 651, "p15407_p17535": 651, "p01106": 651, "o14746": 651, "myc": 651, "tert": 651, "75": 651, "67945": 651, "q01196": 651, "q13094": 651, "runx1": 651, "lcp2": 651, "67946": 651, "q6mzq0": 651, "prr5l": 651, "67947": 651, "q15672": 651, "p08151": 651, "twist1": 651, "gli1": 651, "67948": 651, "p22415": 651, "q5sre5": 651, "usf1": 651, "nup188": 651, "67949": 651, "q9uqr1": 651, "q5vyx0": 651, "znf148": 651, "rnl": 651, "67950": 651, "familiar": 651, "to_csv": 651, "kinaseextra": [651, 654], "ligrecextra": [651, 654], "pathwayextra": [651, 654], "mirnatarget": [651, 654], "dorothea_cur": 651, "dorothea_chipseq": 651, "ncomplex": 651, "12036993": 651, "12538496": 651, "17935786": 651, "7489329": 651, "7651432": 651, "7818486": 651, "8867782": 651, "9030359": 651, "9136992": 651, "9142914": 651, "9168892": 651, "9687385": 651, "p05412_p15408": 651, "extri_c": 651, "1004": 651, "ambigu": 651, "unambigu": 651, "map_name0": 651, "random": 651, "gabarapl3": 651, "q9by60": 651, "shortcut": 651, "id_from_label": 651, "o75385": 651, "ulk1": [651, 654], "id_from_label0": 651, "certainli": 651, "q15796": 651, "effici": 651, "q62432": 651, "8408": 651, "chain_map": 651, "by_id_typ": 651, "autumn": 651, "uniprotmap": 651, "uploadlist": 651, "outdat": 651, "inputs_format": 651, "uniprotlistmap": 651, "biomartmap": 651, "arraymap": 651, "promap": 651, "unichemmap": 651, "filemap": 651, "mirbas": 651, "hmdbmap": 651, "fly": 651, "mapread": 651, "mappingt": 651, "mapper": 651, "dispatch": 651, "geneid": 651, "hgnc": 651, "refseqp": 651, "input_cl": 651, "29850": 651, "eas": 651, "ac_queri": 651, "ac_map": 651, "biomart_map": 651, "pro_map": 651, "array_map": 651, "bigg": 651, "biocyc": 651, "cas_registry_numb": 651, "ch": 651, "8561": 651, "tbl": 651, "translation_dict": 651, "20243": 651, "q00604": 651, "ndp": 651, "q9hb19": 651, "plekha2": 651, "q16718": 651, "ndufa5": 651, "p55769": 651, "snu13": 651, "q92886": 651, "neurog1": 651, "q6t4r5": 651, "nh": 651, "p80188": 651, "lcn2": 651, "q86xr2": 651, "fam129c": 651, "q5t2w1": 651, "pdzk1": 651, "q9bsh3": 651, "nicn1": 651, "translation_df": 651, "20375": 651, "q96l92": 651, "snx27": 651, "20376": 651, "q9unh6": 651, "snx7": 651, "20377": 651, "q5vwj9": 651, "snx30": 651, "20378": 651, "q9bzz2": 651, "siglec1": 651, "20379": 651, "q96bd0": 651, "slco4a1": 651, "20380": 651, "oma": 651, "ensembl_hc": 651, "ensembl_typ": 651, "one2on": 651, "human_mouse_genesymbol": 651, "get_dict": 651, "confdenc": 651, "full_record": 651, "omaortholog": 651, "rel_typ": 651, "12704": 651, "5703125": 651, "get_df": 651, "h4c3": 651, "h4c1": 651, "1262": 651, "050049": 651, "h4c12": 651, "h4c11": 651, "h4c9": 651, "18446": 651, "gdap2": 651, "5553": 651, "779785": 651, "18447": 651, "itga8": 651, "10772": 651, "969727": 651, "18448": 651, "sema3f": 651, "9121": 651, "080078": 651, "18449": 651, "eepd1": 651, "5874": 651, "350098": 651, "18450": 651, "drg2": 651, "4423": 651, "589844": 651, "18451": 651, "everywher": 651, "deal": 651, "hsapien": 651, "ensmebl": 651, "space": 651, "hsa": 651, "ensure_ncbi_tax_id": 651, "ensure_latin_nam": 651, "cow": 651, "bo": 651, "tauru": 651, "ensure_common_nam": 651, "erithacu": 651, "rubecula": 651, "european": 651, "robin": 651, "uniprot_taxid": 651, "p53104": 651, "saccharomyc": 651, "cerevisia": 651, "divers": 651, "essenti": 651, "proteom": 651, "harbor": 651, "littl": 651, "119": 651, "iuniprot": 651, "all_swissprot": 651, "all_trembl": 651, "3m": 651, "86440": 651, "17131": 651, "69300": 651, "against": [651, 654], "124": 651, "valid_uniprot": 651, "a0a8d0h0c2": 651, "inde": 651, "125": 651, "is_uniprot": 651, "122": 651, "is_swissprot": 651, "123": 651, "126": 651, "protein_datasheet": 651, "egfr_human": 651, "1210": 651, "o00688": 651, "o00732": 651, "p06268": 651, "q14225": 651, "q68gs5": 651, "q92795": 651, "q9bzs2": 651, "q9gzx1": 651, "q9h2c9": 651, "q9h3c9": 651, "q9umd7": 651, "q9umd8": 651, "q9umg5": 651, "dt": 651, "jul": 651, "1986": 651, "nov": 651, "1997": 651, "283": 651, "recnam": 651, "eco": 651, "0000305": 651, "altnam": 651, "flag": 651, "precursor": 651, "gn": 651, "0000312": 651, "3236": 651, "eukaryota": 651, "metazoa": 651, "chordata": 651, "craniata": 651, "vertebrata": 651, "euteleostomi": 651, "eutheria": 651, "euarchontoglir": 651, "primat": 651, "haplorrhini": 651, "catarrhini": 651, "hominida": 651, "ox": 651, "ncbi_taxid": 651, "rn": 651, "rp": 651, "nucleotid": 651, "58080": 651, "131": 651, "egfr_histori": 651, "uniprot_histori": 651, "uniprotrecordhistori": 651, "2022_04": 651, "282": 651, "2022_03": 651, "281": 651, "2022_02": 651, "280": 651, "2022_01": 651, "279": 651, "2021_04": 651, "2021": 651, "278": 651, "50933": 651, "132": 651, "uniprot_recent_vers": 651, "133": 651, "uniprot_history_recent_datasheet": 651, "deploi": 651, "transit": 651, "uniprot_data": 651, "uniprot_queri": 651, "situat": 651, "uniprot_preprocess": 651, "clutter": 651, "transmembran": [651, 654], "a0a087x1c5": 651, "cytochrom": 651, "p450": 651, "a0a0b4j2f2": 651, "superfamili": 651, "camk": 651, "ser": 651, "thr": 651, "ampk": 651, "subfamili": 651, "a0a0k2s4q6": 651, "cd300": 651, "a0a1b0gtw7": 651, "peptidas": 651, "m8": 651, "a0av02": 651, "slc12a": 651, "transport": 651, "a0av96": 651, "rrm": 651, "rbm47": 651, "a0avf1": 651, "ift56": 651, "a0avi4": 651, "tmem129": 651, "a0avk6": 651, "dp": 651, "a0avt1": 651, "ubiquitin": [651, 654], "a0fgr8": 651, "synaptotagmin": 651, "a0fgr9": 651, "a0jlt2": 651, "mediat": 651, "a0jp26": 651, "pote": 651, "a0mz66": 651, "shootin": 651, "a0pjk1": 651, "sodium": 651, "symport": 651, "ssf": 651, "tc": 651, "a0pjy2": 651, "krueppel": 651, "c2h2": 651, "zinc": 651, "finger": 651, "a0pk00": 651, "tmem120": 651, "a0pk11": 651, "clarin": 651, "a1a4y4": 651, "trafac": 651, "dynamin": 651, "gtpase": 651, "irg": 651, "a1a519": 651, "fam170": 651, "a1a5b4": 651, "anoctamin": 651, "a1a5c7": 651, "orga": 651, "510530": 651, "uiprot": 651, "funcion": 651, "up000004102": 651, "d1ym56": 651, "d1ymj2": 651, "d1yn32": 651, "d1ynb3": 651, "d1ypz1": 651, "d1yr07": 651, "d1yr15": 651, "d1yr93": 651, "d1yrb4": 651, "d1yrb7": 651, "cleaner": 651, "imperfect": 651, "job": 651, "badli": 651, "136": 651, "uniprot_taxonomi": 651, "p00521": 651, "abelson": 651, "murin": 651, "viru": 651, "p03333": 651, "h8zm73": 651, "abi": 651, "balsamea": 651, "balsam": 651, "fir": 651, "pinu": 651, "h8zm71": 651, "q9mv51": 651, "firma": 651, "momi": 651, "o81086": 651, "grandi": 651, "grand": 651, "o24474": 651, "o24475": 651, "o64404": 651, "o64405": 651, "q948z0": 651, "q9m7d1": 651, "q9m7d0": 651, "o22340": 651, "q9m7c9": 651, "q5k3v1": 651, "homolepi": 651, "nikko": 651, "p21715": 651, "abrothrix": 651, "jelskii": 651, "akodon": 651, "jelski": 651, "altiplano": 651, "p11140": 651, "abru": 651, "56985": 651, "139": 651, "uniprot_ncbi_taxids_2": 651, "648330": 651, "aed": 651, "albopictu": 651, "densoviru": 651, "isol": 651, "boublik": 651, "1994": 651, "aaldnv": 651, "10804": 651, "adeno": 651, "aav": 651, "648242": 651, "srivastava": 651, "1982": 651, "118452": 651, "abacion": 651, "magnum": 651, "milliped": 651, "72259": 651, "abaei": 651, "nicipp": 651, "sleepi": 651, "orang": 651, "butterfli": 651, "eurema": 651, "102642": 651, "abax": 651, "parallelepipedu": 651, "ground": 651, "beetl": 651, "392897": 651, "abalist": 651, "stellari": 651, "starri": 651, "triggerfish": 651, "balist": 651, "75332": 651, "abbottina": 651, "rivulari": 651, "chines": 651, "gudgeon": 651, "gobio": 651, "515833": 651, "abdopu": 651, "aculeatu": 651, "engl": 651, "118050": 651, "140": 651, "uniprot_loc": 651, "q96ec8": 651, "uniprotloc": 651, "golgi": 651, "apparatu": 651, "membran": [651, 654], "q6zms4": 651, "nucleu": 651, "q8n8l2": 651, "q15916": 651, "q3mis6": 651, "q6p280": 651, "q969w1": 651, "endoplasm": 651, "reticulum": 651, "o14978": 651, "q66k41": 651, "q15937": 651, "q9p2j8": 651, "q8nd82": 651, "q9np64": 651, "nucleolu": 651, "143466": 651, "141": 651, "uniprot_keyword": 651, "p63120": 651, "uniprotkeyword": 651, "aspartyl": 651, "proteas": 651, "autocatalyt": 651, "cleavag": 651, "erv": 651, "hydrolas": 651, "ribosom": 651, "frameshift": 651, "transpos": 651, "splice": 651, "helix": 651, "metal": 651, "unipro": 651, "445111": 651, "142": 651, "uniprot_famili": 651, "uniprotfamili": 651, "a2": 651, "herv": 651, "ii": 651, "hml": 651, "yip1": 651, "q86uk7": 651, "znf598": 651, "dhhc": 651, "palmitoyltransferas": 651, "q8iuh4": 651, "77892": 651, "143": 651, "uniprot_tissu": 651, "uniprottissu": 651, "brain": 651, "wide": 651, "undefin": 651, "colon": 651, "heart": 651, "kidnei": 651, "leukocyt": 651, "liver": 651, "lung": 651, "ovari": 651, "pancrea": 651, "placenta": 651, "prostat": 651, "skelet": 651, "muscl": [651, 654], "intestin": 651, "spleen": 651, "testi": 651, "318790": 651, "144": 651, "uniprot_topologi": 651, "uniprottopologi": 651, "cytoplasm": 651, "137": 651, "146": 651, "206": 651, "212": 651, "lumen": 651, "106": 651, "115": 651, "168": 651, "184": 651, "234": 651, "236": 651, "85": 651, "105": 651, "116": 651, "147": 651, "167": 651, "185": 651, "205": 651, "213": 651, "233": 651, "138": 651, "198": 651, "288": 651, "377": 651, "220": 651, "544230": 651, "bulk": 651, "153": 651, "q14457": 651, "becn1": 651, "154": 651, "156": 651, "subcellular_loc": 651, "112631": 651, "1050": 651, "preautophagosom": 651, "starvat": 651, "puncat": 651, "primarili": 651, "sequest": 651, "portion": 651, "autophagosom": 651, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 651, "1329": 651, "ineffici": 651, "hand": 651, "158": 651, "ordereddict": 651, "134277": 651, "51896": 651, "450": 651, "tabular": [651, 654], "159": 651, "print_featur": 651, "There": 651, "character": 651, "160": 651, "function_o": 651, "subcellula": 651, "r_genecard": 651, "r_locat": 651, "3d": 651, "alternativ": 651, "20254": 651, "unless": 651, "uniprot_cleanup": 651, "exploit": 651, "162": 651, "q9uq28": 651, "8m": 651, "acquir": 651, "mtor": [651, 654], "akt1": 651, "s473": 651, "sparser": 651, "t450": 651, "t308": 651, "domainmotif": 651, "e_ptm": 651, "p31749": 651, "473": 651, "14761976": 651, "15047712": 651, "15364915": 651, "15718470": 651, "15899889": 651, "16221682": 651, "17013611": 651, "19844585": 651, "20333297": 651, "20489726": 651, "21157483": 651, "21592956": 651, "23006971": 651, "8978681": 651, "9736715": 651, "dabas": 651, "enzyme_genesymbol": 651, "substrate_genesymbol": 651, "residue_typ": 651, "residue_offset": 651, "p63104": 651, "ywhaz": 651, "hprd_mimp": 651, "11956222": 651, "12861023": 651, "phosphosite_mimp": 651, "phosp": 651, "15071501": 651, "p45983": 651, "mapk8": 651, "phosph": 651, "15696159": 651, "p06493": 651, "cdk1": 651, "712": 651, "rea": 651, "15525677": 651, "18220": 651, "2171679": 651, "41421": 651, "p29597": 651, "tyk2": 651, "p51692": 651, "stat5b": 651, "699": 651, "10830280": 651, "11751923": 651, "12411494": 651, "41422": 651, "q06418": 651, "tyro3": 651, "p19174": 651, "plcg1": 651, "771": 651, "12601080": 651, "15144186": 651, "15592455": 651, "41423": 651, "q9h4a3": 651, "wnk1": 651, "q8tax0": 651, "osr1": 651, "18270262": 651, "41424": 651, "q96j92": 651, "wnk4": 651, "335": 651, "15883153": 651, "41425": 651, "q9nyl2": 651, "map3k20": 651, "q92903": 651, "cds1": 651, "10973490": 651, "ve": 651, "never": 651, "power": 651, "believ": 651, "ever": 651, "topic": 651, "186": 651, "seqc": 651, "sequencecontain": 651, "preload_seq": 651, "get_seq": 651, "get_region": 651, "tfiirclqwt": 651, "187": 651, "human_proteom": 651, "swissprot_seq": 651, "0x689900d45cc0": 651, "0x689908ea8f70": 651, "0x689908eaa4a0": 651, "0x6899223538b0": 651, "0x689922353c70": 651, "o60384": 651, "0x689922350730": 651, "0x689922353310": 651, "0x689922353760": 651, "0x689922353190": 651, "0x689922350d90": 651, "0x689922353220": 651, "p61129": 651, "0x689922353370": 651, "0x6899223534f0": 651, "0x689922350c70": 651, "0x689922351450": 651, "0x689922353910": 651, "0x6899223502b0": 651, "p98182": 651, "0x689922350280": 651, "0x68992235": 651, "53045": 651, "191": 651, "ygct": 651, "seqlookup": 651, "625": 651, "annotationt": 651, "3788067": 651, "51636": 651, "78": 651, "cpad": 651, "2308": 651, "1358": 651, "annotationbas": 651, "regulator_typ": 651, "effect_on_pathwai": 651, "effect_on_canc": 651, "effect_on_cancer_outcom": 651, "cancer": 651, "pathway_categori": 651, "get_valu": 651, "acut": 651, "lymphoblast": 651, "myeloid": 651, "aml": 651, "basal": 651, "bladder": 651, "breast": 651, "cervic": 651, "cholangiocarcinoma": 651, "choriocarcinoma": 651, "chronic": 651, "lymphocyt": 651, "cll": 651, "cml": 651, "colorect": 651, "endometri": 651, "esophag": 651, "ew": 651, "sarcoma": 651, "gallbladd": 651, "gastric": 651, "glioma": 651, "hepatocellular": 651, "hodgkin": 651, "lymphoma": 651, "infantil": 651, "hemangioma": 651, "laryng": 651, "malign": 651, "melanoma": 651, "pleural": 651, "mesothelioma": 651, "mantl": 651, "myeloma": 651, "nasopharyng": 651, "neuroblastoma": 651, "oral": 651, "osteosarcoma": 651, "ovarian": 651, "pancreat": 651, "pituitari": 651, "adenoma": 651, "renal": 651, "squamou": 651, "synovi": 651, "testicular": 651, "thyroid": 651, "a6ndv4": 651, "o14745": 651, "o14862": 651, "o15169_p25054": 651, "o94813": 651, "o94953": 651, "p06733": 651, "glucos": 651, "p11166": 651, "p25054": 651, "p40261": 651, "p49327": 651, "p54687": 651, "pten": 651, "phosphatas": 651, "p60484": 651, "q01973": 651, "q12888": 651, "q13620": 651, "q96cx2": 651, "q99558": 651, "mimat0000069": 651, "mimat0000089": 651, "mimat0000093": 651, "mimat0000262": 651, "mimat0000274": 651, "mimat0000422": 651, "mimat0000427": 651, "mimat0000437": 651, "mimat0000449": 651, "mimat0000455": 651, "mimat0000460": 651, "mimat0000461": 651, "mimat0000617": 651, "mimat0003266": 651, "mimat0003320": 651, "o75473": 651, "o75888": 651, "o76041": 651, "p06756": 651, "p13631": 651, "p22676": 651, "p25791": 651, "p546": 651, "1279": 651, "usual": 651, "215": 651, "celltypist": 651, "927": 651, "integrin": 651, "62": 651, "cellcellinteract": 651, "5544": 651, "panglaodb": 651, "8479": 651, "4813": 651, "lambert2018": 651, "3281": 651, "3277": 651, "cancersea": 651, "2515": 651, "1992": 651, "phobiu": 651, "35382": 651, "go_intercel": 651, "48799": 651, "18377": 651, "18127": 651, "15903": 651, "surfaceom": 651, "3558": 651, "matrisom": 651, "1514": 651, "hpa_secretom": 651, "3568": 651, "1748": 651, "1695": 651, "annotati": 651, "5842": 651, "exempl": 651, "mainclass": 651, "subclass": 651, "subsubclass": 651, "collagen": 651, "ecm": [651, 654], "glycoprotein": 651, "affili": 651, "proteoglycan": 651, "get_subset": 651, "a6nmz7": 651, "a8tx70": 651, "b4dz39": 651, "homotrim": 651, "p02452": 651, "ht_dm_cluster278": 651, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 651, "trimer": 651, "p02452_p08123": 651, "p02458": 651, "xi": 651, "p02458_p12107_p13942": 651, "p02458_p20908_p25067": 651, "p02458_p20908_p25067_p29400": 651, "p02458_p25067_p29400": 651, "iii": 651, "p02461": 651, "p02462": 651, "iv": 651, "p02462_p08572": 651, "p05997_p12107": 651, "p05997_p12107_p20908": 651, "p05997_p20908": 651, "p05997_p20908_p25940": 651, "p08572": 651, "p12109_p12110": 651, "3072": 651, "membership": 651, "signalink": [651, 654], "protein_sourc": 651, "signalinkpathwai": 651, "keggpathwai": 651, "netpathpathwai": 651, "complex_sourc": 651, "28745": 651, "6762": 651, "all_annot": 651, "jak": 651, "stat": 651, "actin": 651, "cytoskeleton": 651, "oxytocin": 651, "phospholipas": 651, "inhibitor": 651, "resist": 651, "papillomaviru": 651, "infect": 651, "carbon": 651, "endocytosi": 651, "cholin": 651, "parathyroid": 651, "synthesi": 651, "2540": 651, "record_id": [651, 654], "q16181": 651, "sept7": 651, "upregul": 651, "migrat": 651, "14396": 651, "p30990": 651, "nt": 651, "2306": 651, "14397": 651, "2307": 651, "14398": 651, "erk": 651, "14399": 651, "14400": 651, "14401": 651, "convent": 651, "tidyvers": 651, "tidyr": [651, 654], "pivot_wid": 651, "unintuit": 651, "index_col": 651, "drop": 651, "axi": 651, "set_index": 651, "unstack": 651, "droplevel": 651, "reset_index": 651, "mimat0000431": 651, "mir": 651, "suppress": 651, "tumor": 651, "invas": 651, "adam10": 651, "notch1": [651, 654], "notch": 651, "mimat0005886": 651, "1297": 651, "aeg1": 651, "wnt": 651, "q9up65": 651, "pla2g4c": 651, "chemotaxi": 651, "downregul": 651, "akt": 651, "pi3k": 651, "q92600": 651, "cnot9": 651, "2303": 651, "p16422": 651, "epcam": 651, "2304": 651, "q9y6y0": 651, "ivns1abp": 651, "2305": 651, "kctd12": 651, "catenin": 651, "goe": 651, "customannot": 651, "anyon": 651, "intercellannot": 651, "310033": 651, "43617": 651, "intercell_annot": 651, "annot_combined_class": 651, "revis": 651, "scope": [651, 654], "tgf": 651, "plasma": [651, 654], "annotdefkei": 651, "annotationgroup": 651, "5150": 651, "5760": 651, "7041": 651, "transmembrane_predict": 651, "6444": 651, "transmembrane_phobiu": 651, "almen2009": 651, "transmembrane_sosui": 651, "1663": 651, "tran": 651, "143945": 651, "behav": 651, "gaba_receptor": 651, "gaba": 651, "a8mpy1": 651, "gabra1": 651, "gabrb2": 651, "gabrd": 651, "o14764_p14867_p47870": 651, "o14764_p28472_p48169": 651, "o14764_p28472_q16445": 651, "o14764_p47870_p48169": 651, "o14764_p47870_q16445": 651, "gabbr1": 651, "gabbr2": 651, "o75899_q9ubs5": 651, "p14867": 651, "gamma": 651, "p14867_p18507_p28472": 651, "gabrg2": 651, "p14867_p18507_p47870": 651, "p18507_p28472_p31644": 651, "p18507_p28472_p34903": 651, "p18507_p28472_p47869": 651, "p18507_p28472_q16445": 651, "p18507_q8n1c3": 651, "register_network": 651, "statist": 651, "counts_df": 651, "consensus_scor": 651, "transmitt": [651, 654], "receiv": [651, 654], "plasma_membrane_transmembran": 651, "plasma_membrane_peripher": 651, "n_uniprot": 651, "resource_specif": [651, 654], "1120": 651, "parin_adhesion_regul": 651, "intracellular_intercellular_rel": 651, "1121": 651, "plakophilin_adhesion_regul": 651, "1122": 651, "actin_regulation_adhesom": 651, "1123": 651, "adhesion_cytoskeleton_adaptor": 651, "118": 651, "1124": 651, "1125": 651, "q96jp9": 651, "cdhr1": 651, "q9p126": 651, "clec1b": 651, "q13585": 651, "gpr50": 651, "q8n9i0": 651, "syt2": 651, "o43614": 651, "hcrtr2": 651, "a6njy1": 651, "slc9b1p1": 651, "q5ri15": 651, "cox20": 651, "q13948": 651, "cux1": 651, "q8ngk4": 651, "or52k1": 651, "q8iys2": 651, "kiaa2013": 651, "neurotensin": 651, "recom": 651, "o95665": 651, "ntsr2": 651, "410": 651, "45385": 651, "neurotensi": 651, "tr": 651, "idecapepti": 651, "disulfid": 651, "7598": 651, "tree": [651, 653], "80": 651, "0x689946b55570": 651, "82": 651, "0x68991cdc9b40": 651, "NOT": 651, "p21333": 651, "p80108": 651, "p62258": 651, "q9nrx4": 651, "p54710": 651, "q8ner1": 651, "p01303": 651, "0001507": 651, "0001527": 651, "0003351": 651, "0003355": 651, "0005201": 651, "0005577": 651, "0005582": 651, "0005583": 651, "0005584": 651, "0005585": 651, "0005586": 651, "0005587": 651, "0005588": 651, "0005590": 651, "0005591": 651, "0005592": 651, "0005595": 651, "0005596": 651, "0005599": 651, "0005601": 651, "0005602": 651, "0005604": 651, "0005606": 651, "0005607": 651, "0005608": 651, "0005609": 651, "0005610": 651, "0005611": 651, "0005612": 651, "0005614": 651, "0005615": 651, "0005616": 651, "0006858": 651, "0006859": 651, "0006860": 651, "0009519": 651, "0010367": 651, "0016914": 651, "0016942": 651, "0020003": 651, "0020004": 651, "0020005": 651, "0020006": 651, "0030020": 651, "0030021": 651, "0030023": 651, "0030197": 651, "0030345": 651, "0030934": 651, "0030935": 651, "0030938": 651, "0031012": 651, "0031395": 651, "0032311": 651, "0032579": 651, "0033165": 651, "0033166": 651, "0034358": 651, "0034359": 651, "0034360": 651, "0034361": 651, "0034362": 651, "0034363": 651, "0034364": 651, "0034365": 651, "00343": 651, "3104": 651, "homomultim": 651, "update_index": 651, "91": 651, "p42345": [651, 654], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 651, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 651, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 651, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 651, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 651, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 651, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 651, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 651, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 651, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 651, "5348": 651, "equival": 651, "represent": 651, "alphabet": 651, "sort": [651, 653], "despit": [651, 653], "fact": 651, "98": 651, "q92793": 651, "q09472": 651, "components_genesymbol": 651, "nfya_nfyb_nfyc": 651, "corum": [651, 654], "compleat": 651, "complexport": 651, "15243141": 651, "14755292": 651, "9372932": 651, "4478": 651, "hc1449": 651, "deptor_eef1a1_mlst8_prr5_rictor": 651, "c2": 651, "akt1s1_deptor_mlst8_mtor_rptor": 651, "btrc_cul1_skp1": 651, "9990852": 651, "c5": 651, "227": 651, "hc757": 651, "crebbp_ep300": 651, "c6": 651, "28168": 651, "npnt": 651, "q5szk8_q6uxi9_q86xx4": 651, "fras1_frem2_npnt": 651, "28169": 651, "nrp1_nrp2": 651, "o14786_o60462_q9y4d7": 651, "nrp1_nrp2_plxnd1": 651, "28170": 651, "nrp2_plxna2": 651, "o60462_o75051": 651, "28171": 651, "nrp2_plxna4": 651, "o60462_q9hcm2": 651, "28172": 651, "ptch2_smo": 651, "q99835_q9y6c5": 651, "compil": [651, 652], "good": 651, "reli": 651, "save_to_pickl": 651, "myannot": 651, "complexdb": 651, "mycomplex": 651, "char": 651, "xxxxx": 651, "ten": 651, "l0n17": 651, "disclaim": 651, "annoi": 651, "101": 651, "least": 651, "research": 651, "educ": 651, "credit": 651, "publish": 651, "gnu": 651, "104": 651, "prioriti": 651, "107": 651, "console_level": 651, "si": 651, "uniroma2": 651, "download_complex": 651, "d7b8673e83e43a01c533f9de5a2b04b9": 651, "1046": 651, "creation": 651, "builtin": 651, "shell": 651, "dev": 651, "108": 651, "devnul": 651, "notic": 651, "109": 651, "greet": 651, "childoflogg": 651, "def": 651, "say_someth": 651, "_log": 651, "anywher": 651, "111": 651, "_logger": 651, "mylogg": 651, "strai": 651, "flood": 651, "112": 651, "hasn": 651, "thoroughli": 651, "scai": 651, "fraunhof": 651, "captur": 651, "span": 651, "rang": 651, "ptmaggreg": 651, "belgraph": 651, "bel_graph": 651, "summar": 651, "export_relationship": 651, "omnipath_pathwai": 651, "fp": 651, "bel_str": 651, "333": 651, "interaction_input": 651, "singnalink": 651, "interaction_datafram": 651, "peripher": [651, 654], "protein_datafram": 651, "along": 651, "load_omnipath": 651, "entir": 651, "sai": 651, "worri": 651, "network1": 651, "entreza": 651, "entrezb": 651, "1950": 651, "5290": 651, "207": 651, "2932": 651, "network2": 651, "pik3ca": 651, "sos1": 651, "rac1": 651, "map3k1": 651, "hra": 651, "gsk3b": 651, "iinput_format": 651, "input1": 651, "readset": 651, "egf1": 651, "input2": 651, "egf2": 651, "ecount": 651, "vcount": 651, "dgraph": 651, "3241": 651, "dir": 651, "agre": 651, "p17252": 651, "q15139": 651, "stimulatori": 651, "revers": 651, "get_dir": 651, "inhibitori": 651, "contradict": 651, "decid": 651, "rid": 651, "consensu": 651, "consensus_edg": 651, "helper": 651, "esr1": 651, "plural": 651, "gss": 651, "atg16l2": 651, "could": 651, "affect": 651, "gs_stimulated_bi": 651, "_namedvertexseq": 651, "seri": 651, "bit": 651, "contraintuit": 651, "gs_stimul": 651, "affected_bi": 651, "similari": 651, "inhibited_bi": 651, "gs_": 651, "up_": 651, "neighbor": 651, "neighborhood": 651, "increas": 651, "rapidli": 651, "atg3": [651, 654], "get_edg": 651, "map1lc3b": [651, 654], "sqstm1": [651, 654], "refs_by_sourc": 651, "abil": 651, "librari": 651, "egf_network": 651, "png": 651, "777777": 651, "97be73": 651, "ffffff": 651, "bug": 651, "ipython": 651, "visibl": 651, "inlin": 651, "120": 651, "imag": 651, "click": 652, "changelog": 653, "improv": 653, "remot": 653, "partial": 653, "pyreact": 653, "biopaxread": 653, "rule": [653, 654], "workflow": 653, "mysql_connect": 653, "python3": 653, "websrvtab": 653, "dataio": 653, "docstr": 653, "focus": 653, "rewritten": 653, "workaround": 653, "terribl": 653, "reflist": 653, "becam": 653, "paremet": 653, "reorgan": 653, "redesign": 653, "src": 653, "yml": 653, "rna": 653, "neo4j": 653, "backend": 653, "biocyph": 653, "dlmanag": 653, "protocol": 654, "wget": 654, "whatev": 654, "recogn": 654, "webserv": 654, "optimum": 654, "qualiti": 654, "interacion": 654, "rodent": 654, "counterpart": 654, "omic": 654, "arget": 654, "source_target": 654, "atg7": 654, "atg4b": 654, "map1lc3a": 654, "map1lc3c": 654, "q9h0r8": 654, "gabarap": 654, "gabarapl2": 654, "appear": 654, "fyn": 654, "ens_sub": 654, "phosphosite_noref": 654, "hearth": 654, "dplyr": 654, "signalink_pathwai": 654, "bmp7": 654, "hpa_tissu": 654, "funtion": 654, "ion": 654, "interleukin": 654, "deliv": 654, "exact": 654, "atg4a": 654, "bmp8b": 654, "intuit": 654, "repli": 654}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [489, 0, 0, "-", "internals"], [522, 0, 0, "-", "legacy"], [526, 3, 1, "", "log"], [527, 0, 0, "-", "resources"], [548, 0, 0, "-", "share"], [576, 0, 0, "-", "utils"], [626, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "abs"], [12, 0, 0, "-", "acsn"], [15, 0, 0, "-", "adrecs"], [25, 0, 0, "-", "biogrid"], [28, 0, 0, "-", "biomart"], [34, 0, 0, "-", "biomodels"], [40, 0, 0, "-", "ca1"], [42, 0, 0, "-", "cancercellmap"], [44, 0, 0, "-", "cell"], [46, 0, 0, "-", "chembl"], [54, 0, 0, "-", "clinvar"], [57, 0, 0, "-", "common"], [64, 0, 0, "-", "compath"], [66, 0, 0, "-", "cpdb"], [69, 0, 0, "-", "credentials"], [71, 0, 0, "-", "ctdbase"], [74, 0, 0, "-", "dbptm"], [78, 0, 0, "-", "ddinter"], [84, 0, 0, "-", "deathdomain"], [87, 0, 0, "-", "dip"], [90, 0, 0, "-", "diseases"], [98, 0, 0, "-", "dorothea"], [109, 0, 0, "-", "drugbank"], [116, 0, 0, "-", "drugcentral"], [120, 0, 0, "-", "ebi"], [122, 0, 0, "-", "elm"], [127, 0, 0, "-", "embopress"], [129, 0, 0, "-", "encode"], [131, 0, 0, "-", "ensembl"], [133, 0, 0, "-", "eutils"], [135, 0, 0, "-", "exocarta"], [138, 0, 0, "-", "expasy"], [141, 0, 0, "-", "genecards"], [145, 3, 1, "", "get_method"], [146, 0, 0, "-", "go"], [168, 0, 0, "-", "gpcrdb"], [170, 0, 0, "-", "graphviz"], [172, 0, 0, "-", "hmdb"], [200, 0, 0, "-", "hprd"], [205, 0, 0, "-", "htri"], [207, 0, 0, "-", "humsavar"], [209, 0, 0, "-", "i3d"], [211, 0, 0, "-", "ielm"], [214, 0, 0, "-", "imweb"], [217, 0, 0, "-", "innatedb"], [219, 0, 0, "-", "instruct"], [222, 0, 0, "-", "intact"], [224, 0, 0, "-", "interpro"], [229, 0, 0, "-", "ipi"], [231, 0, 0, "-", "kegg_api"], [248, 0, 0, "-", "kirouac2010"], [250, 0, 0, "-", "laudanna"], [253, 0, 0, "-", "lincs"], [255, 0, 0, "-", "lncdisease"], [257, 0, 0, "-", "lncrnadb"], [259, 0, 0, "-", "macrophage"], [261, 0, 0, "-", "main"], [262, 0, 0, "-", "mimp"], [266, 0, 0, "-", "mir2disease"], [268, 0, 0, "-", "mirbase"], [276, 0, 0, "-", "mirdeathdb"], [278, 0, 0, "-", "mirecords"], [280, 0, 0, "-", "mirtarbase"], [282, 0, 0, "-", "mitab"], [285, 0, 0, "-", "mppi"], [287, 0, 0, "-", "ncrdeathdb"], [289, 0, 0, "-", "negatome"], [291, 0, 0, "-", "netbiol"], [294, 0, 0, "-", "offsides"], [296, 0, 0, "-", "ontology"], [299, 0, 0, "-", "opentargets"], [305, 0, 0, "-", "oreganno"], [308, 0, 0, "-", "pathophenodb"], [311, 0, 0, "-", "pathwaycommons"], [328, 0, 0, "-", "pazar"], [330, 0, 0, "-", "pdzbase"], [332, 0, 0, "-", "pepcyber"], [335, 0, 0, "-", "pfam"], [340, 0, 0, "-", "pharos"], [349, 0, 0, "-", "phobius"], [351, 0, 0, "-", "phosphoelm"], [355, 0, 0, "-", "phosphonetworks"], [358, 0, 0, "-", "phosphopoint"], [361, 0, 0, "-", "pro"], [364, 0, 0, "-", "proteins"], [366, 0, 0, "-", "protmapper"], [370, 0, 0, "-", "pubchem"], [372, 0, 0, "-", "pubmed"], [379, 0, 0, "-", "ramp"], [386, 0, 0, "-", "rdata"], [387, 0, 0, "-", "reaction"], [407, 0, 0, "-", "reactome"], [412, 0, 0, "-", "science"], [414, 0, 0, "-", "sider"], [423, 0, 0, "-", "stitch"], [426, 0, 0, "-", "string"], [431, 0, 0, "-", "switches_elm"], [433, 0, 0, "-", "transmir"], [435, 0, 0, "-", "trip"], [442, 0, 0, "-", "trrust"], [446, 0, 0, "-", "twosides"], [448, 0, 0, "-", "unichem"], [453, 0, 0, "-", "uniprot"], [480, 0, 0, "-", "uniprot_db"]], "pypath.inputs.abs": [[11, 3, 1, "", "abs_interactions"]], "pypath.inputs.acsn": [[13, 3, 1, "", "acsn_interactions"], [14, 3, 1, "", "acsn_interactions_sif"]], "pypath.inputs.adrecs": [[16, 1, 1, "", "AdrecsAdr"], [17, 1, 1, "", "AdrecsChildParent"], [18, 1, 1, "", "AdrecsDrug"], [19, 1, 1, "", "AdrecsDrugAdr"], [20, 1, 1, "", "AdrecsTerm"], [21, 3, 1, "", "adrecs_adr_ontology"], [22, 3, 1, "", "adrecs_drug_adr"], [23, 3, 1, "", "adrecs_drug_identifiers"], [24, 3, 1, "", "adrecs_hierarchy"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "adr_class"], [16, 4, 1, "", "badd"], [16, 2, 1, "", "count"], [16, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "child"], [17, 2, 1, "", "count"], [17, 2, 1, "", "index"], [17, 4, 1, "", "parent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, 2, 1, "", "__init__"], [18, 4, 1, "", "badd"], [18, 2, 1, "", "count"], [18, 4, 1, "", "drug"], [18, 4, 1, "", "drugbank"], [18, 2, 1, "", "index"], [18, 4, 1, "", "kegg"], [18, 4, 1, "", "mesh"], [18, 4, 1, "", "pubchem_cid"], [18, 4, 1, "", "synonyms"], [18, 4, 1, "", "tdd"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "adr"], [19, 4, 1, "", "adr_badd"], [19, 2, 1, "", "count"], [19, 4, 1, "", "drug"], [19, 4, 1, "", "drug_badd"], [19, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, 2, 1, "", "__init__"], [20, 4, 1, "", "adrecs_class"], [20, 4, 1, "", "badd"], [20, 2, 1, "", "count"], [20, 2, 1, "", "index"], [20, 4, 1, "", "meddra"], [20, 4, 1, "", "name"], [20, 4, 1, "", "synonyms"]], "pypath.inputs.biogrid": [[26, 3, 1, "", "biogrid_all_interactions"], [27, 3, 1, "", "biogrid_interactions"]], "pypath.inputs.biomart": [[29, 3, 1, "", "biomart_homology"], [30, 3, 1, "", "biomart_microarray"], [31, 3, 1, "", "biomart_microarray_types"], [32, 3, 1, "", "biomart_microarrays"], [33, 3, 1, "", "biomart_query"]], "pypath.inputs.biomodels": [[35, 3, 1, "", "download_single_model"], [36, 3, 1, "", "get_all_models"], [37, 3, 1, "", "get_biomodels"], [38, 3, 1, "", "get_biomodels_req"], [39, 3, 1, "", "get_single_model"]], "pypath.inputs.ca1": [[41, 3, 1, "", "ca1_interactions"]], "pypath.inputs.cancercellmap": [[43, 3, 1, "", "ccmap_interactions"]], "pypath.inputs.cell": [[45, 3, 1, "", "cell_supplementary"]], "pypath.inputs.chembl": [[47, 3, 1, "", "chembl_activities"], [48, 3, 1, "", "chembl_assays"], [49, 3, 1, "", "chembl_documents"], [50, 3, 1, "", "chembl_drug_indications"], [51, 3, 1, "", "chembl_mechanisms"], [52, 3, 1, "", "chembl_molecules"], [53, 3, 1, "", "chembl_targets"]], "pypath.inputs.clinvar": [[55, 3, 1, "", "clinvar_citations"], [56, 3, 1, "", "clinvar_raw"]], "pypath.inputs.common": [[58, 3, 1, "", "csv_sep_change"], [59, 3, 1, "", "glom_fields"], [60, 3, 1, "", "json_extract"], [61, 3, 1, "", "json_read"], [62, 3, 1, "", "read_table"], [63, 3, 1, "", "read_xls"]], "pypath.inputs.compath": [[65, 3, 1, "", "compath_mappings"]], "pypath.inputs.cpdb": [[67, 3, 1, "", "cpdb_interactions"], [68, 3, 1, "", "cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[70, 3, 1, "", "credentials"]], "pypath.inputs.ctdbase": [[72, 3, 1, "", "ctdbase_relations"], [73, 3, 1, "", "ctdbase_vocabulary"]], "pypath.inputs.dbptm": [[75, 3, 1, "", "dbptm_enzyme_substrate"], [76, 3, 1, "", "dbptm_enzyme_substrate_old"], [77, 3, 1, "", "dbptm_interactions"]], "pypath.inputs.ddinter": [[79, 3, 1, "", "ddinter_drug_interactions"], [80, 3, 1, "", "ddinter_identifiers"], [81, 3, 1, "", "ddinter_interactions"], [82, 3, 1, "", "ddinter_mappings"], [83, 3, 1, "", "ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[85, 3, 1, "", "deathdomain_interactions"], [86, 3, 1, "", "deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[88, 3, 1, "", "dip_interactions"], [89, 3, 1, "", "dip_login"]], "pypath.inputs.diseases": [[91, 3, 1, "", "diseases_general"], [92, 3, 1, "", "experiments_filtered"], [93, 3, 1, "", "experiments_full"], [94, 3, 1, "", "knowledge_filtered"], [95, 3, 1, "", "knowledge_full"], [96, 3, 1, "", "textmining_filtered"], [97, 3, 1, "", "textmining_full"]], "pypath.inputs.dorothea": [[99, 1, 1, "", "DorotheaInteraction"], [100, 3, 1, "", "dorothea_full_raw"], [101, 3, 1, "", "dorothea_interactions"], [102, 3, 1, "", "dorothea_interactions_old"], [103, 3, 1, "", "dorothea_old_csv"], [104, 3, 1, "", "dorothea_rda_raw"], [105, 3, 1, "", "get_dorothea_old"], [106, 3, 1, "", "get_tfregulons"], [107, 3, 1, "", "tfregulons_interactions"], [108, 3, 1, "", "tfregulons_interactions_old"]], "pypath.inputs.dorothea.DorotheaInteraction": [[99, 2, 1, "", "__init__"], [99, 4, 1, "", "all_sources"], [99, 4, 1, "", "chipseq"], [99, 4, 1, "", "chipseq_sources"], [99, 4, 1, "", "coexp"], [99, 4, 1, "", "coexp_sources"], [99, 2, 1, "", "count"], [99, 4, 1, "", "curated"], [99, 4, 1, "", "curated_sources"], [99, 4, 1, "", "effect"], [99, 2, 1, "", "index"], [99, 4, 1, "", "kegg_pathways"], [99, 4, 1, "", "level"], [99, 4, 1, "", "predicted"], [99, 4, 1, "", "predicted_sources"], [99, 4, 1, "", "pubmed"], [99, 4, 1, "", "target"], [99, 4, 1, "", "tf"]], "pypath.inputs.drugbank": [[110, 1, 1, "", "DrugbankFull"], [111, 3, 1, "", "drugbank_annotations"], [112, 3, 1, "", "drugbank_drugs"], [113, 3, 1, "", "drugbank_interactions"], [114, 3, 1, "", "drugbank_mapping"], [115, 3, 1, "", "drugbank_raw_interactions"]], "pypath.inputs.drugbank.DrugbankFull": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "drugbank_drugs_full"], [110, 2, 1, "", "drugbank_external_ids_full"], [110, 2, 1, "", "drugbank_properties_full"], [110, 2, 1, "", "drugbank_targets_full"]], "pypath.inputs.drugcentral": [[117, 3, 1, "", "drugcentral_drugs"], [118, 3, 1, "", "drugcentral_interactions"], [119, 3, 1, "", "drugcentral_mapping"]], "pypath.inputs.ebi": [[121, 3, 1, "", "ebi_rest"]], "pypath.inputs.elm": [[123, 3, 1, "", "elm_classes"], [124, 3, 1, "", "elm_domains"], [125, 3, 1, "", "elm_instances"], [126, 3, 1, "", "elm_interactions"]], "pypath.inputs.embopress": [[128, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.encode": [[130, 3, 1, "", "encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[132, 3, 1, "", "ensembl_organisms"]], "pypath.inputs.eutils": [[134, 3, 1, "", "esummary"]], "pypath.inputs.exocarta": [[136, 3, 1, "", "get_exocarta"], [137, 3, 1, "", "get_vesiclepedia"]], "pypath.inputs.expasy": [[139, 3, 1, "", "expasy_enzyme_classes"], [140, 3, 1, "", "expasy_enzymes"]], "pypath.inputs.genecards": [[142, 3, 1, "", "genecards_datasheet"], [143, 3, 1, "", "genecards_soup"], [144, 3, 1, "", "genecards_summaries"]], "pypath.inputs.go": [[147, 3, 1, "", "get_go_desc"], [148, 3, 1, "", "get_go_quick"], [149, 3, 1, "", "get_goslim"], [150, 3, 1, "", "go_ancestors"], [151, 3, 1, "", "go_ancestors_goose"], [152, 3, 1, "", "go_ancestors_quickgo"], [153, 3, 1, "", "go_annotations"], [154, 3, 1, "", "go_annotations_all"], [155, 3, 1, "", "go_annotations_goa"], [156, 3, 1, "", "go_annotations_goose"], [157, 3, 1, "", "go_annotations_quickgo"], [158, 3, 1, "", "go_annotations_solr"], [159, 3, 1, "", "go_annotations_uniprot"], [160, 3, 1, "", "go_descendants"], [161, 3, 1, "", "go_descendants_goose"], [162, 3, 1, "", "go_descendants_quickgo"], [163, 3, 1, "", "go_descendants_to_ancestors"], [164, 3, 1, "", "go_terms"], [165, 3, 1, "", "go_terms_goose"], [166, 3, 1, "", "go_terms_quickgo"], [167, 3, 1, "", "go_terms_solr"]], "pypath.inputs.gpcrdb": [[169, 3, 1, "", "gpcrdb_annotations"]], "pypath.inputs.graphviz": [[171, 3, 1, "", "graphviz_attrs"]], "pypath.inputs.hmdb": [[173, 0, 0, "-", "common"], [178, 0, 0, "-", "metabolites"], [183, 0, 0, "-", "proteins"], [188, 0, 0, "-", "schema"], [193, 0, 0, "-", "structures"], [195, 0, 0, "-", "visual"], [198, 0, 0, "-", "xml"]], "pypath.inputs.hmdb.common": [[174, 3, 1, "", "iter"], [175, 3, 1, "", "mapping"], [176, 3, 1, "", "raw"], [177, 3, 1, "", "table"]], "pypath.inputs.hmdb.metabolites": [[179, 3, 1, "", "iter"], [180, 3, 1, "", "mapping"], [181, 3, 1, "", "raw"], [182, 3, 1, "", "table"]], "pypath.inputs.hmdb.proteins": [[184, 3, 1, "", "iter"], [185, 3, 1, "", "mapping"], [186, 3, 1, "", "raw"], [187, 3, 1, "", "table"]], "pypath.inputs.hmdb.schema": [[189, 0, 0, "-", "common"], [191, 0, 0, "-", "metabolites"], [192, 0, 0, "-", "proteins"]], "pypath.inputs.hmdb.schema.common": [[190, 1, 1, "", "Field"]], "pypath.inputs.hmdb.schema.common.Field": [[190, 2, 1, "", "__init__"]], "pypath.inputs.hmdb.structures": [[194, 3, 1, "", "sdf"]], "pypath.inputs.hmdb.visual": [[196, 3, 1, "", "show_structure"], [197, 3, 1, "", "structure_svg"]], "pypath.inputs.hmdb.xml": [[199, 3, 1, "", "hmdb_xml"]], "pypath.inputs.hprd": [[201, 3, 1, "", "get_hprd"], [202, 3, 1, "", "hprd_enzyme_substrate"], [203, 3, 1, "", "hprd_interactions"], [204, 3, 1, "", "hprd_interactions_htp"]], "pypath.inputs.htri": [[206, 3, 1, "", "htri_interactions"]], "pypath.inputs.humsavar": [[208, 3, 1, "", "uniprot_variants"]], "pypath.inputs.i3d": [[210, 3, 1, "", "get_i3d"]], "pypath.inputs.ielm": [[212, 3, 1, "", "get_ielm"], [213, 3, 1, "", "get_ielm_huge"]], "pypath.inputs.imweb": [[215, 3, 1, "", "get_imweb"], [216, 3, 1, "", "get_imweb_req"]], "pypath.inputs.innatedb": [[218, 3, 1, "", "innatedb_interactions"]], "pypath.inputs.instruct": [[220, 3, 1, "", "get_instruct"], [221, 3, 1, "", "get_instruct_offsets"]], "pypath.inputs.intact": [[223, 3, 1, "", "intact_interactions"]], "pypath.inputs.interpro": [[225, 3, 1, "", "interpro2go_annotations"], [226, 3, 1, "", "interpro_annotations"], [227, 3, 1, "", "interpro_entries"], [228, 3, 1, "", "interpro_xrefs"]], "pypath.inputs.ipi": [[230, 3, 1, "", "ipi_uniprot"]], "pypath.inputs.kegg_api": [[232, 3, 1, "", "disease_to_drug"], [233, 3, 1, "", "disease_to_gene"], [234, 3, 1, "", "disease_to_pathway"], [235, 3, 1, "", "drug_to_disease"], [236, 3, 1, "", "drug_to_drug"], [237, 3, 1, "", "drug_to_gene"], [238, 3, 1, "", "drug_to_pathway"], [239, 3, 1, "", "gene_to_disease"], [240, 3, 1, "", "gene_to_drug"], [241, 3, 1, "", "gene_to_pathway"], [242, 3, 1, "", "kegg_drug_to_chebi"], [243, 3, 1, "", "kegg_gene_to_ncbi_geneid"], [244, 3, 1, "", "kegg_gene_to_uniprot"], [245, 3, 1, "", "pathway_to_disease"], [246, 3, 1, "", "pathway_to_drug"], [247, 3, 1, "", "pathway_to_gene"]], "pypath.inputs.kirouac2010": [[249, 3, 1, "", "kirouac2010_interactions"]], "pypath.inputs.laudanna": [[251, 3, 1, "", "laudanna_directions"], [252, 3, 1, "", "laudanna_effects"]], "pypath.inputs.lincs": [[254, 3, 1, "", "lincs_compounds"]], "pypath.inputs.lncdisease": [[256, 3, 1, "", "lncdisease_interactions"]], "pypath.inputs.lncrnadb": [[258, 3, 1, "", "lncrnadb_interactions"]], "pypath.inputs.macrophage": [[260, 3, 1, "", "macrophage_interactions"]], "pypath.inputs.mimp": [[263, 3, 1, "", "get_kinase_class"], [264, 3, 1, "", "mimp_enzyme_substrate"], [265, 3, 1, "", "mimp_interactions"]], "pypath.inputs.mir2disease": [[267, 3, 1, "", "mir2disease_interactions"]], "pypath.inputs.mirbase": [[269, 3, 1, "", "get_mirbase_aliases"], [270, 3, 1, "", "mirbase_ids"], [271, 3, 1, "", "mirbase_mature"], [272, 3, 1, "", "mirbase_mature_all"], [273, 3, 1, "", "mirbase_precursor"], [274, 3, 1, "", "mirbase_precursor_all"], [275, 3, 1, "", "mirbase_precursor_to_mature"]], "pypath.inputs.mirdeathdb": [[277, 3, 1, "", "mirdeathdb_interactions"]], "pypath.inputs.mirecords": [[279, 3, 1, "", "mirecords_interactions"]], "pypath.inputs.mirtarbase": [[281, 3, 1, "", "mirtarbase_interactions"]], "pypath.inputs.mitab": [[283, 3, 1, "", "mitab_field_list"], [284, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.mppi": [[286, 3, 1, "", "mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[288, 3, 1, "", "ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[290, 3, 1, "", "negatome_interactions"]], "pypath.inputs.netbiol": [[292, 3, 1, "", "arn_interactions"], [293, 3, 1, "", "nrf2ome_interactions"]], "pypath.inputs.offsides": [[295, 3, 1, "", "offsides_side_effects"]], "pypath.inputs.ontology": [[297, 3, 1, "", "listof_ontologies"], [298, 3, 1, "", "ontology"]], "pypath.inputs.opentargets": [[300, 3, 1, "", "opentargets_adverse_reactions"], [301, 3, 1, "", "opentargets_baseline_expression"], [302, 3, 1, "", "opentargets_direct_score"], [303, 3, 1, "", "opentargets_general"], [304, 3, 1, "", "opentargets_indirect_score"]], "pypath.inputs.oreganno": [[306, 3, 1, "", "oreganno_interactions"], [307, 3, 1, "", "oreganno_raw"]], "pypath.inputs.pathophenodb": [[309, 1, 1, "", "DiseasePathogen"], [310, 3, 1, "", "disease_pathogen_interactions"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[309, 2, 1, "", "__init__"], [309, 2, 1, "", "count"], [309, 4, 1, "", "disease"], [309, 4, 1, "", "disease_id"], [309, 4, 1, "", "evidence"], [309, 2, 1, "", "index"], [309, 4, 1, "", "pathogen"], [309, 4, 1, "", "pathogen_taxid"]], "pypath.inputs.pathwaycommons": [[312, 1, 1, "", "PathwayCommonsInteraction"], [313, 1, 1, "", "PathwayCommonsResource"], [314, 3, 1, "", "pathwaycommons_bind_interactions"], [315, 3, 1, "", "pathwaycommons_biogrid_interactions"], [316, 3, 1, "", "pathwaycommons_corum_interactions"], [317, 3, 1, "", "pathwaycommons_dip_interactions"], [318, 3, 1, "", "pathwaycommons_hprd_interactions"], [319, 3, 1, "", "pathwaycommons_inoh_interactions"], [320, 3, 1, "", "pathwaycommons_intact_interactions"], [321, 3, 1, "", "pathwaycommons_interactions"], [322, 3, 1, "", "pathwaycommons_kegg_interactions"], [323, 3, 1, "", "pathwaycommons_netpath_interactions"], [324, 3, 1, "", "pathwaycommons_panther_interactions"], [325, 3, 1, "", "pathwaycommons_phosphosite_interactions"], [326, 3, 1, "", "pathwaycommons_reactome_interactions"], [327, 3, 1, "", "pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[312, 2, 1, "", "__init__"], [312, 2, 1, "", "count"], [312, 4, 1, "", "id_a"], [312, 4, 1, "", "id_b"], [312, 2, 1, "", "index"], [312, 4, 1, "", "interaction_type"], [312, 4, 1, "", "resource"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[313, 2, 1, "", "__init__"], [313, 2, 1, "", "count"], [313, 2, 1, "", "index"], [313, 4, 1, "", "name"], [313, 4, 1, "", "pc_label"], [313, 4, 1, "", "version"]], "pypath.inputs.pazar": [[329, 3, 1, "", "pazar_interactions"]], "pypath.inputs.pdzbase": [[331, 3, 1, "", "pdzbase_interactions"]], "pypath.inputs.pepcyber": [[333, 3, 1, "", "pepcyber_details"], [334, 3, 1, "", "pepcyber_interactions"]], "pypath.inputs.pfam": [[336, 3, 1, "", "pfam_names"], [337, 3, 1, "", "pfam_pdb"], [338, 3, 1, "", "pfam_regions"], [339, 3, 1, "", "pfam_uniprot"]], "pypath.inputs.pharos": [[341, 3, 1, "", "pharos_diseases"], [342, 3, 1, "", "pharos_expression"], [343, 3, 1, "", "pharos_general"], [344, 3, 1, "", "pharos_gtex"], [345, 3, 1, "", "pharos_ligands"], [346, 3, 1, "", "pharos_orthologs"], [347, 3, 1, "", "pharos_targets"], [348, 3, 1, "", "pharos_xrefs"]], "pypath.inputs.phobius": [[350, 3, 1, "", "phobius_annotations"]], "pypath.inputs.phosphoelm": [[352, 3, 1, "", "phosphoelm_enzyme_substrate"], [353, 3, 1, "", "phosphoelm_interactions"], [354, 3, 1, "", "phosphoelm_kinases"]], "pypath.inputs.phosphonetworks": [[356, 3, 1, "", "phosphonetworks_enzyme_substrate"], [357, 3, 1, "", "phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[359, 3, 1, "", "phosphopoint_directions"], [360, 3, 1, "", "phosphopoint_interactions"]], "pypath.inputs.pro": [[362, 3, 1, "", "get_pro"], [363, 3, 1, "", "pro_mapping"]], "pypath.inputs.proteins": [[365, 3, 1, "", "variants"]], "pypath.inputs.protmapper": [[367, 3, 1, "", "get_protmapper"], [368, 3, 1, "", "protmapper_enzyme_substrate"], [369, 3, 1, "", "protmapper_interactions"]], "pypath.inputs.pubchem": [[371, 3, 1, "", "pubchem_mapping"]], "pypath.inputs.pubmed": [[373, 3, 1, "", "get_pmid"], [374, 3, 1, "", "get_pubmeds"], [375, 3, 1, "", "only_pmids"], [376, 3, 1, "", "open_pubmed"], [377, 3, 1, "", "pmids_dict"], [378, 3, 1, "", "pmids_list"]], "pypath.inputs.ramp": [[380, 3, 1, "", "ramp_id_types"], [381, 3, 1, "", "ramp_id_types_2"], [382, 3, 1, "", "ramp_list_tables"], [383, 3, 1, "", "ramp_mapping"], [384, 3, 1, "", "ramp_raw"], [385, 3, 1, "", "ramp_show_tables"]], "pypath.inputs.reaction": [[388, 3, 1, "", "acsn_biopax"], [389, 3, 1, "", "acsn_interactions_2"], [390, 3, 1, "", "get_acsn_effects"], [391, 3, 1, "", "get_controls"], [392, 3, 1, "", "get_interactions"], [393, 3, 1, "", "get_reactions"], [394, 3, 1, "", "get_soup"], [395, 3, 1, "", "panther_biopax"], [396, 3, 1, "", "panther_interactions"], [397, 3, 1, "", "pid_biopax"], [398, 3, 1, "", "pid_interactions"], [399, 3, 1, "", "process_complex"], [400, 3, 1, "", "process_controls"], [401, 3, 1, "", "process_reactions"], [402, 3, 1, "", "reactions_biopax"], [403, 3, 1, "", "reactome_biopax"], [404, 3, 1, "", "reactome_bs"], [405, 3, 1, "", "reactome_interactions"], [406, 3, 1, "", "reactome_sbml"]], "pypath.inputs.reactome": [[408, 3, 1, "", "reactome_chebis"], [409, 3, 1, "", "reactome_pathway_relations"], [410, 3, 1, "", "reactome_pathways"], [411, 3, 1, "", "reactome_uniprots"]], "pypath.inputs.science": [[413, 3, 1, "", "science_download"]], "pypath.inputs.sider": [[415, 1, 1, "", "SiderDrug"], [416, 1, 1, "", "SiderSideeffect"], [417, 1, 1, "", "SiderSideeffectMeddra"], [418, 1, 1, "", "SiderSideeffetFrequency"], [419, 3, 1, "", "sider_drug_names"], [420, 3, 1, "", "sider_meddra_side_effects"], [421, 3, 1, "", "sider_side_effect_frequencies"], [422, 3, 1, "", "sider_side_effects"]], "pypath.inputs.sider.SiderDrug": [[415, 2, 1, "", "__init__"], [415, 4, 1, "", "atc"], [415, 2, 1, "", "count"], [415, 2, 1, "", "index"], [415, 4, 1, "", "name"]], "pypath.inputs.sider.SiderSideeffect": [[416, 2, 1, "", "__init__"], [416, 2, 1, "", "count"], [416, 2, 1, "", "index"], [416, 4, 1, "", "side_effect"], [416, 4, 1, "", "umls_concept_in_meddra"], [416, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[417, 2, 1, "", "__init__"], [417, 4, 1, "", "cid"], [417, 2, 1, "", "count"], [417, 2, 1, "", "index"], [417, 4, 1, "", "meddra_id"], [417, 4, 1, "", "side_effect_name"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "count"], [418, 4, 1, "", "frequency"], [418, 2, 1, "", "index"], [418, 4, 1, "", "side_effect"], [418, 4, 1, "", "umls_concept_in_meddra"], [418, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.stitch": [[424, 3, 1, "", "stitch_actions_interactions"], [425, 3, 1, "", "stitch_links_interactions"]], "pypath.inputs.string": [[427, 3, 1, "", "string_effects"], [428, 3, 1, "", "string_links_interactions"], [429, 3, 1, "", "string_physical_interactions"], [430, 3, 1, "", "string_species"]], "pypath.inputs.switches_elm": [[432, 3, 1, "", "get_switches_elm"]], "pypath.inputs.transmir": [[434, 3, 1, "", "transmir_interactions"]], "pypath.inputs.trip": [[436, 3, 1, "", "take_a_trip"], [437, 3, 1, "", "trip_find_uniprot"], [438, 3, 1, "", "trip_get_uniprot"], [439, 3, 1, "", "trip_interactions"], [440, 3, 1, "", "trip_process"], [441, 3, 1, "", "trip_process_table"]], "pypath.inputs.trrust": [[443, 3, 1, "", "trrust_human"], [444, 3, 1, "", "trrust_interactions"], [445, 3, 1, "", "trrust_mouse"]], "pypath.inputs.twosides": [[447, 3, 1, "", "twosides_interactions"]], "pypath.inputs.unichem": [[449, 3, 1, "", "info"], [450, 3, 1, "", "unichem_info"], [451, 3, 1, "", "unichem_mapping"], [452, 3, 1, "", "unichem_sources"]], "pypath.inputs.uniprot": [[454, 1, 1, "", "Taxon"], [455, 1, 1, "", "UniprotQuery"], [456, 1, 1, "", "UniprotRecordHistory"], [457, 3, 1, "", "deleted_uniprot_genesymbol"], [458, 3, 1, "", "get_uniprot_sec"], [459, 3, 1, "", "idmapping_idtypes"], [460, 3, 1, "", "protein_datasheet"], [461, 3, 1, "", "query_builder"], [462, 3, 1, "", "swissprot_deleted"], [463, 3, 1, "", "trembl_deleted"], [464, 3, 1, "", "uniprot_data"], [465, 3, 1, "", "uniprot_deleted"], [466, 3, 1, "", "uniprot_families"], [467, 3, 1, "", "uniprot_history"], [468, 3, 1, "", "uniprot_history_recent_datasheet"], [469, 3, 1, "", "uniprot_keywords"], [470, 3, 1, "", "uniprot_locations"], [471, 3, 1, "", "uniprot_ncbi_taxids"], [472, 3, 1, "", "uniprot_ncbi_taxids_2"], [473, 3, 1, "", "uniprot_preprocess"], [474, 3, 1, "", "uniprot_query"], [475, 3, 1, "", "uniprot_recent_version"], [476, 3, 1, "", "uniprot_taxonomy"], [477, 3, 1, "", "uniprot_tissues"], [478, 3, 1, "", "uniprot_topology"], [479, 3, 1, "", "valid_uniprot"]], "pypath.inputs.uniprot.Taxon": [[454, 2, 1, "", "__init__"], [454, 2, 1, "", "count"], [454, 4, 1, "", "english"], [454, 2, 1, "", "index"], [454, 4, 1, "", "latin"], [454, 4, 1, "", "latin_synonym"], [454, 4, 1, "", "ncbi_id"]], "pypath.inputs.uniprot.UniprotQuery": [[455, 2, 1, "", "__init__"], [455, 2, 1, "", "__iter__"], [455, 4, 1, "", "fail_on_empty"], [455, 4, 1, "", "name_process"], [455, 2, 1, "", "perform"], [455, 5, 1, "", "url"], [455, 5, 1, "", "url_plain"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "count"], [456, 4, 1, "", "database"], [456, 4, 1, "", "date"], [456, 4, 1, "", "entry_name"], [456, 4, 1, "", "entry_version"], [456, 2, 1, "", "index"], [456, 4, 1, "", "number"], [456, 4, 1, "", "replaced_by"], [456, 4, 1, "", "replaces"], [456, 4, 1, "", "sequence_version"]], "pypath.inputs.uniprot_db": [[481, 3, 1, "", "all_swissprots"], [482, 3, 1, "", "all_trembls"], [483, 3, 1, "", "all_uniprots"], [484, 3, 1, "", "get_db"], [485, 3, 1, "", "init_db"], [486, 3, 1, "", "is_swissprot"], [487, 3, 1, "", "is_trembl"], [488, 3, 1, "", "is_uniprot"]], "pypath.internals": [[490, 0, 0, "-", "input_formats"], [504, 0, 0, "-", "license"], [510, 0, 0, "-", "maps"], [511, 0, 0, "-", "refs"], [514, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[491, 1, 1, "", "ArrayMapping"], [492, 1, 1, "", "BiomartMapping"], [493, 1, 1, "", "FileMapping"], [494, 1, 1, "", "HmdbMapping"], [495, 1, 1, "", "MappingInput"], [496, 1, 1, "", "NetworkInput"], [497, 1, 1, "", "PickleMapping"], [498, 1, 1, "", "ProMapping"], [499, 1, 1, "", "RampMapping"], [500, 1, 1, "", "ReadList"], [501, 1, 1, "", "UnichemMapping"], [502, 1, 1, "", "UniprotListMapping"], [503, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[491, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[492, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[493, 2, 1, "", "__init__"]], "pypath.internals.input_formats.HmdbMapping": [[494, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[495, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[496, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[497, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[498, 2, 1, "", "__init__"]], "pypath.internals.input_formats.RampMapping": [[499, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[500, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[501, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[502, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[503, 2, 1, "", "__init__"], [503, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[505, 1, 1, "", "License"], [506, 1, 1, "", "LicenseAttrib"], [507, 1, 1, "", "LicenseFeature"], [508, 1, 1, "", "LicensePurpose"], [509, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[505, 2, 1, "", "__init__"], [505, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[506, 2, 1, "", "__init__"], [506, 2, 1, "", "check_level"], [506, 2, 1, "", "int_to_level"], [506, 2, 1, "", "level_to_int"], [506, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[507, 2, 1, "", "__init__"], [507, 2, 1, "", "check_level"], [507, 2, 1, "", "int_to_level"], [507, 2, 1, "", "level_to_int"], [507, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[508, 2, 1, "", "__init__"], [508, 2, 1, "", "check_level"], [508, 2, 1, "", "int_to_level"], [508, 2, 1, "", "level_to_int"], [508, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[509, 2, 1, "", "__init__"], [509, 2, 1, "", "check_level"], [509, 2, 1, "", "int_to_level"], [509, 2, 1, "", "level_to_int"], [509, 2, 1, "", "to_int"]], "pypath.internals.refs": [[512, 1, 1, "", "Reference"], [513, 3, 1, "", "get_pubmed_data"]], "pypath.internals.refs.Reference": [[512, 2, 1, "", "__init__"]], "pypath.internals.resource": [[515, 1, 1, "", "AbstractResource"], [516, 1, 1, "", "EnzymeSubstrateResource"], [517, 1, 1, "", "EnzymeSubstrateResourceKey"], [518, 1, 1, "", "NetworkDataset"], [519, 1, 1, "", "NetworkResource"], [520, 1, 1, "", "NetworkResourceKey"], [521, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[515, 2, 1, "", "__init__"], [515, 2, 1, "", "load_data"], [515, 2, 1, "", "process"], [515, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[516, 2, 1, "", "__init__"], [516, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[517, 2, 1, "", "__init__"], [517, 2, 1, "", "count"], [517, 4, 1, "", "data_type"], [517, 2, 1, "", "index"], [517, 4, 1, "", "name"], [517, 4, 1, "", "via"]], "pypath.internals.resource.NetworkDataset": [[518, 2, 1, "", "__init__"], [518, 2, 1, "", "clear"], [518, 2, 1, "", "get"], [518, 2, 1, "", "items"], [518, 2, 1, "", "keys"], [518, 2, 1, "", "pop"], [518, 2, 1, "", "popitem"], [518, 2, 1, "", "setdefault"], [518, 2, 1, "", "update"], [518, 2, 1, "", "values"]], "pypath.internals.resource.NetworkResource": [[519, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[520, 2, 1, "", "__init__"], [520, 2, 1, "", "count"], [520, 4, 1, "", "data_model"], [520, 4, 1, "", "data_type"], [520, 2, 1, "", "index"], [520, 4, 1, "", "interaction_type"], [520, 5, 1, "", "label"], [520, 5, 1, "", "last"], [520, 4, 1, "", "name"], [520, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[521, 2, 1, "", "__init__"]], "pypath.legacy": [[523, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[524, 3, 1, "", "get_categories"], [525, 3, 1, "", "get_category"]], "pypath.resources": [[528, 0, 0, "-", "controller"], [530, 0, 0, "-", "data"], [531, 0, 0, "-", "data_formats"], [540, 3, 1, "", "get_controller"], [541, 0, 0, "-", "licenses"], [543, 0, 0, "-", "network"], [547, 0, 0, "-", "urls"]], "pypath.resources.controller": [[529, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[529, 2, 1, "", "__init__"], [529, 2, 1, "", "add_resource_attrs"], [529, 2, 1, "", "collect_interaction"], [529, 2, 1, "", "collect_network"], [529, 2, 1, "", "license_filter"], [529, 2, 1, "", "secondary_resources"], [529, 2, 1, "", "update"]], "pypath.resources.data_formats": [[532, 6, 1, "", "activity_flow"], [533, 6, 1, "", "enzyme_substrate"], [534, 6, 1, "", "interaction"], [535, 6, 1, "", "interaction_htp"], [536, 6, 1, "", "pathway_bad"], [537, 6, 1, "", "reaction_pc"], [538, 6, 1, "", "transcription_deprecated"], [539, 6, 1, "", "transcription_onebyone"]], "pypath.resources.licenses": [[542, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[542, 2, 1, "", "__init__"]], "pypath.resources.network": [[544, 3, 1, "", "choose_dataset"], [545, 3, 1, "", "dataset_priority"], [546, 3, 1, "", "dorothea_expand_levels"]], "pypath.share": [[549, 0, 0, "-", "cache"], [553, 0, 0, "-", "common"], [554, 0, 0, "-", "constants"], [555, 0, 0, "-", "curl"], [572, 0, 0, "-", "progress"], [574, 0, 0, "-", "session"], [575, 0, 0, "-", "settings"]], "pypath.share.cache": [[550, 3, 1, "", "cache_item"], [551, 3, 1, "", "cache_path"], [552, 3, 1, "", "get_cachedir"]], "pypath.share.curl": [[556, 1, 1, "", "Curl"], [557, 1, 1, "", "FileOpener"], [558, 1, 1, "", "RemoteFile"], [559, 1, 1, "", "cache_delete_off"], [560, 1, 1, "", "cache_delete_on"], [561, 1, 1, "", "cache_off"], [562, 1, 1, "", "cache_on"], [563, 1, 1, "", "cache_print_off"], [564, 1, 1, "", "cache_print_on"], [565, 1, 1, "", "debug_off"], [566, 1, 1, "", "debug_on"], [567, 1, 1, "", "dryrun_off"], [568, 1, 1, "", "dryrun_on"], [569, 3, 1, "", "is_url"], [570, 1, 1, "", "preserve_off"], [571, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[556, 2, 1, "", "__init__"], [556, 2, 1, "", "cache_path"], [556, 2, 1, "", "close"], [556, 2, 1, "", "construct_binary_data"], [556, 2, 1, "", "extract"], [556, 2, 1, "", "is_quoted"], [556, 2, 1, "", "open"], [556, 2, 1, "", "open_tgz"], [556, 2, 1, "", "replace_forbidden"], [556, 2, 1, "", "set_binary_data"], [556, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[557, 2, 1, "", "__init__"], [557, 2, 1, "", "extract"], [557, 2, 1, "", "open"], [557, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[558, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[559, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[560, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[561, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[562, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[563, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[564, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[565, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[566, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[567, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[568, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[570, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[571, 2, 1, "", "__init__"]], "pypath.share.progress": [[573, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[573, 2, 1, "", "__init__"], [573, 2, 1, "", "get_desc"], [573, 2, 1, "", "init_tqdm"], [573, 2, 1, "", "set_done"], [573, 2, 1, "", "set_status"], [573, 2, 1, "", "set_total"], [573, 2, 1, "", "step"], [573, 2, 1, "", "terminate"]], "pypath.utils": [[577, 0, 0, "-", "go"], [585, 0, 0, "-", "pdb"], [590, 0, 0, "-", "proteomicsdb"], [592, 0, 0, "-", "reflists"], [600, 0, 0, "-", "residues"], [602, 0, 0, "-", "seq"], [609, 0, 0, "-", "taxonomy"], [624, 0, 0, "-", "unichem"]], "pypath.utils.go": [[578, 1, 1, "", "GOAnnotation"], [579, 1, 1, "", "GOCustomAnnotation"], [580, 1, 1, "", "GeneOntology"], [581, 3, 1, "", "annotate"], [582, 3, 1, "", "get_db"], [583, 3, 1, "", "init_db"], [584, 3, 1, "", "load_go"]], "pypath.utils.go.GOAnnotation": [[578, 2, 1, "", "__init__"], [578, 2, 1, "", "all_uniprots"], [578, 2, 1, "", "expr_names_to_terms"], [578, 2, 1, "", "get_annot"], [578, 2, 1, "", "get_annot_ancestors"], [578, 2, 1, "", "get_annots"], [578, 2, 1, "", "get_annots_ancestors"], [578, 2, 1, "", "get_name"], [578, 2, 1, "", "get_term"], [578, 2, 1, "", "has_any_term"], [578, 2, 1, "", "has_term"], [578, 2, 1, "", "i_select_by_term"], [578, 2, 1, "", "reload"], [578, 2, 1, "", "select"], [578, 2, 1, "", "select_by_all"], [578, 2, 1, "", "select_by_expr"], [578, 2, 1, "", "select_by_expr_terms"], [578, 2, 1, "", "select_by_name"], [578, 2, 1, "", "select_by_term"]], "pypath.utils.go.GOCustomAnnotation": [[579, 2, 1, "", "__init__"], [579, 2, 1, "", "get_annotation"], [579, 2, 1, "", "get_annotations"], [579, 2, 1, "", "process_categories"], [579, 2, 1, "", "reload"]], "pypath.utils.go.GeneOntology": [[580, 2, 1, "", "__init__"], [580, 2, 1, "", "all_from_aspect"], [580, 2, 1, "", "aspect_from_name"], [580, 2, 1, "", "flatten"], [580, 2, 1, "", "get_all_ancestors"], [580, 2, 1, "", "get_all_descendants"], [580, 2, 1, "", "get_aspect"], [580, 2, 1, "", "get_name"], [580, 2, 1, "", "get_term"], [580, 2, 1, "", "highest"], [580, 2, 1, "", "is_leaf"], [580, 2, 1, "", "is_name"], [580, 2, 1, "", "is_root"], [580, 2, 1, "", "is_term"], [580, 2, 1, "", "lowest"], [580, 2, 1, "", "names_to_terms"], [580, 2, 1, "", "names_to_terms_aspects"], [580, 2, 1, "", "reload"], [580, 2, 1, "", "set_of"], [580, 2, 1, "", "set_of_names"], [580, 2, 1, "", "set_of_terms"], [580, 2, 1, "", "subgraph_nodes"], [580, 2, 1, "", "terms_to_names"], [580, 2, 1, "", "terms_to_names_aspects"]], "pypath.utils.pdb": [[586, 1, 1, "", "Residue"], [587, 1, 1, "", "ResidueMapper"], [588, 1, 1, "", "Segment"], [589, 3, 1, "", "residue_pdb"]], "pypath.utils.pdb.Residue": [[586, 2, 1, "", "__init__"], [586, 4, 1, "", "chain"], [586, 2, 1, "", "count"], [586, 2, 1, "", "index"], [586, 4, 1, "", "offset"], [586, 4, 1, "", "resnum"], [586, 4, 1, "", "uniprot"]], "pypath.utils.pdb.ResidueMapper": [[587, 2, 1, "", "__init__"], [587, 2, 1, "", "clean"], [587, 2, 1, "", "get_residue"], [587, 2, 1, "", "load_mapping"]], "pypath.utils.pdb.Segment": [[588, 2, 1, "", "__init__"], [588, 2, 1, "", "count"], [588, 2, 1, "", "index"], [588, 4, 1, "", "pdb_end"], [588, 4, 1, "", "pdb_start"], [588, 4, 1, "", "uniprot"], [588, 4, 1, "", "uniprot_end"], [588, 4, 1, "", "uniprot_start"]], "pypath.utils.proteomicsdb": [[591, 1, 1, "", "ProteomicsDB"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[591, 2, 1, "", "__init__"], [591, 2, 1, "", "get_expression"], [591, 2, 1, "", "get_pieces"], [591, 2, 1, "", "get_proteins"], [591, 2, 1, "", "get_tissues"], [591, 2, 1, "", "pandas_matrix"], [591, 2, 1, "", "query"], [591, 2, 1, "", "tissues_x_proteins"]], "pypath.utils.reflists": [[593, 1, 1, "", "ReferenceListManager"], [594, 3, 1, "", "check"], [595, 3, 1, "", "get_manager"], [596, 3, 1, "", "get_reflist"], [597, 3, 1, "", "init"], [598, 3, 1, "", "is_not"], [599, 3, 1, "", "select"]], "pypath.utils.reflists.ReferenceListManager": [[593, 2, 1, "", "__init__"], [593, 2, 1, "", "check"], [593, 2, 1, "", "is_not"], [593, 2, 1, "", "select"]], "pypath.utils.residues": [[601, 1, 1, "", "ResidueMapper"]], "pypath.utils.residues.ResidueMapper": [[601, 2, 1, "", "__init__"], [601, 2, 1, "", "clean"]], "pypath.utils.seq": [[603, 1, 1, "", "Pfam"], [604, 1, 1, "", "Resource"], [605, 1, 1, "", "Seq"], [606, 3, 1, "", "get_isoforms"], [607, 3, 1, "", "read_fasta"], [608, 3, 1, "", "swissprot_seq"]], "pypath.utils.seq.Pfam": [[603, 2, 1, "", "__init__"], [603, 2, 1, "", "iterdb"], [603, 2, 1, "", "iterprotein"], [603, 2, 1, "", "load"], [603, 2, 1, "", "processor"], [603, 2, 1, "", "unload"]], "pypath.utils.seq.Resource": [[604, 2, 1, "", "__init__"], [604, 2, 1, "", "iterdb"], [604, 2, 1, "", "iterprotein"], [604, 2, 1, "", "load"], [604, 2, 1, "", "processor"], [604, 2, 1, "", "unload"]], "pypath.utils.seq.Seq": [[605, 2, 1, "", "__init__"], [605, 2, 1, "", "findall"]], "pypath.utils.taxonomy": [[610, 3, 1, "", "ensure_common_name"], [611, 3, 1, "", "ensure_ensembl_name"], [612, 3, 1, "", "ensure_latin_name"], [613, 3, 1, "", "ensure_ncbi_tax_id"], [614, 3, 1, "", "get_db"], [615, 3, 1, "", "init_db"], [616, 3, 1, "", "short_latin_names"], [617, 3, 1, "", "shorten_latin_name"], [618, 3, 1, "", "taxid_from_common_name"], [619, 3, 1, "", "taxid_from_dbptm_taxon_name"], [620, 3, 1, "", "taxid_from_ensembl_name"], [621, 3, 1, "", "taxid_from_latin_name"], [622, 3, 1, "", "taxid_from_nonstandard"], [623, 3, 1, "", "uniprot_taxid"]], "pypath.utils.unichem": [[625, 1, 1, "", "Unichem"]], "pypath.utils.unichem.Unichem": [[625, 2, 1, "", "__init__"], [625, 2, 1, "", "connectivity_search"], [625, 2, 1, "", "inchikey2anything"], [625, 2, 1, "", "info"], [625, 2, 1, "", "smiles2chembl"], [625, 2, 1, "", "translate"], [625, 2, 1, "", "usage"]], "pypath.visual": [[627, 0, 0, "-", "drawing"], [630, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[628, 1, 1, "", "InterSet"], [629, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[628, 2, 1, "", "__init__"], [628, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[629, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[631, 1, 1, "", "AbstractCairoGraphDrawer"], [632, 4, 1, "", "ArrowEdgeDrawer"], [633, 1, 1, "", "DefaultGraphDrawerFFsupport"], [634, 4, 1, "", "DefaultVertexDrawer"], [635, 4, 1, "", "TextDrawer"], [636, 0, 0, "-", "edge"], [643, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[631, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[633, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[637, 1, 1, "", "AbstractEdgeDrawer"], [638, 1, 1, "", "AlphaVaryingEdgeDrawer"], [639, 1, 1, "", "ArrowEdgeDrawer"], [640, 1, 1, "", "DarkToLightEdgeDrawer"], [641, 1, 1, "", "LightToDarkEdgeDrawer"], [642, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[637, 2, 1, "", "__init__"], [637, 2, 1, "", "draw_directed_edge"], [637, 2, 1, "", "draw_loop_edge"], [637, 2, 1, "", "draw_undirected_edge"], [637, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[638, 2, 1, "", "__init__"], [638, 2, 1, "", "draw_directed_edge"], [638, 2, 1, "", "draw_loop_edge"], [638, 2, 1, "", "draw_undirected_edge"], [638, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[639, 2, 1, "", "__init__"], [639, 2, 1, "", "draw_directed_edge"], [639, 2, 1, "", "draw_loop_edge"], [639, 2, 1, "", "draw_undirected_edge"], [639, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[640, 2, 1, "", "__init__"], [640, 2, 1, "", "draw_directed_edge"], [640, 2, 1, "", "draw_loop_edge"], [640, 2, 1, "", "draw_undirected_edge"], [640, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[641, 2, 1, "", "__init__"], [641, 2, 1, "", "draw_directed_edge"], [641, 2, 1, "", "draw_loop_edge"], [641, 2, 1, "", "draw_undirected_edge"], [641, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[642, 2, 1, "", "__init__"], [642, 2, 1, "", "draw_directed_edge"], [642, 2, 1, "", "draw_loop_edge"], [642, 2, 1, "", "draw_undirected_edge"], [642, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[644, 1, 1, "", "AbstractCairoDrawer"], [645, 1, 1, "", "AbstractCairoVertexDrawer"], [646, 1, 1, "", "AbstractDrawer"], [647, 1, 1, "", "AbstractVertexDrawer"], [648, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[644, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[645, 2, 1, "", "__init__"], [645, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[646, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[647, 2, 1, "", "__init__"], [647, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[648, 2, 1, "", "__init__"], [648, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pypath": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651], "core": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 57, 58, 59, 60, 61, 62, 63, 173, 174, 175, 176, 177, 189, 190, 553, 651], "filter_network_df": 5, "data": [6, 530, 651], "disclaim": 7, "info": [8, 449, 651], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 651], "ab": [10, 11], "abs_interact": 11, "acsn": [12, 13, 14], "acsn_interact": 13, "acsn_interactions_sif": 14, "adrec": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "adrecsadr": 16, "adrecschildpar": 17, "adrecsdrug": 18, "adrecsdrugadr": 19, "adrecsterm": 20, "adrecs_adr_ontologi": 21, "adrecs_drug_adr": 22, "adrecs_drug_identifi": 23, "adrecs_hierarchi": 24, "biogrid": [25, 26, 27], "biogrid_all_interact": 26, "biogrid_interact": 27, "biomart": [28, 29, 30, 31, 32, 33], "biomart_homologi": 29, "biomart_microarrai": [30, 32], "biomart_microarray_typ": 31, "biomart_queri": 33, "biomodel": [34, 35, 36, 37, 38, 39], "download_single_model": 35, "get_all_model": 36, "get_biomodel": 37, "get_biomodels_req": 38, "get_single_model": 39, "ca1": [40, 41], "ca1_interact": 41, "cancercellmap": [42, 43], "ccmap_interact": 43, "cell": [44, 45], "cell_supplementari": 45, "chembl": [46, 47, 48, 49, 50, 51, 52, 53], "chembl_act": 47, "chembl_assai": 48, "chembl_docu": 49, "chembl_drug_ind": 50, "chembl_mechan": 51, "chembl_molecul": 52, "chembl_target": 53, "clinvar": [54, 55, 56], "clinvar_cit": 55, "clinvar_raw": 56, "csv_sep_chang": 58, "glom_field": 59, "json_extract": 60, "json_read": 61, "read_tabl": 62, "read_xl": 63, "compath": [64, 65], "compath_map": 65, "cpdb": [66, 67, 68], "cpdb_interact": 67, "cpdb_interactions_ltp": 68, "credenti": [69, 70], "ctdbase": [71, 72, 73], "ctdbase_rel": 72, "ctdbase_vocabulari": 73, "dbptm": [74, 75, 76, 77], "dbptm_enzyme_substr": 75, "dbptm_enzyme_substrate_old": 76, "dbptm_interact": 77, "ddinter": [78, 79, 80, 81, 82, 83], "ddinter_drug_interact": 79, "ddinter_identifi": 80, "ddinter_interact": 81, "ddinter_map": 82, "ddinter_n_drug": 83, "deathdomain": [84, 85, 86], "deathdomain_interact": 85, "deathdomain_interactions_rescu": 86, "dip": [87, 88, 89], "dip_interact": 88, "dip_login": 89, "diseas": [90, 91, 92, 93, 94, 95, 96, 97], "diseases_gener": 91, "experiments_filt": 92, "experiments_ful": 93, "knowledge_filt": 94, "knowledge_ful": 95, "textmining_filt": 96, "textmining_ful": 97, "dorothea": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 651], "dorotheainteract": 99, "dorothea_full_raw": 100, "dorothea_interact": 101, "detail": [101, 102, 103, 105, 107, 108], "dorothea_interactions_old": 102, "dorothea_old_csv": 103, "dorothea_rda_raw": 104, "get_dorothea_old": 105, "get_tfregulon": 106, "tfregulons_interact": 107, "tfregulons_interactions_old": 108, "drugbank": [109, 110, 111, 112, 113, 114, 115], "drugbankful": 110, "drugbank_annot": 111, "drugbank_drug": 112, "drugbank_interact": 113, "drugbank_map": 114, "drugbank_raw_interact": 115, "drugcentr": [116, 117, 118, 119], "drugcentral_drug": 117, "drugcentral_interact": 118, "drugcentral_map": 119, "ebi": [120, 121], "ebi_rest": 121, "elm": [122, 123, 124, 125, 126], "elm_class": 123, "elm_domain": 124, "elm_inst": 125, "elm_interact": 126, "embopress": [127, 128], "embopress_supplementari": 128, "encod": [129, 130], "encode_tf_mirna_interact": 130, "ensembl": [131, 132], "ensembl_organ": 132, "eutil": [133, 134], "esummari": 134, "exocarta": [135, 136, 137], "get_exocarta": 136, "get_vesiclepedia": 137, "expasi": [138, 139, 140], "expasy_enzyme_class": 139, "expasy_enzym": 140, "genecard": [141, 142, 143, 144], "genecards_datasheet": 142, "genecards_soup": 143, "genecards_summari": 144, "get_method": 145, "go": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 577, 578, 579, 580, 581, 582, 583, 584], "get_go_desc": 147, "get_go_quick": 148, "get_goslim": 149, "go_ancestor": 150, "go_ancestors_goos": 151, "go_ancestors_quickgo": 152, "go_annot": 153, "go_annotations_al": 154, "go_annotations_goa": 155, "go_annotations_goos": 156, "go_annotations_quickgo": 157, "go_annotations_solr": 158, "go_annotations_uniprot": 159, "go_descend": 160, "go_descendants_goos": 161, "go_descendants_quickgo": 162, "go_descendants_to_ancestor": 163, "go_term": 164, "go_terms_goos": 165, "go_terms_quickgo": 166, "go_terms_solr": 167, "gpcrdb": [168, 169], "gpcrdb_annot": 169, "graphviz": [170, 171], "graphviz_attr": 171, "hmdb": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 651], "iter": [174, 179, 184], "map": [175, 180, 185, 510], "raw": [176, 181, 186], "tabl": [177, 182, 187, 651], "metabolit": [178, 179, 180, 181, 182, 191], "protein": [183, 184, 185, 186, 187, 192, 364, 365, 651], "schema": [188, 189, 190, 191, 192], "field": 190, "structur": [193, 194, 651], "sdf": 194, "visual": [195, 196, 197, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648], "show_structur": 196, "structure_svg": 197, "xml": [198, 199], "hmdb_xml": 199, "hprd": [200, 201, 202, 203, 204], "get_hprd": 201, "hprd_enzyme_substr": 202, "hprd_interact": 203, "hprd_interactions_htp": 204, "htri": [205, 206], "htri_interact": 206, "humsavar": [207, 208], "uniprot_vari": 208, "i3d": [209, 210], "get_i3d": 210, "ielm": [211, 212, 213], "get_ielm": 212, "get_ielm_hug": 213, "imweb": [214, 215, 216], "get_imweb": 215, "get_imweb_req": 216, "innatedb": [217, 218], "innatedb_interact": 218, "instruct": [219, 220, 221], "get_instruct": 220, "get_instruct_offset": 221, "intact": [222, 223], "intact_interact": 223, "interpro": [224, 225, 226, 227, 228], "interpro2go_annot": 225, "interpro_annot": 226, "interpro_entri": 227, "interpro_xref": 228, "ipi": [229, 230], "ipi_uniprot": 230, "kegg_api": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "disease_to_drug": 232, "disease_to_gen": 233, "disease_to_pathwai": 234, "drug_to_diseas": 235, "drug_to_drug": 236, "drug_to_gen": 237, "drug_to_pathwai": 238, "gene_to_diseas": 239, "gene_to_drug": 240, "gene_to_pathwai": 241, "kegg_drug_to_chebi": 242, "kegg_gene_to_ncbi_geneid": 243, "kegg_gene_to_uniprot": 244, "pathway_to_diseas": 245, "pathway_to_drug": 246, "pathway_to_gen": 247, "kirouac2010": [248, 249], "kirouac2010_interact": 249, "laudanna": [250, 251, 252], "laudanna_direct": 251, "laudanna_effect": 252, "linc": [253, 254], "lincs_compound": 254, "lncdiseas": [255, 256], "lncdisease_interact": 256, "lncrnadb": [257, 258], "lncrnadb_interact": 258, "macrophag": [259, 260], "macrophage_interact": 260, "main": 261, "mimp": [262, 263, 264, 265], "get_kinase_class": 263, "mimp_enzyme_substr": 264, "mimp_interact": 265, "mir2diseas": [266, 267], "mir2disease_interact": 267, "mirbas": [268, 269, 270, 271, 272, 273, 274, 275], "get_mirbase_alias": 269, "mirbase_id": 270, "mirbase_matur": 271, "mirbase_mature_al": 272, "mirbase_precursor": 273, "mirbase_precursor_al": 274, "mirbase_precursor_to_matur": 275, "mirdeathdb": [276, 277], "mirdeathdb_interact": 277, "mirecord": [278, 279], "mirecords_interact": 279, "mirtarbas": [280, 281], "mirtarbase_interact": 281, "mitab": [282, 283, 284], "mitab_field_list": 283, "mitab_field_uniprot": 284, "mppi": [285, 286], "mppi_interact": 286, "ncrdeathdb": [287, 288], "ncrdeathdb_interact": 288, "negatom": [289, 290], "negatome_interact": 290, "netbiol": [291, 292, 293], "arn_interact": 292, "nrf2ome_interact": 293, "offsid": [294, 295], "offsides_side_effect": 295, "ontologi": [296, 297, 298, 651], "listof_ontologi": 297, "opentarget": [299, 300, 301, 302, 303, 304], "opentargets_adverse_react": 300, "opentargets_baseline_express": 301, "opentargets_direct_scor": 302, "opentargets_gener": 303, "opentargets_indirect_scor": 304, "oreganno": [305, 306, 307], "oreganno_interact": 306, "oreganno_raw": 307, "pathophenodb": [308, 309, 310], "diseasepathogen": 309, "disease_pathogen_interact": 310, "pathwaycommon": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "pathwaycommonsinteract": 312, "pathwaycommonsresourc": 313, "pathwaycommons_bind_interact": 314, "pathwaycommons_biogrid_interact": 315, "pathwaycommons_corum_interact": 316, "pathwaycommons_dip_interact": 317, "pathwaycommons_hprd_interact": 318, "pathwaycommons_inoh_interact": 319, "pathwaycommons_intact_interact": 320, "pathwaycommons_interact": 321, "pathwaycommons_kegg_interact": 322, "pathwaycommons_netpath_interact": 323, "pathwaycommons_panther_interact": 324, "pathwaycommons_phosphosite_interact": 325, "pathwaycommons_reactome_interact": 326, "pathwaycommons_wikipathways_interact": 327, "pazar": [328, 329], "pazar_interact": 329, "pdzbase": [330, 331], "pdzbase_interact": 331, "pepcyb": [332, 333, 334], "pepcyber_detail": 333, "pepcyber_interact": 334, "pfam": [335, 336, 337, 338, 339, 603], "pfam_nam": 336, "pfam_pdb": 337, "pfam_region": 338, "pfam_uniprot": 339, "pharo": [340, 341, 342, 343, 344, 345, 346, 347, 348], "pharos_diseas": 341, "pharos_express": 342, "pharos_gener": 343, "pharos_gtex": 344, "pharos_ligand": 345, "pharos_ortholog": 346, "pharos_target": 347, "pharos_xref": 348, "phobiu": [349, 350], "phobius_annot": 350, "phosphoelm": [351, 352, 353, 354], "phosphoelm_enzyme_substr": 352, "phosphoelm_interact": 353, "phosphoelm_kinas": 354, "phosphonetwork": [355, 356, 357], "phosphonetworks_enzyme_substr": 356, "phosphonetworks_interact": 357, "phosphopoint": [358, 359, 360], "phosphopoint_direct": 359, "phosphopoint_interact": 360, "pro": [361, 362, 363], "get_pro": 362, "pro_map": 363, "variant": 365, "protmapp": [366, 367, 368, 369], "get_protmapp": 367, "protmapper_enzyme_substr": 368, "protmapper_interact": 369, "pubchem": [370, 371], "pubchem_map": 371, "pubm": [372, 373, 374, 375, 376, 377, 378], "get_pmid": 373, "get_pubm": 374, "only_pmid": 375, "open_pubm": 376, "pmids_dict": 377, "pmids_list": 378, "ramp": [379, 380, 381, 382, 383, 384, 385, 651], "ramp_id_typ": 380, "ramp_id_types_2": 381, "ramp_list_t": 382, "ramp_map": 383, "ramp_raw": 384, "ramp_show_t": 385, "rdata": 386, "reaction": [387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "acsn_biopax": 388, "acsn_interactions_2": 389, "get_acsn_effect": 390, "get_control": [391, 540], "get_interact": 392, "get_react": 393, "get_soup": 394, "panther_biopax": 395, "panther_interact": 396, "pid_biopax": 397, "pid_interact": 398, "process_complex": 399, "process_control": 400, "process_react": 401, "reactions_biopax": 402, "reactome_biopax": 403, "reactome_b": 404, "reactome_interact": 405, "reactome_sbml": 406, "reactom": [407, 408, 409, 410, 411], "reactome_chebi": 408, "reactome_pathway_rel": 409, "reactome_pathwai": 410, "reactome_uniprot": 411, "scienc": [412, 413], "science_download": 413, "sider": [414, 415, 416, 417, 418, 419, 420, 421, 422], "siderdrug": 415, "sidersideeffect": 416, "sidersideeffectmeddra": 417, "sidersideeffetfrequ": 418, "sider_drug_nam": 419, "sider_meddra_side_effect": 420, "sider_side_effect_frequ": 421, "sider_side_effect": 422, "stitch": [423, 424, 425], "stitch_actions_interact": 424, "stitch_links_interact": 425, "string": [426, 427, 428, 429, 430], "string_effect": 427, "string_links_interact": 428, "string_physical_interact": 429, "string_speci": 430, "switches_elm": [431, 432], "get_switches_elm": 432, "transmir": [433, 434], "transmir_interact": 434, "trip": [435, 436, 437, 438, 439, 440, 441], "take_a_trip": 436, "trip_find_uniprot": 437, "trip_get_uniprot": 438, "trip_interact": 439, "trip_process": 440, "trip_process_t": 441, "trrust": [442, 443, 444, 445], "trrust_human": 443, "trrust_interact": 444, "trrust_mous": 445, "twosid": [446, 447], "twosides_interact": 447, "unichem": [448, 449, 450, 451, 452, 624, 625], "unichem_info": 450, "unichem_map": 451, "unichem_sourc": 452, "uniprot": [453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 651], "taxon": 454, "uniprotqueri": 455, "uniprotrecordhistori": 456, "deleted_uniprot_genesymbol": 457, "get_uniprot_sec": 458, "idmapping_idtyp": 459, "protein_datasheet": 460, "query_build": 461, "swissprot_delet": 462, "trembl_delet": 463, "uniprot_data": 464, "uniprot_delet": 465, "uniprot_famili": 466, "uniprot_histori": 467, "uniprot_history_recent_datasheet": 468, "uniprot_keyword": 469, "uniprot_loc": 470, "uniprot_ncbi_taxid": 471, "uniprot_ncbi_taxids_2": 472, "uniprot_preprocess": 473, "uniprot_queri": 474, "uniprot_recent_vers": 475, "uniprot_taxonomi": 476, "uniprot_tissu": 477, "uniprot_topologi": 478, "valid_uniprot": 479, "uniprot_db": [480, 481, 482, 483, 484, 485, 486, 487, 488], "all_swissprot": 481, "all_trembl": 482, "all_uniprot": 483, "get_db": [484, 582, 614], "init_db": [485, 583, 615], "is_swissprot": 486, "is_trembl": 487, "is_uniprot": 488, "intern": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "input_format": [490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503], "arraymap": 491, "biomartmap": 492, "filemap": 493, "hmdbmap": 494, "mappinginput": 495, "networkinput": 496, "picklemap": 497, "promap": 498, "rampmap": 499, "readlist": 500, "unichemmap": 501, "uniprotlistmap": 502, "uniprotmap": 503, "licens": [504, 505, 506, 507, 508, 509, 541, 542, 651], "licenseattrib": 506, "licensefeatur": 507, "licensepurpos": 508, "licenseshar": 509, "ref": [511, 512, 513], "refer": [512, 651, 652], "get_pubmed_data": 513, "resourc": [514, 515, 516, 517, 518, 519, 520, 521, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 604, 651], "abstractresourc": 515, "enzymesubstrateresourc": 516, "enzymesubstrateresourcekei": 517, "networkdataset": 518, "networkresourc": 519, "networkresourcekei": 520, "resourceattribut": 521, "legaci": [522, 523, 524, 525, 651], "db_categori": [523, 524, 525], "get_categori": [524, 525], "log": [526, 651], "control": [528, 529], "resourcecontrol": 529, "data_format": [531, 532, 533, 534, 535, 536, 537, 538, 539], "activity_flow": 532, "enzyme_substr": 533, "interact": [534, 651, 654], "interaction_htp": 535, "pathway_bad": 536, "reaction_pc": 537, "transcription_deprec": 538, "transcription_onebyon": 539, "network": [543, 544, 545, 546, 651, 654], "choose_dataset": 544, "dataset_prior": 545, "dorothea_expand_level": 546, "url": 547, "share": [548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575], "cach": [549, 550, 551, 552, 651], "cache_item": 550, "cache_path": 551, "get_cachedir": 552, "constant": 554, "curl": [555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 651], "fileopen": 557, "remotefil": 558, "cache_delete_off": 559, "cache_delete_on": 560, "cache_off": 561, "cache_on": 562, "cache_print_off": 563, "cache_print_on": 564, "debug_off": 565, "debug_on": 566, "dryrun_off": 567, "dryrun_on": 568, "is_url": 569, "preserve_off": 570, "preserve_on": 571, "progress": [572, 573], "session": [574, 651], "set": 575, "util": [576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 651], "goannot": 578, "gocustomannot": 579, "geneontologi": 580, "annot": [581, 651, 654], "load_go": 584, "pdb": [585, 586, 587, 588, 589], "residu": [586, 600, 601], "residuemapp": [587, 601], "segment": 588, "residue_pdb": 589, "proteomicsdb": [590, 591], "reflist": [592, 593, 594, 595, 596, 597, 598, 599], "referencelistmanag": 593, "check": 594, "get_manag": 595, "get_reflist": 596, "init": 597, "is_not": 598, "select": [599, 651], "seq": [602, 603, 604, 605, 606, 607, 608], "get_isoform": 606, "read_fasta": 607, "swissprot_seq": 608, "taxonomi": [609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 651], "ensure_common_nam": 610, "ensure_ensembl_nam": 611, "ensure_latin_nam": 612, "ensure_ncbi_tax_id": 613, "short_latin_nam": 616, "shorten_latin_nam": 617, "taxid_from_common_nam": 618, "taxid_from_dbptm_taxon_nam": 619, "taxid_from_ensembl_nam": 620, "taxid_from_latin_nam": 621, "taxid_from_nonstandard": 622, "uniprot_taxid": 623, "draw": [627, 628, 629], "interset": 628, "plot": [629, 651], "igraph_draw": [630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648], "abstractcairographdraw": 631, "arrowedgedraw": [632, 639], "defaultgraphdrawerffsupport": 633, "defaultvertexdraw": [634, 648], "textdraw": 635, "edg": [636, 637, 638, 639, 640, 641, 642, 651], "abstractedgedraw": 637, "alphavaryingedgedraw": 638, "darktolightedgedraw": 640, "lighttodarkedgedraw": 641, "taperededgedraw": 642, "vertex": [643, 644, 645, 646, 647, 648], "abstractcairodraw": 644, "abstractcairovertexdraw": 645, "abstractdraw": 646, "abstractvertexdraw": 647, "content": [649, 651], "welcom": 650, "omnipath": [650, 651], "do": [650, 651], "you": [650, 651], "need": 650, "instal": 650, "doc": 650, "get": 650, "help": 650, "featur": 650, "integr": 650, "databas": [650, 651], "manag": [650, 651], "further": 650, "modul": [650, 651], "id": [650, 651], "convers": 650, "homologi": 650, "translat": [650, 651], "faq": 650, "contact": 650, "impressum": 650, "histori": [650, 651, 653], "releas": [650, 653], "The": 651, "book": 651, "introduct": 651, "build": 651, "load": 651, "save": 651, "app": 651, "built": 651, "definit": 651, "strictli": 651, "literatur": 651, "curat": 651, "extra": 651, "activ": 651, "flow": 651, "enzym": [651, 654], "substrat": [651, 654], "ligand": 651, "receptor": 651, "transcript": 651, "regul": 651, "from": 651, "other": 651, "mirna": 651, "post": 651, "lncrna": 651, "mrna": 651, "small": 651, "molecul": 651, "relationship": 651, "complex": [651, 654], "inter": [651, 654], "cellular": [651, 654], "commun": [651, 654], "role": [651, 654], "directli": 651, "origin": 651, "interest": 651, "tl": 651, "dr": 651, "human": 651, "metabolom": 651, "direct": 651, "access": 651, "higher": 651, "level": 651, "ncbi": 651, "e": 651, "download": 651, "custom": 651, "failur": 651, "corrupt": 651, "issu": 651, "look": 651, "debug": 651, "timeout": 651, "inspect": 651, "object": 651, "i": 651, "fail": 651, "onli": 651, "read": 651, "ssl": 651, "http": 651, "error": 651, "exampl": [651, 654], "commerci": 651, "us": 651, "inform": 651, "certain": 651, "dataset": [651, 654], "which": 651, "ar": 651, "pre": 651, "defin": 651, "panda": 651, "datafram": 651, "self": 651, "loop": 651, "molecular": [651, 654], "identifi": 651, "orthologi": 651, "dictionari": 651, "frame": 651, "scientif": 651, "name": 651, "organ": 651, "all": 651, "one": 651, "format": 651, "valid": 651, "singl": 651, "datasheet": 651, "record": 651, "rest": 651, "api": 651, "process": 651, "sanit": 651, "sequenc": 651, "full": 651, "signal": 651, "an": 651, "intercellular": 651, "quantit": 651, "overview": 651, "intercel": 651, "brows": 651, "categori": 651, "gene": 651, "pickl": 651, "messag": 651, "basic": 651, "about": 651, "file": 651, "consol": 651, "disabl": 651, "write": 651, "send": 651, "connect": 651, "class": 651, "logger": 651, "bel": 651, "export": 651, "cellphonedb": 651, "igraph": 651, "base": 651, "just": 651, "want": 651, "quickli": 651, "plai": 651, "around": 651, "how": [651, 652], "ani": 651, "creat": 651, "2": [651, 653], "test": 651, "sign": 651, "node": 651, "queri": [651, 654], "our": 651, "without": 651, "causal": 651, "navig": 652, "0": 653, "1": 653, "3": 653, "4": 653, "5": 653, "32": 653, "6": 653, "31": 653, "7": 653, "74": 653, "93": 653, "110": 653, "8": 653, "9": 653, "10": 653, "11": 653, "12": 653, "13": 653, "14": 653, "upcom": 653, "webservic": 654, "type": 654, "mous": 654, "rat": 654, "explor": 654, "possibl": 654, "paramet": 654}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "pypath.inputs.abs.abs_interactions": [[11, "pypath-inputs-abs-abs-interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "pypath.inputs.acsn.acsn_interactions": [[13, "pypath-inputs-acsn-acsn-interactions"]], "pypath.inputs.acsn.acsn_interactions_sif": [[14, "pypath-inputs-acsn-acsn-interactions-sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, "pypath-inputs-adrecs-adrecsadr"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, "pypath-inputs-adrecs-adrecschildparent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, "pypath-inputs-adrecs-adrecsdrug"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, "pypath-inputs-adrecs-adrecsdrugadr"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, "pypath-inputs-adrecs-adrecsterm"]], "pypath.inputs.adrecs.adrecs_adr_ontology": [[21, "pypath-inputs-adrecs-adrecs-adr-ontology"]], "pypath.inputs.adrecs.adrecs_drug_adr": [[22, "pypath-inputs-adrecs-adrecs-drug-adr"]], "pypath.inputs.adrecs.adrecs_drug_identifiers": [[23, "pypath-inputs-adrecs-adrecs-drug-identifiers"]], "pypath.inputs.adrecs.adrecs_hierarchy": [[24, "pypath-inputs-adrecs-adrecs-hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "pypath.inputs.biogrid.biogrid_all_interactions": [[26, "pypath-inputs-biogrid-biogrid-all-interactions"]], "pypath.inputs.biogrid.biogrid_interactions": [[27, "pypath-inputs-biogrid-biogrid-interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "pypath.inputs.biomart.biomart_homology": [[29, "pypath-inputs-biomart-biomart-homology"]], "pypath.inputs.biomart.biomart_microarray": [[30, "pypath-inputs-biomart-biomart-microarray"]], "pypath.inputs.biomart.biomart_microarray_types": [[31, "pypath-inputs-biomart-biomart-microarray-types"]], "pypath.inputs.biomart.biomart_microarrays": [[32, "pypath-inputs-biomart-biomart-microarrays"]], "pypath.inputs.biomart.biomart_query": [[33, "pypath-inputs-biomart-biomart-query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "pypath.inputs.biomodels.download_single_model": [[35, "pypath-inputs-biomodels-download-single-model"]], "pypath.inputs.biomodels.get_all_models": [[36, "pypath-inputs-biomodels-get-all-models"]], "pypath.inputs.biomodels.get_biomodels": [[37, "pypath-inputs-biomodels-get-biomodels"]], "pypath.inputs.biomodels.get_biomodels_req": [[38, "pypath-inputs-biomodels-get-biomodels-req"]], "pypath.inputs.biomodels.get_single_model": [[39, "pypath-inputs-biomodels-get-single-model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "pypath.inputs.ca1.ca1_interactions": [[41, "pypath-inputs-ca1-ca1-interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "pypath.inputs.cancercellmap.ccmap_interactions": [[43, "pypath-inputs-cancercellmap-ccmap-interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[45, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "pypath.inputs.chembl.chembl_activities": [[47, "pypath-inputs-chembl-chembl-activities"]], "pypath.inputs.chembl.chembl_assays": [[48, "pypath-inputs-chembl-chembl-assays"]], "pypath.inputs.chembl.chembl_documents": [[49, "pypath-inputs-chembl-chembl-documents"]], "pypath.inputs.chembl.chembl_drug_indications": [[50, "pypath-inputs-chembl-chembl-drug-indications"]], "pypath.inputs.chembl.chembl_mechanisms": [[51, "pypath-inputs-chembl-chembl-mechanisms"]], "pypath.inputs.chembl.chembl_molecules": [[52, "pypath-inputs-chembl-chembl-molecules"]], "pypath.inputs.chembl.chembl_targets": [[53, "pypath-inputs-chembl-chembl-targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "pypath.inputs.clinvar.clinvar_citations": [[55, "pypath-inputs-clinvar-clinvar-citations"]], "pypath.inputs.clinvar.clinvar_raw": [[56, "pypath-inputs-clinvar-clinvar-raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[58, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[59, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[60, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[61, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[62, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[63, "pypath-inputs-common-read-xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "pypath.inputs.compath.compath_mappings": [[65, "pypath-inputs-compath-compath-mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "pypath.inputs.cpdb.cpdb_interactions": [[67, "pypath-inputs-cpdb-cpdb-interactions"]], "pypath.inputs.cpdb.cpdb_interactions_ltp": [[68, "pypath-inputs-cpdb-cpdb-interactions-ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[70, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "pypath.inputs.ctdbase.ctdbase_relations": [[72, "pypath-inputs-ctdbase-ctdbase-relations"]], "pypath.inputs.ctdbase.ctdbase_vocabulary": [[73, "pypath-inputs-ctdbase-ctdbase-vocabulary"]], "pypath.inputs.dbptm": [[74, "module-pypath.inputs.dbptm"]], "pypath.inputs.dbptm.dbptm_enzyme_substrate": [[75, "pypath-inputs-dbptm-dbptm-enzyme-substrate"]], "pypath.inputs.dbptm.dbptm_enzyme_substrate_old": [[76, "pypath-inputs-dbptm-dbptm-enzyme-substrate-old"]], "pypath.inputs.dbptm.dbptm_interactions": [[77, "pypath-inputs-dbptm-dbptm-interactions"]], "pypath.inputs.ddinter": [[78, "module-pypath.inputs.ddinter"]], "pypath.inputs.ddinter.ddinter_drug_interactions": [[79, "pypath-inputs-ddinter-ddinter-drug-interactions"]], "pypath.inputs.ddinter.ddinter_identifiers": [[80, "pypath-inputs-ddinter-ddinter-identifiers"]], "pypath.inputs.ddinter.ddinter_interactions": [[81, "pypath-inputs-ddinter-ddinter-interactions"]], "pypath.inputs.ddinter.ddinter_mappings": [[82, "pypath-inputs-ddinter-ddinter-mappings"]], "pypath.inputs.ddinter.ddinter_n_drugs": [[83, "pypath-inputs-ddinter-ddinter-n-drugs"]], "pypath.inputs.deathdomain": [[84, "module-pypath.inputs.deathdomain"]], "pypath.inputs.deathdomain.deathdomain_interactions": [[85, "pypath-inputs-deathdomain-deathdomain-interactions"]], "pypath.inputs.deathdomain.deathdomain_interactions_rescued": [[86, "pypath-inputs-deathdomain-deathdomain-interactions-rescued"]], "pypath.inputs.dip": [[87, "module-pypath.inputs.dip"]], "pypath.inputs.dip.dip_interactions": [[88, "pypath-inputs-dip-dip-interactions"]], "pypath.inputs.dip.dip_login": [[89, "pypath-inputs-dip-dip-login"]], "pypath.inputs.diseases": [[90, "module-pypath.inputs.diseases"]], "pypath.inputs.diseases.diseases_general": [[91, "pypath-inputs-diseases-diseases-general"]], "pypath.inputs.diseases.experiments_filtered": [[92, "pypath-inputs-diseases-experiments-filtered"]], "pypath.inputs.diseases.experiments_full": [[93, "pypath-inputs-diseases-experiments-full"]], "pypath.inputs.diseases.knowledge_filtered": [[94, "pypath-inputs-diseases-knowledge-filtered"]], "pypath.inputs.diseases.knowledge_full": [[95, "pypath-inputs-diseases-knowledge-full"]], "pypath.inputs.diseases.textmining_filtered": [[96, "pypath-inputs-diseases-textmining-filtered"]], "pypath.inputs.diseases.textmining_full": [[97, "pypath-inputs-diseases-textmining-full"]], "pypath.inputs.dorothea": [[98, "module-pypath.inputs.dorothea"]], "pypath.inputs.dorothea.DorotheaInteraction": [[99, "pypath-inputs-dorothea-dorotheainteraction"]], "pypath.inputs.dorothea.dorothea_full_raw": [[100, "pypath-inputs-dorothea-dorothea-full-raw"]], "pypath.inputs.dorothea.dorothea_interactions": [[101, "pypath-inputs-dorothea-dorothea-interactions"]], "Details": [[101, "details"], [102, "details"], [103, "details"], [105, "details"], [107, "details"], [108, "details"]], "pypath.inputs.dorothea.dorothea_interactions_old": [[102, "pypath-inputs-dorothea-dorothea-interactions-old"]], "pypath.inputs.dorothea.dorothea_old_csv": [[103, "pypath-inputs-dorothea-dorothea-old-csv"]], "pypath.inputs.dorothea.dorothea_rda_raw": [[104, "pypath-inputs-dorothea-dorothea-rda-raw"]], "pypath.inputs.dorothea.get_dorothea_old": [[105, "pypath-inputs-dorothea-get-dorothea-old"]], "pypath.inputs.dorothea.get_tfregulons": [[106, "pypath-inputs-dorothea-get-tfregulons"]], "pypath.inputs.dorothea.tfregulons_interactions": [[107, "pypath-inputs-dorothea-tfregulons-interactions"]], "pypath.inputs.dorothea.tfregulons_interactions_old": [[108, "pypath-inputs-dorothea-tfregulons-interactions-old"]], "pypath.inputs.drugbank": [[109, "module-pypath.inputs.drugbank"]], "pypath.inputs.drugbank.DrugbankFull": [[110, "pypath-inputs-drugbank-drugbankfull"]], "pypath.inputs.drugbank.drugbank_annotations": [[111, "pypath-inputs-drugbank-drugbank-annotations"]], "pypath.inputs.drugbank.drugbank_drugs": [[112, "pypath-inputs-drugbank-drugbank-drugs"]], "pypath.inputs.drugbank.drugbank_interactions": [[113, "pypath-inputs-drugbank-drugbank-interactions"]], "pypath.inputs.drugbank.drugbank_mapping": [[114, "pypath-inputs-drugbank-drugbank-mapping"]], "pypath.inputs.drugbank.drugbank_raw_interactions": [[115, "pypath-inputs-drugbank-drugbank-raw-interactions"]], "pypath.inputs.drugcentral": [[116, "module-pypath.inputs.drugcentral"]], "pypath.inputs.drugcentral.drugcentral_drugs": [[117, "pypath-inputs-drugcentral-drugcentral-drugs"]], "pypath.inputs.drugcentral.drugcentral_interactions": [[118, "pypath-inputs-drugcentral-drugcentral-interactions"]], "pypath.inputs.drugcentral.drugcentral_mapping": [[119, "pypath-inputs-drugcentral-drugcentral-mapping"]], "pypath.inputs.ebi": [[120, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[121, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.elm": [[122, "module-pypath.inputs.elm"]], "pypath.inputs.elm.elm_classes": [[123, "pypath-inputs-elm-elm-classes"]], "pypath.inputs.elm.elm_domains": [[124, "pypath-inputs-elm-elm-domains"]], "pypath.inputs.elm.elm_instances": [[125, "pypath-inputs-elm-elm-instances"]], "pypath.inputs.elm.elm_interactions": [[126, "pypath-inputs-elm-elm-interactions"]], "pypath.inputs.embopress": [[127, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[128, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.encode": [[129, "module-pypath.inputs.encode"]], "pypath.inputs.encode.encode_tf_mirna_interactions": [[130, "pypath-inputs-encode-encode-tf-mirna-interactions"]], "pypath.inputs.ensembl": [[131, "module-pypath.inputs.ensembl"]], "pypath.inputs.ensembl.ensembl_organisms": [[132, "pypath-inputs-ensembl-ensembl-organisms"]], "pypath.inputs.eutils": [[133, "module-pypath.inputs.eutils"]], "pypath.inputs.eutils.esummary": [[134, "pypath-inputs-eutils-esummary"]], "pypath.inputs.exocarta": [[135, "module-pypath.inputs.exocarta"]], "pypath.inputs.exocarta.get_exocarta": [[136, "pypath-inputs-exocarta-get-exocarta"]], "pypath.inputs.exocarta.get_vesiclepedia": [[137, "pypath-inputs-exocarta-get-vesiclepedia"]], "pypath.inputs.expasy": [[138, "module-pypath.inputs.expasy"]], "pypath.inputs.expasy.expasy_enzyme_classes": [[139, "pypath-inputs-expasy-expasy-enzyme-classes"]], "pypath.inputs.expasy.expasy_enzymes": [[140, "pypath-inputs-expasy-expasy-enzymes"]], "pypath.inputs.genecards": [[141, "module-pypath.inputs.genecards"]], "pypath.inputs.genecards.genecards_datasheet": [[142, "pypath-inputs-genecards-genecards-datasheet"]], "pypath.inputs.genecards.genecards_soup": [[143, "pypath-inputs-genecards-genecards-soup"]], "pypath.inputs.genecards.genecards_summaries": [[144, "pypath-inputs-genecards-genecards-summaries"]], "pypath.inputs.get_method": [[145, "pypath-inputs-get-method"]], "pypath.inputs.go": [[146, "module-pypath.inputs.go"]], "pypath.inputs.go.get_go_desc": [[147, "pypath-inputs-go-get-go-desc"]], "pypath.inputs.go.get_go_quick": [[148, "pypath-inputs-go-get-go-quick"]], "pypath.inputs.go.get_goslim": [[149, "pypath-inputs-go-get-goslim"]], "pypath.inputs.go.go_ancestors": [[150, "pypath-inputs-go-go-ancestors"]], "pypath.inputs.go.go_ancestors_goose": [[151, "pypath-inputs-go-go-ancestors-goose"]], "pypath.inputs.go.go_ancestors_quickgo": [[152, "pypath-inputs-go-go-ancestors-quickgo"]], "pypath.inputs.go.go_annotations": [[153, "pypath-inputs-go-go-annotations"]], "pypath.inputs.go.go_annotations_all": [[154, "pypath-inputs-go-go-annotations-all"]], "pypath.inputs.go.go_annotations_goa": [[155, "pypath-inputs-go-go-annotations-goa"]], "pypath.inputs.go.go_annotations_goose": [[156, "pypath-inputs-go-go-annotations-goose"]], "pypath.inputs.go.go_annotations_quickgo": [[157, "pypath-inputs-go-go-annotations-quickgo"]], "pypath.inputs.go.go_annotations_solr": [[158, "pypath-inputs-go-go-annotations-solr"]], "pypath.inputs.go.go_annotations_uniprot": [[159, "pypath-inputs-go-go-annotations-uniprot"]], "pypath.inputs.go.go_descendants": [[160, "pypath-inputs-go-go-descendants"]], "pypath.inputs.go.go_descendants_goose": [[161, "pypath-inputs-go-go-descendants-goose"]], "pypath.inputs.go.go_descendants_quickgo": [[162, "pypath-inputs-go-go-descendants-quickgo"]], "pypath.inputs.go.go_descendants_to_ancestors": [[163, "pypath-inputs-go-go-descendants-to-ancestors"]], "pypath.inputs.go.go_terms": [[164, "pypath-inputs-go-go-terms"]], "pypath.inputs.go.go_terms_goose": [[165, "pypath-inputs-go-go-terms-goose"]], "pypath.inputs.go.go_terms_quickgo": [[166, "pypath-inputs-go-go-terms-quickgo"]], "pypath.inputs.go.go_terms_solr": [[167, "pypath-inputs-go-go-terms-solr"]], "pypath.inputs.gpcrdb": [[168, "module-pypath.inputs.gpcrdb"]], "pypath.inputs.gpcrdb.gpcrdb_annotations": [[169, "pypath-inputs-gpcrdb-gpcrdb-annotations"]], "pypath.inputs.graphviz": [[170, "module-pypath.inputs.graphviz"]], "pypath.inputs.graphviz.graphviz_attrs": [[171, "pypath-inputs-graphviz-graphviz-attrs"]], "pypath.inputs.hmdb": [[172, "module-pypath.inputs.hmdb"]], "pypath.inputs.hmdb.common": [[173, "module-pypath.inputs.hmdb.common"]], "pypath.inputs.hmdb.common.iter": [[174, "pypath-inputs-hmdb-common-iter"]], "pypath.inputs.hmdb.common.mapping": [[175, "pypath-inputs-hmdb-common-mapping"]], "pypath.inputs.hmdb.common.raw": [[176, "pypath-inputs-hmdb-common-raw"]], "pypath.inputs.hmdb.common.table": [[177, "pypath-inputs-hmdb-common-table"]], "pypath.inputs.hmdb.metabolites": [[178, "module-pypath.inputs.hmdb.metabolites"]], "pypath.inputs.hmdb.metabolites.iter": [[179, "pypath-inputs-hmdb-metabolites-iter"]], "pypath.inputs.hmdb.metabolites.mapping": [[180, "pypath-inputs-hmdb-metabolites-mapping"]], "pypath.inputs.hmdb.metabolites.raw": [[181, "pypath-inputs-hmdb-metabolites-raw"]], "pypath.inputs.hmdb.metabolites.table": [[182, "pypath-inputs-hmdb-metabolites-table"]], "pypath.inputs.hmdb.proteins": [[183, "module-pypath.inputs.hmdb.proteins"]], "pypath.inputs.hmdb.proteins.iter": [[184, "pypath-inputs-hmdb-proteins-iter"]], "pypath.inputs.hmdb.proteins.mapping": [[185, "pypath-inputs-hmdb-proteins-mapping"]], "pypath.inputs.hmdb.proteins.raw": [[186, "pypath-inputs-hmdb-proteins-raw"]], "pypath.inputs.hmdb.proteins.table": [[187, "pypath-inputs-hmdb-proteins-table"]], "pypath.inputs.hmdb.schema": [[188, "module-pypath.inputs.hmdb.schema"]], "pypath.inputs.hmdb.schema.common": [[189, "module-pypath.inputs.hmdb.schema.common"]], "pypath.inputs.hmdb.schema.common.Field": [[190, "pypath-inputs-hmdb-schema-common-field"]], "pypath.inputs.hmdb.schema.metabolites": [[191, "module-pypath.inputs.hmdb.schema.metabolites"]], "pypath.inputs.hmdb.schema.proteins": [[192, "module-pypath.inputs.hmdb.schema.proteins"]], "pypath.inputs.hmdb.structures": [[193, "module-pypath.inputs.hmdb.structures"]], "pypath.inputs.hmdb.structures.sdf": [[194, "pypath-inputs-hmdb-structures-sdf"]], "pypath.inputs.hmdb.visual": [[195, "module-pypath.inputs.hmdb.visual"]], "pypath.inputs.hmdb.visual.show_structure": [[196, "pypath-inputs-hmdb-visual-show-structure"]], "pypath.inputs.hmdb.visual.structure_svg": [[197, "pypath-inputs-hmdb-visual-structure-svg"]], "pypath.inputs.hmdb.xml": [[198, "module-pypath.inputs.hmdb.xml"]], "pypath.inputs.hmdb.xml.hmdb_xml": [[199, "pypath-inputs-hmdb-xml-hmdb-xml"]], "pypath.inputs.hprd": [[200, "module-pypath.inputs.hprd"]], "pypath.inputs.hprd.get_hprd": [[201, "pypath-inputs-hprd-get-hprd"]], "pypath.inputs.hprd.hprd_enzyme_substrate": [[202, "pypath-inputs-hprd-hprd-enzyme-substrate"]], "pypath.inputs.hprd.hprd_interactions": [[203, "pypath-inputs-hprd-hprd-interactions"]], "pypath.inputs.hprd.hprd_interactions_htp": [[204, "pypath-inputs-hprd-hprd-interactions-htp"]], "pypath.inputs.htri": [[205, "module-pypath.inputs.htri"]], "pypath.inputs.htri.htri_interactions": [[206, "pypath-inputs-htri-htri-interactions"]], "pypath.inputs.humsavar": [[207, "module-pypath.inputs.humsavar"]], "pypath.inputs.humsavar.uniprot_variants": [[208, "pypath-inputs-humsavar-uniprot-variants"]], "pypath.inputs.i3d": [[209, "module-pypath.inputs.i3d"]], "pypath.inputs.i3d.get_i3d": [[210, "pypath-inputs-i3d-get-i3d"]], "pypath.inputs.ielm": [[211, "module-pypath.inputs.ielm"]], "pypath.inputs.ielm.get_ielm": [[212, "pypath-inputs-ielm-get-ielm"]], "pypath.inputs.ielm.get_ielm_huge": [[213, "pypath-inputs-ielm-get-ielm-huge"]], "pypath.inputs.imweb": [[214, "module-pypath.inputs.imweb"]], "pypath.inputs.imweb.get_imweb": [[215, "pypath-inputs-imweb-get-imweb"]], "pypath.inputs.imweb.get_imweb_req": [[216, "pypath-inputs-imweb-get-imweb-req"]], "pypath.inputs.innatedb": [[217, "module-pypath.inputs.innatedb"]], "pypath.inputs.innatedb.innatedb_interactions": [[218, "pypath-inputs-innatedb-innatedb-interactions"]], "pypath.inputs.instruct": [[219, "module-pypath.inputs.instruct"]], "pypath.inputs.instruct.get_instruct": [[220, "pypath-inputs-instruct-get-instruct"]], "pypath.inputs.instruct.get_instruct_offsets": [[221, "pypath-inputs-instruct-get-instruct-offsets"]], "pypath.inputs.intact": [[222, "module-pypath.inputs.intact"]], "pypath.inputs.intact.intact_interactions": [[223, "pypath-inputs-intact-intact-interactions"]], "pypath.inputs.interpro": [[224, "module-pypath.inputs.interpro"]], "pypath.inputs.interpro.interpro2go_annotations": [[225, "pypath-inputs-interpro-interpro2go-annotations"]], "pypath.inputs.interpro.interpro_annotations": [[226, "pypath-inputs-interpro-interpro-annotations"]], "pypath.inputs.interpro.interpro_entries": [[227, "pypath-inputs-interpro-interpro-entries"]], "pypath.inputs.interpro.interpro_xrefs": [[228, "pypath-inputs-interpro-interpro-xrefs"]], "pypath.inputs.ipi": [[229, "module-pypath.inputs.ipi"]], "pypath.inputs.ipi.ipi_uniprot": [[230, "pypath-inputs-ipi-ipi-uniprot"]], "pypath.inputs.kegg_api": [[231, "module-pypath.inputs.kegg_api"]], "pypath.inputs.kegg_api.disease_to_drug": [[232, "pypath-inputs-kegg-api-disease-to-drug"]], "pypath.inputs.kegg_api.disease_to_gene": [[233, "pypath-inputs-kegg-api-disease-to-gene"]], "pypath.inputs.kegg_api.disease_to_pathway": [[234, "pypath-inputs-kegg-api-disease-to-pathway"]], "pypath.inputs.kegg_api.drug_to_disease": [[235, "pypath-inputs-kegg-api-drug-to-disease"]], "pypath.inputs.kegg_api.drug_to_drug": [[236, "pypath-inputs-kegg-api-drug-to-drug"]], "pypath.inputs.kegg_api.drug_to_gene": [[237, "pypath-inputs-kegg-api-drug-to-gene"]], "pypath.inputs.kegg_api.drug_to_pathway": [[238, "pypath-inputs-kegg-api-drug-to-pathway"]], "pypath.inputs.kegg_api.gene_to_disease": [[239, "pypath-inputs-kegg-api-gene-to-disease"]], "pypath.inputs.kegg_api.gene_to_drug": [[240, "pypath-inputs-kegg-api-gene-to-drug"]], "pypath.inputs.kegg_api.gene_to_pathway": [[241, "pypath-inputs-kegg-api-gene-to-pathway"]], "pypath.inputs.kegg_api.kegg_drug_to_chebi": [[242, "pypath-inputs-kegg-api-kegg-drug-to-chebi"]], "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid": [[243, "pypath-inputs-kegg-api-kegg-gene-to-ncbi-geneid"]], "pypath.inputs.kegg_api.kegg_gene_to_uniprot": [[244, "pypath-inputs-kegg-api-kegg-gene-to-uniprot"]], "pypath.inputs.kegg_api.pathway_to_disease": [[245, "pypath-inputs-kegg-api-pathway-to-disease"]], "pypath.inputs.kegg_api.pathway_to_drug": [[246, "pypath-inputs-kegg-api-pathway-to-drug"]], "pypath.inputs.kegg_api.pathway_to_gene": [[247, "pypath-inputs-kegg-api-pathway-to-gene"]], "pypath.inputs.kirouac2010": [[248, "module-pypath.inputs.kirouac2010"]], "pypath.inputs.kirouac2010.kirouac2010_interactions": [[249, "pypath-inputs-kirouac2010-kirouac2010-interactions"]], "pypath.inputs.laudanna": [[250, "module-pypath.inputs.laudanna"]], "pypath.inputs.laudanna.laudanna_directions": [[251, "pypath-inputs-laudanna-laudanna-directions"]], "pypath.inputs.laudanna.laudanna_effects": [[252, "pypath-inputs-laudanna-laudanna-effects"]], "pypath.inputs.lincs": [[253, "module-pypath.inputs.lincs"]], "pypath.inputs.lincs.lincs_compounds": [[254, "pypath-inputs-lincs-lincs-compounds"]], "pypath.inputs.lncdisease": [[255, "module-pypath.inputs.lncdisease"]], "pypath.inputs.lncdisease.lncdisease_interactions": [[256, "pypath-inputs-lncdisease-lncdisease-interactions"]], "pypath.inputs.lncrnadb": [[257, "module-pypath.inputs.lncrnadb"]], "pypath.inputs.lncrnadb.lncrnadb_interactions": [[258, "pypath-inputs-lncrnadb-lncrnadb-interactions"]], "pypath.inputs.macrophage": [[259, "module-pypath.inputs.macrophage"]], "pypath.inputs.macrophage.macrophage_interactions": [[260, "pypath-inputs-macrophage-macrophage-interactions"]], "pypath.inputs.main": [[261, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[262, "module-pypath.inputs.mimp"]], "pypath.inputs.mimp.get_kinase_class": [[263, "pypath-inputs-mimp-get-kinase-class"]], "pypath.inputs.mimp.mimp_enzyme_substrate": [[264, "pypath-inputs-mimp-mimp-enzyme-substrate"]], "pypath.inputs.mimp.mimp_interactions": [[265, "pypath-inputs-mimp-mimp-interactions"]], "pypath.inputs.mir2disease": [[266, "module-pypath.inputs.mir2disease"]], "pypath.inputs.mir2disease.mir2disease_interactions": [[267, "pypath-inputs-mir2disease-mir2disease-interactions"]], "pypath.inputs.mirbase": [[268, "module-pypath.inputs.mirbase"]], "pypath.inputs.mirbase.get_mirbase_aliases": [[269, "pypath-inputs-mirbase-get-mirbase-aliases"]], "pypath.inputs.mirbase.mirbase_ids": [[270, "pypath-inputs-mirbase-mirbase-ids"]], "pypath.inputs.mirbase.mirbase_mature": [[271, "pypath-inputs-mirbase-mirbase-mature"]], "pypath.inputs.mirbase.mirbase_mature_all": [[272, "pypath-inputs-mirbase-mirbase-mature-all"]], "pypath.inputs.mirbase.mirbase_precursor": [[273, "pypath-inputs-mirbase-mirbase-precursor"]], "pypath.inputs.mirbase.mirbase_precursor_all": [[274, "pypath-inputs-mirbase-mirbase-precursor-all"]], "pypath.inputs.mirbase.mirbase_precursor_to_mature": [[275, "pypath-inputs-mirbase-mirbase-precursor-to-mature"]], "pypath.inputs.mirdeathdb": [[276, "module-pypath.inputs.mirdeathdb"]], "pypath.inputs.mirdeathdb.mirdeathdb_interactions": [[277, "pypath-inputs-mirdeathdb-mirdeathdb-interactions"]], "pypath.inputs.mirecords": [[278, "module-pypath.inputs.mirecords"]], "pypath.inputs.mirecords.mirecords_interactions": [[279, "pypath-inputs-mirecords-mirecords-interactions"]], "pypath.inputs.mirtarbase": [[280, "module-pypath.inputs.mirtarbase"]], "pypath.inputs.mirtarbase.mirtarbase_interactions": [[281, "pypath-inputs-mirtarbase-mirtarbase-interactions"]], "pypath.inputs.mitab": [[282, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[283, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[284, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.mppi": [[285, "module-pypath.inputs.mppi"]], "pypath.inputs.mppi.mppi_interactions": [[286, "pypath-inputs-mppi-mppi-interactions"]], "pypath.inputs.ncrdeathdb": [[287, "module-pypath.inputs.ncrdeathdb"]], "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions": [[288, "pypath-inputs-ncrdeathdb-ncrdeathdb-interactions"]], "pypath.inputs.negatome": [[289, "module-pypath.inputs.negatome"]], "pypath.inputs.negatome.negatome_interactions": [[290, "pypath-inputs-negatome-negatome-interactions"]], "pypath.inputs.netbiol": [[291, "module-pypath.inputs.netbiol"]], "pypath.inputs.netbiol.arn_interactions": [[292, "pypath-inputs-netbiol-arn-interactions"]], "pypath.inputs.netbiol.nrf2ome_interactions": [[293, "pypath-inputs-netbiol-nrf2ome-interactions"]], "pypath.inputs.offsides": [[294, "module-pypath.inputs.offsides"]], "pypath.inputs.offsides.offsides_side_effects": [[295, "pypath-inputs-offsides-offsides-side-effects"]], "pypath.inputs.ontology": [[296, "module-pypath.inputs.ontology"]], "pypath.inputs.ontology.listof_ontologies": [[297, "pypath-inputs-ontology-listof-ontologies"]], "pypath.inputs.ontology.ontology": [[298, "pypath-inputs-ontology-ontology"]], "pypath.inputs.opentargets": [[299, "module-pypath.inputs.opentargets"]], "pypath.inputs.opentargets.opentargets_adverse_reactions": [[300, "pypath-inputs-opentargets-opentargets-adverse-reactions"]], "pypath.inputs.opentargets.opentargets_baseline_expression": [[301, "pypath-inputs-opentargets-opentargets-baseline-expression"]], "pypath.inputs.opentargets.opentargets_direct_score": [[302, "pypath-inputs-opentargets-opentargets-direct-score"]], "pypath.inputs.opentargets.opentargets_general": [[303, "pypath-inputs-opentargets-opentargets-general"]], "pypath.inputs.opentargets.opentargets_indirect_score": [[304, "pypath-inputs-opentargets-opentargets-indirect-score"]], "pypath.inputs.oreganno": [[305, "module-pypath.inputs.oreganno"]], "pypath.inputs.oreganno.oreganno_interactions": [[306, "pypath-inputs-oreganno-oreganno-interactions"]], "pypath.inputs.oreganno.oreganno_raw": [[307, "pypath-inputs-oreganno-oreganno-raw"]], "pypath.inputs.pathophenodb": [[308, "module-pypath.inputs.pathophenodb"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[309, "pypath-inputs-pathophenodb-diseasepathogen"]], "pypath.inputs.pathophenodb.disease_pathogen_interactions": [[310, "pypath-inputs-pathophenodb-disease-pathogen-interactions"]], "pypath.inputs.pathwaycommons": [[311, "module-pypath.inputs.pathwaycommons"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[312, "pypath-inputs-pathwaycommons-pathwaycommonsinteraction"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[313, "pypath-inputs-pathwaycommons-pathwaycommonsresource"]], "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions": [[314, "pypath-inputs-pathwaycommons-pathwaycommons-bind-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions": [[315, "pypath-inputs-pathwaycommons-pathwaycommons-biogrid-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions": [[316, "pypath-inputs-pathwaycommons-pathwaycommons-corum-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions": [[317, "pypath-inputs-pathwaycommons-pathwaycommons-dip-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions": [[318, "pypath-inputs-pathwaycommons-pathwaycommons-hprd-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions": [[319, "pypath-inputs-pathwaycommons-pathwaycommons-inoh-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions": [[320, "pypath-inputs-pathwaycommons-pathwaycommons-intact-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_interactions": [[321, "pypath-inputs-pathwaycommons-pathwaycommons-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions": [[322, "pypath-inputs-pathwaycommons-pathwaycommons-kegg-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions": [[323, "pypath-inputs-pathwaycommons-pathwaycommons-netpath-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions": [[324, "pypath-inputs-pathwaycommons-pathwaycommons-panther-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions": [[325, "pypath-inputs-pathwaycommons-pathwaycommons-phosphosite-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions": [[326, "pypath-inputs-pathwaycommons-pathwaycommons-reactome-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions": [[327, "pypath-inputs-pathwaycommons-pathwaycommons-wikipathways-interactions"]], "pypath.inputs.pazar": [[328, "module-pypath.inputs.pazar"]], "pypath.inputs.pazar.pazar_interactions": [[329, "pypath-inputs-pazar-pazar-interactions"]], "pypath.inputs.pdzbase": [[330, "module-pypath.inputs.pdzbase"]], "pypath.inputs.pdzbase.pdzbase_interactions": [[331, "pypath-inputs-pdzbase-pdzbase-interactions"]], "pypath.inputs.pepcyber": [[332, "module-pypath.inputs.pepcyber"]], "pypath.inputs.pepcyber.pepcyber_details": [[333, "pypath-inputs-pepcyber-pepcyber-details"]], "pypath.inputs.pepcyber.pepcyber_interactions": [[334, "pypath-inputs-pepcyber-pepcyber-interactions"]], "pypath.inputs.pfam": [[335, "module-pypath.inputs.pfam"]], "pypath.inputs.pfam.pfam_names": [[336, "pypath-inputs-pfam-pfam-names"]], "pypath.inputs.pfam.pfam_pdb": [[337, "pypath-inputs-pfam-pfam-pdb"]], "pypath.inputs.pfam.pfam_regions": [[338, "pypath-inputs-pfam-pfam-regions"]], "pypath.inputs.pfam.pfam_uniprot": [[339, "pypath-inputs-pfam-pfam-uniprot"]], "pypath.inputs.pharos": [[340, "module-pypath.inputs.pharos"]], "pypath.inputs.pharos.pharos_diseases": [[341, "pypath-inputs-pharos-pharos-diseases"]], "pypath.inputs.pharos.pharos_expression": [[342, "pypath-inputs-pharos-pharos-expression"]], "pypath.inputs.pharos.pharos_general": [[343, "pypath-inputs-pharos-pharos-general"]], "pypath.inputs.pharos.pharos_gtex": [[344, "pypath-inputs-pharos-pharos-gtex"]], "pypath.inputs.pharos.pharos_ligands": [[345, "pypath-inputs-pharos-pharos-ligands"]], "pypath.inputs.pharos.pharos_orthologs": [[346, "pypath-inputs-pharos-pharos-orthologs"]], "pypath.inputs.pharos.pharos_targets": [[347, "pypath-inputs-pharos-pharos-targets"]], "pypath.inputs.pharos.pharos_xrefs": [[348, "pypath-inputs-pharos-pharos-xrefs"]], "pypath.inputs.phobius": [[349, "module-pypath.inputs.phobius"]], "pypath.inputs.phobius.phobius_annotations": [[350, "pypath-inputs-phobius-phobius-annotations"]], "pypath.inputs.phosphoelm": [[351, "module-pypath.inputs.phosphoelm"]], "pypath.inputs.phosphoelm.phosphoelm_enzyme_substrate": [[352, "pypath-inputs-phosphoelm-phosphoelm-enzyme-substrate"]], "pypath.inputs.phosphoelm.phosphoelm_interactions": [[353, "pypath-inputs-phosphoelm-phosphoelm-interactions"]], "pypath.inputs.phosphoelm.phosphoelm_kinases": [[354, "pypath-inputs-phosphoelm-phosphoelm-kinases"]], "pypath.inputs.phosphonetworks": [[355, "module-pypath.inputs.phosphonetworks"]], "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate": [[356, "pypath-inputs-phosphonetworks-phosphonetworks-enzyme-substrate"]], "pypath.inputs.phosphonetworks.phosphonetworks_interactions": [[357, "pypath-inputs-phosphonetworks-phosphonetworks-interactions"]], "pypath.inputs.phosphopoint": [[358, "module-pypath.inputs.phosphopoint"]], "pypath.inputs.phosphopoint.phosphopoint_directions": [[359, "pypath-inputs-phosphopoint-phosphopoint-directions"]], "pypath.inputs.phosphopoint.phosphopoint_interactions": [[360, "pypath-inputs-phosphopoint-phosphopoint-interactions"]], "pypath.inputs.pro": [[361, "module-pypath.inputs.pro"]], "pypath.inputs.pro.get_pro": [[362, "pypath-inputs-pro-get-pro"]], "pypath.inputs.pro.pro_mapping": [[363, "pypath-inputs-pro-pro-mapping"]], "pypath.inputs.proteins": [[364, "module-pypath.inputs.proteins"]], "pypath.inputs.proteins.variants": [[365, "pypath-inputs-proteins-variants"]], "pypath.inputs.protmapper": [[366, "module-pypath.inputs.protmapper"]], "pypath.inputs.protmapper.get_protmapper": [[367, "pypath-inputs-protmapper-get-protmapper"]], "pypath.inputs.protmapper.protmapper_enzyme_substrate": [[368, "pypath-inputs-protmapper-protmapper-enzyme-substrate"]], "pypath.inputs.protmapper.protmapper_interactions": [[369, "pypath-inputs-protmapper-protmapper-interactions"]], "pypath.inputs.pubchem": [[370, "module-pypath.inputs.pubchem"]], "pypath.inputs.pubchem.pubchem_mapping": [[371, "pypath-inputs-pubchem-pubchem-mapping"]], "pypath.inputs.pubmed": [[372, "module-pypath.inputs.pubmed"]], "pypath.inputs.pubmed.get_pmid": [[373, "pypath-inputs-pubmed-get-pmid"]], "pypath.inputs.pubmed.get_pubmeds": [[374, "pypath-inputs-pubmed-get-pubmeds"]], "pypath.inputs.pubmed.only_pmids": [[375, "pypath-inputs-pubmed-only-pmids"]], "pypath.inputs.pubmed.open_pubmed": [[376, "pypath-inputs-pubmed-open-pubmed"]], "pypath.inputs.pubmed.pmids_dict": [[377, "pypath-inputs-pubmed-pmids-dict"]], "pypath.inputs.pubmed.pmids_list": [[378, "pypath-inputs-pubmed-pmids-list"]], "pypath.inputs.ramp": [[379, "module-pypath.inputs.ramp"]], "pypath.inputs.ramp.ramp_id_types": [[380, "pypath-inputs-ramp-ramp-id-types"]], "pypath.inputs.ramp.ramp_id_types_2": [[381, "pypath-inputs-ramp-ramp-id-types-2"]], "pypath.inputs.ramp.ramp_list_tables": [[382, "pypath-inputs-ramp-ramp-list-tables"]], "pypath.inputs.ramp.ramp_mapping": [[383, "pypath-inputs-ramp-ramp-mapping"]], "pypath.inputs.ramp.ramp_raw": [[384, "pypath-inputs-ramp-ramp-raw"]], "pypath.inputs.ramp.ramp_show_tables": [[385, "pypath-inputs-ramp-ramp-show-tables"]], "pypath.inputs.rdata": [[386, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[387, "module-pypath.inputs.reaction"]], "pypath.inputs.reaction.acsn_biopax": [[388, "pypath-inputs-reaction-acsn-biopax"]], "pypath.inputs.reaction.acsn_interactions_2": [[389, "pypath-inputs-reaction-acsn-interactions-2"]], "pypath.inputs.reaction.get_acsn_effects": [[390, "pypath-inputs-reaction-get-acsn-effects"]], "pypath.inputs.reaction.get_controls": [[391, "pypath-inputs-reaction-get-controls"]], "pypath.inputs.reaction.get_interactions": [[392, "pypath-inputs-reaction-get-interactions"]], "pypath.inputs.reaction.get_reactions": [[393, "pypath-inputs-reaction-get-reactions"]], "pypath.inputs.reaction.get_soup": [[394, "pypath-inputs-reaction-get-soup"]], "pypath.inputs.reaction.panther_biopax": [[395, "pypath-inputs-reaction-panther-biopax"]], "pypath.inputs.reaction.panther_interactions": [[396, "pypath-inputs-reaction-panther-interactions"]], "pypath.inputs.reaction.pid_biopax": [[397, "pypath-inputs-reaction-pid-biopax"]], "pypath.inputs.reaction.pid_interactions": [[398, "pypath-inputs-reaction-pid-interactions"]], "pypath.inputs.reaction.process_complex": [[399, "pypath-inputs-reaction-process-complex"]], "pypath.inputs.reaction.process_controls": [[400, "pypath-inputs-reaction-process-controls"]], "pypath.inputs.reaction.process_reactions": [[401, "pypath-inputs-reaction-process-reactions"]], "pypath.inputs.reaction.reactions_biopax": [[402, "pypath-inputs-reaction-reactions-biopax"]], "pypath.inputs.reaction.reactome_biopax": [[403, "pypath-inputs-reaction-reactome-biopax"]], "pypath.inputs.reaction.reactome_bs": [[404, "pypath-inputs-reaction-reactome-bs"]], "pypath.inputs.reaction.reactome_interactions": [[405, "pypath-inputs-reaction-reactome-interactions"]], "pypath.inputs.reaction.reactome_sbml": [[406, "pypath-inputs-reaction-reactome-sbml"]], "pypath.inputs.reactome": [[407, "module-pypath.inputs.reactome"]], "pypath.inputs.reactome.reactome_chebis": [[408, "pypath-inputs-reactome-reactome-chebis"]], "pypath.inputs.reactome.reactome_pathway_relations": [[409, "pypath-inputs-reactome-reactome-pathway-relations"]], "pypath.inputs.reactome.reactome_pathways": [[410, "pypath-inputs-reactome-reactome-pathways"]], "pypath.inputs.reactome.reactome_uniprots": [[411, "pypath-inputs-reactome-reactome-uniprots"]], "pypath.inputs.science": [[412, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[413, "pypath-inputs-science-science-download"]], "pypath.inputs.sider": [[414, "module-pypath.inputs.sider"]], "pypath.inputs.sider.SiderDrug": [[415, "pypath-inputs-sider-siderdrug"]], "pypath.inputs.sider.SiderSideeffect": [[416, "pypath-inputs-sider-sidersideeffect"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[417, "pypath-inputs-sider-sidersideeffectmeddra"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[418, "pypath-inputs-sider-sidersideeffetfrequency"]], "pypath.inputs.sider.sider_drug_names": [[419, "pypath-inputs-sider-sider-drug-names"]], "pypath.inputs.sider.sider_meddra_side_effects": [[420, "pypath-inputs-sider-sider-meddra-side-effects"]], "pypath.inputs.sider.sider_side_effect_frequencies": [[421, "pypath-inputs-sider-sider-side-effect-frequencies"]], "pypath.inputs.sider.sider_side_effects": [[422, "pypath-inputs-sider-sider-side-effects"]], "pypath.inputs.stitch": [[423, "module-pypath.inputs.stitch"]], "pypath.inputs.stitch.stitch_actions_interactions": [[424, "pypath-inputs-stitch-stitch-actions-interactions"]], "pypath.inputs.stitch.stitch_links_interactions": [[425, "pypath-inputs-stitch-stitch-links-interactions"]], "pypath.inputs.string": [[426, "module-pypath.inputs.string"]], "pypath.inputs.string.string_effects": [[427, "pypath-inputs-string-string-effects"]], "pypath.inputs.string.string_links_interactions": [[428, "pypath-inputs-string-string-links-interactions"]], "pypath.inputs.string.string_physical_interactions": [[429, "pypath-inputs-string-string-physical-interactions"]], "pypath.inputs.string.string_species": [[430, "pypath-inputs-string-string-species"]], "pypath.inputs.switches_elm": [[431, "module-pypath.inputs.switches_elm"]], "pypath.inputs.switches_elm.get_switches_elm": [[432, "pypath-inputs-switches-elm-get-switches-elm"]], "pypath.inputs.transmir": [[433, "module-pypath.inputs.transmir"]], "pypath.inputs.transmir.transmir_interactions": [[434, "pypath-inputs-transmir-transmir-interactions"]], "pypath.inputs.trip": [[435, "module-pypath.inputs.trip"]], "pypath.inputs.trip.take_a_trip": [[436, "pypath-inputs-trip-take-a-trip"]], "pypath.inputs.trip.trip_find_uniprot": [[437, "pypath-inputs-trip-trip-find-uniprot"]], "pypath.inputs.trip.trip_get_uniprot": [[438, "pypath-inputs-trip-trip-get-uniprot"]], "pypath.inputs.trip.trip_interactions": [[439, "pypath-inputs-trip-trip-interactions"]], "pypath.inputs.trip.trip_process": [[440, "pypath-inputs-trip-trip-process"]], "pypath.inputs.trip.trip_process_table": [[441, "pypath-inputs-trip-trip-process-table"]], "pypath.inputs.trrust": [[442, "module-pypath.inputs.trrust"]], "pypath.inputs.trrust.trrust_human": [[443, "pypath-inputs-trrust-trrust-human"]], "pypath.inputs.trrust.trrust_interactions": [[444, "pypath-inputs-trrust-trrust-interactions"]], "pypath.inputs.trrust.trrust_mouse": [[445, "pypath-inputs-trrust-trrust-mouse"]], "pypath.inputs.twosides": [[446, "module-pypath.inputs.twosides"]], "pypath.inputs.twosides.twosides_interactions": [[447, "pypath-inputs-twosides-twosides-interactions"]], "pypath.inputs.unichem": [[448, "module-pypath.inputs.unichem"]], "pypath.inputs.unichem.info": [[449, "pypath-inputs-unichem-info"]], "pypath.inputs.unichem.unichem_info": [[450, "pypath-inputs-unichem-unichem-info"]], "pypath.inputs.unichem.unichem_mapping": [[451, "pypath-inputs-unichem-unichem-mapping"]], "pypath.inputs.unichem.unichem_sources": [[452, "pypath-inputs-unichem-unichem-sources"]], "pypath.inputs.uniprot": [[453, "module-pypath.inputs.uniprot"]], "pypath.inputs.uniprot.Taxon": [[454, "pypath-inputs-uniprot-taxon"]], "pypath.inputs.uniprot.UniprotQuery": [[455, "pypath-inputs-uniprot-uniprotquery"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[456, "pypath-inputs-uniprot-uniprotrecordhistory"]], "pypath.inputs.uniprot.deleted_uniprot_genesymbol": [[457, "pypath-inputs-uniprot-deleted-uniprot-genesymbol"]], "pypath.inputs.uniprot.get_uniprot_sec": [[458, "pypath-inputs-uniprot-get-uniprot-sec"]], "pypath.inputs.uniprot.idmapping_idtypes": [[459, "pypath-inputs-uniprot-idmapping-idtypes"]], "pypath.inputs.uniprot.protein_datasheet": [[460, "pypath-inputs-uniprot-protein-datasheet"]], "pypath.inputs.uniprot.query_builder": [[461, "pypath-inputs-uniprot-query-builder"]], "pypath.inputs.uniprot.swissprot_deleted": [[462, "pypath-inputs-uniprot-swissprot-deleted"]], "pypath.inputs.uniprot.trembl_deleted": [[463, "pypath-inputs-uniprot-trembl-deleted"]], "pypath.inputs.uniprot.uniprot_data": [[464, "pypath-inputs-uniprot-uniprot-data"]], "pypath.inputs.uniprot.uniprot_deleted": [[465, "pypath-inputs-uniprot-uniprot-deleted"]], "pypath.inputs.uniprot.uniprot_families": [[466, "pypath-inputs-uniprot-uniprot-families"]], "pypath.inputs.uniprot.uniprot_history": [[467, "pypath-inputs-uniprot-uniprot-history"]], "pypath.inputs.uniprot.uniprot_history_recent_datasheet": [[468, "pypath-inputs-uniprot-uniprot-history-recent-datasheet"]], "pypath.inputs.uniprot.uniprot_keywords": [[469, "pypath-inputs-uniprot-uniprot-keywords"]], "pypath.inputs.uniprot.uniprot_locations": [[470, "pypath-inputs-uniprot-uniprot-locations"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids": [[471, "pypath-inputs-uniprot-uniprot-ncbi-taxids"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids_2": [[472, "pypath-inputs-uniprot-uniprot-ncbi-taxids-2"]], "pypath.inputs.uniprot.uniprot_preprocess": [[473, "pypath-inputs-uniprot-uniprot-preprocess"]], "pypath.inputs.uniprot.uniprot_query": [[474, "pypath-inputs-uniprot-uniprot-query"]], "pypath.inputs.uniprot.uniprot_recent_version": [[475, "pypath-inputs-uniprot-uniprot-recent-version"]], "pypath.inputs.uniprot.uniprot_taxonomy": [[476, "pypath-inputs-uniprot-uniprot-taxonomy"]], "pypath.inputs.uniprot.uniprot_tissues": [[477, "pypath-inputs-uniprot-uniprot-tissues"]], "pypath.inputs.uniprot.uniprot_topology": [[478, "pypath-inputs-uniprot-uniprot-topology"]], "pypath.inputs.uniprot.valid_uniprot": [[479, "pypath-inputs-uniprot-valid-uniprot"]], "pypath.inputs.uniprot_db": [[480, "module-pypath.inputs.uniprot_db"]], "pypath.inputs.uniprot_db.all_swissprots": [[481, "pypath-inputs-uniprot-db-all-swissprots"]], "pypath.inputs.uniprot_db.all_trembls": [[482, "pypath-inputs-uniprot-db-all-trembls"]], "pypath.inputs.uniprot_db.all_uniprots": [[483, "pypath-inputs-uniprot-db-all-uniprots"]], "pypath.inputs.uniprot_db.get_db": [[484, "pypath-inputs-uniprot-db-get-db"]], "pypath.inputs.uniprot_db.init_db": [[485, "pypath-inputs-uniprot-db-init-db"]], "pypath.inputs.uniprot_db.is_swissprot": [[486, "pypath-inputs-uniprot-db-is-swissprot"]], "pypath.inputs.uniprot_db.is_trembl": [[487, "pypath-inputs-uniprot-db-is-trembl"]], "pypath.inputs.uniprot_db.is_uniprot": [[488, "pypath-inputs-uniprot-db-is-uniprot"]], "pypath.internals": [[489, "module-pypath.internals"]], "pypath.internals.input_formats": [[490, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[491, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[492, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[493, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.HmdbMapping": [[494, "pypath-internals-input-formats-hmdbmapping"]], "pypath.internals.input_formats.MappingInput": [[495, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[496, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[497, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[498, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.RampMapping": [[499, "pypath-internals-input-formats-rampmapping"]], "pypath.internals.input_formats.ReadList": [[500, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[501, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[502, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[503, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[504, "module-pypath.internals.license"]], "pypath.internals.license.License": [[505, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[506, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[507, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[508, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[509, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[510, "module-pypath.internals.maps"]], "pypath.internals.refs": [[511, "module-pypath.internals.refs"]], "pypath.internals.refs.Reference": [[512, "pypath-internals-refs-reference"]], "pypath.internals.refs.get_pubmed_data": [[513, "pypath-internals-refs-get-pubmed-data"]], "pypath.internals.resource": [[514, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[515, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[516, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[517, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkDataset": [[518, "pypath-internals-resource-networkdataset"]], "pypath.internals.resource.NetworkResource": [[519, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[520, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[521, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[522, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[523, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[524, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[525, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[526, "pypath-log"]], "pypath.resources": [[527, "module-pypath.resources"]], "pypath.resources.controller": [[528, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[529, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[530, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[531, "module-pypath.resources.data_formats"]], "pypath.resources.data_formats.activity_flow": [[532, "pypath-resources-data-formats-activity-flow"]], "pypath.resources.data_formats.enzyme_substrate": [[533, "pypath-resources-data-formats-enzyme-substrate"]], "pypath.resources.data_formats.interaction": [[534, "pypath-resources-data-formats-interaction"]], "pypath.resources.data_formats.interaction_htp": [[535, "pypath-resources-data-formats-interaction-htp"]], "pypath.resources.data_formats.pathway_bad": [[536, "pypath-resources-data-formats-pathway-bad"]], "pypath.resources.data_formats.reaction_pc": [[537, "pypath-resources-data-formats-reaction-pc"]], "pypath.resources.data_formats.transcription_deprecated": [[538, "pypath-resources-data-formats-transcription-deprecated"]], "pypath.resources.data_formats.transcription_onebyone": [[539, "pypath-resources-data-formats-transcription-onebyone"]], "pypath.resources.get_controller": [[540, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[541, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[542, "pypath-resources-licenses-licenses"]], "pypath.resources.network": [[543, "module-pypath.resources.network"]], "pypath.resources.network.choose_dataset": [[544, "pypath-resources-network-choose-dataset"]], "pypath.resources.network.dataset_priority": [[545, "pypath-resources-network-dataset-priority"]], "pypath.resources.network.dorothea_expand_levels": [[546, "pypath-resources-network-dorothea-expand-levels"]], "pypath.resources.urls": [[547, "module-pypath.resources.urls"]], "pypath.share": [[548, "module-pypath.share"]], "pypath.share.cache": [[549, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[550, "pypath-share-cache-cache-item"]], "pypath.share.cache.cache_path": [[551, "pypath-share-cache-cache-path"]], "pypath.share.cache.get_cachedir": [[552, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[553, "module-pypath.share.common"]], "pypath.share.constants": [[554, "module-pypath.share.constants"]], "pypath.share.curl": [[555, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[556, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[557, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[558, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[559, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[560, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[561, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[562, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[563, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[564, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[565, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[566, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[567, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[568, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[569, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[570, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[571, "pypath-share-curl-preserve-on"]], "pypath.share.progress": [[572, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[573, "pypath-share-progress-progress"]], "pypath.share.session": [[574, "module-pypath.share.session"]], "pypath.share.settings": [[575, "module-pypath.share.settings"]], "pypath.utils": [[576, "module-pypath.utils"]], "pypath.utils.go": [[577, "module-pypath.utils.go"]], "pypath.utils.go.GOAnnotation": [[578, "pypath-utils-go-goannotation"]], "pypath.utils.go.GOCustomAnnotation": [[579, "pypath-utils-go-gocustomannotation"]], "pypath.utils.go.GeneOntology": [[580, "pypath-utils-go-geneontology"]], "pypath.utils.go.annotate": [[581, "pypath-utils-go-annotate"]], "pypath.utils.go.get_db": [[582, "pypath-utils-go-get-db"]], "pypath.utils.go.init_db": [[583, "pypath-utils-go-init-db"]], "pypath.utils.go.load_go": [[584, "pypath-utils-go-load-go"]], "pypath.utils.pdb": [[585, "module-pypath.utils.pdb"]], "pypath.utils.pdb.Residue": [[586, "pypath-utils-pdb-residue"]], "pypath.utils.pdb.ResidueMapper": [[587, "pypath-utils-pdb-residuemapper"]], "pypath.utils.pdb.Segment": [[588, "pypath-utils-pdb-segment"]], "pypath.utils.pdb.residue_pdb": [[589, "pypath-utils-pdb-residue-pdb"]], "pypath.utils.proteomicsdb": [[590, "module-pypath.utils.proteomicsdb"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[591, "pypath-utils-proteomicsdb-proteomicsdb"]], "pypath.utils.reflists": [[592, "module-pypath.utils.reflists"]], "pypath.utils.reflists.ReferenceListManager": [[593, "pypath-utils-reflists-referencelistmanager"]], "pypath.utils.reflists.check": [[594, "pypath-utils-reflists-check"]], "pypath.utils.reflists.get_manager": [[595, "pypath-utils-reflists-get-manager"]], "pypath.utils.reflists.get_reflist": [[596, "pypath-utils-reflists-get-reflist"]], "pypath.utils.reflists.init": [[597, "pypath-utils-reflists-init"]], "pypath.utils.reflists.is_not": [[598, "pypath-utils-reflists-is-not"]], "pypath.utils.reflists.select": [[599, "pypath-utils-reflists-select"]], "pypath.utils.residues": [[600, "module-pypath.utils.residues"]], "pypath.utils.residues.ResidueMapper": [[601, "pypath-utils-residues-residuemapper"]], "pypath.utils.seq": [[602, "module-pypath.utils.seq"]], "pypath.utils.seq.Pfam": [[603, "pypath-utils-seq-pfam"]], "pypath.utils.seq.Resource": [[604, "pypath-utils-seq-resource"]], "pypath.utils.seq.Seq": [[605, "pypath-utils-seq-seq"]], "pypath.utils.seq.get_isoforms": [[606, "pypath-utils-seq-get-isoforms"]], "pypath.utils.seq.read_fasta": [[607, "pypath-utils-seq-read-fasta"]], "pypath.utils.seq.swissprot_seq": [[608, "pypath-utils-seq-swissprot-seq"]], "pypath.utils.taxonomy": [[609, "module-pypath.utils.taxonomy"]], "pypath.utils.taxonomy.ensure_common_name": [[610, "pypath-utils-taxonomy-ensure-common-name"]], "pypath.utils.taxonomy.ensure_ensembl_name": [[611, "pypath-utils-taxonomy-ensure-ensembl-name"]], "pypath.utils.taxonomy.ensure_latin_name": [[612, "pypath-utils-taxonomy-ensure-latin-name"]], "pypath.utils.taxonomy.ensure_ncbi_tax_id": [[613, "pypath-utils-taxonomy-ensure-ncbi-tax-id"]], "pypath.utils.taxonomy.get_db": [[614, "pypath-utils-taxonomy-get-db"]], "pypath.utils.taxonomy.init_db": [[615, "pypath-utils-taxonomy-init-db"]], "pypath.utils.taxonomy.short_latin_names": [[616, "pypath-utils-taxonomy-short-latin-names"]], "pypath.utils.taxonomy.shorten_latin_name": [[617, "pypath-utils-taxonomy-shorten-latin-name"]], "pypath.utils.taxonomy.taxid_from_common_name": [[618, "pypath-utils-taxonomy-taxid-from-common-name"]], "pypath.utils.taxonomy.taxid_from_dbptm_taxon_name": [[619, "pypath-utils-taxonomy-taxid-from-dbptm-taxon-name"]], "pypath.utils.taxonomy.taxid_from_ensembl_name": [[620, "pypath-utils-taxonomy-taxid-from-ensembl-name"]], "pypath.utils.taxonomy.taxid_from_latin_name": [[621, "pypath-utils-taxonomy-taxid-from-latin-name"]], "pypath.utils.taxonomy.taxid_from_nonstandard": [[622, "pypath-utils-taxonomy-taxid-from-nonstandard"]], "pypath.utils.taxonomy.uniprot_taxid": [[623, "pypath-utils-taxonomy-uniprot-taxid"]], "pypath.utils.unichem": [[624, "module-pypath.utils.unichem"]], "pypath.utils.unichem.Unichem": [[625, "pypath-utils-unichem-unichem"]], "pypath.visual": [[626, "module-pypath.visual"]], "pypath.visual.drawing": [[627, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[628, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[629, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[630, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[631, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[632, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[633, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[634, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[635, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[636, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[637, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[638, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[639, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[640, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[641, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[642, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[643, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[644, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[645, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[646, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[647, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[648, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[649, "contents"]], "Welcome to pypath!": [[650, "welcome-to-pypath"]], "OmniPath": [[650, "omnipath"]], "Do you need pypath?": [[650, "do-you-need-pypath"]], "Installation": [[650, "installation"]], "Docs": [[650, "docs"]], "Get help": [[650, "get-help"]], "Features": [[650, "features"]], "Integrated databases": [[650, "integrated-databases"]], "Database management": [[650, "database-management"]], "Further modules in pypath": [[650, "further-modules-in-pypath"]], "ID conversion": [[650, "id-conversion"]], "Homology translation": [[650, "homology-translation"]], "FAQ": [[650, "faq"]], "Contact": [[650, "contact"]], "Impressum": [[650, "impressum"]], "History and releases": [[650, "history-and-releases"]], "The pypath book": [[651, "The-pypath-book"]], "Introduction": [[651, "Introduction"]], "Build, load and save databases": [[651, "Build,-load-and-save-databases"]], "The OmniPath app": [[651, "The-OmniPath-app"]], "Built-in database definitions": [[651, "Built-in-database-definitions"]], "Networks": [[651, "Networks"]], "Strictly literature curated network": [[651, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[651, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[651, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[651, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[651, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[651, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[651, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[651, "Enzyme-substrate-relationships"]], "Protein complexes": [[651, "Protein-complexes"], [651, "id2"]], "Annotations": [[651, "Annotations"], [651, "id1"], [654, "annotations"]], "Inter-cellular communication roles": [[651, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[651, "Data-directly-from-the-original-resources"]], "Interesting resources": [[651, "Interesting-resources"]], "RaMP": [[651, "RaMP"]], "TL;DR": [[651, "TL;DR"]], "HMDB (Human Metabolome Database)": [[651, "HMDB-(Human-Metabolome-Database)"]], "Direct access to HMDB data": [[651, "Direct-access-to-HMDB-data"]], "Higher level access to HMDB data": [[651, "Higher-level-access-to-HMDB-data"]], "ID translation with HMDB": [[651, "ID-translation-with-HMDB"]], "NCBI E-Utils": [[651, "NCBI-E-Utils"]], "Download management": [[651, "Download-management"]], "Cache management and customization": [[651, "Cache-management-and-customization"]], "Download failures": [[651, "Download-failures"]], "Corrupted cache content": [[651, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[651, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[651, "Timeouts"]], "Access and inspect the Curl object": [[651, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[651, "Is-it-failing-only-for-you?"]], "Read the log": [[651, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[651, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[651, "Resources"]], "Licenses": [[651, "Licenses"]], "Example: build a network for commercial use": [[651, "Example:-build-a-network-for-commercial-use"]], "Resource information": [[651, "Resource-information"]], "Resource definitions for a certain database or dataset": [[651, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[651, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[651, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[651, "The-Network-object"]], "Network in pandas.DataFrame": [[651, "Network-in-pandas.DataFrame"]], "Self interactions (loop edges) in the network": [[651, "Self-interactions-(loop-edges)-in-the-network"]], "Molecular complexes in the network": [[651, "Molecular-complexes-in-the-network"]], "Translating identifiers": [[651, "Translating-identifiers"]], "Pre-defined ID translation tables": [[651, "Pre-defined-ID-translation-tables"]], "Direct access to ID translation tables": [[651, "Direct-access-to-ID-translation-tables"]], "Orthology translation": [[651, "Orthology-translation"]], "Orthology translation tables as dictionaries": [[651, "Orthology-translation-tables-as-dictionaries"]], "Orthology translation data frames": [[651, "Orthology-translation-data-frames"]], "Taxonomy": [[651, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[651, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[651, "Organism-from-UniProt-ID"]], "UniProt": [[651, "UniProt"]], "The UniProt input module": [[651, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[651, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[651, "UniProt-ID-format-validation"]], "UniProt ID validation": [[651, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[651, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[651, "History-of-UniProt-records"]], "UniProt REST API": [[651, "UniProt-REST-API"]], "Processed UniProt annotations": [[651, "Processed-UniProt-annotations"]], "The UniProt utils module": [[651, "The-UniProt-utils-module"]], "Datasheets": [[651, "Datasheets"]], "Tables": [[651, "Tables"]], "Sanitizing UniProt IDs": [[651, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[651, "Enzyme-substrate-interactions"], [654, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[651, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[651, "Enzyme-substrate-data-frame"]], "Protein sequences": [[651, "Protein-sequences"]], "Load a single annotation resource": [[651, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[651, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[651, "Load-only-selected-annotations"]], "Data frames of annotations": [[651, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[651, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[651, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[651, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[651, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[651, "Browse-intercell-categories"]], "Gene Ontology": [[651, "Gene-Ontology"]], "Protein complex objects": [[651, "Protein-complex-objects"]], "Protein complex data frame": [[651, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[651, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[651, "Log-messages-and-sessions"]], "Basic info about the session": [[651, "Basic-info-about-the-session"]], "Read the log file": [[651, "Read-the-log-file"]], "Logging to the console": [[651, "Logging-to-the-console"]], "Disable logging": [[651, "Disable-logging"]], "Write to the log": [[651, "Write-to-the-log"]], "Sending a single message": [[651, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[651, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[651, "BEL-export"]], "CellPhoneDB export": [[651, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[651, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[651, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[651, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[651, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[651, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[651, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[651, "Directions-and-signs"]], "Accessing nodes in the network": [[651, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[651, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[651, "Accessing-edges-by-identifiers"]], "Literature references": [[651, "Literature-references"]], "Plotting the network with igraph": [[651, "Plotting-the-network-with-igraph"]], "Reference": [[652, "reference"]], "How to navigate the reference?": [[652, "how-to-navigate-the-reference"]], "Release history": [[653, "release-history"]], "0.1.0": [[653, "id1"]], "0.2.0": [[653, "id2"]], "0.3.0": [[653, "id3"]], "0.4.0": [[653, "id4"]], "0.5.0": [[653, "id5"]], "0.5.32": [[653, "id6"]], "0.6.31": [[653, "id7"]], "0.7.0": [[653, "id8"]], "0.7.74": [[653, "id9"]], "0.7.93": [[653, "id10"]], "0.7.110": [[653, "id11"]], "0.8": [[653, "id12"]], "0.9": [[653, "id13"]], "0.10.0": [[653, "id14"]], "0.11.0": [[653, "id15"]], "0.12.0": [[653, "id16"]], "0.13.0": [[653, "id17"]], "0.14.0": [[653, "id18"]], "Upcoming": [[653, "upcoming"]], "Webservice": [[654, "webservice"]], "Query types": [[654, "query-types"]], "Interaction datasets": [[654, "interaction-datasets"]], "Mouse and rat": [[654, "mouse-and-rat"]], "Examples": [[654, "examples"]], "Molecular interaction network": [[654, "molecular-interaction-network"]], "Molecular complexes": [[654, "molecular-complexes"]], "Roles in inter-cellular communication": [[654, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[654, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.abs"], [12, "module-pypath.inputs.acsn"], [15, "module-pypath.inputs.adrecs"], [25, "module-pypath.inputs.biogrid"], [28, "module-pypath.inputs.biomart"], [34, "module-pypath.inputs.biomodels"], [40, "module-pypath.inputs.ca1"], [42, "module-pypath.inputs.cancercellmap"], [44, "module-pypath.inputs.cell"], [46, "module-pypath.inputs.chembl"], [54, "module-pypath.inputs.clinvar"], [57, "module-pypath.inputs.common"], [64, "module-pypath.inputs.compath"], [66, "module-pypath.inputs.cpdb"], [69, "module-pypath.inputs.credentials"], [71, "module-pypath.inputs.ctdbase"], [74, "module-pypath.inputs.dbptm"], [78, "module-pypath.inputs.ddinter"], [84, "module-pypath.inputs.deathdomain"], [87, "module-pypath.inputs.dip"], [90, "module-pypath.inputs.diseases"], [98, "module-pypath.inputs.dorothea"], [109, "module-pypath.inputs.drugbank"], [116, "module-pypath.inputs.drugcentral"], [120, "module-pypath.inputs.ebi"], [122, "module-pypath.inputs.elm"], [127, "module-pypath.inputs.embopress"], [129, "module-pypath.inputs.encode"], [131, "module-pypath.inputs.ensembl"], [133, "module-pypath.inputs.eutils"], [135, "module-pypath.inputs.exocarta"], [138, "module-pypath.inputs.expasy"], [141, "module-pypath.inputs.genecards"], [146, "module-pypath.inputs.go"], [168, "module-pypath.inputs.gpcrdb"], [170, "module-pypath.inputs.graphviz"], [172, "module-pypath.inputs.hmdb"], [173, "module-pypath.inputs.hmdb.common"], [178, "module-pypath.inputs.hmdb.metabolites"], [183, "module-pypath.inputs.hmdb.proteins"], [188, "module-pypath.inputs.hmdb.schema"], [189, "module-pypath.inputs.hmdb.schema.common"], [191, "module-pypath.inputs.hmdb.schema.metabolites"], [192, "module-pypath.inputs.hmdb.schema.proteins"], [193, "module-pypath.inputs.hmdb.structures"], [195, "module-pypath.inputs.hmdb.visual"], [198, "module-pypath.inputs.hmdb.xml"], [200, "module-pypath.inputs.hprd"], [205, "module-pypath.inputs.htri"], [207, "module-pypath.inputs.humsavar"], [209, "module-pypath.inputs.i3d"], [211, "module-pypath.inputs.ielm"], [214, "module-pypath.inputs.imweb"], [217, "module-pypath.inputs.innatedb"], [219, "module-pypath.inputs.instruct"], [222, "module-pypath.inputs.intact"], [224, "module-pypath.inputs.interpro"], [229, "module-pypath.inputs.ipi"], [231, "module-pypath.inputs.kegg_api"], [248, "module-pypath.inputs.kirouac2010"], [250, "module-pypath.inputs.laudanna"], [253, "module-pypath.inputs.lincs"], [255, "module-pypath.inputs.lncdisease"], [257, "module-pypath.inputs.lncrnadb"], [259, "module-pypath.inputs.macrophage"], [261, "module-pypath.inputs.main"], [262, "module-pypath.inputs.mimp"], [266, "module-pypath.inputs.mir2disease"], [268, "module-pypath.inputs.mirbase"], [276, "module-pypath.inputs.mirdeathdb"], [278, "module-pypath.inputs.mirecords"], [280, "module-pypath.inputs.mirtarbase"], [282, "module-pypath.inputs.mitab"], [285, "module-pypath.inputs.mppi"], [287, "module-pypath.inputs.ncrdeathdb"], [289, "module-pypath.inputs.negatome"], [291, "module-pypath.inputs.netbiol"], [294, "module-pypath.inputs.offsides"], [296, "module-pypath.inputs.ontology"], [299, "module-pypath.inputs.opentargets"], [305, "module-pypath.inputs.oreganno"], [308, "module-pypath.inputs.pathophenodb"], [311, "module-pypath.inputs.pathwaycommons"], [328, "module-pypath.inputs.pazar"], [330, "module-pypath.inputs.pdzbase"], [332, "module-pypath.inputs.pepcyber"], [335, "module-pypath.inputs.pfam"], [340, "module-pypath.inputs.pharos"], [349, "module-pypath.inputs.phobius"], [351, "module-pypath.inputs.phosphoelm"], [355, "module-pypath.inputs.phosphonetworks"], [358, "module-pypath.inputs.phosphopoint"], [361, "module-pypath.inputs.pro"], [364, "module-pypath.inputs.proteins"], [366, "module-pypath.inputs.protmapper"], [370, "module-pypath.inputs.pubchem"], [372, "module-pypath.inputs.pubmed"], [379, "module-pypath.inputs.ramp"], [386, "module-pypath.inputs.rdata"], [387, "module-pypath.inputs.reaction"], [407, "module-pypath.inputs.reactome"], [412, "module-pypath.inputs.science"], [414, "module-pypath.inputs.sider"], [423, "module-pypath.inputs.stitch"], [426, "module-pypath.inputs.string"], [431, "module-pypath.inputs.switches_elm"], [433, "module-pypath.inputs.transmir"], [435, "module-pypath.inputs.trip"], [442, "module-pypath.inputs.trrust"], [446, "module-pypath.inputs.twosides"], [448, "module-pypath.inputs.unichem"], [453, "module-pypath.inputs.uniprot"], [480, "module-pypath.inputs.uniprot_db"], [489, "module-pypath.internals"], [490, "module-pypath.internals.input_formats"], [504, "module-pypath.internals.license"], [510, "module-pypath.internals.maps"], [511, "module-pypath.internals.refs"], [514, "module-pypath.internals.resource"], [522, "module-pypath.legacy"], [523, "module-pypath.legacy.db_categories"], [527, "module-pypath.resources"], [528, "module-pypath.resources.controller"], [530, "module-pypath.resources.data"], [531, "module-pypath.resources.data_formats"], [541, "module-pypath.resources.licenses"], [543, "module-pypath.resources.network"], [547, "module-pypath.resources.urls"], [548, "module-pypath.share"], [549, "module-pypath.share.cache"], [553, "module-pypath.share.common"], [554, "module-pypath.share.constants"], [555, "module-pypath.share.curl"], [572, "module-pypath.share.progress"], [574, "module-pypath.share.session"], [575, "module-pypath.share.settings"], [576, "module-pypath.utils"], [577, "module-pypath.utils.go"], [585, "module-pypath.utils.pdb"], [590, "module-pypath.utils.proteomicsdb"], [592, "module-pypath.utils.reflists"], [600, "module-pypath.utils.residues"], [602, "module-pypath.utils.seq"], [609, "module-pypath.utils.taxonomy"], [624, "module-pypath.utils.unichem"], [626, "module-pypath.visual"], [627, "module-pypath.visual.drawing"], [630, "module-pypath.visual.igraph_drawing"], [636, "module-pypath.visual.igraph_drawing.edge"], [643, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "abs_interactions() (in module pypath.inputs.abs)": [[11, "pypath.inputs.abs.abs_interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "acsn_interactions() (in module pypath.inputs.acsn)": [[13, "pypath.inputs.acsn.acsn_interactions"]], "acsn_interactions_sif() (in module pypath.inputs.acsn)": [[14, "pypath.inputs.acsn.acsn_interactions_sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "adrecsadr (class in pypath.inputs.adrecs)": [[16, "pypath.inputs.adrecs.AdrecsAdr"]], "__init__() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.__init__"]], "adr_class (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.adr_class"]], "badd (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.badd"]], "count() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.count"]], "index() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.index"]], "adrecschildparent (class in pypath.inputs.adrecs)": [[17, "pypath.inputs.adrecs.AdrecsChildParent"]], "__init__() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.__init__"]], "child (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.child"]], "count() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.count"]], "index() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.index"]], "parent (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.parent"]], "adrecsdrug (class in pypath.inputs.adrecs)": [[18, "pypath.inputs.adrecs.AdrecsDrug"]], "__init__() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.__init__"]], "badd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.badd"]], "count() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.count"]], "drug (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drug"]], "drugbank (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drugbank"]], "index() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.index"]], "kegg (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.kegg"]], "mesh (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.mesh"]], "pubchem_cid (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.pubchem_cid"]], "synonyms (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.synonyms"]], "tdd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.tdd"]], "adrecsdrugadr (class in pypath.inputs.adrecs)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr"]], "__init__() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.__init__"]], "adr (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr"]], "adr_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr_badd"]], "count() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.count"]], "drug (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug"]], "drug_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug_badd"]], "index() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.index"]], "adrecsterm (class in pypath.inputs.adrecs)": [[20, "pypath.inputs.adrecs.AdrecsTerm"]], "__init__() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.__init__"]], "adrecs_class (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.adrecs_class"]], "badd (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.badd"]], "count() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.count"]], "index() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.index"]], "meddra (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.meddra"]], "name (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.name"]], "synonyms (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.synonyms"]], "adrecs_adr_ontology() (in module pypath.inputs.adrecs)": [[21, "pypath.inputs.adrecs.adrecs_adr_ontology"]], "adrecs_drug_adr() (in module pypath.inputs.adrecs)": [[22, "pypath.inputs.adrecs.adrecs_drug_adr"]], "adrecs_drug_identifiers() (in module pypath.inputs.adrecs)": [[23, "pypath.inputs.adrecs.adrecs_drug_identifiers"]], "adrecs_hierarchy() (in module pypath.inputs.adrecs)": [[24, "pypath.inputs.adrecs.adrecs_hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "biogrid_all_interactions() (in module pypath.inputs.biogrid)": [[26, "pypath.inputs.biogrid.biogrid_all_interactions"]], "biogrid_interactions() (in module pypath.inputs.biogrid)": [[27, "pypath.inputs.biogrid.biogrid_interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "biomart_homology() (in module pypath.inputs.biomart)": [[29, "pypath.inputs.biomart.biomart_homology"]], "biomart_microarray() (in module pypath.inputs.biomart)": [[30, "pypath.inputs.biomart.biomart_microarray"]], "biomart_microarray_types() (in module pypath.inputs.biomart)": [[31, "pypath.inputs.biomart.biomart_microarray_types"]], "biomart_microarrays() (in module pypath.inputs.biomart)": [[32, "pypath.inputs.biomart.biomart_microarrays"]], "biomart_query() (in module pypath.inputs.biomart)": [[33, "pypath.inputs.biomart.biomart_query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "download_single_model() (in module pypath.inputs.biomodels)": [[35, "pypath.inputs.biomodels.download_single_model"]], "get_all_models() (in module pypath.inputs.biomodels)": [[36, "pypath.inputs.biomodels.get_all_models"]], "get_biomodels() (in module pypath.inputs.biomodels)": [[37, "pypath.inputs.biomodels.get_biomodels"]], "get_biomodels_req() (in module pypath.inputs.biomodels)": [[38, "pypath.inputs.biomodels.get_biomodels_req"]], "get_single_model() (in module pypath.inputs.biomodels)": [[39, "pypath.inputs.biomodels.get_single_model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "ca1_interactions() (in module pypath.inputs.ca1)": [[41, "pypath.inputs.ca1.ca1_interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "ccmap_interactions() (in module pypath.inputs.cancercellmap)": [[43, "pypath.inputs.cancercellmap.ccmap_interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[45, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "chembl_activities() (in module pypath.inputs.chembl)": [[47, "pypath.inputs.chembl.chembl_activities"]], "chembl_assays() (in module pypath.inputs.chembl)": [[48, "pypath.inputs.chembl.chembl_assays"]], "chembl_documents() (in module pypath.inputs.chembl)": [[49, "pypath.inputs.chembl.chembl_documents"]], "chembl_drug_indications() (in module pypath.inputs.chembl)": [[50, "pypath.inputs.chembl.chembl_drug_indications"]], "chembl_mechanisms() (in module pypath.inputs.chembl)": [[51, "pypath.inputs.chembl.chembl_mechanisms"]], "chembl_molecules() (in module pypath.inputs.chembl)": [[52, "pypath.inputs.chembl.chembl_molecules"]], "chembl_targets() (in module pypath.inputs.chembl)": [[53, "pypath.inputs.chembl.chembl_targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "clinvar_citations() (in module pypath.inputs.clinvar)": [[55, "pypath.inputs.clinvar.clinvar_citations"]], "clinvar_raw() (in module pypath.inputs.clinvar)": [[56, "pypath.inputs.clinvar.clinvar_raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[58, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[59, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[60, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[61, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[62, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[63, "pypath.inputs.common.read_xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "compath_mappings() (in module pypath.inputs.compath)": [[65, "pypath.inputs.compath.compath_mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "cpdb_interactions() (in module pypath.inputs.cpdb)": [[67, "pypath.inputs.cpdb.cpdb_interactions"]], "cpdb_interactions_ltp() (in module pypath.inputs.cpdb)": [[68, "pypath.inputs.cpdb.cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[70, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "ctdbase_relations() (in module pypath.inputs.ctdbase)": [[72, "pypath.inputs.ctdbase.ctdbase_relations"]], "ctdbase_vocabulary() (in module pypath.inputs.ctdbase)": [[73, "pypath.inputs.ctdbase.ctdbase_vocabulary"]], "pypath.inputs.dbptm": [[74, "module-pypath.inputs.dbptm"]], "dbptm_enzyme_substrate() (in module pypath.inputs.dbptm)": [[75, "pypath.inputs.dbptm.dbptm_enzyme_substrate"]], "dbptm_enzyme_substrate_old() (in module pypath.inputs.dbptm)": [[76, "pypath.inputs.dbptm.dbptm_enzyme_substrate_old"]], "dbptm_interactions() (in module pypath.inputs.dbptm)": [[77, "pypath.inputs.dbptm.dbptm_interactions"]], "pypath.inputs.ddinter": [[78, "module-pypath.inputs.ddinter"]], "ddinter_drug_interactions() (in module pypath.inputs.ddinter)": [[79, "pypath.inputs.ddinter.ddinter_drug_interactions"]], "ddinter_identifiers() (in module pypath.inputs.ddinter)": [[80, "pypath.inputs.ddinter.ddinter_identifiers"]], "ddinter_interactions() (in module pypath.inputs.ddinter)": [[81, "pypath.inputs.ddinter.ddinter_interactions"]], "ddinter_mappings() (in module pypath.inputs.ddinter)": [[82, "pypath.inputs.ddinter.ddinter_mappings"]], "ddinter_n_drugs() (in module pypath.inputs.ddinter)": [[83, "pypath.inputs.ddinter.ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[84, "module-pypath.inputs.deathdomain"]], "deathdomain_interactions() (in module pypath.inputs.deathdomain)": [[85, "pypath.inputs.deathdomain.deathdomain_interactions"]], "deathdomain_interactions_rescued() (in module pypath.inputs.deathdomain)": [[86, "pypath.inputs.deathdomain.deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[87, "module-pypath.inputs.dip"]], "dip_interactions() (in module pypath.inputs.dip)": [[88, "pypath.inputs.dip.dip_interactions"]], "dip_login() (in module pypath.inputs.dip)": [[89, "pypath.inputs.dip.dip_login"]], "pypath.inputs.diseases": [[90, "module-pypath.inputs.diseases"]], "diseases_general() (in module pypath.inputs.diseases)": [[91, "pypath.inputs.diseases.diseases_general"]], "experiments_filtered() (in module pypath.inputs.diseases)": [[92, "pypath.inputs.diseases.experiments_filtered"]], "experiments_full() (in module pypath.inputs.diseases)": [[93, "pypath.inputs.diseases.experiments_full"]], "knowledge_filtered() (in module pypath.inputs.diseases)": [[94, "pypath.inputs.diseases.knowledge_filtered"]], "knowledge_full() (in module pypath.inputs.diseases)": [[95, "pypath.inputs.diseases.knowledge_full"]], "textmining_filtered() (in module pypath.inputs.diseases)": [[96, "pypath.inputs.diseases.textmining_filtered"]], "textmining_full() (in module pypath.inputs.diseases)": [[97, "pypath.inputs.diseases.textmining_full"]], "pypath.inputs.dorothea": [[98, "module-pypath.inputs.dorothea"]], "dorotheainteraction (class in pypath.inputs.dorothea)": [[99, "pypath.inputs.dorothea.DorotheaInteraction"]], "__init__() (pypath.inputs.dorothea.dorotheainteraction method)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.__init__"]], "all_sources (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.all_sources"]], "chipseq (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.chipseq"]], "chipseq_sources (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.chipseq_sources"]], "coexp (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.coexp"]], "coexp_sources (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.coexp_sources"]], "count() (pypath.inputs.dorothea.dorotheainteraction method)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.count"]], "curated (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.curated"]], "curated_sources (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.curated_sources"]], "effect (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.effect"]], "index() (pypath.inputs.dorothea.dorotheainteraction method)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.index"]], "kegg_pathways (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.kegg_pathways"]], "level (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.level"]], "predicted (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.predicted"]], "predicted_sources (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.predicted_sources"]], "pubmed (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.pubmed"]], "target (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.target"]], "tf (pypath.inputs.dorothea.dorotheainteraction attribute)": [[99, "pypath.inputs.dorothea.DorotheaInteraction.tf"]], "dorothea_full_raw() (in module pypath.inputs.dorothea)": [[100, "pypath.inputs.dorothea.dorothea_full_raw"]], "dorothea_interactions() (in module pypath.inputs.dorothea)": [[101, "pypath.inputs.dorothea.dorothea_interactions"]], "dorothea_interactions_old() (in module pypath.inputs.dorothea)": [[102, "pypath.inputs.dorothea.dorothea_interactions_old"]], "dorothea_old_csv() (in module pypath.inputs.dorothea)": [[103, "pypath.inputs.dorothea.dorothea_old_csv"]], "dorothea_rda_raw() (in module pypath.inputs.dorothea)": [[104, "pypath.inputs.dorothea.dorothea_rda_raw"]], "get_dorothea_old() (in module pypath.inputs.dorothea)": [[105, "pypath.inputs.dorothea.get_dorothea_old"]], "get_tfregulons() (in module pypath.inputs.dorothea)": [[106, "pypath.inputs.dorothea.get_tfregulons"]], "tfregulons_interactions() (in module pypath.inputs.dorothea)": [[107, "pypath.inputs.dorothea.tfregulons_interactions"]], "tfregulons_interactions_old() (in module pypath.inputs.dorothea)": [[108, "pypath.inputs.dorothea.tfregulons_interactions_old"]], "pypath.inputs.drugbank": [[109, "module-pypath.inputs.drugbank"]], "drugbankfull (class in pypath.inputs.drugbank)": [[110, "pypath.inputs.drugbank.DrugbankFull"]], "__init__() (pypath.inputs.drugbank.drugbankfull method)": [[110, "pypath.inputs.drugbank.DrugbankFull.__init__"]], "drugbank_drugs_full() (pypath.inputs.drugbank.drugbankfull method)": [[110, "pypath.inputs.drugbank.DrugbankFull.drugbank_drugs_full"]], "drugbank_external_ids_full() (pypath.inputs.drugbank.drugbankfull method)": [[110, "pypath.inputs.drugbank.DrugbankFull.drugbank_external_ids_full"]], "drugbank_properties_full() (pypath.inputs.drugbank.drugbankfull method)": [[110, "pypath.inputs.drugbank.DrugbankFull.drugbank_properties_full"]], "drugbank_targets_full() (pypath.inputs.drugbank.drugbankfull method)": [[110, "pypath.inputs.drugbank.DrugbankFull.drugbank_targets_full"]], "drugbank_annotations() (in module pypath.inputs.drugbank)": [[111, "pypath.inputs.drugbank.drugbank_annotations"]], "drugbank_drugs() (in module pypath.inputs.drugbank)": [[112, "pypath.inputs.drugbank.drugbank_drugs"]], "drugbank_interactions() (in module pypath.inputs.drugbank)": [[113, "pypath.inputs.drugbank.drugbank_interactions"]], "drugbank_mapping() (in module pypath.inputs.drugbank)": [[114, "pypath.inputs.drugbank.drugbank_mapping"]], "drugbank_raw_interactions() (in module pypath.inputs.drugbank)": [[115, "pypath.inputs.drugbank.drugbank_raw_interactions"]], "pypath.inputs.drugcentral": [[116, "module-pypath.inputs.drugcentral"]], "drugcentral_drugs() (in module pypath.inputs.drugcentral)": [[117, "pypath.inputs.drugcentral.drugcentral_drugs"]], "drugcentral_interactions() (in module pypath.inputs.drugcentral)": [[118, "pypath.inputs.drugcentral.drugcentral_interactions"]], "drugcentral_mapping() (in module pypath.inputs.drugcentral)": [[119, "pypath.inputs.drugcentral.drugcentral_mapping"]], "pypath.inputs.ebi": [[120, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[121, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.elm": [[122, "module-pypath.inputs.elm"]], "elm_classes() (in module pypath.inputs.elm)": [[123, "pypath.inputs.elm.elm_classes"]], "elm_domains() (in module pypath.inputs.elm)": [[124, "pypath.inputs.elm.elm_domains"]], "elm_instances() (in module pypath.inputs.elm)": [[125, "pypath.inputs.elm.elm_instances"]], "elm_interactions() (in module pypath.inputs.elm)": [[126, "pypath.inputs.elm.elm_interactions"]], "pypath.inputs.embopress": [[127, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[128, "pypath.inputs.embopress.embopress_supplementary"]], "pypath.inputs.encode": [[129, "module-pypath.inputs.encode"]], "encode_tf_mirna_interactions() (in module pypath.inputs.encode)": [[130, "pypath.inputs.encode.encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[131, "module-pypath.inputs.ensembl"]], "ensembl_organisms() (in module pypath.inputs.ensembl)": [[132, "pypath.inputs.ensembl.ensembl_organisms"]], "pypath.inputs.eutils": [[133, "module-pypath.inputs.eutils"]], "esummary() (in module pypath.inputs.eutils)": [[134, "pypath.inputs.eutils.esummary"]], "pypath.inputs.exocarta": [[135, "module-pypath.inputs.exocarta"]], "get_exocarta() (in module pypath.inputs.exocarta)": [[136, "pypath.inputs.exocarta.get_exocarta"]], "get_vesiclepedia() (in module pypath.inputs.exocarta)": [[137, "pypath.inputs.exocarta.get_vesiclepedia"]], "pypath.inputs.expasy": [[138, "module-pypath.inputs.expasy"]], "expasy_enzyme_classes() (in module pypath.inputs.expasy)": [[139, "pypath.inputs.expasy.expasy_enzyme_classes"]], "expasy_enzymes() (in module pypath.inputs.expasy)": [[140, "pypath.inputs.expasy.expasy_enzymes"]], "pypath.inputs.genecards": [[141, "module-pypath.inputs.genecards"]], "genecards_datasheet() (in module pypath.inputs.genecards)": [[142, "pypath.inputs.genecards.genecards_datasheet"]], "genecards_soup() (in module pypath.inputs.genecards)": [[143, "pypath.inputs.genecards.genecards_soup"]], "genecards_summaries() (in module pypath.inputs.genecards)": [[144, "pypath.inputs.genecards.genecards_summaries"]], "get_method() (in module pypath.inputs)": [[145, "pypath.inputs.get_method"]], "pypath.inputs.go": [[146, "module-pypath.inputs.go"]], "get_go_desc() (in module pypath.inputs.go)": [[147, "pypath.inputs.go.get_go_desc"]], "get_go_quick() (in module pypath.inputs.go)": [[148, "pypath.inputs.go.get_go_quick"]], "get_goslim() (in module pypath.inputs.go)": [[149, "pypath.inputs.go.get_goslim"]], "go_ancestors() (in module pypath.inputs.go)": [[150, "pypath.inputs.go.go_ancestors"]], "go_ancestors_goose() (in module pypath.inputs.go)": [[151, "pypath.inputs.go.go_ancestors_goose"]], "go_ancestors_quickgo() (in module pypath.inputs.go)": [[152, "pypath.inputs.go.go_ancestors_quickgo"]], "go_annotations() (in module pypath.inputs.go)": [[153, "pypath.inputs.go.go_annotations"]], "go_annotations_all() (in module pypath.inputs.go)": [[154, "pypath.inputs.go.go_annotations_all"]], "go_annotations_goa() (in module pypath.inputs.go)": [[155, "pypath.inputs.go.go_annotations_goa"]], "go_annotations_goose() (in module pypath.inputs.go)": [[156, "pypath.inputs.go.go_annotations_goose"]], "go_annotations_quickgo() (in module pypath.inputs.go)": [[157, "pypath.inputs.go.go_annotations_quickgo"]], "go_annotations_solr() (in module pypath.inputs.go)": [[158, "pypath.inputs.go.go_annotations_solr"]], "go_annotations_uniprot() (in module pypath.inputs.go)": [[159, "pypath.inputs.go.go_annotations_uniprot"]], "go_descendants() (in module pypath.inputs.go)": [[160, "pypath.inputs.go.go_descendants"]], "go_descendants_goose() (in module pypath.inputs.go)": [[161, "pypath.inputs.go.go_descendants_goose"]], "go_descendants_quickgo() (in module pypath.inputs.go)": [[162, "pypath.inputs.go.go_descendants_quickgo"]], "go_descendants_to_ancestors() (in module pypath.inputs.go)": [[163, "pypath.inputs.go.go_descendants_to_ancestors"]], "go_terms() (in module pypath.inputs.go)": [[164, "pypath.inputs.go.go_terms"]], "go_terms_goose() (in module pypath.inputs.go)": [[165, "pypath.inputs.go.go_terms_goose"]], "go_terms_quickgo() (in module pypath.inputs.go)": [[166, "pypath.inputs.go.go_terms_quickgo"]], "go_terms_solr() (in module pypath.inputs.go)": [[167, "pypath.inputs.go.go_terms_solr"]], "pypath.inputs.gpcrdb": [[168, "module-pypath.inputs.gpcrdb"]], "gpcrdb_annotations() (in module pypath.inputs.gpcrdb)": [[169, "pypath.inputs.gpcrdb.gpcrdb_annotations"]], "pypath.inputs.graphviz": [[170, "module-pypath.inputs.graphviz"]], "graphviz_attrs() (in module pypath.inputs.graphviz)": [[171, "pypath.inputs.graphviz.graphviz_attrs"]], "pypath.inputs.hmdb": [[172, "module-pypath.inputs.hmdb"]], "pypath.inputs.hmdb.common": [[173, "module-pypath.inputs.hmdb.common"]], "iter() (in module pypath.inputs.hmdb.common)": [[174, "pypath.inputs.hmdb.common.iter"]], "mapping() (in module pypath.inputs.hmdb.common)": [[175, "pypath.inputs.hmdb.common.mapping"]], "raw() (in module pypath.inputs.hmdb.common)": [[176, "pypath.inputs.hmdb.common.raw"]], "table() (in module pypath.inputs.hmdb.common)": [[177, "pypath.inputs.hmdb.common.table"]], "pypath.inputs.hmdb.metabolites": [[178, "module-pypath.inputs.hmdb.metabolites"]], "iter() (in module pypath.inputs.hmdb.metabolites)": [[179, "pypath.inputs.hmdb.metabolites.iter"]], "mapping() (in module pypath.inputs.hmdb.metabolites)": [[180, "pypath.inputs.hmdb.metabolites.mapping"]], "raw() (in module pypath.inputs.hmdb.metabolites)": [[181, "pypath.inputs.hmdb.metabolites.raw"]], "table() (in module pypath.inputs.hmdb.metabolites)": [[182, "pypath.inputs.hmdb.metabolites.table"]], "pypath.inputs.hmdb.proteins": [[183, "module-pypath.inputs.hmdb.proteins"]], "iter() (in module pypath.inputs.hmdb.proteins)": [[184, "pypath.inputs.hmdb.proteins.iter"]], "mapping() (in module pypath.inputs.hmdb.proteins)": [[185, "pypath.inputs.hmdb.proteins.mapping"]], "raw() (in module pypath.inputs.hmdb.proteins)": [[186, "pypath.inputs.hmdb.proteins.raw"]], "table() (in module pypath.inputs.hmdb.proteins)": [[187, "pypath.inputs.hmdb.proteins.table"]], "pypath.inputs.hmdb.schema": [[188, "module-pypath.inputs.hmdb.schema"]], "pypath.inputs.hmdb.schema.common": [[189, "module-pypath.inputs.hmdb.schema.common"]], "field (class in pypath.inputs.hmdb.schema.common)": [[190, "pypath.inputs.hmdb.schema.common.Field"]], "__init__() (pypath.inputs.hmdb.schema.common.field method)": [[190, "pypath.inputs.hmdb.schema.common.Field.__init__"]], "pypath.inputs.hmdb.schema.metabolites": [[191, "module-pypath.inputs.hmdb.schema.metabolites"]], "pypath.inputs.hmdb.schema.proteins": [[192, "module-pypath.inputs.hmdb.schema.proteins"]], "pypath.inputs.hmdb.structures": [[193, "module-pypath.inputs.hmdb.structures"]], "sdf() (in module pypath.inputs.hmdb.structures)": [[194, "pypath.inputs.hmdb.structures.sdf"]], "pypath.inputs.hmdb.visual": [[195, "module-pypath.inputs.hmdb.visual"]], "show_structure() (in module pypath.inputs.hmdb.visual)": [[196, "pypath.inputs.hmdb.visual.show_structure"]], "structure_svg() (in module pypath.inputs.hmdb.visual)": [[197, "pypath.inputs.hmdb.visual.structure_svg"]], "pypath.inputs.hmdb.xml": [[198, "module-pypath.inputs.hmdb.xml"]], "hmdb_xml() (in module pypath.inputs.hmdb.xml)": [[199, "pypath.inputs.hmdb.xml.hmdb_xml"]], "pypath.inputs.hprd": [[200, "module-pypath.inputs.hprd"]], "get_hprd() (in module pypath.inputs.hprd)": [[201, "pypath.inputs.hprd.get_hprd"]], "hprd_enzyme_substrate() (in module pypath.inputs.hprd)": [[202, "pypath.inputs.hprd.hprd_enzyme_substrate"]], "hprd_interactions() (in module pypath.inputs.hprd)": [[203, "pypath.inputs.hprd.hprd_interactions"]], "hprd_interactions_htp() (in module pypath.inputs.hprd)": [[204, "pypath.inputs.hprd.hprd_interactions_htp"]], "pypath.inputs.htri": [[205, "module-pypath.inputs.htri"]], "htri_interactions() (in module pypath.inputs.htri)": [[206, "pypath.inputs.htri.htri_interactions"]], "pypath.inputs.humsavar": [[207, "module-pypath.inputs.humsavar"]], "uniprot_variants() (in module pypath.inputs.humsavar)": [[208, "pypath.inputs.humsavar.uniprot_variants"]], "pypath.inputs.i3d": [[209, "module-pypath.inputs.i3d"]], "get_i3d() (in module pypath.inputs.i3d)": [[210, "pypath.inputs.i3d.get_i3d"]], "pypath.inputs.ielm": [[211, "module-pypath.inputs.ielm"]], "get_ielm() (in module pypath.inputs.ielm)": [[212, "pypath.inputs.ielm.get_ielm"]], "get_ielm_huge() (in module pypath.inputs.ielm)": [[213, "pypath.inputs.ielm.get_ielm_huge"]], "pypath.inputs.imweb": [[214, "module-pypath.inputs.imweb"]], "get_imweb() (in module pypath.inputs.imweb)": [[215, "pypath.inputs.imweb.get_imweb"]], "get_imweb_req() (in module pypath.inputs.imweb)": [[216, "pypath.inputs.imweb.get_imweb_req"]], "pypath.inputs.innatedb": [[217, "module-pypath.inputs.innatedb"]], "innatedb_interactions() (in module pypath.inputs.innatedb)": [[218, "pypath.inputs.innatedb.innatedb_interactions"]], "pypath.inputs.instruct": [[219, "module-pypath.inputs.instruct"]], "get_instruct() (in module pypath.inputs.instruct)": [[220, "pypath.inputs.instruct.get_instruct"]], "get_instruct_offsets() (in module pypath.inputs.instruct)": [[221, "pypath.inputs.instruct.get_instruct_offsets"]], "pypath.inputs.intact": [[222, "module-pypath.inputs.intact"]], "intact_interactions() (in module pypath.inputs.intact)": [[223, "pypath.inputs.intact.intact_interactions"]], "pypath.inputs.interpro": [[224, "module-pypath.inputs.interpro"]], "interpro2go_annotations() (in module pypath.inputs.interpro)": [[225, "pypath.inputs.interpro.interpro2go_annotations"]], "interpro_annotations() (in module pypath.inputs.interpro)": [[226, "pypath.inputs.interpro.interpro_annotations"]], "interpro_entries() (in module pypath.inputs.interpro)": [[227, "pypath.inputs.interpro.interpro_entries"]], "interpro_xrefs() (in module pypath.inputs.interpro)": [[228, "pypath.inputs.interpro.interpro_xrefs"]], "pypath.inputs.ipi": [[229, "module-pypath.inputs.ipi"]], "ipi_uniprot() (in module pypath.inputs.ipi)": [[230, "pypath.inputs.ipi.ipi_uniprot"]], "pypath.inputs.kegg_api": [[231, "module-pypath.inputs.kegg_api"]], "disease_to_drug() (in module pypath.inputs.kegg_api)": [[232, "pypath.inputs.kegg_api.disease_to_drug"]], "disease_to_gene() (in module pypath.inputs.kegg_api)": [[233, "pypath.inputs.kegg_api.disease_to_gene"]], "disease_to_pathway() (in module pypath.inputs.kegg_api)": [[234, "pypath.inputs.kegg_api.disease_to_pathway"]], "drug_to_disease() (in module pypath.inputs.kegg_api)": [[235, "pypath.inputs.kegg_api.drug_to_disease"]], "drug_to_drug() (in module pypath.inputs.kegg_api)": [[236, "pypath.inputs.kegg_api.drug_to_drug"]], "drug_to_gene() (in module pypath.inputs.kegg_api)": [[237, "pypath.inputs.kegg_api.drug_to_gene"]], "drug_to_pathway() (in module pypath.inputs.kegg_api)": [[238, "pypath.inputs.kegg_api.drug_to_pathway"]], "gene_to_disease() (in module pypath.inputs.kegg_api)": [[239, "pypath.inputs.kegg_api.gene_to_disease"]], "gene_to_drug() (in module pypath.inputs.kegg_api)": [[240, "pypath.inputs.kegg_api.gene_to_drug"]], "gene_to_pathway() (in module pypath.inputs.kegg_api)": [[241, "pypath.inputs.kegg_api.gene_to_pathway"]], "kegg_drug_to_chebi() (in module pypath.inputs.kegg_api)": [[242, "pypath.inputs.kegg_api.kegg_drug_to_chebi"]], "kegg_gene_to_ncbi_geneid() (in module pypath.inputs.kegg_api)": [[243, "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid"]], "kegg_gene_to_uniprot() (in module pypath.inputs.kegg_api)": [[244, "pypath.inputs.kegg_api.kegg_gene_to_uniprot"]], "pathway_to_disease() (in module pypath.inputs.kegg_api)": [[245, "pypath.inputs.kegg_api.pathway_to_disease"]], "pathway_to_drug() (in module pypath.inputs.kegg_api)": [[246, "pypath.inputs.kegg_api.pathway_to_drug"]], "pathway_to_gene() (in module pypath.inputs.kegg_api)": [[247, "pypath.inputs.kegg_api.pathway_to_gene"]], "pypath.inputs.kirouac2010": [[248, "module-pypath.inputs.kirouac2010"]], "kirouac2010_interactions() (in module pypath.inputs.kirouac2010)": [[249, "pypath.inputs.kirouac2010.kirouac2010_interactions"]], "pypath.inputs.laudanna": [[250, "module-pypath.inputs.laudanna"]], "laudanna_directions() (in module pypath.inputs.laudanna)": [[251, "pypath.inputs.laudanna.laudanna_directions"]], "laudanna_effects() (in module pypath.inputs.laudanna)": [[252, "pypath.inputs.laudanna.laudanna_effects"]], "pypath.inputs.lincs": [[253, "module-pypath.inputs.lincs"]], "lincs_compounds() (in module pypath.inputs.lincs)": [[254, "pypath.inputs.lincs.lincs_compounds"]], "pypath.inputs.lncdisease": [[255, "module-pypath.inputs.lncdisease"]], "lncdisease_interactions() (in module pypath.inputs.lncdisease)": [[256, "pypath.inputs.lncdisease.lncdisease_interactions"]], "pypath.inputs.lncrnadb": [[257, "module-pypath.inputs.lncrnadb"]], "lncrnadb_interactions() (in module pypath.inputs.lncrnadb)": [[258, "pypath.inputs.lncrnadb.lncrnadb_interactions"]], "pypath.inputs.macrophage": [[259, "module-pypath.inputs.macrophage"]], "macrophage_interactions() (in module pypath.inputs.macrophage)": [[260, "pypath.inputs.macrophage.macrophage_interactions"]], "pypath.inputs.main": [[261, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[262, "module-pypath.inputs.mimp"]], "get_kinase_class() (in module pypath.inputs.mimp)": [[263, "pypath.inputs.mimp.get_kinase_class"]], "mimp_enzyme_substrate() (in module pypath.inputs.mimp)": [[264, "pypath.inputs.mimp.mimp_enzyme_substrate"]], "mimp_interactions() (in module pypath.inputs.mimp)": [[265, "pypath.inputs.mimp.mimp_interactions"]], "pypath.inputs.mir2disease": [[266, "module-pypath.inputs.mir2disease"]], "mir2disease_interactions() (in module pypath.inputs.mir2disease)": [[267, "pypath.inputs.mir2disease.mir2disease_interactions"]], "pypath.inputs.mirbase": [[268, "module-pypath.inputs.mirbase"]], "get_mirbase_aliases() (in module pypath.inputs.mirbase)": [[269, "pypath.inputs.mirbase.get_mirbase_aliases"]], "mirbase_ids() (in module pypath.inputs.mirbase)": [[270, "pypath.inputs.mirbase.mirbase_ids"]], "mirbase_mature() (in module pypath.inputs.mirbase)": [[271, "pypath.inputs.mirbase.mirbase_mature"]], "mirbase_mature_all() (in module pypath.inputs.mirbase)": [[272, "pypath.inputs.mirbase.mirbase_mature_all"]], "mirbase_precursor() (in module pypath.inputs.mirbase)": [[273, "pypath.inputs.mirbase.mirbase_precursor"]], "mirbase_precursor_all() (in module pypath.inputs.mirbase)": [[274, "pypath.inputs.mirbase.mirbase_precursor_all"]], "mirbase_precursor_to_mature() (in module pypath.inputs.mirbase)": [[275, "pypath.inputs.mirbase.mirbase_precursor_to_mature"]], "pypath.inputs.mirdeathdb": [[276, "module-pypath.inputs.mirdeathdb"]], "mirdeathdb_interactions() (in module pypath.inputs.mirdeathdb)": [[277, "pypath.inputs.mirdeathdb.mirdeathdb_interactions"]], "pypath.inputs.mirecords": [[278, "module-pypath.inputs.mirecords"]], "mirecords_interactions() (in module pypath.inputs.mirecords)": [[279, "pypath.inputs.mirecords.mirecords_interactions"]], "pypath.inputs.mirtarbase": [[280, "module-pypath.inputs.mirtarbase"]], "mirtarbase_interactions() (in module pypath.inputs.mirtarbase)": [[281, "pypath.inputs.mirtarbase.mirtarbase_interactions"]], "pypath.inputs.mitab": [[282, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[283, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[284, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.mppi": [[285, "module-pypath.inputs.mppi"]], "mppi_interactions() (in module pypath.inputs.mppi)": [[286, "pypath.inputs.mppi.mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[287, "module-pypath.inputs.ncrdeathdb"]], "ncrdeathdb_interactions() (in module pypath.inputs.ncrdeathdb)": [[288, "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[289, "module-pypath.inputs.negatome"]], "negatome_interactions() (in module pypath.inputs.negatome)": [[290, "pypath.inputs.negatome.negatome_interactions"]], "pypath.inputs.netbiol": [[291, "module-pypath.inputs.netbiol"]], "arn_interactions() (in module pypath.inputs.netbiol)": [[292, "pypath.inputs.netbiol.arn_interactions"]], "nrf2ome_interactions() (in module pypath.inputs.netbiol)": [[293, "pypath.inputs.netbiol.nrf2ome_interactions"]], "pypath.inputs.offsides": [[294, "module-pypath.inputs.offsides"]], "offsides_side_effects() (in module pypath.inputs.offsides)": [[295, "pypath.inputs.offsides.offsides_side_effects"]], "pypath.inputs.ontology": [[296, "module-pypath.inputs.ontology"]], "listof_ontologies() (in module pypath.inputs.ontology)": [[297, "pypath.inputs.ontology.listof_ontologies"]], "ontology() (in module pypath.inputs.ontology)": [[298, "pypath.inputs.ontology.ontology"]], "pypath.inputs.opentargets": [[299, "module-pypath.inputs.opentargets"]], "opentargets_adverse_reactions() (in module pypath.inputs.opentargets)": [[300, "pypath.inputs.opentargets.opentargets_adverse_reactions"]], "opentargets_baseline_expression() (in module pypath.inputs.opentargets)": [[301, "pypath.inputs.opentargets.opentargets_baseline_expression"]], "opentargets_direct_score() (in module pypath.inputs.opentargets)": [[302, "pypath.inputs.opentargets.opentargets_direct_score"]], "opentargets_general() (in module pypath.inputs.opentargets)": [[303, "pypath.inputs.opentargets.opentargets_general"]], "opentargets_indirect_score() (in module pypath.inputs.opentargets)": [[304, "pypath.inputs.opentargets.opentargets_indirect_score"]], "pypath.inputs.oreganno": [[305, "module-pypath.inputs.oreganno"]], "oreganno_interactions() (in module pypath.inputs.oreganno)": [[306, "pypath.inputs.oreganno.oreganno_interactions"]], "oreganno_raw() (in module pypath.inputs.oreganno)": [[307, "pypath.inputs.oreganno.oreganno_raw"]], "pypath.inputs.pathophenodb": [[308, "module-pypath.inputs.pathophenodb"]], "diseasepathogen (class in pypath.inputs.pathophenodb)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen"]], "__init__() (pypath.inputs.pathophenodb.diseasepathogen method)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.__init__"]], "count() (pypath.inputs.pathophenodb.diseasepathogen method)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.count"]], "disease (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.disease"]], "disease_id (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.disease_id"]], "evidence (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.evidence"]], "index() (pypath.inputs.pathophenodb.diseasepathogen method)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.index"]], "pathogen (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen"]], "pathogen_taxid (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[309, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen_taxid"]], "disease_pathogen_interactions() (in module pypath.inputs.pathophenodb)": [[310, "pypath.inputs.pathophenodb.disease_pathogen_interactions"]], "pypath.inputs.pathwaycommons": [[311, "module-pypath.inputs.pathwaycommons"]], "pathwaycommonsinteraction (class in pypath.inputs.pathwaycommons)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.count"]], "id_a (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_a"]], "id_b (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_b"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.index"]], "interaction_type (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.interaction_type"]], "resource (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[312, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.resource"]], "pathwaycommonsresource (class in pypath.inputs.pathwaycommons)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.count"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.index"]], "name (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.name"]], "pc_label (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.pc_label"]], "version (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[313, "pypath.inputs.pathwaycommons.PathwayCommonsResource.version"]], "pathwaycommons_bind_interactions() (in module pypath.inputs.pathwaycommons)": [[314, "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions"]], "pathwaycommons_biogrid_interactions() (in module pypath.inputs.pathwaycommons)": [[315, "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions"]], "pathwaycommons_corum_interactions() (in module pypath.inputs.pathwaycommons)": [[316, "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions"]], "pathwaycommons_dip_interactions() (in module pypath.inputs.pathwaycommons)": [[317, "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions"]], "pathwaycommons_hprd_interactions() (in module pypath.inputs.pathwaycommons)": [[318, "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions"]], "pathwaycommons_inoh_interactions() (in module pypath.inputs.pathwaycommons)": [[319, "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions"]], "pathwaycommons_intact_interactions() (in module pypath.inputs.pathwaycommons)": [[320, "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions"]], "pathwaycommons_interactions() (in module pypath.inputs.pathwaycommons)": [[321, "pypath.inputs.pathwaycommons.pathwaycommons_interactions"]], "pathwaycommons_kegg_interactions() (in module pypath.inputs.pathwaycommons)": [[322, "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions"]], "pathwaycommons_netpath_interactions() (in module pypath.inputs.pathwaycommons)": [[323, "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions"]], "pathwaycommons_panther_interactions() (in module pypath.inputs.pathwaycommons)": [[324, "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions"]], "pathwaycommons_phosphosite_interactions() (in module pypath.inputs.pathwaycommons)": [[325, "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions"]], "pathwaycommons_reactome_interactions() (in module pypath.inputs.pathwaycommons)": [[326, "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions"]], "pathwaycommons_wikipathways_interactions() (in module pypath.inputs.pathwaycommons)": [[327, "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pazar": [[328, "module-pypath.inputs.pazar"]], "pazar_interactions() (in module pypath.inputs.pazar)": [[329, "pypath.inputs.pazar.pazar_interactions"]], "pypath.inputs.pdzbase": [[330, "module-pypath.inputs.pdzbase"]], "pdzbase_interactions() (in module pypath.inputs.pdzbase)": [[331, "pypath.inputs.pdzbase.pdzbase_interactions"]], "pypath.inputs.pepcyber": [[332, "module-pypath.inputs.pepcyber"]], "pepcyber_details() (in module pypath.inputs.pepcyber)": [[333, "pypath.inputs.pepcyber.pepcyber_details"]], "pepcyber_interactions() (in module pypath.inputs.pepcyber)": [[334, "pypath.inputs.pepcyber.pepcyber_interactions"]], "pypath.inputs.pfam": [[335, "module-pypath.inputs.pfam"]], "pfam_names() (in module pypath.inputs.pfam)": [[336, "pypath.inputs.pfam.pfam_names"]], "pfam_pdb() (in module pypath.inputs.pfam)": [[337, "pypath.inputs.pfam.pfam_pdb"]], "pfam_regions() (in module pypath.inputs.pfam)": [[338, "pypath.inputs.pfam.pfam_regions"]], "pfam_uniprot() (in module pypath.inputs.pfam)": [[339, "pypath.inputs.pfam.pfam_uniprot"]], "pypath.inputs.pharos": [[340, "module-pypath.inputs.pharos"]], "pharos_diseases() (in module pypath.inputs.pharos)": [[341, "pypath.inputs.pharos.pharos_diseases"]], "pharos_expression() (in module pypath.inputs.pharos)": [[342, "pypath.inputs.pharos.pharos_expression"]], "pharos_general() (in module pypath.inputs.pharos)": [[343, "pypath.inputs.pharos.pharos_general"]], "pharos_gtex() (in module pypath.inputs.pharos)": [[344, "pypath.inputs.pharos.pharos_gtex"]], "pharos_ligands() (in module pypath.inputs.pharos)": [[345, "pypath.inputs.pharos.pharos_ligands"]], "pharos_orthologs() (in module pypath.inputs.pharos)": [[346, "pypath.inputs.pharos.pharos_orthologs"]], "pharos_targets() (in module pypath.inputs.pharos)": [[347, "pypath.inputs.pharos.pharos_targets"]], "pharos_xrefs() (in module pypath.inputs.pharos)": [[348, "pypath.inputs.pharos.pharos_xrefs"]], "pypath.inputs.phobius": [[349, "module-pypath.inputs.phobius"]], "phobius_annotations() (in module pypath.inputs.phobius)": [[350, "pypath.inputs.phobius.phobius_annotations"]], "pypath.inputs.phosphoelm": [[351, "module-pypath.inputs.phosphoelm"]], "phosphoelm_enzyme_substrate() (in module pypath.inputs.phosphoelm)": [[352, "pypath.inputs.phosphoelm.phosphoelm_enzyme_substrate"]], "phosphoelm_interactions() (in module pypath.inputs.phosphoelm)": [[353, "pypath.inputs.phosphoelm.phosphoelm_interactions"]], "phosphoelm_kinases() (in module pypath.inputs.phosphoelm)": [[354, "pypath.inputs.phosphoelm.phosphoelm_kinases"]], "pypath.inputs.phosphonetworks": [[355, "module-pypath.inputs.phosphonetworks"]], "phosphonetworks_enzyme_substrate() (in module pypath.inputs.phosphonetworks)": [[356, "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate"]], "phosphonetworks_interactions() (in module pypath.inputs.phosphonetworks)": [[357, "pypath.inputs.phosphonetworks.phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[358, "module-pypath.inputs.phosphopoint"]], "phosphopoint_directions() (in module pypath.inputs.phosphopoint)": [[359, "pypath.inputs.phosphopoint.phosphopoint_directions"]], "phosphopoint_interactions() (in module pypath.inputs.phosphopoint)": [[360, "pypath.inputs.phosphopoint.phosphopoint_interactions"]], "pypath.inputs.pro": [[361, "module-pypath.inputs.pro"]], "get_pro() (in module pypath.inputs.pro)": [[362, "pypath.inputs.pro.get_pro"]], "pro_mapping() (in module pypath.inputs.pro)": [[363, "pypath.inputs.pro.pro_mapping"]], "pypath.inputs.proteins": [[364, "module-pypath.inputs.proteins"]], "variants() (in module pypath.inputs.proteins)": [[365, "pypath.inputs.proteins.variants"]], "pypath.inputs.protmapper": [[366, "module-pypath.inputs.protmapper"]], "get_protmapper() (in module pypath.inputs.protmapper)": [[367, "pypath.inputs.protmapper.get_protmapper"]], "protmapper_enzyme_substrate() (in module pypath.inputs.protmapper)": [[368, "pypath.inputs.protmapper.protmapper_enzyme_substrate"]], "protmapper_interactions() (in module pypath.inputs.protmapper)": [[369, "pypath.inputs.protmapper.protmapper_interactions"]], "pypath.inputs.pubchem": [[370, "module-pypath.inputs.pubchem"]], "pubchem_mapping() (in module pypath.inputs.pubchem)": [[371, "pypath.inputs.pubchem.pubchem_mapping"]], "pypath.inputs.pubmed": [[372, "module-pypath.inputs.pubmed"]], "get_pmid() (in module pypath.inputs.pubmed)": [[373, "pypath.inputs.pubmed.get_pmid"]], "get_pubmeds() (in module pypath.inputs.pubmed)": [[374, "pypath.inputs.pubmed.get_pubmeds"]], "only_pmids() (in module pypath.inputs.pubmed)": [[375, "pypath.inputs.pubmed.only_pmids"]], "open_pubmed() (in module pypath.inputs.pubmed)": [[376, "pypath.inputs.pubmed.open_pubmed"]], "pmids_dict() (in module pypath.inputs.pubmed)": [[377, "pypath.inputs.pubmed.pmids_dict"]], "pmids_list() (in module pypath.inputs.pubmed)": [[378, "pypath.inputs.pubmed.pmids_list"]], "pypath.inputs.ramp": [[379, "module-pypath.inputs.ramp"]], "ramp_id_types() (in module pypath.inputs.ramp)": [[380, "pypath.inputs.ramp.ramp_id_types"]], "ramp_id_types_2() (in module pypath.inputs.ramp)": [[381, "pypath.inputs.ramp.ramp_id_types_2"]], "ramp_list_tables() (in module pypath.inputs.ramp)": [[382, "pypath.inputs.ramp.ramp_list_tables"]], "ramp_mapping() (in module pypath.inputs.ramp)": [[383, "pypath.inputs.ramp.ramp_mapping"]], "ramp_raw() (in module pypath.inputs.ramp)": [[384, "pypath.inputs.ramp.ramp_raw"]], "ramp_show_tables() (in module pypath.inputs.ramp)": [[385, "pypath.inputs.ramp.ramp_show_tables"]], "pypath.inputs.rdata": [[386, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[387, "module-pypath.inputs.reaction"]], "acsn_biopax() (in module pypath.inputs.reaction)": [[388, "pypath.inputs.reaction.acsn_biopax"]], "acsn_interactions_2() (in module pypath.inputs.reaction)": [[389, "pypath.inputs.reaction.acsn_interactions_2"]], "get_acsn_effects() (in module pypath.inputs.reaction)": [[390, "pypath.inputs.reaction.get_acsn_effects"]], "get_controls() (in module pypath.inputs.reaction)": [[391, "pypath.inputs.reaction.get_controls"]], "get_interactions() (in module pypath.inputs.reaction)": [[392, "pypath.inputs.reaction.get_interactions"]], "get_reactions() (in module pypath.inputs.reaction)": [[393, "pypath.inputs.reaction.get_reactions"]], "get_soup() (in module pypath.inputs.reaction)": [[394, "pypath.inputs.reaction.get_soup"]], "panther_biopax() (in module pypath.inputs.reaction)": [[395, "pypath.inputs.reaction.panther_biopax"]], "panther_interactions() (in module pypath.inputs.reaction)": [[396, "pypath.inputs.reaction.panther_interactions"]], "pid_biopax() (in module pypath.inputs.reaction)": [[397, "pypath.inputs.reaction.pid_biopax"]], "pid_interactions() (in module pypath.inputs.reaction)": [[398, "pypath.inputs.reaction.pid_interactions"]], "process_complex() (in module pypath.inputs.reaction)": [[399, "pypath.inputs.reaction.process_complex"]], "process_controls() (in module pypath.inputs.reaction)": [[400, "pypath.inputs.reaction.process_controls"]], "process_reactions() (in module pypath.inputs.reaction)": [[401, "pypath.inputs.reaction.process_reactions"]], "reactions_biopax() (in module pypath.inputs.reaction)": [[402, "pypath.inputs.reaction.reactions_biopax"]], "reactome_biopax() (in module pypath.inputs.reaction)": [[403, "pypath.inputs.reaction.reactome_biopax"]], "reactome_bs() (in module pypath.inputs.reaction)": [[404, "pypath.inputs.reaction.reactome_bs"]], "reactome_interactions() (in module pypath.inputs.reaction)": [[405, "pypath.inputs.reaction.reactome_interactions"]], "reactome_sbml() (in module pypath.inputs.reaction)": [[406, "pypath.inputs.reaction.reactome_sbml"]], "pypath.inputs.reactome": [[407, "module-pypath.inputs.reactome"]], "reactome_chebis() (in module pypath.inputs.reactome)": [[408, "pypath.inputs.reactome.reactome_chebis"]], "reactome_pathway_relations() (in module pypath.inputs.reactome)": [[409, "pypath.inputs.reactome.reactome_pathway_relations"]], "reactome_pathways() (in module pypath.inputs.reactome)": [[410, "pypath.inputs.reactome.reactome_pathways"]], "reactome_uniprots() (in module pypath.inputs.reactome)": [[411, "pypath.inputs.reactome.reactome_uniprots"]], "pypath.inputs.science": [[412, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[413, "pypath.inputs.science.science_download"]], "pypath.inputs.sider": [[414, "module-pypath.inputs.sider"]], "siderdrug (class in pypath.inputs.sider)": [[415, "pypath.inputs.sider.SiderDrug"]], "__init__() (pypath.inputs.sider.siderdrug method)": [[415, "pypath.inputs.sider.SiderDrug.__init__"]], "atc (pypath.inputs.sider.siderdrug attribute)": [[415, "pypath.inputs.sider.SiderDrug.atc"]], "count() (pypath.inputs.sider.siderdrug method)": [[415, "pypath.inputs.sider.SiderDrug.count"]], "index() (pypath.inputs.sider.siderdrug method)": [[415, "pypath.inputs.sider.SiderDrug.index"]], "name (pypath.inputs.sider.siderdrug attribute)": [[415, "pypath.inputs.sider.SiderDrug.name"]], "sidersideeffect (class in pypath.inputs.sider)": [[416, "pypath.inputs.sider.SiderSideeffect"]], "__init__() (pypath.inputs.sider.sidersideeffect method)": [[416, "pypath.inputs.sider.SiderSideeffect.__init__"]], "count() (pypath.inputs.sider.sidersideeffect method)": [[416, "pypath.inputs.sider.SiderSideeffect.count"]], "index() (pypath.inputs.sider.sidersideeffect method)": [[416, "pypath.inputs.sider.SiderSideeffect.index"]], "side_effect (pypath.inputs.sider.sidersideeffect attribute)": [[416, "pypath.inputs.sider.SiderSideeffect.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffect attribute)": [[416, "pypath.inputs.sider.SiderSideeffect.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffect attribute)": [[416, "pypath.inputs.sider.SiderSideeffect.umls_concept_on_label"]], "sidersideeffectmeddra (class in pypath.inputs.sider)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra"]], "__init__() (pypath.inputs.sider.sidersideeffectmeddra method)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.__init__"]], "cid (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.cid"]], "count() (pypath.inputs.sider.sidersideeffectmeddra method)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.count"]], "index() (pypath.inputs.sider.sidersideeffectmeddra method)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.index"]], "meddra_id (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.meddra_id"]], "side_effect_name (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[417, "pypath.inputs.sider.SiderSideeffectMeddra.side_effect_name"]], "sidersideeffetfrequency (class in pypath.inputs.sider)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency"]], "__init__() (pypath.inputs.sider.sidersideeffetfrequency method)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.__init__"]], "count() (pypath.inputs.sider.sidersideeffetfrequency method)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.count"]], "frequency (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.frequency"]], "index() (pypath.inputs.sider.sidersideeffetfrequency method)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.index"]], "side_effect (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[418, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_on_label"]], "sider_drug_names() (in module pypath.inputs.sider)": [[419, "pypath.inputs.sider.sider_drug_names"]], "sider_meddra_side_effects() (in module pypath.inputs.sider)": [[420, "pypath.inputs.sider.sider_meddra_side_effects"]], "sider_side_effect_frequencies() (in module pypath.inputs.sider)": [[421, "pypath.inputs.sider.sider_side_effect_frequencies"]], "sider_side_effects() (in module pypath.inputs.sider)": [[422, "pypath.inputs.sider.sider_side_effects"]], "pypath.inputs.stitch": [[423, "module-pypath.inputs.stitch"]], "stitch_actions_interactions() (in module pypath.inputs.stitch)": [[424, "pypath.inputs.stitch.stitch_actions_interactions"]], "stitch_links_interactions() (in module pypath.inputs.stitch)": [[425, "pypath.inputs.stitch.stitch_links_interactions"]], "pypath.inputs.string": [[426, "module-pypath.inputs.string"]], "string_effects() (in module pypath.inputs.string)": [[427, "pypath.inputs.string.string_effects"]], "string_links_interactions() (in module pypath.inputs.string)": [[428, "pypath.inputs.string.string_links_interactions"]], "string_physical_interactions() (in module pypath.inputs.string)": [[429, "pypath.inputs.string.string_physical_interactions"]], "string_species() (in module pypath.inputs.string)": [[430, "pypath.inputs.string.string_species"]], "pypath.inputs.switches_elm": [[431, "module-pypath.inputs.switches_elm"]], "get_switches_elm() (in module pypath.inputs.switches_elm)": [[432, "pypath.inputs.switches_elm.get_switches_elm"]], "pypath.inputs.transmir": [[433, "module-pypath.inputs.transmir"]], "transmir_interactions() (in module pypath.inputs.transmir)": [[434, "pypath.inputs.transmir.transmir_interactions"]], "pypath.inputs.trip": [[435, "module-pypath.inputs.trip"]], "take_a_trip() (in module pypath.inputs.trip)": [[436, "pypath.inputs.trip.take_a_trip"]], "trip_find_uniprot() (in module pypath.inputs.trip)": [[437, "pypath.inputs.trip.trip_find_uniprot"]], "trip_get_uniprot() (in module pypath.inputs.trip)": [[438, "pypath.inputs.trip.trip_get_uniprot"]], "trip_interactions() (in module pypath.inputs.trip)": [[439, "pypath.inputs.trip.trip_interactions"]], "trip_process() (in module pypath.inputs.trip)": [[440, "pypath.inputs.trip.trip_process"]], "trip_process_table() (in module pypath.inputs.trip)": [[441, "pypath.inputs.trip.trip_process_table"]], "pypath.inputs.trrust": [[442, "module-pypath.inputs.trrust"]], "trrust_human() (in module pypath.inputs.trrust)": [[443, "pypath.inputs.trrust.trrust_human"]], "trrust_interactions() (in module pypath.inputs.trrust)": [[444, "pypath.inputs.trrust.trrust_interactions"]], "trrust_mouse() (in module pypath.inputs.trrust)": [[445, "pypath.inputs.trrust.trrust_mouse"]], "pypath.inputs.twosides": [[446, "module-pypath.inputs.twosides"]], "twosides_interactions() (in module pypath.inputs.twosides)": [[447, "pypath.inputs.twosides.twosides_interactions"]], "pypath.inputs.unichem": [[448, "module-pypath.inputs.unichem"]], "info() (in module pypath.inputs.unichem)": [[449, "pypath.inputs.unichem.info"]], "unichem_info() (in module pypath.inputs.unichem)": [[450, "pypath.inputs.unichem.unichem_info"]], "unichem_mapping() (in module pypath.inputs.unichem)": [[451, "pypath.inputs.unichem.unichem_mapping"]], "unichem_sources() (in module pypath.inputs.unichem)": [[452, "pypath.inputs.unichem.unichem_sources"]], "pypath.inputs.uniprot": [[453, "module-pypath.inputs.uniprot"]], "taxon (class in pypath.inputs.uniprot)": [[454, "pypath.inputs.uniprot.Taxon"]], "__init__() (pypath.inputs.uniprot.taxon method)": [[454, "pypath.inputs.uniprot.Taxon.__init__"]], "count() (pypath.inputs.uniprot.taxon method)": [[454, "pypath.inputs.uniprot.Taxon.count"]], "english (pypath.inputs.uniprot.taxon attribute)": [[454, "pypath.inputs.uniprot.Taxon.english"]], "index() (pypath.inputs.uniprot.taxon method)": [[454, "pypath.inputs.uniprot.Taxon.index"]], "latin (pypath.inputs.uniprot.taxon attribute)": [[454, "pypath.inputs.uniprot.Taxon.latin"]], "latin_synonym (pypath.inputs.uniprot.taxon attribute)": [[454, "pypath.inputs.uniprot.Taxon.latin_synonym"]], "ncbi_id (pypath.inputs.uniprot.taxon attribute)": [[454, "pypath.inputs.uniprot.Taxon.ncbi_id"]], "uniprotquery (class in pypath.inputs.uniprot)": [[455, "pypath.inputs.uniprot.UniprotQuery"]], "__init__() (pypath.inputs.uniprot.uniprotquery method)": [[455, "pypath.inputs.uniprot.UniprotQuery.__init__"]], "__iter__() (pypath.inputs.uniprot.uniprotquery method)": [[455, "pypath.inputs.uniprot.UniprotQuery.__iter__"]], "fail_on_empty (pypath.inputs.uniprot.uniprotquery attribute)": [[455, "pypath.inputs.uniprot.UniprotQuery.fail_on_empty"]], "name_process (pypath.inputs.uniprot.uniprotquery attribute)": [[455, "pypath.inputs.uniprot.UniprotQuery.name_process"]], "perform() (pypath.inputs.uniprot.uniprotquery method)": [[455, "pypath.inputs.uniprot.UniprotQuery.perform"]], "url (pypath.inputs.uniprot.uniprotquery property)": [[455, "pypath.inputs.uniprot.UniprotQuery.url"]], "url_plain (pypath.inputs.uniprot.uniprotquery property)": [[455, "pypath.inputs.uniprot.UniprotQuery.url_plain"]], "uniprotrecordhistory (class in pypath.inputs.uniprot)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory"]], "__init__() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.__init__"]], "count() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.count"]], "database (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.database"]], "date (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.date"]], "entry_name (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.entry_name"]], "entry_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.entry_version"]], "index() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.index"]], "number (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.number"]], "replaced_by (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.replaced_by"]], "replaces (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.replaces"]], "sequence_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[456, "pypath.inputs.uniprot.UniprotRecordHistory.sequence_version"]], "deleted_uniprot_genesymbol() (in module pypath.inputs.uniprot)": [[457, "pypath.inputs.uniprot.deleted_uniprot_genesymbol"]], "get_uniprot_sec() (in module pypath.inputs.uniprot)": [[458, "pypath.inputs.uniprot.get_uniprot_sec"]], "idmapping_idtypes() (in module pypath.inputs.uniprot)": [[459, "pypath.inputs.uniprot.idmapping_idtypes"]], "protein_datasheet() (in module pypath.inputs.uniprot)": [[460, "pypath.inputs.uniprot.protein_datasheet"]], "query_builder() (in module pypath.inputs.uniprot)": [[461, "pypath.inputs.uniprot.query_builder"]], "swissprot_deleted() (in module pypath.inputs.uniprot)": [[462, "pypath.inputs.uniprot.swissprot_deleted"]], "trembl_deleted() (in module pypath.inputs.uniprot)": [[463, "pypath.inputs.uniprot.trembl_deleted"]], "uniprot_data() (in module pypath.inputs.uniprot)": [[464, "pypath.inputs.uniprot.uniprot_data"]], "uniprot_deleted() (in module pypath.inputs.uniprot)": [[465, "pypath.inputs.uniprot.uniprot_deleted"]], "uniprot_families() (in module pypath.inputs.uniprot)": [[466, "pypath.inputs.uniprot.uniprot_families"]], "uniprot_history() (in module pypath.inputs.uniprot)": [[467, "pypath.inputs.uniprot.uniprot_history"]], "uniprot_history_recent_datasheet() (in module pypath.inputs.uniprot)": [[468, "pypath.inputs.uniprot.uniprot_history_recent_datasheet"]], "uniprot_keywords() (in module pypath.inputs.uniprot)": [[469, "pypath.inputs.uniprot.uniprot_keywords"]], "uniprot_locations() (in module pypath.inputs.uniprot)": [[470, "pypath.inputs.uniprot.uniprot_locations"]], "uniprot_ncbi_taxids() (in module pypath.inputs.uniprot)": [[471, "pypath.inputs.uniprot.uniprot_ncbi_taxids"]], "uniprot_ncbi_taxids_2() (in module pypath.inputs.uniprot)": [[472, "pypath.inputs.uniprot.uniprot_ncbi_taxids_2"]], "uniprot_preprocess() (in module pypath.inputs.uniprot)": [[473, "pypath.inputs.uniprot.uniprot_preprocess"]], "uniprot_query() (in module pypath.inputs.uniprot)": [[474, "pypath.inputs.uniprot.uniprot_query"]], "uniprot_recent_version() (in module pypath.inputs.uniprot)": [[475, "pypath.inputs.uniprot.uniprot_recent_version"]], "uniprot_taxonomy() (in module pypath.inputs.uniprot)": [[476, "pypath.inputs.uniprot.uniprot_taxonomy"]], "uniprot_tissues() (in module pypath.inputs.uniprot)": [[477, "pypath.inputs.uniprot.uniprot_tissues"]], "uniprot_topology() (in module pypath.inputs.uniprot)": [[478, "pypath.inputs.uniprot.uniprot_topology"]], "valid_uniprot() (in module pypath.inputs.uniprot)": [[479, "pypath.inputs.uniprot.valid_uniprot"]], "pypath.inputs.uniprot_db": [[480, "module-pypath.inputs.uniprot_db"]], "all_swissprots() (in module pypath.inputs.uniprot_db)": [[481, "pypath.inputs.uniprot_db.all_swissprots"]], "all_trembls() (in module pypath.inputs.uniprot_db)": [[482, "pypath.inputs.uniprot_db.all_trembls"]], "all_uniprots() (in module pypath.inputs.uniprot_db)": [[483, "pypath.inputs.uniprot_db.all_uniprots"]], "get_db() (in module pypath.inputs.uniprot_db)": [[484, "pypath.inputs.uniprot_db.get_db"]], "init_db() (in module pypath.inputs.uniprot_db)": [[485, "pypath.inputs.uniprot_db.init_db"]], "is_swissprot() (in module pypath.inputs.uniprot_db)": [[486, "pypath.inputs.uniprot_db.is_swissprot"]], "is_trembl() (in module pypath.inputs.uniprot_db)": [[487, "pypath.inputs.uniprot_db.is_trembl"]], "is_uniprot() (in module pypath.inputs.uniprot_db)": [[488, "pypath.inputs.uniprot_db.is_uniprot"]], "pypath.internals": [[489, "module-pypath.internals"]], "pypath.internals.input_formats": [[490, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[491, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[491, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[492, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[492, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[493, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[493, "pypath.internals.input_formats.FileMapping.__init__"]], "hmdbmapping (class in pypath.internals.input_formats)": [[494, "pypath.internals.input_formats.HmdbMapping"]], "__init__() (pypath.internals.input_formats.hmdbmapping method)": [[494, "pypath.internals.input_formats.HmdbMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[495, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[495, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[496, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[496, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[497, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[497, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[498, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[498, "pypath.internals.input_formats.ProMapping.__init__"]], "rampmapping (class in pypath.internals.input_formats)": [[499, "pypath.internals.input_formats.RampMapping"]], "__init__() (pypath.internals.input_formats.rampmapping method)": [[499, "pypath.internals.input_formats.RampMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[500, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[500, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[501, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[501, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[502, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[502, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[503, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[503, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[503, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[504, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[505, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[505, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[505, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[506, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[506, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[506, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[506, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[506, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[506, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[507, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[507, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[507, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[507, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[507, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[507, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[508, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[508, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[508, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[508, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[508, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[508, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[509, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[509, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[509, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[509, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[509, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[509, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[510, "module-pypath.internals.maps"]], "pypath.internals.refs": [[511, "module-pypath.internals.refs"]], "reference (class in pypath.internals.refs)": [[512, "pypath.internals.refs.Reference"]], "__init__() (pypath.internals.refs.reference method)": [[512, "pypath.internals.refs.Reference.__init__"]], "get_pubmed_data() (in module pypath.internals.refs)": [[513, "pypath.internals.refs.get_pubmed_data"]], "pypath.internals.resource": [[514, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[515, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[515, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[515, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[515, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[515, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[516, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[516, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[516, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[517, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkdataset (class in pypath.internals.resource)": [[518, "pypath.internals.resource.NetworkDataset"]], "__init__() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.__init__"]], "clear() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.clear"]], "get() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.get"]], "items() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.items"]], "keys() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.keys"]], "pop() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.pop"]], "popitem() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.popitem"]], "setdefault() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.setdefault"]], "update() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.update"]], "values() (pypath.internals.resource.networkdataset method)": [[518, "pypath.internals.resource.NetworkDataset.values"]], "networkresource (class in pypath.internals.resource)": [[519, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[519, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[520, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[520, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[520, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[520, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[520, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[520, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[520, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[520, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[520, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[520, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[520, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[521, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[521, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[522, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[523, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[524, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[525, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[526, "pypath.log"]], "pypath.resources": [[527, "module-pypath.resources"]], "pypath.resources.controller": [[528, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[529, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.__init__"]], "add_resource_attrs() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.add_resource_attrs"]], "collect_interaction() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.collect_interaction"]], "collect_network() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.collect_network"]], "license_filter() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.license_filter"]], "secondary_resources() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.secondary_resources"]], "update() (pypath.resources.controller.resourcecontroller method)": [[529, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[530, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[531, "module-pypath.resources.data_formats"]], "activity_flow (in module pypath.resources.data_formats)": [[532, "pypath.resources.data_formats.activity_flow"]], "enzyme_substrate (in module pypath.resources.data_formats)": [[533, "pypath.resources.data_formats.enzyme_substrate"]], "interaction (in module pypath.resources.data_formats)": [[534, "pypath.resources.data_formats.interaction"]], "interaction_htp (in module pypath.resources.data_formats)": [[535, "pypath.resources.data_formats.interaction_htp"]], "pathway_bad (in module pypath.resources.data_formats)": [[536, "pypath.resources.data_formats.pathway_bad"]], "reaction_pc (in module pypath.resources.data_formats)": [[537, "pypath.resources.data_formats.reaction_pc"]], "transcription_deprecated (in module pypath.resources.data_formats)": [[538, "pypath.resources.data_formats.transcription_deprecated"]], "transcription_onebyone (in module pypath.resources.data_formats)": [[539, "pypath.resources.data_formats.transcription_onebyone"]], "get_controller() (in module pypath.resources)": [[540, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[541, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[542, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[542, "pypath.resources.licenses.Licenses.__init__"]], "pypath.resources.network": [[543, "module-pypath.resources.network"]], "choose_dataset() (in module pypath.resources.network)": [[544, "pypath.resources.network.choose_dataset"]], "dataset_priority() (in module pypath.resources.network)": [[545, "pypath.resources.network.dataset_priority"]], "dorothea_expand_levels() (in module pypath.resources.network)": [[546, "pypath.resources.network.dorothea_expand_levels"]], "pypath.resources.urls": [[547, "module-pypath.resources.urls"]], "pypath.share": [[548, "module-pypath.share"]], "pypath.share.cache": [[549, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[550, "pypath.share.cache.cache_item"]], "cache_path() (in module pypath.share.cache)": [[551, "pypath.share.cache.cache_path"]], "get_cachedir() (in module pypath.share.cache)": [[552, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[553, "module-pypath.share.common"]], "pypath.share.constants": [[554, "module-pypath.share.constants"]], "pypath.share.curl": [[555, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[556, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.__init__"]], "cache_path() (pypath.share.curl.curl class method)": [[556, "pypath.share.curl.Curl.cache_path"]], "close() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[556, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[556, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[557, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[557, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[557, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[557, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[557, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[558, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[558, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[559, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[559, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[560, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[560, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[561, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[561, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[562, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[562, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[563, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[563, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[564, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[564, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[565, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[565, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[566, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[566, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[567, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[567, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[568, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[568, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[569, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[570, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[570, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[571, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[571, "pypath.share.curl.preserve_on"]], "pypath.share.progress": [[572, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[573, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[573, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[574, "module-pypath.share.session"]], "pypath.share.settings": [[575, "module-pypath.share.settings"]], "pypath.utils": [[576, "module-pypath.utils"]], "pypath.utils.go": [[577, "module-pypath.utils.go"]], "goannotation (class in pypath.utils.go)": [[578, "pypath.utils.go.GOAnnotation"]], "__init__() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.__init__"]], "all_uniprots() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.all_uniprots"]], "expr_names_to_terms() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.expr_names_to_terms"]], "get_annot() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_annot"]], "get_annot_ancestors() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_annot_ancestors"]], "get_annots() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_annots"]], "get_annots_ancestors() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_annots_ancestors"]], "get_name() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_name"]], "get_term() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.get_term"]], "has_any_term() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.has_any_term"]], "has_term() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.has_term"]], "i_select_by_term() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.i_select_by_term"]], "reload() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.reload"]], "select() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select"]], "select_by_all() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select_by_all"]], "select_by_expr() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select_by_expr"]], "select_by_expr_terms() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select_by_expr_terms"]], "select_by_name() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select_by_name"]], "select_by_term() (pypath.utils.go.goannotation method)": [[578, "pypath.utils.go.GOAnnotation.select_by_term"]], "gocustomannotation (class in pypath.utils.go)": [[579, "pypath.utils.go.GOCustomAnnotation"]], "__init__() (pypath.utils.go.gocustomannotation method)": [[579, "pypath.utils.go.GOCustomAnnotation.__init__"]], "get_annotation() (pypath.utils.go.gocustomannotation method)": [[579, "pypath.utils.go.GOCustomAnnotation.get_annotation"]], "get_annotations() (pypath.utils.go.gocustomannotation method)": [[579, "pypath.utils.go.GOCustomAnnotation.get_annotations"]], "process_categories() (pypath.utils.go.gocustomannotation method)": [[579, "pypath.utils.go.GOCustomAnnotation.process_categories"]], "reload() (pypath.utils.go.gocustomannotation method)": [[579, "pypath.utils.go.GOCustomAnnotation.reload"]], "geneontology (class in pypath.utils.go)": [[580, "pypath.utils.go.GeneOntology"]], "__init__() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.__init__"]], "all_from_aspect() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.all_from_aspect"]], "aspect_from_name() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.aspect_from_name"]], "flatten() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.flatten"]], "get_all_ancestors() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.get_all_ancestors"]], "get_all_descendants() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.get_all_descendants"]], "get_aspect() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.get_aspect"]], "get_name() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.get_name"]], "get_term() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.get_term"]], "highest() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.highest"]], "is_leaf() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.is_leaf"]], "is_name() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.is_name"]], "is_root() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.is_root"]], "is_term() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.is_term"]], "lowest() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.lowest"]], "names_to_terms() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.names_to_terms"]], "names_to_terms_aspects() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.names_to_terms_aspects"]], "reload() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.reload"]], "set_of() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.set_of"]], "set_of_names() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.set_of_names"]], "set_of_terms() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.set_of_terms"]], "subgraph_nodes() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.subgraph_nodes"]], "terms_to_names() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.terms_to_names"]], "terms_to_names_aspects() (pypath.utils.go.geneontology method)": [[580, "pypath.utils.go.GeneOntology.terms_to_names_aspects"]], "annotate() (in module pypath.utils.go)": [[581, "pypath.utils.go.annotate"]], "get_db() (in module pypath.utils.go)": [[582, "pypath.utils.go.get_db"]], "init_db() (in module pypath.utils.go)": [[583, "pypath.utils.go.init_db"]], "load_go() (in module pypath.utils.go)": [[584, "pypath.utils.go.load_go"]], "pypath.utils.pdb": [[585, "module-pypath.utils.pdb"]], "residue (class in pypath.utils.pdb)": [[586, "pypath.utils.pdb.Residue"]], "__init__() (pypath.utils.pdb.residue method)": [[586, "pypath.utils.pdb.Residue.__init__"]], "chain (pypath.utils.pdb.residue attribute)": [[586, "pypath.utils.pdb.Residue.chain"]], "count() (pypath.utils.pdb.residue method)": [[586, "pypath.utils.pdb.Residue.count"]], "index() (pypath.utils.pdb.residue method)": [[586, "pypath.utils.pdb.Residue.index"]], "offset (pypath.utils.pdb.residue attribute)": [[586, "pypath.utils.pdb.Residue.offset"]], "resnum (pypath.utils.pdb.residue attribute)": [[586, "pypath.utils.pdb.Residue.resnum"]], "uniprot (pypath.utils.pdb.residue attribute)": [[586, "pypath.utils.pdb.Residue.uniprot"]], "residuemapper (class in pypath.utils.pdb)": [[587, "pypath.utils.pdb.ResidueMapper"]], "__init__() (pypath.utils.pdb.residuemapper method)": [[587, "pypath.utils.pdb.ResidueMapper.__init__"]], "clean() (pypath.utils.pdb.residuemapper method)": [[587, "pypath.utils.pdb.ResidueMapper.clean"]], "get_residue() (pypath.utils.pdb.residuemapper method)": [[587, "pypath.utils.pdb.ResidueMapper.get_residue"]], "load_mapping() (pypath.utils.pdb.residuemapper method)": [[587, "pypath.utils.pdb.ResidueMapper.load_mapping"]], "segment (class in pypath.utils.pdb)": [[588, "pypath.utils.pdb.Segment"]], "__init__() (pypath.utils.pdb.segment method)": [[588, "pypath.utils.pdb.Segment.__init__"]], "count() (pypath.utils.pdb.segment method)": [[588, "pypath.utils.pdb.Segment.count"]], "index() (pypath.utils.pdb.segment method)": [[588, "pypath.utils.pdb.Segment.index"]], "pdb_end (pypath.utils.pdb.segment attribute)": [[588, "pypath.utils.pdb.Segment.pdb_end"]], "pdb_start (pypath.utils.pdb.segment attribute)": [[588, "pypath.utils.pdb.Segment.pdb_start"]], "uniprot (pypath.utils.pdb.segment attribute)": [[588, "pypath.utils.pdb.Segment.uniprot"]], "uniprot_end (pypath.utils.pdb.segment attribute)": [[588, "pypath.utils.pdb.Segment.uniprot_end"]], "uniprot_start (pypath.utils.pdb.segment attribute)": [[588, "pypath.utils.pdb.Segment.uniprot_start"]], "residue_pdb() (in module pypath.utils.pdb)": [[589, "pypath.utils.pdb.residue_pdb"]], "pypath.utils.proteomicsdb": [[590, "module-pypath.utils.proteomicsdb"]], "proteomicsdb (class in pypath.utils.proteomicsdb)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB"]], "__init__() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.__init__"]], "get_expression() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.get_expression"]], "get_pieces() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.get_pieces"]], "get_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.get_proteins"]], "get_tissues() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.get_tissues"]], "pandas_matrix() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.pandas_matrix"]], "query() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.query"]], "tissues_x_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[591, "pypath.utils.proteomicsdb.ProteomicsDB.tissues_x_proteins"]], "pypath.utils.reflists": [[592, "module-pypath.utils.reflists"]], "referencelistmanager (class in pypath.utils.reflists)": [[593, "pypath.utils.reflists.ReferenceListManager"]], "__init__() (pypath.utils.reflists.referencelistmanager method)": [[593, "pypath.utils.reflists.ReferenceListManager.__init__"]], "check() (pypath.utils.reflists.referencelistmanager method)": [[593, "pypath.utils.reflists.ReferenceListManager.check"]], "is_not() (pypath.utils.reflists.referencelistmanager method)": [[593, "pypath.utils.reflists.ReferenceListManager.is_not"]], "select() (pypath.utils.reflists.referencelistmanager method)": [[593, "pypath.utils.reflists.ReferenceListManager.select"]], "check() (in module pypath.utils.reflists)": [[594, "pypath.utils.reflists.check"]], "get_manager() (in module pypath.utils.reflists)": [[595, "pypath.utils.reflists.get_manager"]], "get_reflist() (in module pypath.utils.reflists)": [[596, "pypath.utils.reflists.get_reflist"]], "init() (in module pypath.utils.reflists)": [[597, "pypath.utils.reflists.init"]], "is_not() (in module pypath.utils.reflists)": [[598, "pypath.utils.reflists.is_not"]], "select() (in module pypath.utils.reflists)": [[599, "pypath.utils.reflists.select"]], "pypath.utils.residues": [[600, "module-pypath.utils.residues"]], "residuemapper (class in pypath.utils.residues)": [[601, "pypath.utils.residues.ResidueMapper"]], "__init__() (pypath.utils.residues.residuemapper method)": [[601, "pypath.utils.residues.ResidueMapper.__init__"]], "clean() (pypath.utils.residues.residuemapper method)": [[601, "pypath.utils.residues.ResidueMapper.clean"]], "pypath.utils.seq": [[602, "module-pypath.utils.seq"]], "pfam (class in pypath.utils.seq)": [[603, "pypath.utils.seq.Pfam"]], "__init__() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.__init__"]], "iterdb() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.iterdb"]], "iterprotein() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.iterprotein"]], "load() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.load"]], "processor() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.processor"]], "unload() (pypath.utils.seq.pfam method)": [[603, "pypath.utils.seq.Pfam.unload"]], "resource (class in pypath.utils.seq)": [[604, "pypath.utils.seq.Resource"]], "__init__() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.__init__"]], "iterdb() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.iterdb"]], "iterprotein() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.iterprotein"]], "load() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.load"]], "processor() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.processor"]], "unload() (pypath.utils.seq.resource method)": [[604, "pypath.utils.seq.Resource.unload"]], "seq (class in pypath.utils.seq)": [[605, "pypath.utils.seq.Seq"]], "__init__() (pypath.utils.seq.seq method)": [[605, "pypath.utils.seq.Seq.__init__"]], "findall() (pypath.utils.seq.seq method)": [[605, "pypath.utils.seq.Seq.findall"]], "get_isoforms() (in module pypath.utils.seq)": [[606, "pypath.utils.seq.get_isoforms"]], "read_fasta() (in module pypath.utils.seq)": [[607, "pypath.utils.seq.read_fasta"]], "swissprot_seq() (in module pypath.utils.seq)": [[608, "pypath.utils.seq.swissprot_seq"]], "pypath.utils.taxonomy": [[609, "module-pypath.utils.taxonomy"]], "ensure_common_name() (in module pypath.utils.taxonomy)": [[610, "pypath.utils.taxonomy.ensure_common_name"]], "ensure_ensembl_name() (in module pypath.utils.taxonomy)": [[611, "pypath.utils.taxonomy.ensure_ensembl_name"]], "ensure_latin_name() (in module pypath.utils.taxonomy)": [[612, "pypath.utils.taxonomy.ensure_latin_name"]], "ensure_ncbi_tax_id() (in module pypath.utils.taxonomy)": [[613, "pypath.utils.taxonomy.ensure_ncbi_tax_id"]], "get_db() (in module pypath.utils.taxonomy)": [[614, "pypath.utils.taxonomy.get_db"]], "init_db() (in module pypath.utils.taxonomy)": [[615, "pypath.utils.taxonomy.init_db"]], "short_latin_names() (in module pypath.utils.taxonomy)": [[616, "pypath.utils.taxonomy.short_latin_names"]], "shorten_latin_name() (in module pypath.utils.taxonomy)": [[617, "pypath.utils.taxonomy.shorten_latin_name"]], "taxid_from_common_name() (in module pypath.utils.taxonomy)": [[618, "pypath.utils.taxonomy.taxid_from_common_name"]], "taxid_from_dbptm_taxon_name() (in module pypath.utils.taxonomy)": [[619, "pypath.utils.taxonomy.taxid_from_dbptm_taxon_name"]], "taxid_from_ensembl_name() (in module pypath.utils.taxonomy)": [[620, "pypath.utils.taxonomy.taxid_from_ensembl_name"]], "taxid_from_latin_name() (in module pypath.utils.taxonomy)": [[621, "pypath.utils.taxonomy.taxid_from_latin_name"]], "taxid_from_nonstandard() (in module pypath.utils.taxonomy)": [[622, "pypath.utils.taxonomy.taxid_from_nonstandard"]], "uniprot_taxid() (in module pypath.utils.taxonomy)": [[623, "pypath.utils.taxonomy.uniprot_taxid"]], "pypath.utils.unichem": [[624, "module-pypath.utils.unichem"]], "unichem (class in pypath.utils.unichem)": [[625, "pypath.utils.unichem.Unichem"]], "__init__() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.__init__"]], "connectivity_search() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.connectivity_search"]], "inchikey2anything() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.inchikey2anything"]], "info() (pypath.utils.unichem.unichem static method)": [[625, "pypath.utils.unichem.Unichem.info"]], "smiles2chembl() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.smiles2chembl"]], "translate() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.translate"]], "usage() (pypath.utils.unichem.unichem method)": [[625, "pypath.utils.unichem.Unichem.usage"]], "pypath.visual": [[626, "module-pypath.visual"]], "pypath.visual.drawing": [[627, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[628, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[628, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[628, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[629, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[629, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[630, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[631, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[631, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[632, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[633, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[633, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[634, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[635, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[636, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[637, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[638, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[639, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[640, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[641, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[642, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[643, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[644, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[644, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[645, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[645, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[645, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[646, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[646, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[647, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[647, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[647, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[648, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[648, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[648, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})