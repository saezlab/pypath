Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.abs", "api/pypath.inputs.abs.abs_interactions", "api/pypath.inputs.acsn", "api/pypath.inputs.acsn.acsn_interactions", "api/pypath.inputs.acsn.acsn_interactions_sif", "api/pypath.inputs.adrecs", "api/pypath.inputs.adrecs.AdrecsAdr", "api/pypath.inputs.adrecs.AdrecsChildParent", "api/pypath.inputs.adrecs.AdrecsDrug", "api/pypath.inputs.adrecs.AdrecsDrugAdr", "api/pypath.inputs.adrecs.AdrecsTerm", "api/pypath.inputs.adrecs.adrecs_adr_ontology", "api/pypath.inputs.adrecs.adrecs_drug_adr", "api/pypath.inputs.adrecs.adrecs_drug_identifiers", "api/pypath.inputs.adrecs.adrecs_hierarchy", "api/pypath.inputs.biogrid", "api/pypath.inputs.biogrid.biogrid_all_interactions", "api/pypath.inputs.biogrid.biogrid_interactions", "api/pypath.inputs.biomart", "api/pypath.inputs.biomart.biomart_homology", "api/pypath.inputs.biomart.biomart_microarray", "api/pypath.inputs.biomart.biomart_microarray_types", "api/pypath.inputs.biomart.biomart_microarrays", "api/pypath.inputs.biomart.biomart_query", "api/pypath.inputs.biomodels", "api/pypath.inputs.biomodels.download_single_model", "api/pypath.inputs.biomodels.get_all_models", "api/pypath.inputs.biomodels.get_biomodels", "api/pypath.inputs.biomodels.get_biomodels_req", "api/pypath.inputs.biomodels.get_single_model", "api/pypath.inputs.ca1", "api/pypath.inputs.ca1.ca1_interactions", "api/pypath.inputs.cancercellmap", "api/pypath.inputs.cancercellmap.ccmap_interactions", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.chembl", "api/pypath.inputs.chembl.chembl_activities", "api/pypath.inputs.chembl.chembl_assays", "api/pypath.inputs.chembl.chembl_documents", "api/pypath.inputs.chembl.chembl_drug_indications", "api/pypath.inputs.chembl.chembl_mechanisms", "api/pypath.inputs.chembl.chembl_molecules", "api/pypath.inputs.chembl.chembl_targets", "api/pypath.inputs.clinvar", "api/pypath.inputs.clinvar.clinvar_citations", "api/pypath.inputs.clinvar.clinvar_raw", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.compath", "api/pypath.inputs.compath.compath_mappings", "api/pypath.inputs.cpdb", "api/pypath.inputs.cpdb.cpdb_interactions", "api/pypath.inputs.cpdb.cpdb_interactions_ltp", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ctdbase", "api/pypath.inputs.ctdbase.ctdbase_relations", "api/pypath.inputs.ctdbase.ctdbase_vocabulary", "api/pypath.inputs.ddinter", "api/pypath.inputs.ddinter.ddinter_drug_interactions", "api/pypath.inputs.ddinter.ddinter_identifiers", "api/pypath.inputs.ddinter.ddinter_interactions", "api/pypath.inputs.ddinter.ddinter_mappings", "api/pypath.inputs.ddinter.ddinter_n_drugs", "api/pypath.inputs.deathdomain", "api/pypath.inputs.deathdomain.deathdomain_interactions", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued", "api/pypath.inputs.dip", "api/pypath.inputs.dip.dip_interactions", "api/pypath.inputs.dip.dip_login", "api/pypath.inputs.diseases", "api/pypath.inputs.diseases.diseases_general", "api/pypath.inputs.diseases.experiments_filtered", "api/pypath.inputs.diseases.experiments_full", "api/pypath.inputs.diseases.knowledge_filtered", "api/pypath.inputs.diseases.knowledge_full", "api/pypath.inputs.diseases.textmining_filtered", "api/pypath.inputs.diseases.textmining_full", "api/pypath.inputs.drugbank", "api/pypath.inputs.drugbank.DrugbankFull", "api/pypath.inputs.drugbank.drugbank_annotations", "api/pypath.inputs.drugbank.drugbank_drugs", "api/pypath.inputs.drugbank.drugbank_interactions", "api/pypath.inputs.drugbank.drugbank_mapping", "api/pypath.inputs.drugbank.drugbank_raw_interactions", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.elm", "api/pypath.inputs.elm.elm_classes", "api/pypath.inputs.elm.elm_domains", "api/pypath.inputs.elm.elm_instances", "api/pypath.inputs.elm.elm_interactions", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.encode", "api/pypath.inputs.encode.encode_tf_mirna_interactions", "api/pypath.inputs.ensembl", "api/pypath.inputs.ensembl.ensembl_organisms", "api/pypath.inputs.eutils", "api/pypath.inputs.eutils.esummary", "api/pypath.inputs.expasy", "api/pypath.inputs.expasy.expasy_enzyme_classes", "api/pypath.inputs.expasy.expasy_enzymes", "api/pypath.inputs.genecards", "api/pypath.inputs.genecards.genecards_datasheet", "api/pypath.inputs.genecards.genecards_soup", "api/pypath.inputs.genecards.genecards_summaries", "api/pypath.inputs.get_method", "api/pypath.inputs.graphviz", "api/pypath.inputs.graphviz.graphviz_attrs", "api/pypath.inputs.hprd", "api/pypath.inputs.hprd.get_hprd", "api/pypath.inputs.hprd.hprd_enzyme_substrate", "api/pypath.inputs.hprd.hprd_interactions", "api/pypath.inputs.hprd.hprd_interactions_htp", "api/pypath.inputs.htri", "api/pypath.inputs.htri.htri_interactions", "api/pypath.inputs.humsavar", "api/pypath.inputs.humsavar.uniprot_variants", "api/pypath.inputs.ielm", "api/pypath.inputs.ielm.get_ielm", "api/pypath.inputs.ielm.get_ielm_huge", "api/pypath.inputs.imweb", "api/pypath.inputs.imweb.get_imweb", "api/pypath.inputs.imweb.get_imweb_req", "api/pypath.inputs.innatedb", "api/pypath.inputs.innatedb.innatedb_interactions", "api/pypath.inputs.instruct", "api/pypath.inputs.instruct.get_instruct", "api/pypath.inputs.instruct.get_instruct_offsets", "api/pypath.inputs.intact", "api/pypath.inputs.intact.intact_interactions", "api/pypath.inputs.interpro", "api/pypath.inputs.interpro.interpro2go_annotations", "api/pypath.inputs.interpro.interpro_annotations", "api/pypath.inputs.interpro.interpro_entries", "api/pypath.inputs.interpro.interpro_xrefs", "api/pypath.inputs.ipi", "api/pypath.inputs.ipi.ipi_uniprot", "api/pypath.inputs.kegg_api", "api/pypath.inputs.kegg_api.disease_to_drug", "api/pypath.inputs.kegg_api.disease_to_gene", "api/pypath.inputs.kegg_api.disease_to_pathway", "api/pypath.inputs.kegg_api.drug_to_disease", "api/pypath.inputs.kegg_api.drug_to_drug", "api/pypath.inputs.kegg_api.drug_to_gene", "api/pypath.inputs.kegg_api.drug_to_pathway", "api/pypath.inputs.kegg_api.gene_to_disease", "api/pypath.inputs.kegg_api.gene_to_drug", "api/pypath.inputs.kegg_api.gene_to_pathway", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot", "api/pypath.inputs.kegg_api.pathway_to_disease", "api/pypath.inputs.kegg_api.pathway_to_drug", "api/pypath.inputs.kegg_api.pathway_to_gene", "api/pypath.inputs.kirouac2010", "api/pypath.inputs.kirouac2010.kirouac2010_interactions", "api/pypath.inputs.laudanna", "api/pypath.inputs.laudanna.laudanna_directions", "api/pypath.inputs.laudanna.laudanna_effects", "api/pypath.inputs.lincs", "api/pypath.inputs.lincs.lincs_compounds", "api/pypath.inputs.macrophage", "api/pypath.inputs.macrophage.macrophage_interactions", "api/pypath.inputs.main", "api/pypath.inputs.mimp", "api/pypath.inputs.mimp.get_kinase_class", "api/pypath.inputs.mimp.mimp_enzyme_substrate", "api/pypath.inputs.mimp.mimp_interactions", "api/pypath.inputs.mir2disease", "api/pypath.inputs.mir2disease.mir2disease_interactions", "api/pypath.inputs.mirdeathdb", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.mppi", "api/pypath.inputs.mppi.mppi_interactions", "api/pypath.inputs.ncrdeathdb", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "api/pypath.inputs.negatome", "api/pypath.inputs.negatome.negatome_interactions", "api/pypath.inputs.netbiol", "api/pypath.inputs.netbiol.arn_interactions", "api/pypath.inputs.netbiol.nrf2ome_interactions", "api/pypath.inputs.offsides", "api/pypath.inputs.offsides.offsides_side_effects", "api/pypath.inputs.ontology", "api/pypath.inputs.ontology.listof_ontologies", "api/pypath.inputs.ontology.ontology", "api/pypath.inputs.opentargets", "api/pypath.inputs.opentargets.opentargets_adverse_reactions", "api/pypath.inputs.opentargets.opentargets_baseline_expression", "api/pypath.inputs.opentargets.opentargets_direct_score", "api/pypath.inputs.opentargets.opentargets_general", "api/pypath.inputs.opentargets.opentargets_indirect_score", "api/pypath.inputs.pathophenodb", "api/pypath.inputs.pathophenodb.DiseasePathogen", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions", "api/pypath.inputs.pathwaycommons", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "api/pypath.inputs.pazar", "api/pypath.inputs.pazar.pazar_interactions", "api/pypath.inputs.pepcyber", "api/pypath.inputs.pepcyber.pepcyber_details", "api/pypath.inputs.pepcyber.pepcyber_interactions", "api/pypath.inputs.pharos", "api/pypath.inputs.pharos.pharos_diseases", "api/pypath.inputs.pharos.pharos_expression", "api/pypath.inputs.pharos.pharos_general", "api/pypath.inputs.pharos.pharos_gtex", "api/pypath.inputs.pharos.pharos_ligands", "api/pypath.inputs.pharos.pharos_orthologs", "api/pypath.inputs.pharos.pharos_targets", "api/pypath.inputs.pharos.pharos_xrefs", "api/pypath.inputs.phobius", "api/pypath.inputs.phobius.phobius_annotations", "api/pypath.inputs.phosphonetworks", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions", "api/pypath.inputs.phosphopoint", "api/pypath.inputs.phosphopoint.phosphopoint_directions", "api/pypath.inputs.phosphopoint.phosphopoint_interactions", "api/pypath.inputs.pro", "api/pypath.inputs.pro.get_pro", "api/pypath.inputs.pro.pro_mapping", "api/pypath.inputs.protmapper", "api/pypath.inputs.protmapper.get_protmapper", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate", "api/pypath.inputs.protmapper.protmapper_interactions", "api/pypath.inputs.pubchem", "api/pypath.inputs.pubchem.pubchem_mapping", "api/pypath.inputs.pubmed", "api/pypath.inputs.pubmed.get_pmid", "api/pypath.inputs.pubmed.get_pubmeds", "api/pypath.inputs.pubmed.only_pmids", "api/pypath.inputs.pubmed.open_pubmed", "api/pypath.inputs.pubmed.pmids_dict", "api/pypath.inputs.pubmed.pmids_list", "api/pypath.inputs.ramp", "api/pypath.inputs.ramp.ramp_id_types", "api/pypath.inputs.ramp.ramp_id_types_2", "api/pypath.inputs.ramp.ramp_list_tables", "api/pypath.inputs.ramp.ramp_mapping", "api/pypath.inputs.ramp.ramp_raw", "api/pypath.inputs.ramp.ramp_show_tables", "api/pypath.inputs.rdata", "api/pypath.inputs.reaction", "api/pypath.inputs.reaction.acsn_biopax", "api/pypath.inputs.reaction.acsn_interactions_2", "api/pypath.inputs.reaction.get_acsn_effects", "api/pypath.inputs.reaction.get_controls", "api/pypath.inputs.reaction.get_interactions", "api/pypath.inputs.reaction.get_reactions", "api/pypath.inputs.reaction.get_soup", "api/pypath.inputs.reaction.panther_biopax", "api/pypath.inputs.reaction.panther_interactions", "api/pypath.inputs.reaction.pid_biopax", "api/pypath.inputs.reaction.pid_interactions", "api/pypath.inputs.reaction.process_complex", "api/pypath.inputs.reaction.process_controls", "api/pypath.inputs.reaction.process_reactions", "api/pypath.inputs.reaction.reactions_biopax", "api/pypath.inputs.reaction.reactome_biopax", "api/pypath.inputs.reaction.reactome_bs", "api/pypath.inputs.reaction.reactome_interactions", "api/pypath.inputs.reaction.reactome_sbml", "api/pypath.inputs.reactome", "api/pypath.inputs.reactome.reactome_chebis", "api/pypath.inputs.reactome.reactome_pathway_relations", "api/pypath.inputs.reactome.reactome_pathways", "api/pypath.inputs.reactome.reactome_uniprots", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.inputs.sider", "api/pypath.inputs.sider.SiderDrug", "api/pypath.inputs.sider.SiderSideeffect", "api/pypath.inputs.sider.SiderSideeffectMeddra", "api/pypath.inputs.sider.SiderSideeffetFrequency", "api/pypath.inputs.sider.sider_drug_names", "api/pypath.inputs.sider.sider_meddra_side_effects", "api/pypath.inputs.sider.sider_side_effect_frequencies", "api/pypath.inputs.sider.sider_side_effects", "api/pypath.inputs.stitch", "api/pypath.inputs.stitch.stitch_actions_interactions", "api/pypath.inputs.stitch.stitch_links_interactions", "api/pypath.inputs.string", "api/pypath.inputs.string.string_effects", "api/pypath.inputs.string.string_links_interactions", "api/pypath.inputs.string.string_physical_interactions", "api/pypath.inputs.string.string_species", "api/pypath.inputs.swisslipids", "api/pypath.inputs.switches_elm", "api/pypath.inputs.switches_elm.get_switches_elm", "api/pypath.inputs.transmir", "api/pypath.inputs.transmir.transmir_interactions", "api/pypath.inputs.trip", "api/pypath.inputs.trip.take_a_trip", "api/pypath.inputs.trip.trip_find_uniprot", "api/pypath.inputs.trip.trip_get_uniprot", "api/pypath.inputs.trip.trip_interactions", "api/pypath.inputs.trip.trip_process", "api/pypath.inputs.trip.trip_process_table", "api/pypath.inputs.twosides", "api/pypath.inputs.twosides.twosides_interactions", "api/pypath.inputs.unichem", "api/pypath.inputs.unichem.info", "api/pypath.inputs.unichem.unichem_info", "api/pypath.inputs.unichem.unichem_mapping", "api/pypath.inputs.unichem.unichem_sources", "api/pypath.inputs.uniprot", "api/pypath.inputs.uniprot.Taxon", "api/pypath.inputs.uniprot.UniprotQuery", "api/pypath.inputs.uniprot.UniprotRecordHistory", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol", "api/pypath.inputs.uniprot.get_uniprot_sec", "api/pypath.inputs.uniprot.protein_datasheet", "api/pypath.inputs.uniprot.query_builder", "api/pypath.inputs.uniprot.swissprot_deleted", "api/pypath.inputs.uniprot.trembl_deleted", "api/pypath.inputs.uniprot.uniprot_data", "api/pypath.inputs.uniprot.uniprot_deleted", "api/pypath.inputs.uniprot.uniprot_families", "api/pypath.inputs.uniprot.uniprot_history", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet", "api/pypath.inputs.uniprot.uniprot_keywords", "api/pypath.inputs.uniprot.uniprot_locations", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "api/pypath.inputs.uniprot.uniprot_preprocess", "api/pypath.inputs.uniprot.uniprot_query", "api/pypath.inputs.uniprot.uniprot_recent_version", "api/pypath.inputs.uniprot.uniprot_taxonomy", "api/pypath.inputs.uniprot.uniprot_tissues", "api/pypath.inputs.uniprot.uniprot_topology", "api/pypath.inputs.uniprot.valid_uniprot", "api/pypath.inputs.uniprot_db", "api/pypath.inputs.uniprot_db.all_swissprots", "api/pypath.inputs.uniprot_db.all_trembls", "api/pypath.inputs.uniprot_db.all_uniprots", "api/pypath.inputs.uniprot_db.get_db", "api/pypath.inputs.uniprot_db.init_db", "api/pypath.inputs.uniprot_db.is_swissprot", "api/pypath.inputs.uniprot_db.is_trembl", "api/pypath.inputs.uniprot_db.is_uniprot", "api/pypath.inputs.uniprot_idmapping", "api/pypath.inputs.uniprot_idmapping.idtypes", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.HmdbMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.RampMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.refs", "api/pypath.internals.refs.Reference", "api/pypath.internals.refs.get_pubmed_data", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkDataset", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.data_formats", "api/pypath.resources.data_formats.activity_flow", "api/pypath.resources.data_formats.enzyme_substrate", "api/pypath.resources.data_formats.interaction", "api/pypath.resources.data_formats.interaction_htp", "api/pypath.resources.data_formats.pathway_bad", "api/pypath.resources.data_formats.reaction_pc", "api/pypath.resources.data_formats.transcription_deprecated", "api/pypath.resources.data_formats.transcription_onebyone", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.resources.network", "api/pypath.resources.urls", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.cache_path", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.settings", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.abs.rst", "api/pypath.inputs.abs.abs_interactions.rst", "api/pypath.inputs.acsn.rst", "api/pypath.inputs.acsn.acsn_interactions.rst", "api/pypath.inputs.acsn.acsn_interactions_sif.rst", "api/pypath.inputs.adrecs.rst", "api/pypath.inputs.adrecs.AdrecsAdr.rst", "api/pypath.inputs.adrecs.AdrecsChildParent.rst", "api/pypath.inputs.adrecs.AdrecsDrug.rst", "api/pypath.inputs.adrecs.AdrecsDrugAdr.rst", "api/pypath.inputs.adrecs.AdrecsTerm.rst", "api/pypath.inputs.adrecs.adrecs_adr_ontology.rst", "api/pypath.inputs.adrecs.adrecs_drug_adr.rst", "api/pypath.inputs.adrecs.adrecs_drug_identifiers.rst", "api/pypath.inputs.adrecs.adrecs_hierarchy.rst", "api/pypath.inputs.biogrid.rst", "api/pypath.inputs.biogrid.biogrid_all_interactions.rst", "api/pypath.inputs.biogrid.biogrid_interactions.rst", "api/pypath.inputs.biomart.rst", "api/pypath.inputs.biomart.biomart_homology.rst", "api/pypath.inputs.biomart.biomart_microarray.rst", "api/pypath.inputs.biomart.biomart_microarray_types.rst", "api/pypath.inputs.biomart.biomart_microarrays.rst", "api/pypath.inputs.biomart.biomart_query.rst", "api/pypath.inputs.biomodels.rst", "api/pypath.inputs.biomodels.download_single_model.rst", "api/pypath.inputs.biomodels.get_all_models.rst", "api/pypath.inputs.biomodels.get_biomodels.rst", "api/pypath.inputs.biomodels.get_biomodels_req.rst", "api/pypath.inputs.biomodels.get_single_model.rst", "api/pypath.inputs.ca1.rst", "api/pypath.inputs.ca1.ca1_interactions.rst", "api/pypath.inputs.cancercellmap.rst", "api/pypath.inputs.cancercellmap.ccmap_interactions.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.chembl.rst", "api/pypath.inputs.chembl.chembl_activities.rst", "api/pypath.inputs.chembl.chembl_assays.rst", "api/pypath.inputs.chembl.chembl_documents.rst", "api/pypath.inputs.chembl.chembl_drug_indications.rst", "api/pypath.inputs.chembl.chembl_mechanisms.rst", "api/pypath.inputs.chembl.chembl_molecules.rst", "api/pypath.inputs.chembl.chembl_targets.rst", "api/pypath.inputs.clinvar.rst", "api/pypath.inputs.clinvar.clinvar_citations.rst", "api/pypath.inputs.clinvar.clinvar_raw.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.compath.rst", "api/pypath.inputs.compath.compath_mappings.rst", "api/pypath.inputs.cpdb.rst", "api/pypath.inputs.cpdb.cpdb_interactions.rst", "api/pypath.inputs.cpdb.cpdb_interactions_ltp.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ctdbase.rst", "api/pypath.inputs.ctdbase.ctdbase_relations.rst", "api/pypath.inputs.ctdbase.ctdbase_vocabulary.rst", "api/pypath.inputs.ddinter.rst", "api/pypath.inputs.ddinter.ddinter_drug_interactions.rst", "api/pypath.inputs.ddinter.ddinter_identifiers.rst", "api/pypath.inputs.ddinter.ddinter_interactions.rst", "api/pypath.inputs.ddinter.ddinter_mappings.rst", "api/pypath.inputs.ddinter.ddinter_n_drugs.rst", "api/pypath.inputs.deathdomain.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions.rst", "api/pypath.inputs.deathdomain.deathdomain_interactions_rescued.rst", "api/pypath.inputs.dip.rst", "api/pypath.inputs.dip.dip_interactions.rst", "api/pypath.inputs.dip.dip_login.rst", "api/pypath.inputs.diseases.rst", "api/pypath.inputs.diseases.diseases_general.rst", "api/pypath.inputs.diseases.experiments_filtered.rst", "api/pypath.inputs.diseases.experiments_full.rst", "api/pypath.inputs.diseases.knowledge_filtered.rst", "api/pypath.inputs.diseases.knowledge_full.rst", "api/pypath.inputs.diseases.textmining_filtered.rst", "api/pypath.inputs.diseases.textmining_full.rst", "api/pypath.inputs.drugbank.rst", "api/pypath.inputs.drugbank.DrugbankFull.rst", "api/pypath.inputs.drugbank.drugbank_annotations.rst", "api/pypath.inputs.drugbank.drugbank_drugs.rst", "api/pypath.inputs.drugbank.drugbank_interactions.rst", "api/pypath.inputs.drugbank.drugbank_mapping.rst", "api/pypath.inputs.drugbank.drugbank_raw_interactions.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.elm.rst", "api/pypath.inputs.elm.elm_classes.rst", "api/pypath.inputs.elm.elm_domains.rst", "api/pypath.inputs.elm.elm_instances.rst", "api/pypath.inputs.elm.elm_interactions.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.encode.rst", "api/pypath.inputs.encode.encode_tf_mirna_interactions.rst", "api/pypath.inputs.ensembl.rst", "api/pypath.inputs.ensembl.ensembl_organisms.rst", "api/pypath.inputs.eutils.rst", "api/pypath.inputs.eutils.esummary.rst", "api/pypath.inputs.expasy.rst", "api/pypath.inputs.expasy.expasy_enzyme_classes.rst", "api/pypath.inputs.expasy.expasy_enzymes.rst", "api/pypath.inputs.genecards.rst", "api/pypath.inputs.genecards.genecards_datasheet.rst", "api/pypath.inputs.genecards.genecards_soup.rst", "api/pypath.inputs.genecards.genecards_summaries.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.graphviz.rst", "api/pypath.inputs.graphviz.graphviz_attrs.rst", "api/pypath.inputs.hprd.rst", "api/pypath.inputs.hprd.get_hprd.rst", "api/pypath.inputs.hprd.hprd_enzyme_substrate.rst", "api/pypath.inputs.hprd.hprd_interactions.rst", "api/pypath.inputs.hprd.hprd_interactions_htp.rst", "api/pypath.inputs.htri.rst", "api/pypath.inputs.htri.htri_interactions.rst", "api/pypath.inputs.humsavar.rst", "api/pypath.inputs.humsavar.uniprot_variants.rst", "api/pypath.inputs.ielm.rst", "api/pypath.inputs.ielm.get_ielm.rst", "api/pypath.inputs.ielm.get_ielm_huge.rst", "api/pypath.inputs.imweb.rst", "api/pypath.inputs.imweb.get_imweb.rst", "api/pypath.inputs.imweb.get_imweb_req.rst", "api/pypath.inputs.innatedb.rst", "api/pypath.inputs.innatedb.innatedb_interactions.rst", "api/pypath.inputs.instruct.rst", "api/pypath.inputs.instruct.get_instruct.rst", "api/pypath.inputs.instruct.get_instruct_offsets.rst", "api/pypath.inputs.intact.rst", "api/pypath.inputs.intact.intact_interactions.rst", "api/pypath.inputs.interpro.rst", "api/pypath.inputs.interpro.interpro2go_annotations.rst", "api/pypath.inputs.interpro.interpro_annotations.rst", "api/pypath.inputs.interpro.interpro_entries.rst", "api/pypath.inputs.interpro.interpro_xrefs.rst", "api/pypath.inputs.ipi.rst", "api/pypath.inputs.ipi.ipi_uniprot.rst", "api/pypath.inputs.kegg_api.rst", "api/pypath.inputs.kegg_api.disease_to_drug.rst", "api/pypath.inputs.kegg_api.disease_to_gene.rst", "api/pypath.inputs.kegg_api.disease_to_pathway.rst", "api/pypath.inputs.kegg_api.drug_to_disease.rst", "api/pypath.inputs.kegg_api.drug_to_drug.rst", "api/pypath.inputs.kegg_api.drug_to_gene.rst", "api/pypath.inputs.kegg_api.drug_to_pathway.rst", "api/pypath.inputs.kegg_api.gene_to_disease.rst", "api/pypath.inputs.kegg_api.gene_to_drug.rst", "api/pypath.inputs.kegg_api.gene_to_pathway.rst", "api/pypath.inputs.kegg_api.kegg_drug_to_chebi.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid.rst", "api/pypath.inputs.kegg_api.kegg_gene_to_uniprot.rst", "api/pypath.inputs.kegg_api.pathway_to_disease.rst", "api/pypath.inputs.kegg_api.pathway_to_drug.rst", "api/pypath.inputs.kegg_api.pathway_to_gene.rst", "api/pypath.inputs.kirouac2010.rst", "api/pypath.inputs.kirouac2010.kirouac2010_interactions.rst", "api/pypath.inputs.laudanna.rst", "api/pypath.inputs.laudanna.laudanna_directions.rst", "api/pypath.inputs.laudanna.laudanna_effects.rst", "api/pypath.inputs.lincs.rst", "api/pypath.inputs.lincs.lincs_compounds.rst", "api/pypath.inputs.macrophage.rst", "api/pypath.inputs.macrophage.macrophage_interactions.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mimp.rst", "api/pypath.inputs.mimp.get_kinase_class.rst", "api/pypath.inputs.mimp.mimp_enzyme_substrate.rst", "api/pypath.inputs.mimp.mimp_interactions.rst", "api/pypath.inputs.mir2disease.rst", "api/pypath.inputs.mir2disease.mir2disease_interactions.rst", "api/pypath.inputs.mirdeathdb.rst", "api/pypath.inputs.mirdeathdb.mirdeathdb_interactions.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.mppi.rst", "api/pypath.inputs.mppi.mppi_interactions.rst", "api/pypath.inputs.ncrdeathdb.rst", "api/pypath.inputs.ncrdeathdb.ncrdeathdb_interactions.rst", "api/pypath.inputs.negatome.rst", "api/pypath.inputs.negatome.negatome_interactions.rst", "api/pypath.inputs.netbiol.rst", "api/pypath.inputs.netbiol.arn_interactions.rst", "api/pypath.inputs.netbiol.nrf2ome_interactions.rst", "api/pypath.inputs.offsides.rst", "api/pypath.inputs.offsides.offsides_side_effects.rst", "api/pypath.inputs.ontology.rst", "api/pypath.inputs.ontology.listof_ontologies.rst", "api/pypath.inputs.ontology.ontology.rst", "api/pypath.inputs.opentargets.rst", "api/pypath.inputs.opentargets.opentargets_adverse_reactions.rst", "api/pypath.inputs.opentargets.opentargets_baseline_expression.rst", "api/pypath.inputs.opentargets.opentargets_direct_score.rst", "api/pypath.inputs.opentargets.opentargets_general.rst", "api/pypath.inputs.opentargets.opentargets_indirect_score.rst", "api/pypath.inputs.pathophenodb.rst", "api/pypath.inputs.pathophenodb.DiseasePathogen.rst", "api/pypath.inputs.pathophenodb.disease_pathogen_interactions.rst", "api/pypath.inputs.pathwaycommons.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsInteraction.rst", "api/pypath.inputs.pathwaycommons.PathwayCommonsResource.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions.rst", "api/pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions.rst", "api/pypath.inputs.pazar.rst", "api/pypath.inputs.pazar.pazar_interactions.rst", "api/pypath.inputs.pepcyber.rst", "api/pypath.inputs.pepcyber.pepcyber_details.rst", "api/pypath.inputs.pepcyber.pepcyber_interactions.rst", "api/pypath.inputs.pharos.rst", "api/pypath.inputs.pharos.pharos_diseases.rst", "api/pypath.inputs.pharos.pharos_expression.rst", "api/pypath.inputs.pharos.pharos_general.rst", "api/pypath.inputs.pharos.pharos_gtex.rst", "api/pypath.inputs.pharos.pharos_ligands.rst", "api/pypath.inputs.pharos.pharos_orthologs.rst", "api/pypath.inputs.pharos.pharos_targets.rst", "api/pypath.inputs.pharos.pharos_xrefs.rst", "api/pypath.inputs.phobius.rst", "api/pypath.inputs.phobius.phobius_annotations.rst", "api/pypath.inputs.phosphonetworks.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate.rst", "api/pypath.inputs.phosphonetworks.phosphonetworks_interactions.rst", "api/pypath.inputs.phosphopoint.rst", "api/pypath.inputs.phosphopoint.phosphopoint_directions.rst", "api/pypath.inputs.phosphopoint.phosphopoint_interactions.rst", "api/pypath.inputs.pro.rst", "api/pypath.inputs.pro.get_pro.rst", "api/pypath.inputs.pro.pro_mapping.rst", "api/pypath.inputs.protmapper.rst", "api/pypath.inputs.protmapper.get_protmapper.rst", "api/pypath.inputs.protmapper.protmapper_enzyme_substrate.rst", "api/pypath.inputs.protmapper.protmapper_interactions.rst", "api/pypath.inputs.pubchem.rst", "api/pypath.inputs.pubchem.pubchem_mapping.rst", "api/pypath.inputs.pubmed.rst", "api/pypath.inputs.pubmed.get_pmid.rst", "api/pypath.inputs.pubmed.get_pubmeds.rst", "api/pypath.inputs.pubmed.only_pmids.rst", "api/pypath.inputs.pubmed.open_pubmed.rst", "api/pypath.inputs.pubmed.pmids_dict.rst", "api/pypath.inputs.pubmed.pmids_list.rst", "api/pypath.inputs.ramp.rst", "api/pypath.inputs.ramp.ramp_id_types.rst", "api/pypath.inputs.ramp.ramp_id_types_2.rst", "api/pypath.inputs.ramp.ramp_list_tables.rst", "api/pypath.inputs.ramp.ramp_mapping.rst", "api/pypath.inputs.ramp.ramp_raw.rst", "api/pypath.inputs.ramp.ramp_show_tables.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.reaction.rst", "api/pypath.inputs.reaction.acsn_biopax.rst", "api/pypath.inputs.reaction.acsn_interactions_2.rst", "api/pypath.inputs.reaction.get_acsn_effects.rst", "api/pypath.inputs.reaction.get_controls.rst", "api/pypath.inputs.reaction.get_interactions.rst", "api/pypath.inputs.reaction.get_reactions.rst", "api/pypath.inputs.reaction.get_soup.rst", "api/pypath.inputs.reaction.panther_biopax.rst", "api/pypath.inputs.reaction.panther_interactions.rst", "api/pypath.inputs.reaction.pid_biopax.rst", "api/pypath.inputs.reaction.pid_interactions.rst", "api/pypath.inputs.reaction.process_complex.rst", "api/pypath.inputs.reaction.process_controls.rst", "api/pypath.inputs.reaction.process_reactions.rst", "api/pypath.inputs.reaction.reactions_biopax.rst", "api/pypath.inputs.reaction.reactome_biopax.rst", "api/pypath.inputs.reaction.reactome_bs.rst", "api/pypath.inputs.reaction.reactome_interactions.rst", "api/pypath.inputs.reaction.reactome_sbml.rst", "api/pypath.inputs.reactome.rst", "api/pypath.inputs.reactome.reactome_chebis.rst", "api/pypath.inputs.reactome.reactome_pathway_relations.rst", "api/pypath.inputs.reactome.reactome_pathways.rst", "api/pypath.inputs.reactome.reactome_uniprots.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.inputs.sider.rst", "api/pypath.inputs.sider.SiderDrug.rst", "api/pypath.inputs.sider.SiderSideeffect.rst", "api/pypath.inputs.sider.SiderSideeffectMeddra.rst", "api/pypath.inputs.sider.SiderSideeffetFrequency.rst", "api/pypath.inputs.sider.sider_drug_names.rst", "api/pypath.inputs.sider.sider_meddra_side_effects.rst", "api/pypath.inputs.sider.sider_side_effect_frequencies.rst", "api/pypath.inputs.sider.sider_side_effects.rst", "api/pypath.inputs.stitch.rst", "api/pypath.inputs.stitch.stitch_actions_interactions.rst", "api/pypath.inputs.stitch.stitch_links_interactions.rst", "api/pypath.inputs.string.rst", "api/pypath.inputs.string.string_effects.rst", "api/pypath.inputs.string.string_links_interactions.rst", "api/pypath.inputs.string.string_physical_interactions.rst", "api/pypath.inputs.string.string_species.rst", "api/pypath.inputs.swisslipids.rst", "api/pypath.inputs.switches_elm.rst", "api/pypath.inputs.switches_elm.get_switches_elm.rst", "api/pypath.inputs.transmir.rst", "api/pypath.inputs.transmir.transmir_interactions.rst", "api/pypath.inputs.trip.rst", "api/pypath.inputs.trip.take_a_trip.rst", "api/pypath.inputs.trip.trip_find_uniprot.rst", "api/pypath.inputs.trip.trip_get_uniprot.rst", "api/pypath.inputs.trip.trip_interactions.rst", "api/pypath.inputs.trip.trip_process.rst", "api/pypath.inputs.trip.trip_process_table.rst", "api/pypath.inputs.twosides.rst", "api/pypath.inputs.twosides.twosides_interactions.rst", "api/pypath.inputs.unichem.rst", "api/pypath.inputs.unichem.info.rst", "api/pypath.inputs.unichem.unichem_info.rst", "api/pypath.inputs.unichem.unichem_mapping.rst", "api/pypath.inputs.unichem.unichem_sources.rst", "api/pypath.inputs.uniprot.rst", "api/pypath.inputs.uniprot.Taxon.rst", "api/pypath.inputs.uniprot.UniprotQuery.rst", "api/pypath.inputs.uniprot.UniprotRecordHistory.rst", "api/pypath.inputs.uniprot.deleted_uniprot_genesymbol.rst", "api/pypath.inputs.uniprot.get_uniprot_sec.rst", "api/pypath.inputs.uniprot.protein_datasheet.rst", "api/pypath.inputs.uniprot.query_builder.rst", "api/pypath.inputs.uniprot.swissprot_deleted.rst", "api/pypath.inputs.uniprot.trembl_deleted.rst", "api/pypath.inputs.uniprot.uniprot_data.rst", "api/pypath.inputs.uniprot.uniprot_deleted.rst", "api/pypath.inputs.uniprot.uniprot_families.rst", "api/pypath.inputs.uniprot.uniprot_history.rst", "api/pypath.inputs.uniprot.uniprot_history_recent_datasheet.rst", "api/pypath.inputs.uniprot.uniprot_keywords.rst", "api/pypath.inputs.uniprot.uniprot_locations.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids.rst", "api/pypath.inputs.uniprot.uniprot_ncbi_taxids_2.rst", "api/pypath.inputs.uniprot.uniprot_preprocess.rst", "api/pypath.inputs.uniprot.uniprot_query.rst", "api/pypath.inputs.uniprot.uniprot_recent_version.rst", "api/pypath.inputs.uniprot.uniprot_taxonomy.rst", "api/pypath.inputs.uniprot.uniprot_tissues.rst", "api/pypath.inputs.uniprot.uniprot_topology.rst", "api/pypath.inputs.uniprot.valid_uniprot.rst", "api/pypath.inputs.uniprot_db.rst", "api/pypath.inputs.uniprot_db.all_swissprots.rst", "api/pypath.inputs.uniprot_db.all_trembls.rst", "api/pypath.inputs.uniprot_db.all_uniprots.rst", "api/pypath.inputs.uniprot_db.get_db.rst", "api/pypath.inputs.uniprot_db.init_db.rst", "api/pypath.inputs.uniprot_db.is_swissprot.rst", "api/pypath.inputs.uniprot_db.is_trembl.rst", "api/pypath.inputs.uniprot_db.is_uniprot.rst", "api/pypath.inputs.uniprot_idmapping.rst", "api/pypath.inputs.uniprot_idmapping.idtypes.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.HmdbMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.RampMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.refs.rst", "api/pypath.internals.refs.Reference.rst", "api/pypath.internals.refs.get_pubmed_data.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkDataset.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.data_formats.rst", "api/pypath.resources.data_formats.activity_flow.rst", "api/pypath.resources.data_formats.enzyme_substrate.rst", "api/pypath.resources.data_formats.interaction.rst", "api/pypath.resources.data_formats.interaction_htp.rst", "api/pypath.resources.data_formats.pathway_bad.rst", "api/pypath.resources.data_formats.reaction_pc.rst", "api/pypath.resources.data_formats.transcription_deprecated.rst", "api/pypath.resources.data_formats.transcription_onebyone.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.resources.network.rst", "api/pypath.resources.urls.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.cache_path.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.settings.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.abs", "pypath.inputs.abs.abs_interactions", "pypath.inputs.acsn", "pypath.inputs.acsn.acsn_interactions", "pypath.inputs.acsn.acsn_interactions_sif", "pypath.inputs.adrecs", "pypath.inputs.adrecs.AdrecsAdr", "pypath.inputs.adrecs.AdrecsChildParent", "pypath.inputs.adrecs.AdrecsDrug", "pypath.inputs.adrecs.AdrecsDrugAdr", "pypath.inputs.adrecs.AdrecsTerm", "pypath.inputs.adrecs.adrecs_adr_ontology", "pypath.inputs.adrecs.adrecs_drug_adr", "pypath.inputs.adrecs.adrecs_drug_identifiers", "pypath.inputs.adrecs.adrecs_hierarchy", "pypath.inputs.biogrid", "pypath.inputs.biogrid.biogrid_all_interactions", "pypath.inputs.biogrid.biogrid_interactions", "pypath.inputs.biomart", "pypath.inputs.biomart.biomart_homology", "pypath.inputs.biomart.biomart_microarray", "pypath.inputs.biomart.biomart_microarray_types", "pypath.inputs.biomart.biomart_microarrays", "pypath.inputs.biomart.biomart_query", "pypath.inputs.biomodels", "pypath.inputs.biomodels.download_single_model", "pypath.inputs.biomodels.get_all_models", "pypath.inputs.biomodels.get_biomodels", "pypath.inputs.biomodels.get_biomodels_req", "pypath.inputs.biomodels.get_single_model", "pypath.inputs.ca1", "pypath.inputs.ca1.ca1_interactions", "pypath.inputs.cancercellmap", "pypath.inputs.cancercellmap.ccmap_interactions", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.chembl", "pypath.inputs.chembl.chembl_activities", "pypath.inputs.chembl.chembl_assays", "pypath.inputs.chembl.chembl_documents", "pypath.inputs.chembl.chembl_drug_indications", "pypath.inputs.chembl.chembl_mechanisms", "pypath.inputs.chembl.chembl_molecules", "pypath.inputs.chembl.chembl_targets", "pypath.inputs.clinvar", "pypath.inputs.clinvar.clinvar_citations", "pypath.inputs.clinvar.clinvar_raw", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.compath", "pypath.inputs.compath.compath_mappings", "pypath.inputs.cpdb", "pypath.inputs.cpdb.cpdb_interactions", "pypath.inputs.cpdb.cpdb_interactions_ltp", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ctdbase", "pypath.inputs.ctdbase.ctdbase_relations", "pypath.inputs.ctdbase.ctdbase_vocabulary", "pypath.inputs.ddinter", "pypath.inputs.ddinter.ddinter_drug_interactions", "pypath.inputs.ddinter.ddinter_identifiers", "pypath.inputs.ddinter.ddinter_interactions", "pypath.inputs.ddinter.ddinter_mappings", "pypath.inputs.ddinter.ddinter_n_drugs", "pypath.inputs.deathdomain", "pypath.inputs.deathdomain.deathdomain_interactions", "pypath.inputs.deathdomain.deathdomain_interactions_rescued", "pypath.inputs.dip", "pypath.inputs.dip.dip_interactions", "pypath.inputs.dip.dip_login", "pypath.inputs.diseases", "pypath.inputs.diseases.diseases_general", "pypath.inputs.diseases.experiments_filtered", "pypath.inputs.diseases.experiments_full", "pypath.inputs.diseases.knowledge_filtered", "pypath.inputs.diseases.knowledge_full", "pypath.inputs.diseases.textmining_filtered", "pypath.inputs.diseases.textmining_full", "pypath.inputs.drugbank", "pypath.inputs.drugbank.DrugbankFull", "pypath.inputs.drugbank.drugbank_annotations", "pypath.inputs.drugbank.drugbank_drugs", "pypath.inputs.drugbank.drugbank_interactions", "pypath.inputs.drugbank.drugbank_mapping", "pypath.inputs.drugbank.drugbank_raw_interactions", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.elm", "pypath.inputs.elm.elm_classes", "pypath.inputs.elm.elm_domains", "pypath.inputs.elm.elm_instances", "pypath.inputs.elm.elm_interactions", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.encode", "pypath.inputs.encode.encode_tf_mirna_interactions", "pypath.inputs.ensembl", "pypath.inputs.ensembl.ensembl_organisms", "pypath.inputs.eutils", "pypath.inputs.eutils.esummary", "pypath.inputs.expasy", "pypath.inputs.expasy.expasy_enzyme_classes", "pypath.inputs.expasy.expasy_enzymes", "pypath.inputs.genecards", "pypath.inputs.genecards.genecards_datasheet", "pypath.inputs.genecards.genecards_soup", "pypath.inputs.genecards.genecards_summaries", "pypath.inputs.get_method", "pypath.inputs.graphviz", "pypath.inputs.graphviz.graphviz_attrs", "pypath.inputs.hprd", "pypath.inputs.hprd.get_hprd", "pypath.inputs.hprd.hprd_enzyme_substrate", "pypath.inputs.hprd.hprd_interactions", "pypath.inputs.hprd.hprd_interactions_htp", "pypath.inputs.htri", "pypath.inputs.htri.htri_interactions", "pypath.inputs.humsavar", "pypath.inputs.humsavar.uniprot_variants", "pypath.inputs.ielm", "pypath.inputs.ielm.get_ielm", "pypath.inputs.ielm.get_ielm_huge", "pypath.inputs.imweb", "pypath.inputs.imweb.get_imweb", "pypath.inputs.imweb.get_imweb_req", "pypath.inputs.innatedb", "pypath.inputs.innatedb.innatedb_interactions", "pypath.inputs.instruct", "pypath.inputs.instruct.get_instruct", "pypath.inputs.instruct.get_instruct_offsets", "pypath.inputs.intact", "pypath.inputs.intact.intact_interactions", "pypath.inputs.interpro", "pypath.inputs.interpro.interpro2go_annotations", "pypath.inputs.interpro.interpro_annotations", "pypath.inputs.interpro.interpro_entries", "pypath.inputs.interpro.interpro_xrefs", "pypath.inputs.ipi", "pypath.inputs.ipi.ipi_uniprot", "pypath.inputs.kegg_api", "pypath.inputs.kegg_api.disease_to_drug", "pypath.inputs.kegg_api.disease_to_gene", "pypath.inputs.kegg_api.disease_to_pathway", "pypath.inputs.kegg_api.drug_to_disease", "pypath.inputs.kegg_api.drug_to_drug", "pypath.inputs.kegg_api.drug_to_gene", "pypath.inputs.kegg_api.drug_to_pathway", "pypath.inputs.kegg_api.gene_to_disease", "pypath.inputs.kegg_api.gene_to_drug", "pypath.inputs.kegg_api.gene_to_pathway", "pypath.inputs.kegg_api.kegg_drug_to_chebi", "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid", "pypath.inputs.kegg_api.kegg_gene_to_uniprot", "pypath.inputs.kegg_api.pathway_to_disease", "pypath.inputs.kegg_api.pathway_to_drug", "pypath.inputs.kegg_api.pathway_to_gene", "pypath.inputs.kirouac2010", "pypath.inputs.kirouac2010.kirouac2010_interactions", "pypath.inputs.laudanna", "pypath.inputs.laudanna.laudanna_directions", "pypath.inputs.laudanna.laudanna_effects", "pypath.inputs.lincs", "pypath.inputs.lincs.lincs_compounds", "pypath.inputs.macrophage", "pypath.inputs.macrophage.macrophage_interactions", "pypath.inputs.main", "pypath.inputs.mimp", "pypath.inputs.mimp.get_kinase_class", "pypath.inputs.mimp.mimp_enzyme_substrate", "pypath.inputs.mimp.mimp_interactions", "pypath.inputs.mir2disease", "pypath.inputs.mir2disease.mir2disease_interactions", "pypath.inputs.mirdeathdb", "pypath.inputs.mirdeathdb.mirdeathdb_interactions", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.mppi", "pypath.inputs.mppi.mppi_interactions", "pypath.inputs.ncrdeathdb", "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions", "pypath.inputs.negatome", "pypath.inputs.negatome.negatome_interactions", "pypath.inputs.netbiol", "pypath.inputs.netbiol.arn_interactions", "pypath.inputs.netbiol.nrf2ome_interactions", "pypath.inputs.offsides", "pypath.inputs.offsides.offsides_side_effects", "pypath.inputs.ontology", "pypath.inputs.ontology.listof_ontologies", "pypath.inputs.ontology.ontology", "pypath.inputs.opentargets", "pypath.inputs.opentargets.opentargets_adverse_reactions", "pypath.inputs.opentargets.opentargets_baseline_expression", "pypath.inputs.opentargets.opentargets_direct_score", "pypath.inputs.opentargets.opentargets_general", "pypath.inputs.opentargets.opentargets_indirect_score", "pypath.inputs.pathophenodb", "pypath.inputs.pathophenodb.DiseasePathogen", "pypath.inputs.pathophenodb.disease_pathogen_interactions", "pypath.inputs.pathwaycommons", "pypath.inputs.pathwaycommons.PathwayCommonsInteraction", "pypath.inputs.pathwaycommons.PathwayCommonsResource", "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions", "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions", "pypath.inputs.pazar", "pypath.inputs.pazar.pazar_interactions", "pypath.inputs.pepcyber", "pypath.inputs.pepcyber.pepcyber_details", "pypath.inputs.pepcyber.pepcyber_interactions", "pypath.inputs.pharos", "pypath.inputs.pharos.pharos_diseases", "pypath.inputs.pharos.pharos_expression", "pypath.inputs.pharos.pharos_general", "pypath.inputs.pharos.pharos_gtex", "pypath.inputs.pharos.pharos_ligands", "pypath.inputs.pharos.pharos_orthologs", "pypath.inputs.pharos.pharos_targets", "pypath.inputs.pharos.pharos_xrefs", "pypath.inputs.phobius", "pypath.inputs.phobius.phobius_annotations", "pypath.inputs.phosphonetworks", "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate", "pypath.inputs.phosphonetworks.phosphonetworks_interactions", "pypath.inputs.phosphopoint", "pypath.inputs.phosphopoint.phosphopoint_directions", "pypath.inputs.phosphopoint.phosphopoint_interactions", "pypath.inputs.pro", "pypath.inputs.pro.get_pro", "pypath.inputs.pro.pro_mapping", "pypath.inputs.protmapper", "pypath.inputs.protmapper.get_protmapper", "pypath.inputs.protmapper.protmapper_enzyme_substrate", "pypath.inputs.protmapper.protmapper_interactions", "pypath.inputs.pubchem", "pypath.inputs.pubchem.pubchem_mapping", "pypath.inputs.pubmed", "pypath.inputs.pubmed.get_pmid", "pypath.inputs.pubmed.get_pubmeds", "pypath.inputs.pubmed.only_pmids", "pypath.inputs.pubmed.open_pubmed", "pypath.inputs.pubmed.pmids_dict", "pypath.inputs.pubmed.pmids_list", "pypath.inputs.ramp", "pypath.inputs.ramp.ramp_id_types", "pypath.inputs.ramp.ramp_id_types_2", "pypath.inputs.ramp.ramp_list_tables", "pypath.inputs.ramp.ramp_mapping", "pypath.inputs.ramp.ramp_raw", "pypath.inputs.ramp.ramp_show_tables", "pypath.inputs.rdata", "pypath.inputs.reaction", "pypath.inputs.reaction.acsn_biopax", "pypath.inputs.reaction.acsn_interactions_2", "pypath.inputs.reaction.get_acsn_effects", "pypath.inputs.reaction.get_controls", "pypath.inputs.reaction.get_interactions", "pypath.inputs.reaction.get_reactions", "pypath.inputs.reaction.get_soup", "pypath.inputs.reaction.panther_biopax", "pypath.inputs.reaction.panther_interactions", "pypath.inputs.reaction.pid_biopax", "pypath.inputs.reaction.pid_interactions", "pypath.inputs.reaction.process_complex", "pypath.inputs.reaction.process_controls", "pypath.inputs.reaction.process_reactions", "pypath.inputs.reaction.reactions_biopax", "pypath.inputs.reaction.reactome_biopax", "pypath.inputs.reaction.reactome_bs", "pypath.inputs.reaction.reactome_interactions", "pypath.inputs.reaction.reactome_sbml", "pypath.inputs.reactome", "pypath.inputs.reactome.reactome_chebis", "pypath.inputs.reactome.reactome_pathway_relations", "pypath.inputs.reactome.reactome_pathways", "pypath.inputs.reactome.reactome_uniprots", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.inputs.sider", "pypath.inputs.sider.SiderDrug", "pypath.inputs.sider.SiderSideeffect", "pypath.inputs.sider.SiderSideeffectMeddra", "pypath.inputs.sider.SiderSideeffetFrequency", "pypath.inputs.sider.sider_drug_names", "pypath.inputs.sider.sider_meddra_side_effects", "pypath.inputs.sider.sider_side_effect_frequencies", "pypath.inputs.sider.sider_side_effects", "pypath.inputs.stitch", "pypath.inputs.stitch.stitch_actions_interactions", "pypath.inputs.stitch.stitch_links_interactions", "pypath.inputs.string", "pypath.inputs.string.string_effects", "pypath.inputs.string.string_links_interactions", "pypath.inputs.string.string_physical_interactions", "pypath.inputs.string.string_species", "pypath.inputs.swisslipids", "pypath.inputs.switches_elm", "pypath.inputs.switches_elm.get_switches_elm", "pypath.inputs.transmir", "pypath.inputs.transmir.transmir_interactions", "pypath.inputs.trip", "pypath.inputs.trip.take_a_trip", "pypath.inputs.trip.trip_find_uniprot", "pypath.inputs.trip.trip_get_uniprot", "pypath.inputs.trip.trip_interactions", "pypath.inputs.trip.trip_process", "pypath.inputs.trip.trip_process_table", "pypath.inputs.twosides", "pypath.inputs.twosides.twosides_interactions", "pypath.inputs.unichem", "pypath.inputs.unichem.info", "pypath.inputs.unichem.unichem_info", "pypath.inputs.unichem.unichem_mapping", "pypath.inputs.unichem.unichem_sources", "pypath.inputs.uniprot", "pypath.inputs.uniprot.Taxon", "pypath.inputs.uniprot.UniprotQuery", "pypath.inputs.uniprot.UniprotRecordHistory", "pypath.inputs.uniprot.deleted_uniprot_genesymbol", "pypath.inputs.uniprot.get_uniprot_sec", "pypath.inputs.uniprot.protein_datasheet", "pypath.inputs.uniprot.query_builder", "pypath.inputs.uniprot.swissprot_deleted", "pypath.inputs.uniprot.trembl_deleted", "pypath.inputs.uniprot.uniprot_data", "pypath.inputs.uniprot.uniprot_deleted", "pypath.inputs.uniprot.uniprot_families", "pypath.inputs.uniprot.uniprot_history", "pypath.inputs.uniprot.uniprot_history_recent_datasheet", "pypath.inputs.uniprot.uniprot_keywords", "pypath.inputs.uniprot.uniprot_locations", "pypath.inputs.uniprot.uniprot_ncbi_taxids", "pypath.inputs.uniprot.uniprot_ncbi_taxids_2", "pypath.inputs.uniprot.uniprot_preprocess", "pypath.inputs.uniprot.uniprot_query", "pypath.inputs.uniprot.uniprot_recent_version", "pypath.inputs.uniprot.uniprot_taxonomy", "pypath.inputs.uniprot.uniprot_tissues", "pypath.inputs.uniprot.uniprot_topology", "pypath.inputs.uniprot.valid_uniprot", "pypath.inputs.uniprot_db", "pypath.inputs.uniprot_db.all_swissprots", "pypath.inputs.uniprot_db.all_trembls", "pypath.inputs.uniprot_db.all_uniprots", "pypath.inputs.uniprot_db.get_db", "pypath.inputs.uniprot_db.init_db", "pypath.inputs.uniprot_db.is_swissprot", "pypath.inputs.uniprot_db.is_trembl", "pypath.inputs.uniprot_db.is_uniprot", "pypath.inputs.uniprot_idmapping", "pypath.inputs.uniprot_idmapping.idtypes", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.HmdbMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.RampMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.refs", "pypath.internals.refs.Reference", "pypath.internals.refs.get_pubmed_data", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkDataset", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.data_formats", "pypath.resources.data_formats.activity_flow", "pypath.resources.data_formats.enzyme_substrate", "pypath.resources.data_formats.interaction", "pypath.resources.data_formats.interaction_htp", "pypath.resources.data_formats.pathway_bad", "pypath.resources.data_formats.reaction_pc", "pypath.resources.data_formats.transcription_deprecated", "pypath.resources.data_formats.transcription_onebyone", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.resources.network", "pypath.resources.urls", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.cache_path", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.settings", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 16, 17, 18, 19, 20, 47, 50, 70, 72, 95, 97, 107, 115, 137, 152, 208, 209, 210, 211, 212, 214, 217, 218, 245, 263, 266, 273, 276, 307, 308, 309, 310, 314, 317, 320, 325, 343, 344, 345, 349, 352, 362, 374, 375, 376, 378, 381, 388, 392, 393, 396, 397, 398, 399, 407, 408, 410, 419, 429, 430, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 470, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 490, 491], "python": [0, 34, 487, 488, 490, 491], "modul": [0, 1, 4, 6, 9, 34, 70, 123, 263, 329, 379, 381, 388, 392, 405, 412, 417, 419, 421, 430, 432, 435, 438, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 463, 466, 467, 480, 486, 489, 490, 491], "build": [0, 349, 486, 487, 490], "molecular": [0, 325, 486, 487, 490], "biologi": [0, 487, 488], "databas": [0, 7, 11, 21, 22, 23, 54, 56, 65, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 97, 113, 115, 117, 118, 152, 160, 187, 198, 203, 211, 236, 237, 238, 241, 245, 259, 272, 273, 274, 276, 277, 311, 312, 313, 314, 329, 336, 345, 384, 389, 414, 415, 424, 426, 427, 443, 486, 490, 491], "With": [0, 487], "you": [0, 276, 393, 419, 443, 444, 447, 453, 458, 470, 486, 489, 491], "can": [0, 3, 32, 206, 276, 317, 320, 321, 344, 349, 352, 362, 393, 419, 438, 443, 467, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485, 487, 488, 489, 490, 491], "access": [0, 4, 70, 95, 367, 393, 430, 458, 486, 487, 490], "process": [0, 13, 26, 27, 41, 43, 128, 129, 175, 176, 273, 282, 294, 297, 332, 334, 344, 347, 349, 352, 362, 378, 405, 419, 437, 438, 443, 487, 490], "combin": [0, 317, 320, 487, 488, 491], "more": [0, 26, 27, 32, 33, 70, 102, 115, 266, 276, 313, 339, 341, 344, 349, 352, 362, 419, 474, 475, 476, 477, 478, 479, 487, 488, 490, 491], "than": [0, 26, 27, 115, 266, 313, 487, 488, 491], "170": 0, "public": [0, 293], "resourc": [0, 5, 67, 68, 70, 122, 217, 226, 325, 339, 340, 386, 443, 486, 487, 490, 491], "interact": [0, 11, 13, 14, 26, 27, 41, 43, 67, 68, 75, 77, 81, 82, 95, 98, 107, 128, 129, 137, 144, 147, 160, 187, 189, 198, 200, 201, 236, 237, 260, 294, 297, 317, 320, 321, 332, 333, 334, 336, 386, 403, 419, 425, 426, 427, 486, 487, 490], "network": [0, 5, 41, 320, 408, 419, 467, 486, 487, 490], "includ": [0, 6, 13, 30, 32, 33, 36, 47, 205, 206, 320, 321, 333, 344, 349, 352, 362, 381, 388, 392, 419, 424, 426, 427, 488, 490, 491], "annot": [0, 96, 97, 134, 149, 150, 486, 487, 490], "about": [0, 7, 8, 95, 102, 113, 151, 236, 239, 240, 241, 242, 243, 244, 245, 246, 266, 313, 338, 339, 450, 451, 460, 486, 487, 491], "function": [0, 3, 4, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 62, 63, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 279, 299, 304, 306, 313, 315, 318, 320, 324, 325, 326, 328, 335, 337, 342, 344, 349, 352, 362, 368, 377, 401, 413, 417, 436, 437, 442, 443, 465, 470, 487, 488, 489, 490, 491], "local": [0, 13, 487, 488, 490, 491], "structur": [0, 144, 152, 344, 349, 352, 362, 482, 484, 485, 486, 487, 490], "other": [0, 3, 61, 381, 384, 388, 389, 391, 392, 423, 443, 487, 491], "properti": [0, 95, 344, 410, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "gene": [0, 29, 30, 32, 33, 72, 73, 120, 121, 122, 157, 161, 163, 164, 165, 167, 168, 171, 187, 189, 236, 272, 273, 327, 346, 486, 487, 490, 491], "protein": [0, 98, 100, 120, 121, 137, 144, 147, 150, 198, 200, 236, 237, 256, 317, 320, 321, 334, 352, 383, 386, 388, 390, 486, 487, 490, 491], "also": [0, 7, 137, 408, 467, 488, 491], "provid": [0, 3, 70, 95, 137, 344, 349, 352, 362, 381, 388, 392, 405, 408, 419, 430, 480, 487, 488, 490, 491], "number": [0, 16, 17, 18, 19, 20, 26, 27, 32, 62, 72, 79, 102, 115, 137, 144, 147, 150, 214, 217, 218, 239, 240, 242, 243, 244, 245, 246, 266, 307, 308, 309, 310, 316, 317, 343, 345, 367, 393, 403, 407, 410, 460, 487, 488, 491], "util": [0, 267, 403, 486, 487, 490], "id": [0, 23, 26, 27, 30, 31, 32, 33, 36, 39, 43, 49, 75, 77, 99, 113, 115, 120, 121, 122, 137, 150, 152, 160, 166, 167, 168, 178, 206, 236, 263, 265, 266, 267, 268, 296, 312, 313, 314, 322, 331, 334, 338, 339, 340, 341, 344, 346, 347, 352, 362, 364, 374, 375, 376, 378, 381, 384, 388, 389, 391, 392, 393, 403, 486, 491], "translat": [0, 99, 166, 167, 168, 263, 267, 340, 344, 349, 352, 362, 364, 384, 389, 391, 393, 486, 490, 491], "orthologi": [0, 29, 486, 490], "handl": [0, 443, 487, 488], "taxonomi": [0, 26, 27, 43, 346, 347, 364, 393, 486, 487], "sequenc": [0, 144, 486], "serv": [0, 334, 405, 491], "web": [0, 6, 33, 102, 268, 349, 393, 487, 488, 490], "server": [0, 419, 487, 488, 490, 491], "etc": [0, 438, 487, 488, 490, 491], "member": [0, 1, 2, 4, 6, 9, 10, 12, 15, 25, 28, 34, 40, 42, 44, 46, 54, 57, 64, 66, 69, 71, 74, 80, 83, 86, 94, 101, 103, 108, 110, 112, 114, 116, 119, 124, 126, 131, 133, 135, 138, 141, 143, 146, 148, 153, 155, 172, 174, 177, 179, 181, 182, 186, 188, 190, 193, 195, 197, 199, 202, 204, 207, 213, 216, 233, 235, 238, 247, 249, 252, 255, 258, 262, 264, 271, 278, 279, 299, 304, 306, 315, 318, 323, 324, 326, 328, 335, 337, 342, 368, 377, 379, 380, 394, 400, 401, 404, 412, 413, 417, 418, 420, 421, 431, 433, 434, 435, 436, 440, 441, 442, 459, 461, 462, 463, 464, 467, 473, 474, 475, 476, 477, 478, 479, 480, 488], "class": [2, 3, 15, 16, 17, 18, 19, 20, 24, 94, 95, 102, 117, 213, 214, 216, 217, 218, 306, 307, 308, 309, 310, 342, 343, 344, 345, 352, 362, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 418, 419, 431, 432, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491], "none": [3, 5, 26, 27, 32, 33, 47, 59, 62, 63, 65, 67, 70, 84, 95, 96, 97, 98, 99, 100, 102, 109, 123, 136, 137, 160, 205, 206, 226, 241, 260, 272, 273, 276, 277, 283, 285, 297, 316, 329, 344, 349, 352, 362, 371, 372, 373, 376, 382, 383, 385, 386, 387, 388, 390, 392, 393, 395, 403, 405, 406, 408, 409, 411, 419, 432, 439, 443, 444, 448, 449, 460, 465, 466, 488], "kwarg": [3, 5, 70, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 261, 276, 281, 288, 290, 297, 344, 349, 352, 362, 395, 405, 406, 409, 410, 411, 419, 443, 466, 488], "sourc": [3, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 160, 173, 175, 176, 178, 180, 183, 184, 185, 187, 189, 191, 192, 194, 196, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 226, 234, 236, 237, 241, 245, 248, 250, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 325, 327, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 416, 419, 430, 432, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 465, 466, 468, 470, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 490, 491], "base": [3, 16, 17, 18, 19, 20, 95, 214, 217, 218, 259, 307, 308, 309, 310, 343, 344, 345, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 405, 406, 407, 408, 409, 410, 411, 419, 432, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 465, 466, 468, 470, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 490], "object": [3, 4, 60, 62, 95, 121, 295, 296, 298, 344, 385, 386, 390, 395, 397, 402, 403, 408, 411, 419, 422, 423, 424, 425, 426, 427, 428, 429, 443, 445, 460, 465, 468, 470, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489], "which": [3, 4, 47, 50, 95, 267, 317, 320, 419, 423, 446, 447, 450, 451, 452, 453, 454, 455, 457, 458, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 490, 491], "carri": [3, 488], "custom": [3, 70, 317, 320, 321, 381, 384, 388, 389, 391, 392, 405, 419, 460, 486, 487], "attribut": [3, 16, 17, 18, 19, 20, 33, 36, 47, 125, 134, 175, 176, 214, 217, 218, 307, 308, 309, 310, 343, 344, 345, 352, 362, 386, 393, 395, 396, 397, 398, 399, 402, 406, 407, 408, 409, 410, 411, 419, 421, 443, 444, 474, 475, 476, 477, 478, 479, 488, 491], "data": [3, 5, 7, 13, 21, 22, 23, 29, 32, 35, 47, 48, 50, 51, 52, 53, 54, 56, 60, 61, 62, 65, 75, 77, 78, 82, 87, 88, 89, 90, 91, 92, 93, 102, 117, 118, 127, 128, 129, 137, 160, 208, 209, 210, 211, 212, 237, 238, 239, 240, 242, 243, 244, 245, 246, 263, 273, 282, 300, 301, 302, 303, 320, 321, 329, 333, 334, 336, 340, 378, 392, 393, 405, 406, 410, 419, 437, 443, 444, 447, 448, 486, 487, 490, 491], "dedic": [3, 488], "dict": [3, 36, 39, 49, 59, 60, 61, 62, 70, 95, 96, 99, 102, 115, 118, 122, 125, 134, 149, 150, 152, 160, 166, 167, 168, 178, 205, 206, 208, 209, 210, 211, 212, 236, 239, 240, 241, 242, 243, 244, 245, 246, 263, 266, 274, 275, 276, 298, 311, 314, 322, 333, 334, 340, 341, 344, 349, 352, 362, 364, 378, 408, 419, 488, 490], "under": [3, 395, 488], "__init__": [3, 16, 17, 18, 19, 20, 85, 95, 214, 217, 218, 307, 308, 309, 310, 343, 344, 345, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 405, 406, 407, 408, 409, 410, 411, 419, 432, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 465, 466, 468, 470, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 488], "method": [3, 4, 16, 17, 18, 19, 20, 87, 95, 123, 137, 214, 217, 218, 307, 308, 309, 310, 333, 343, 344, 345, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 405, 406, 407, 408, 409, 410, 411, 419, 432, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 465, 466, 468, 470, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 490], "serial": 3, "gener": [3, 22, 59, 62, 63, 65, 87, 88, 89, 90, 91, 92, 93, 203, 208, 209, 210, 211, 212, 300, 301, 302, 303, 336, 355, 405, 419, 488, 490, 491], "json": [3, 60, 61, 102, 241, 378, 419, 488], "string": [3, 60, 61, 62, 70, 102, 120, 263, 296, 338, 340, 344, 349, 352, 362, 438, 443, 460, 488], "full": [3, 30, 87, 89, 91, 93, 95, 205, 206, 340, 477, 478, 486, 487, 490], "content": [3, 113, 259, 276, 378, 419, 443, 487, 489, 490], "without": [3, 4, 47, 313, 419, 422, 443, 486, 491], "ani": [3, 61, 62, 70, 438, 470, 486, 487, 490, 491], "whitespac": 3, "line": [3, 62, 344, 474, 475, 476, 477, 478, 479, 488], "break": [3, 137, 488], "return": [3, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 39, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 113, 117, 118, 120, 121, 122, 123, 125, 128, 129, 134, 149, 150, 151, 152, 160, 175, 176, 178, 205, 208, 209, 210, 211, 212, 214, 215, 217, 218, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 259, 263, 267, 275, 276, 282, 295, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 322, 330, 332, 333, 339, 340, 341, 343, 344, 345, 346, 349, 352, 355, 362, 364, 374, 375, 378, 393, 396, 397, 398, 399, 406, 407, 408, 410, 419, 430, 437, 439, 443, 444, 460, 470, 474, 475, 476, 477, 478, 479, 487, 488, 491], "str": [3, 16, 18, 19, 20, 29, 30, 31, 32, 33, 39, 45, 49, 59, 60, 61, 62, 70, 72, 73, 75, 76, 95, 96, 97, 98, 99, 100, 102, 109, 115, 120, 121, 122, 134, 137, 149, 150, 152, 160, 205, 206, 211, 212, 241, 260, 263, 266, 267, 268, 272, 273, 274, 275, 276, 305, 307, 308, 309, 310, 311, 314, 319, 322, 329, 331, 333, 334, 338, 340, 344, 349, 352, 362, 364, 378, 381, 386, 388, 392, 393, 405, 408, 410, 419, 437, 438, 439, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "The": [3, 30, 45, 50, 65, 87, 92, 93, 95, 96, 99, 102, 115, 137, 178, 206, 241, 245, 263, 273, 275, 297, 301, 302, 305, 317, 320, 321, 330, 331, 338, 344, 349, 352, 362, 378, 393, 403, 410, 419, 430, 432, 438, 443, 444, 460, 466, 470, 474, 475, 476, 477, 478, 479, 485, 486, 487, 490, 491], "update_attr": 3, "updat": [3, 85, 408, 419, 460, 488, 490, 491], "store": [3, 419, 430, 487, 488, 490], "here": [3, 102, 241, 460, 470, 487, 488, 491], "ident": [3, 419, 488], "kei": [3, 30, 32, 36, 49, 62, 70, 99, 102, 118, 122, 149, 150, 152, 160, 178, 205, 206, 208, 209, 210, 211, 212, 236, 263, 276, 322, 340, 341, 344, 349, 352, 362, 364, 396, 397, 398, 399, 408, 419, 437, 438, 443, 488, 491], "ar": [3, 32, 47, 62, 72, 85, 87, 92, 93, 95, 96, 115, 136, 144, 150, 152, 157, 161, 163, 164, 165, 167, 168, 171, 205, 263, 266, 267, 276, 297, 321, 332, 340, 344, 349, 352, 362, 381, 388, 392, 419, 423, 426, 427, 437, 443, 474, 475, 476, 477, 478, 479, 484, 486, 487, 489, 490, 491], "merg": [3, 488], "us": [3, 4, 33, 34, 36, 39, 99, 137, 206, 208, 209, 210, 211, 212, 259, 263, 267, 276, 317, 320, 321, 333, 381, 388, 392, 393, 395, 419, 423, 437, 438, 443, 449, 453, 458, 467, 470, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 487, 491], "share": [3, 395, 419, 488, 490], "common": [3, 36, 486], "combine_attr": 3, "new": [3, 58, 276, 419, 429, 487, 488, 490, 491], "three": [3, 470], "wai": [3, 70, 276, 340, 344, 349, 352, 362, 381, 388, 392, 488], "an": [3, 30, 31, 32, 33, 99, 102, 154, 205, 206, 236, 237, 239, 240, 242, 243, 244, 246, 276, 314, 340, 344, 349, 352, 362, 393, 396, 397, 398, 399, 408, 410, 419, 429, 438, 467, 470, 474, 475, 476, 477, 478, 479, 486, 487, 491], "call": [3, 68, 206, 332, 333, 395, 405, 443, 444, 487, 488], "dictionari": [3, 30, 32, 36, 39, 49, 62, 70, 95, 150, 152, 154, 208, 209, 210, 211, 212, 236, 275, 276, 334, 340, 364, 486, 487], "keyword": [3, 470, 488], "argument": [3, 332, 381, 388, 392, 443, 470, 488], "work": [4, 85, 102, 273, 419, 487, 488, 491], "from": [4, 11, 13, 14, 21, 22, 23, 26, 27, 29, 34, 45, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 65, 67, 68, 70, 75, 77, 81, 82, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 107, 115, 117, 118, 120, 121, 122, 123, 125, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 175, 176, 187, 189, 198, 200, 201, 203, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 238, 239, 240, 242, 243, 244, 246, 259, 263, 273, 274, 275, 276, 277, 300, 303, 305, 311, 312, 313, 314, 327, 329, 330, 331, 334, 336, 340, 346, 352, 355, 364, 378, 384, 386, 388, 389, 392, 393, 405, 406, 408, 410, 419, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 467, 474, 475, 476, 477, 478, 479, 484, 486, 487, 490, 491], "might": [4, 239, 240, 242, 243, 244, 246, 273, 419, 488, 491], "import": [4, 429, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 487, 488], "main": [4, 35, 465, 487, 488, 491], "df": [5, 488], "entity_typ": [5, 272, 273, 383, 390, 488], "data_model": [5, 386, 409, 410, 419], "interaction_typ": [5, 217, 386, 409, 410, 419, 488], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": [5, 147], "effect": [5, 176, 203, 282, 312, 313, 314, 488], "entiti": [5, 488, 490, 491], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 13, 26, 27, 30, 32, 84, 102, 115, 127, 128, 129, 136, 137, 150, 160, 208, 209, 210, 211, 212, 237, 266, 267, 284, 292, 294, 295, 297, 317, 320, 344, 349, 351, 352, 353, 354, 357, 358, 361, 362, 365, 366, 378, 386, 393, 414, 443, 444, 445, 447, 449, 451, 453, 455, 458, 460, 488], "remove_loop": 5, "entities_or": 5, "fals": [5, 21, 22, 23, 30, 32, 33, 47, 63, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 117, 118, 136, 147, 160, 205, 208, 209, 210, 211, 212, 226, 237, 245, 257, 260, 275, 276, 300, 301, 302, 303, 314, 332, 333, 352, 364, 374, 375, 378, 382, 386, 390, 406, 414, 419, 430, 443, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 488], "filter": [5, 29, 33, 87, 88, 90, 92, 419, 488], "frame": [5, 21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 300, 301, 302, 303, 486, 487, 490], "licens": [6, 7, 419, 486, 490], "collect": [6, 34, 87, 99, 102, 419, 488, 491], "page": [6, 45, 102, 419, 487, 488, 489, 491], "compon": [6, 263, 344, 349, 352, 362, 488, 491], "biomart": [6, 488], "goos": 6, "queri": [6, 33, 102, 115, 136, 137, 160, 206, 241, 245, 266, 329, 344, 349, 352, 362, 393, 486, 490], "templat": [6, 488], "configur": [6, 488], "file": [6, 13, 34, 35, 39, 43, 45, 60, 61, 62, 63, 70, 72, 73, 95, 99, 237, 263, 294, 295, 298, 305, 329, 419, 437, 443, 444, 446, 447, 486, 487, 490], "print": [7, 8, 338, 448, 449, 450, 451, 452, 453, 488], "copyright": [7, 488], "point": [7, 198, 276, 344, 352, 362, 419, 487, 488], "further": [7, 70, 144, 333, 486, 488, 491], "inform": [7, 8, 34, 55, 95, 151, 203, 236, 259, 311, 312, 313, 314, 338, 339, 341, 419, 452, 453, 460, 486, 491], "loglevel": 8, "9": [8, 486, 487, 488], "basic": [8, 352, 362, 486], "current": [8, 102, 396, 397, 398, 399, 416, 460, 467, 487, 488, 491], "session": [8, 419, 486, 487], "tf": [11, 327, 488, 490, 491], "target": [11, 29, 53, 65, 95, 187, 189, 208, 209, 210, 211, 212, 263, 386, 428, 474, 475, 476, 477, 478, 479, 488, 490, 491], "transcript": [11, 30, 32, 33, 382, 419, 425, 429, 487, 491], "regul": [11, 325, 491], "keep_in_complex_interact": 13, "list": [13, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 41, 43, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 95, 96, 97, 98, 100, 102, 109, 113, 115, 117, 125, 128, 129, 134, 137, 147, 151, 152, 160, 173, 175, 176, 205, 206, 208, 209, 210, 211, 212, 215, 236, 237, 239, 240, 242, 243, 244, 245, 246, 265, 266, 267, 272, 273, 274, 276, 282, 302, 311, 312, 313, 316, 317, 319, 320, 321, 322, 332, 333, 339, 340, 344, 349, 352, 362, 378, 392, 393, 408, 419, 443, 487, 488, 490, 491], "bool": [13, 21, 22, 23, 26, 27, 30, 32, 33, 47, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 115, 117, 118, 137, 147, 150, 160, 205, 208, 209, 210, 211, 212, 237, 241, 245, 267, 275, 276, 300, 301, 302, 303, 314, 317, 320, 333, 352, 364, 378, 392, 393, 419], "whether": [13, 47, 137, 267, 333, 488], "complex": [13, 291, 320, 321, 344, 349, 352, 362, 486, 487, 490], "expans": 13, "retriev": [14, 29, 31, 32, 47, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 79, 87, 97, 100, 102, 120, 121, 122, 123, 134, 154, 187, 189, 203, 215, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 275, 276, 311, 312, 313, 314, 336, 346, 352, 355, 393, 488], "sif": [14, 488, 490], "format": [14, 36, 267, 295, 296, 298, 367, 460, 467, 490, 491], "distribut": [14, 487], "offici": [14, 488], "websit": [14, 344, 352, 362], "adr_class": 16, "badd": [16, 18, 20, 24], "namedtupl": [16, 17, 18, 19, 20, 50, 51, 76, 77, 78, 95, 307, 308, 309, 310], "alia": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410, 469, 471, 472], "field": [16, 17, 18, 19, 20, 29, 59, 60, 62, 70, 72, 95, 97, 102, 191, 192, 205, 206, 214, 217, 218, 307, 308, 309, 310, 312, 343, 344, 345, 349, 352, 361, 362, 407, 410, 443, 488, 491], "0": [16, 17, 18, 19, 20, 37, 50, 63, 139, 147, 214, 217, 218, 307, 308, 309, 310, 319, 343, 345, 383, 386, 390, 407, 410, 460, 466, 486, 487, 488], "1": [16, 17, 18, 19, 20, 26, 27, 214, 217, 218, 307, 308, 309, 310, 343, 345, 384, 386, 388, 389, 391, 407, 410, 460, 466, 486, 488, 491], "count": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410, 488], "valu": [16, 17, 18, 19, 20, 30, 32, 36, 47, 49, 61, 62, 70, 99, 122, 149, 150, 152, 160, 178, 205, 214, 217, 218, 236, 241, 263, 276, 307, 308, 309, 310, 317, 320, 321, 322, 340, 341, 343, 344, 345, 349, 352, 362, 364, 393, 396, 397, 398, 399, 407, 408, 410, 419, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 475, 477, 478, 488, 491], "occurr": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410], "index": [16, 17, 18, 19, 20, 23, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410, 488], "start": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410, 487, 488, 490], "stop": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410, 446, 450, 488], "9223372036854775807": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410], "first": [16, 17, 18, 19, 20, 70, 95, 117, 214, 217, 218, 275, 307, 308, 309, 310, 343, 345, 392, 407, 410, 430, 487, 488, 490], "rais": [16, 17, 18, 19, 20, 70, 214, 217, 218, 307, 308, 309, 310, 343, 344, 345, 407, 408, 410], "valueerror": [16, 17, 18, 19, 20, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 410], "present": [16, 17, 18, 19, 20, 24, 115, 214, 217, 218, 307, 308, 309, 310, 343, 345, 407, 408, 410, 487, 488], "child": [17, 24, 488], "parent": [17, 24, 263, 488], "adrecsadr": 17, "drug": [18, 19, 21, 22, 23, 50, 53, 75, 76, 77, 78, 79, 95, 96, 97, 98, 100, 134, 156, 159, 160, 161, 162, 164, 166, 170, 203, 208, 311, 312, 313, 314, 336, 488, 490], "synonym": [18, 20, 23, 211, 263, 331, 419, 488], "drugbank": [18, 23, 76, 78], "pubchem_cid": [18, 488], "mesh": [18, 23], "kegg": [18, 23, 65, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 429, 488], "tdd": [18, 23], "3": [18, 19, 20, 62, 117, 125, 214, 217, 310, 343, 344, 345, 349, 352, 362, 410, 465, 486, 487, 488], "6": [18, 147, 345, 486, 488], "5": [18, 345, 465, 486, 487, 488], "4": [18, 20, 214, 345, 410, 465, 470, 482, 485, 486, 488, 491], "2": [18, 19, 20, 62, 214, 217, 218, 236, 308, 309, 310, 343, 345, 407, 408, 410, 470, 482, 485, 486], "7": [18, 43, 345, 486, 487, 488, 491], "drug_badd": 19, "adr_badd": 19, "adr": [19, 21, 22, 211], "adrecs_class": 20, "name": [20, 23, 29, 30, 31, 32, 33, 36, 39, 47, 48, 52, 53, 55, 56, 65, 67, 68, 70, 75, 77, 97, 99, 102, 113, 117, 122, 123, 134, 151, 152, 157, 161, 163, 164, 165, 167, 168, 171, 178, 205, 208, 209, 210, 211, 212, 218, 241, 263, 276, 307, 311, 312, 313, 314, 322, 330, 333, 339, 344, 352, 362, 364, 367, 374, 375, 376, 381, 384, 386, 388, 389, 390, 391, 392, 395, 405, 406, 407, 408, 409, 410, 411, 414, 419, 426, 432, 437, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 466, 486, 489, 491], "meddra": [20, 312, 313, 314], "tupl": [20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 47, 48, 50, 51, 52, 53, 55, 56, 59, 65, 70, 72, 73, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 113, 117, 118, 134, 147, 149, 151, 160, 173, 178, 203, 205, 206, 214, 215, 217, 218, 237, 296, 300, 301, 302, 303, 311, 312, 313, 314, 316, 317, 319, 320, 321, 336, 339, 343, 344, 345, 349, 352, 362, 378, 407, 408, 438, 443, 470, 474, 475, 476, 477, 478, 479, 482, 485, 488], "return_df": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 275, 300, 301, 302, 303, 488], "adrecsterm": 21, "datafram": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 118, 208, 209, 210, 211, 212, 237, 275, 276, 300, 301, 302, 303, 378, 486, 487], "advers": [21, 203, 208, 336, 488], "reaction": [21, 208, 419, 488, 491], "ontologi": [21, 24, 256, 301, 388, 486, 487, 490], "paramet": [21, 22, 23, 65, 72, 73, 75, 76, 77, 78, 85, 87, 88, 89, 90, 91, 92, 93, 102, 115, 117, 118, 120, 121, 122, 136, 137, 208, 209, 210, 211, 212, 239, 240, 241, 242, 243, 244, 245, 246, 260, 266, 275, 276, 300, 301, 302, 303, 314, 329, 344, 347, 349, 352, 362, 364, 378, 381, 384, 386, 388, 389, 391, 392, 393, 403, 419, 432, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 466, 470, 486, 487, 488], "panda": [21, 22, 23, 65, 75, 77, 78, 87, 88, 89, 90, 91, 92, 93, 117, 208, 209, 210, 211, 212, 237, 275, 276, 300, 301, 302, 303, 486, 487, 490, 491], "term": [21, 24, 149, 152, 206, 488], "adrecsdrugadr": 22, "pd": [22, 65, 87, 88, 89, 90, 91, 92, 93, 118, 208, 209, 210, 211, 212, 276, 300, 301, 302, 303, 488], "pair": [22, 65, 70, 147, 173, 198, 347, 378, 408, 443, 488, 491], "identifi": [23, 24, 30, 32, 36, 62, 75, 76, 78, 95, 97, 99, 100, 115, 147, 263, 272, 273, 275, 340, 344, 346, 348, 352, 355, 356, 363, 364, 378, 438, 486, 487], "iupac": [23, 263, 488], "http": [23, 33, 102, 115, 137, 173, 187, 189, 200, 201, 237, 241, 259, 339, 344, 349, 352, 362, 443, 467, 487, 491], "www": [23, 33, 115, 173, 187, 189, 237, 259, 339, 344, 349, 352, 362, 467, 488], "bio": 23, "add": [23, 419, 487, 488, 490, 491], "org": [23, 33, 125, 173, 187, 200, 201, 237, 259, 344, 349, 352, 362, 393, 467, 488, 491], "jsp": 23, "set": [24, 30, 32, 67, 68, 70, 96, 99, 107, 115, 134, 137, 144, 149, 150, 260, 263, 266, 272, 273, 275, 311, 314, 329, 340, 344, 364, 378, 381, 386, 388, 392, 393, 396, 397, 398, 399, 405, 406, 408, 419, 424, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 488, 490, 491], "adrecschildpar": 24, "relationship": [24, 215, 486, 487], "between": [24, 65, 166, 167, 168, 200, 275, 317, 320, 347, 470, 475, 477, 478, 487, 488, 490, 491], "repres": [24, 95, 151, 205, 339, 408, 488], "both": [24, 313, 314, 320, 352, 376, 443, 487, 488, 491], "numer": [24, 115, 338, 341, 364, 488], "organ": [26, 27, 29, 30, 31, 32, 43, 84, 113, 142, 147, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 194, 294, 295, 322, 333, 344, 347, 349, 352, 354, 357, 358, 361, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 393, 406, 486, 487, 490, 491], "int": [26, 27, 29, 30, 31, 32, 43, 50, 62, 79, 102, 109, 115, 137, 147, 150, 239, 240, 242, 243, 244, 245, 246, 266, 268, 317, 319, 320, 321, 322, 338, 340, 347, 352, 364, 393, 460], "9606": [26, 27, 29, 30, 31, 32, 43, 84, 142, 147, 150, 194, 294, 295, 317, 319, 320, 321, 344, 347, 349, 352, 354, 357, 358, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 386, 392, 393, 405, 488], "htp_limit": [26, 27], "ltp": [26, 27], "download": [26, 27, 32, 34, 35, 41, 43, 45, 81, 87, 102, 125, 127, 137, 149, 150, 151, 152, 160, 175, 176, 206, 211, 237, 256, 273, 295, 297, 298, 305, 317, 320, 321, 322, 329, 330, 331, 333, 334, 347, 392, 405, 443, 447, 448, 454, 455, 486, 487, 490], "all": [26, 32, 34, 78, 95, 102, 134, 150, 263, 276, 332, 344, 349, 352, 362, 403, 408, 419, 432, 443, 444, 455, 466, 474, 484, 487, 490, 491], "keep": [26, 27, 147, 205, 260, 267, 487, 488], "onli": [26, 27, 47, 70, 72, 98, 100, 102, 144, 147, 150, 260, 267, 344, 349, 352, 362, 381, 388, 392, 408, 419, 426, 429, 430, 443, 444, 452, 457, 486, 487, 490, 491], "low": [26, 27, 68, 426], "throughput": [26, 27, 68, 403, 426, 488], "arg": [26, 27, 30, 31, 32, 33, 39, 45, 47, 50, 60, 67, 68, 70, 95, 96, 97, 98, 99, 100, 102, 150, 152, 157, 160, 161, 163, 164, 165, 167, 168, 171, 205, 206, 237, 263, 305, 317, 320, 321, 338, 340, 410, 437], "ncbi": [26, 27, 43, 115, 167, 267, 346, 347, 364, 393, 403, 486, 487, 491], "exclud": [26, 27, 67, 68, 319, 488], "refer": [26, 27, 97, 137, 152, 198, 236, 344, 349, 352, 362, 386, 403, 419, 422, 423, 426, 427, 457, 458, 486, 487, 491], "cite": [26, 27], "thi": [26, 27, 34, 70, 85, 95, 107, 115, 123, 137, 263, 266, 276, 313, 314, 329, 334, 344, 349, 352, 362, 381, 386, 388, 392, 396, 397, 398, 399, 406, 408, 419, 432, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 465, 466, 467, 470, 474, 475, 476, 477, 478, 479, 480, 487, 488, 490, 491], "physic": [27, 317, 320, 321], "multi": [27, 488, 490], "valid": [27, 50, 260, 344, 396, 397, 398, 399], "source_organ": 29, "target_organ": 29, "10090": [29, 344, 349, 352, 362, 487, 488, 491], "extra_field": 29, "iter": [29, 115, 319, 344, 352, 355, 362, 408, 419, 460, 488], "external_gene_nam": 29, "ensembl": [29, 30, 32, 33, 487, 488], "have": [29, 317, 320, 393, 419, 426, 447, 453, 458, 487, 488, 490, 491], "orthologu": 29, "homologi": [29, 486, 488, 491], "relat": [29, 47, 72, 100, 113, 152, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 487, 488, 491], "array_typ": 30, "peptid": [30, 32, 33, 488], "microarrai": [30, 31, 32, 381, 488], "probe": [30, 32, 381, 488], "map": [30, 32, 65, 76, 78, 154, 275, 300, 303, 347, 378, 381, 388, 392, 393, 408, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 490], "model": [30, 32, 34, 35, 36, 39, 419], "shown": [30, 211, 331, 488], "webpag": [30, 45, 81, 305, 329, 330, 331, 334, 488, 491], "correspond": [30, 97, 265, 344, 352, 362, 396, 397, 398, 399, 408, 488], "code": [30, 341, 482, 484, 485, 488, 490], "For": [30, 32, 62, 72, 206, 265, 340, 341, 344, 349, 352, 362, 374, 375, 393, 395, 403, 419, 437, 487, 488, 491], "avail": [30, 31, 34, 36, 70, 99, 205, 206, 237, 273, 344, 349, 352, 362, 393, 487, 488, 491], "see": [30, 260, 332, 339, 340, 341, 344, 349, 352, 362, 453, 467, 470, 482, 484, 485, 487, 488, 491], "biomart_microarray_typ": 30, "A": [30, 32, 36, 67, 68, 70, 75, 95, 102, 115, 120, 121, 122, 150, 151, 152, 160, 236, 241, 263, 275, 312, 339, 340, 341, 344, 349, 352, 362, 364, 408, 410, 429, 437, 488, 490, 491], "type": [31, 32, 72, 96, 99, 137, 152, 226, 236, 260, 263, 272, 273, 275, 285, 312, 339, 340, 341, 344, 378, 381, 384, 388, 389, 391, 392, 393, 419, 443, 444, 486, 487, 488], "vendor": 32, "multipl": [32, 137, 487, 488, 491], "arrai": [32, 419, 488], "one": [32, 63, 70, 75, 102, 136, 137, 151, 239, 240, 242, 243, 244, 245, 246, 267, 331, 334, 338, 339, 344, 352, 362, 381, 384, 388, 389, 391, 392, 393, 403, 419, 470, 477, 478, 487, 491], "option": [32, 276, 488, 491], "limit": [32, 137, 317, 320, 321, 488], "note": [32, 239, 240, 242, 243, 244, 246, 419, 488, 491], "depend": [32, 488, 490], "take": [32, 239, 240, 242, 243, 244, 245, 246, 470, 487, 488], "minut": [32, 487, 488], "One": [32, 33, 72, 73, 115, 266, 276, 334, 352, 362, 488], "mean": [32, 144, 273, 406, 419, 437, 488], "human": [32, 134, 295, 298, 332, 333, 352, 384, 486, 487, 491], "possibl": [32, 263, 486, 488], "affi": [32, 488], "illumina": 32, "agil": [32, 488], "codelink": 32, "phalanx": 32, "attr": [33, 419], "dataset": [33, 87, 88, 89, 90, 91, 92, 93, 208, 209, 210, 211, 212, 313, 314, 386, 408, 409, 411, 419, 423, 429, 486, 487], "hsapiens_gene_ensembl": 33, "servic": [33, 102, 205, 206, 263, 378, 393, 487, 488, 490], "martview": 33, "check": [33, 367, 395, 396, 397, 398, 399, 487, 488, 491], "result": [33, 62, 102, 150, 334, 344, 447, 453, 454, 455, 458, 488], "yield": [33, 203, 296, 297, 336, 344, 347, 488], "request": [33, 102, 115, 137, 205, 266, 443, 444, 488, 491], "each": [33, 59, 62, 95, 97, 137, 151, 152, 205, 236, 245, 339, 344, 487, 488, 490, 491], "record": [33, 47, 48, 52, 53, 79, 102, 115, 147, 208, 209, 210, 212, 239, 240, 242, 243, 244, 245, 246, 259, 266, 268, 355, 491], "repositori": [34, 490], "bioservic": [34, 36, 39], "individu": [34, 160, 203, 488], "pars": [34, 241, 488], "relev": [34, 35, 488], "enter": 34, "model_id": [35, 39], "singl": [35, 39, 75, 76, 267, 486], "extract": [35, 60, 81, 102, 128, 129, 273, 294, 297, 378, 443, 444, 488], "integr": [35, 429, 486, 488, 490], "should": [35, 47, 145, 334, 419, 474, 475, 476, 477, 478, 479, 487, 488, 491], "cach": [35, 115, 136, 137, 237, 266, 273, 295, 334, 443, 446, 447, 448, 449, 450, 451, 454, 455, 486, 487], "fetch": [36, 245, 265, 393, 467, 488], "smbl": 36, "being": [36, 482, 484, 485], "most": [36, 355, 427, 449, 487, 488], "submiss": 36, "modif": [36, 488], "date": [36, 345, 488], "author": [36, 488], "verbos": [37, 139, 450, 451, 488, 490], "get": [39, 393, 408, 443, 486, 488, 491], "contain": [39, 65, 95, 102, 144, 267, 312, 320, 325, 334, 410, 467, 474, 475, 476, 477, 478, 479, 487, 488, 491], "specif": [39, 60, 102, 157, 161, 163, 164, 165, 167, 168, 171, 178, 487, 488, 491], "eg": 39, "descript": [39, 260, 460, 488, 490], "associ": [39, 210, 212, 320, 470, 482, 484, 485, 488], "signal": [41, 203, 336, 486, 491], "ma": 41, "ayan": 41, "2005": [41, 488], "match": [43, 150, 488, 491], "column": [43, 62, 260, 487, 488, 491], "node": [43, 470], "supp_url": 45, "article_url": 45, "supplementari": [45, 259, 260, 305], "materi": [45, 259, 305], "journal": [45, 305], "url": [45, 84, 102, 109, 211, 305, 344, 395, 443, 456, 488, 491], "articl": [45, 189, 488], "path": [45, 70, 99, 305, 329, 419, 437, 438, 439, 443, 487, 488], "standard_rel": 47, "liter": [47, 65, 87, 152, 211, 272, 273, 317, 320, 321, 419], "pchembl_value_non": 47, "activ": [47, 98, 100, 319, 422, 491], "todo": 47, "allow": [47, 419, 488], "must": [47, 419, 470, 488, 491], "pchembl": 47, "standard": [47, 107, 488], "need": [47, 144, 334, 444, 486, 488, 491], "standard_unit": 47, "why": [47, 488], "data_validity_com": 47, "part": [47, 136, 321, 419, 488, 490, 491], "assai": 48, "document": [49, 487, 488, 489], "pubm": [49, 115, 236, 403, 488], "convers": [49, 393, 486, 488, 490], "max_phase_threshold": 50, "indic": [50, 321, 443, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "threshold": [50, 316, 488], "maximum": 50, "phase": 50, "mechan": [51, 325, 488], "molecul": [52, 96, 487, 491], "variant": [54, 55, 56, 134, 487, 488], "citat": 55, "csv": [58, 63, 259, 260, 488], "old": [58, 419, 460, 487, 488], "callabl": [59, 102, 405, 419], "glom": [59, 60, 102, 206], "spec": [59, 60, 102, 206], "protect": 59, "coalesc": 59, "io": [60, 61, 102], "arbitrari": [60, 488, 491], "depth": [60, 291], "like": [60, 62, 239, 240, 242, 243, 244, 245, 246, 393, 408, 487, 488], "read": [61, 62, 63, 102, 237, 241, 259, 419, 444, 447, 454, 455, 486, 487, 490], "pass": [61, 332, 344, 349, 352, 362, 393, 488], "through": [61, 403, 487, 488], "col": [62, 465, 488], "fileobject": 62, "sep": [62, 445], "t": [62, 445, 446, 449, 450, 487, 488, 489, 491], "sep2": 62, "rem": 62, "hdr": 62, "encod": [62, 443, 444, 488, 491], "ascii": 62, "tabl": [62, 81, 99, 260, 274, 276, 277, 330, 331, 334, 381, 384, 388, 389, 392, 393, 486, 487, 489, 490], "open": [62, 208, 209, 210, 211, 212, 268, 443, 444, 487, 488], "stringio": 62, "buffer": 62, "separ": [62, 383, 386, 390, 410, 419, 488, 490], "subfield": 62, "prefix": [62, 115, 460, 488], "e": [62, 72, 95, 96, 97, 98, 99, 100, 123, 260, 267, 333, 352, 403, 408, 419, 470, 480, 482, 485, 486, 487, 490, 491], "g": [62, 123, 260, 333, 352, 419, 487, 488, 490, 491], "header": [62, 136, 137, 344, 383, 386, 390, 443, 445, 488], "If": [62, 70, 95, 152, 160, 205, 208, 209, 210, 211, 212, 276, 329, 344, 376, 393, 408, 487, 488, 491], "assum": [62, 70], "remov": [62, 275, 408, 419, 488, 490], "element": [62, 267, 334, 344, 349, 352, 362, 488], "replac": [62, 345, 443, 488], "xls_file": 63, "sheet": [63, 109], "use_openpyxl": 63, "cell_rang": 63, "m": [63, 488], "excel": [63, 488], "xl": 63, "convert": [63, 334, 344, 349, 352, 362, 467, 487, 488], "source_db": 65, "wikipathwai": 65, "reactom": [65, 295, 296, 297, 298], "target_db": 65, "cross": [65, 97, 152], "pathwai": [65, 73, 158, 162, 165, 169, 170, 171, 201, 296, 301, 302, 419, 422, 427, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 487, 488, 491], "propos": 65, "accept": [65, 470, 482, 485, 488, 491], "user": [65, 70, 85, 95, 96, 97, 98, 99, 100, 317, 320, 321, 445, 487, 488], "curat": [65, 72, 107, 187, 189, 198, 200, 201, 426, 427, 491], "across": [65, 488], "specifi": [65, 333, 408, 475, 482, 484, 485], "direct": [65, 175, 210, 386, 424, 427, 474, 475, 476, 477, 478, 479, 486], "consensuspathdb": [67, 68], "cpdb_interact": 68, "hprd": [68, 425, 488], "biogrid": [68, 424, 425, 488], "phosphopoint": 68, "mint": 68, "bind": [68, 237, 317, 320, 488], "intact": [68, 424, 425, 488], "from_fil": 70, "requir": [70, 297, 317, 320, 321, 367, 487, 488], "restrict": [70, 96, 352, 488], "two": [70, 95, 275, 470, 474, 475, 476, 477, 478, 479, 487, 488], "password": [70, 95, 96, 97, 98, 99, 100], "apart": [70, 205, 206, 487, 488], "rest": [70, 102, 344, 349, 352, 362, 491], "ignor": [70, 410, 419], "_credenti": 70, "exist": [70, 198, 276, 329, 437, 439, 443, 444, 448, 488], "its": [70, 97, 123, 344, 349, 352, 362, 437, 439, 450, 451, 482, 484, 485, 488, 490], "locat": [70, 487, 488, 490, 491], "": [70, 95, 160, 203, 205, 336, 393, 408, 410, 453, 487, 488, 490], "default": [70, 95, 115, 137, 205, 206, 208, 209, 210, 211, 212, 245, 266, 276, 329, 344, 349, 352, 362, 408, 419, 429, 430, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 470, 474, 475, 476, 477, 478, 479, 480, 485, 487, 488, 491], "secret": [70, 443, 488, 491], "directori": [70, 439, 487, 488, 490], "unchang": [70, 267], "explicit": 70, "runtimeerror": 70, "relation_typ": 72, "diseas": [72, 73, 156, 157, 158, 159, 160, 163, 169, 210, 212, 214, 215, 239, 245], "those": [72, 267, 488], "directevid": 72, "non": [72, 198, 419, 488], "too": [72, 488], "larg": [72, 297, 424, 443, 444, 487, 488, 490, 491], "follow": [72, 73, 312, 408, 443, 487, 488], "chemical_gen": 72, "chemical_diseas": 72, "disease_pathwai": 72, "chemical_phenotyp": 72, "gene_diseas": 72, "vocabulary_typ": 73, "vocabulari": 73, "chemic": [73, 317], "anatomi": 73, "phenotyp": 73, "level": [75, 77, 208, 209, 210, 211, 212, 325, 344, 352, 362, 396, 397, 398, 399, 419, 429, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 487, 491], "action": [75, 77], "chembl": [76, 78, 99, 178, 488, 490], "pubchem": [76, 78, 178, 311, 312, 314, 488], "html": [81, 102, 120, 334, 488, 491], "load": [82, 137, 147, 329, 405, 419, 429, 437, 486, 487, 490], "rescu": 82, "core_onli": 84, "direct_onli": 84, "small_scale_onli": 84, "passwd": [85, 95, 96, 97, 98, 99, 100, 445], "doe": [85, 137, 329, 408, 437, 447, 452, 457, 487, 488], "unknown": [85, 386, 390, 488], "reason": [85, 137, 487, 488], "In": [85, 408, 419, 443, 487, 488], "addit": [85, 137, 205, 206, 344, 349, 352, 362, 419, 443, 488, 491], "binary_data": [85, 443], "curl": [85, 491], "ha": [85, 178, 408, 419, 429, 443, 487, 488, 490, 491], "been": [85, 419, 447, 487, 488, 490, 491], "chang": [85, 344, 349, 352, 362, 446, 449, 460, 487, 488], "below": [85, 134, 344, 349, 352, 362, 487, 488], "necessari": [85, 405, 487, 488], "data_origin": 87, "textmin": [87, 92, 93], "knowledg": [87, 90, 91, 198, 259], "experi": [87, 88, 89, 198, 488], "jensen": [87, 88, 89, 90, 91, 92, 93], "lab": [87, 88, 89, 90, 91, 92, 93, 175, 176, 487, 488], "warn": [87, 92, 93, 488], "enorm": [87, 92, 93], "instead": [87, 237, 275, 276, 438, 447, 488, 489, 491], "credentials_fnam": [95, 96, 97, 98, 99, 100], "wrapper": [95, 408, 443, 460, 488], "around": [95, 408, 443, 460, 486, 487], "xml": [95, 488], "drugbank_drugs_ful": 95, "drugbank_targets_ful": 95, "second": [95, 137, 275, 488], "mail": [95, 96, 97, 98, 99, 100], "address": [95, 96, 97, 98, 99, 100, 488], "regist": [95, 96, 97, 98, 99, 100, 438], "account": [95, 96, 97, 98, 99, 100, 488], "detail": [95, 102, 151, 236, 317, 339, 344, 349, 352, 362, 487, 488], "drugbank_external_ids_ful": 95, "extern": [95, 152, 488], "drugbank_properties_ful": 95, "calcul": [95, 144], "statu": [96, 443, 460, 488], "variou": [97, 113, 364, 473, 487, 488], "pharma_act": [98, 100], "pharmacolog": [98, 100], "id_typ": [99, 136, 137, 390, 393, 488], "target_id_typ": [99, 257, 393, 488], "group": [99, 208, 209, 210, 211, 212, 466, 487, 488, 490], "ca": [99, 488], "inchikei": [99, 488], "inchi": [99, 178, 263, 488], "smile": [99, 178, 263, 488], "formula": [99, 488], "kegg_compound": 99, "kegg_drug": 99, "pubchem_compound": 99, "pubchem_subst": 99, "chebi": [99, 166, 178, 300, 488], "pharmgkb": 99, "het": [99, 488], "login": 99, "credenti": 99, "q": 102, "pagin": [102, 488], "page_length": 102, "500": [102, 136, 137, 344, 349, 352, 362, 488], "size_param": 102, "size": [102, 137, 444, 466, 488], "page_param": 102, "offset": [102, 144, 145, 488], "by_pag": 102, "page_field": 102, "total_field": 102, "totalpag": 102, "record_nam": 102, "append": [102, 419], "until": [102, 488, 489], "end": [102, 488], "per": [102, 320, 321], "item": [102, 408, 437, 438, 460, 488], "total": [102, 460, 477, 478], "readthedoc": 102, "en": [102, 488], "latest": [102, 488], "tutori": [102, 487, 488], "downlod": 107, "manual": [107, 426, 427, 488], "gold": 107, "init_url": [109, 443], "taxon": [113, 364, 488], "metadata": [113, 266, 403, 408, 488], "db": [115, 487, 488], "cache_smal": [115, 266], "10": [115, 173, 259, 266, 466, 486, 488, 491], "metainform": 115, "client": [115, 352, 362, 487, 488], "api": [115, 273, 344, 349, 352, 362, 393, 487, 490, 491], "endpoint": [115, 488], "nlm": 115, "nih": [115, 238, 241, 245, 267], "gov": [115, 241], "book": [115, 486, 487], "nbk25499": 115, "chapter4": 115, "interst": 115, "understand": [115, 137, 488], "letter": [115, 488], "strip": [115, 344, 488], "geoprofil": [115, 488], "small": [115, 266, 273, 466, 474, 475, 476, 477, 478, 479, 487, 490], "less": [115, 266, 488], "except": [115, 266, 491], "lower": [115, 266, 314, 488], "enzym": [117, 118, 419, 486, 487, 490], "classif": 117, "digit": 117, "ec": [117, 488], "datasheet": [120, 121, 122, 346], "symbol": [120, 121, 122, 236, 346, 381, 388, 392, 487, 488, 491], "uniprot": [120, 121, 122, 144, 145, 150, 154, 168, 236, 294, 303, 330, 331, 334, 376, 378, 386, 390, 392, 393, 406, 486, 487, 490, 491], "bs4": [121, 296, 330, 334], "beautifulsoup": [121, 296, 330], "summari": [122, 488, 490], "text": [122, 259, 344, 349, 352, 362, 488], "module_nam": 123, "method_nam": 123, "submodul": [123, 487, 488, 490], "uniprot_db": 123, "all_uniprot": [123, 488], "graph_attr": 125, "vertex_attr": 125, "edge_attr": 125, "in_vivo": [127, 128, 129], "preprocess": [127, 256, 329, 344, 487], "ptm": [128, 419, 423, 424, 488, 490, 491], "kinas": [128, 344, 349, 352, 362, 488, 491], "substrat": [128, 419, 486, 487, 490], "missens": 134, "uniprotkb": [134, 150, 257, 488], "swiss": [134, 488], "prot": [134, 488], "ppi": [136, 137, 409, 487, 488], "uniprotkb_ac": [136, 137], "mydomain": [136, 137], "hmm": [136, 137], "maxwait": [136, 137], "180": [136, 137], "part_siz": [136, 137], "perform": [136, 137, 208, 209, 210, 211, 212, 344, 349, 352, 362, 443, 454, 455, 488], "same": [136, 273, 334, 340, 344, 349, 352, 362, 381, 386, 388, 392, 406, 419, 488], "get_ielm_hug": 136, "predict": [137, 332, 333], "domain": [137, 144, 325, 334, 488, 491], "motif": [137, 325, 488], "chunk": [137, 245], "retri": [137, 443], "case": [137, 408, 427, 444, 487, 488, 491], "failur": [137, 486], "reduc": [137, 488], "feedback": 137, "consol": [137, 443, 447, 486], "suppli": [137, 424], "pleas": [137, 487, 488], "what": [137, 453, 488, 491], "detect": [137, 333], "altern": [137, 344, 349, 352, 362, 487, 488, 491], "wait": 137, "time": [137, 150, 329, 419, 487, 488], "everyth": [137, 488], "again": [137, 419, 447, 474, 475, 476, 477, 478, 479, 487, 488], "send": [137, 419, 432, 443, 444, 466, 467], "residu": [144, 488], "chain": [144, 488], "pdb": [144, 145, 488, 491], "given": [144, 208, 209, 210, 211, 212, 408, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "support": [144, 487, 488, 490], "These": [145, 198, 344, 349, 352, 362, 381, 388, 392, 393, 424, 426, 427, 437, 488, 491], "understood": [145, 470], "miscor": 147, "complex_expans": 147, "only_id": 147, "smaller": [147, 488, 491], "memori": [147, 276, 297, 487, 488, 490], "footprint": 147, "go": [149, 152, 453, 487, 488, 490], "entri": [149, 150, 151, 152, 488], "page_s": 150, "200": 150, "review": [150, 344, 349, 352, 354, 357, 358, 361, 362, 365, 366, 393, 488], "tax_id": 150, "thei": [150, 487, 488, 490], "otherwis": [150, 152, 205, 378, 408, 488], "db_type": 152, "where": [152, 410, 443, 474, 475, 476, 477, 478, 479, 488, 491], "join": [160, 488], "asynchron": 160, "els": [160, 408], "them": [160, 419, 487, 488, 491], "togeth": [160, 393, 488], "mutual": 160, "yet": [160, 488, 491], "implement": [160, 460, 470, 474, 475, 476, 477, 478, 479, 480, 484, 485, 487, 490, 491], "ligand": [173, 243, 245, 491], "receptor": [173, 491], "kirouac": 173, "et": [173, 259, 488], "al": [173, 259, 488], "2010": 173, "embopress": 173, "doi": [173, 265, 267], "1038": 173, "msb": 173, "71": 173, "signalingflow": 175, "edg": [175, 176, 470, 486], "signalingdirect": 176, "brand": 178, "compani": [178, 488], "compound": [178, 272, 273, 488, 490], "literatur": [187, 189, 198, 200, 201, 419, 422, 426, 427, 486, 491], "mirna": [187, 189, 327, 428, 487, 490, 491], "natur": [189, 487], "com": [189, 443, 487, 488], "cdd201287": 189, "do": [198, 275, 334, 419, 452, 455, 457, 486, 491], "best": [198, 488], "our": [198, 486, 487], "paper": [198, 488, 491], "test": [198, 419, 443, 490], "find": [198, 487, 488], "neg": [198, 419, 488], "outcom": 198, "autophagi": 200, "autophagyregul": 200, "nrf2": [201, 422, 488], "nrf2ome": [201, 488], "side": [203, 312, 313, 314, 488], "off": [203, 448, 460], "label": [203, 313, 314, 340, 341, 381, 388, 393, 396, 397, 398, 399, 410, 419, 432, 437, 443, 444, 466, 470, 474, 475, 476, 477, 478, 479, 488], "mine": [203, 259, 336], "fda": [203, 211, 336], "event": [203, 336], "report": [203, 336, 488], "system": [203, 336, 443, 487, 488], "full_config": 205, "ebi": [205, 206, 339, 487], "lookup": [205, 206], "ones": [205, 206, 488], "config": [205, 438], "extra": 205, "abbrevi": [205, 488], "describ": [205, 344, 349, 352, 362], "ol": 206, "listof_ontologi": 206, "simpli": [206, 488], "section": [206, 488], "respons": [206, 241, 344, 487, 488], "variabl": [208, 209, 210, 211, 212, 241, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488], "top": [208, 209, 210, 211, 212, 344, 352, 362, 414, 488], "baselin": 209, "express": [209, 240, 245, 319, 487, 488, 491], "score": [210, 212, 317, 320, 321, 488], "assoc_direct": 211, "assoc_indirect": 211, "expr": 211, "associationbyoverallindirect": 211, "associationbyoveralldirect": 211, "significantadversedrugreact": 211, "baselineexpress": 211, "either": [211, 263, 276, 340, 408, 443, 488, 491], "shorthand": 211, "indirect": [212, 488], "disease_id": 214, "pathogen_taxid": 214, "pathogen": [214, 215, 490], "evid": [214, 236, 260, 317, 320, 488, 490], "id_a": [217, 488], "id_b": [217, 488], "pc_label": 218, "version": [218, 226, 419, 487, 488, 490], "by_interact": 226, "12": [226, 486, 488], "num": 236, "length": [236, 344, 349, 352, 362, 488], "refseq": 236, "special": [236, 419, 488, 490], "_ref": 236, "hold": 236, "categori": [236, 325, 486, 490, 491], "phosphoprotein": [237, 488], "intermedi": [237, 488], "chunk_siz": [239, 240, 242, 243, 244, 245, 246], "100": [239, 240, 242, 243, 244, 245, 246, 344, 349, 352, 362, 487, 488], "half": [239, 240, 242, 243, 244, 245, 246, 488], "hour": [239, 240, 242, 243, 244, 245, 246, 488], "batch": [239, 240, 242, 243, 244, 245, 246, 393], "better": [239, 240, 242, 243, 244, 245, 246, 408, 488, 490, 491], "stai": [239, 240, 242, 243, 244, 245, 246, 488], "becaus": [239, 240, 242, 243, 244, 245, 246, 423, 488, 491], "higher": [239, 240, 242, 243, 244, 245, 246, 487], "caus": [239, 240, 242, 243, 244, 245, 246], "timeout": [239, 240, 242, 243, 244, 245, 246, 443], "error": [239, 240, 242, 243, 244, 245, 246, 344, 487, 491], "graphql": [241, 245], "boolean": [241, 386, 488], "gtex": [242, 245], "ortholog": [244, 245, 487, 488], "xref": [245, 246], "complet": [245, 344, 349, 352, 362, 487, 488, 490], "consist": [245, 460, 487, 488], "thousand": [245, 488], "uniprot_isoform": 257, "raw": [259, 276, 378, 482, 484, 485, 487, 488], "dictread": [259, 488], "bachman": 259, "2019": [259, 488], "assembl": 259, "phosphoproteom": 259, "normal": [259, 487, 488], "phosphosit": [259, 488, 490, 491], "biorxiv": 259, "1101": 259, "822668v3": 259, "only_evid": 260, "only_literatur": 260, "nonetyp": [260, 419], "cid": [263, 309, 311, 312, 313, 314], "ftp": [263, 443, 488], "simpler": 263, "lowercas": [263, 488], "prefer": [263, 487, 488], "sid": 263, "idlist": [265, 267, 269, 270], "pmc": [265, 267], "pmid": [265, 266, 267, 268, 402, 488], "strict": [267, 332, 333, 488], "compli": 267, "attempt": [267, 331, 430, 487, 488], "neither": [267, 488], "manuscript": [267, 490], "browser": [268, 488, 491], "output": [273, 320, 488], "ramp_id_typ": [273, 488], "while": [273, 276, 419, 443, 460, 487, 488], "former": [273, 393, 488, 490], "mysql": [273, 488, 490], "dump": [273, 274, 276, 277, 329, 405, 437, 488], "fast": [273, 488], "sql": [273, 274, 276, 277, 488], "huge": [273, 386, 488, 489], "slow": [273, 443, 488], "alreadi": [273, 334, 419, 429, 488], "id_type_a": [275, 340, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 488], "id_type_b": [275, 340, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 488], "curi": 275, "sqlite": [276, 488], "sqlite3": [276, 488], "connect": [276, 470, 487, 490, 491], "temporari": 276, "show": [277, 443, 488, 491], "acsn": [282, 427], "protein_name_typ": [283, 294], "mandatory_ref": [284, 292], "elem": 286, "cref": 291, "entity_uniprot": [291, 293], "complexvari": 291, "cplex": [291, 488], "stoichiometri": [291, 488], "control": [292, 430, 470, 488, 490], "biopax_fil": 294, "clean": [294, 488], "biopax": [294, 297, 487, 490], "binari": [294, 297, 443], "sbml": [295, 296, 298], "representationa": 296, "pathwaya": 296, "cachefil": [297, 329, 403], "ask": [297, 488], "appli": [297, 344, 419, 454, 488], "criteria": 297, "veri": [297, 487, 488, 491], "stringent": 297, "few": [297, 487, 488, 490], "free": [297, 419, 487, 488, 490], "approx": [297, 488], "2g": 297, "hierarchi": 301, "atc": [307, 311], "umls_concept_on_label": [308, 310], "umls_concept_in_meddra": [308, 310], "side_effect": [308, 310], "meddra_id": [309, 312], "side_effect_nam": [309, 312], "frequenc": [310, 313, 314], "float": 310, "uml": [313, 314], "concept": [313, 314, 488], "attent": 313, "sider_side_effect": 313, "20k": 313, "row": [313, 488, 491], "freq": 314, "independ": [314, 488], "coverag": [314, 429, 491], "ncbi_tax_id": [317, 319, 320, 321, 364, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 405, 488, 491], "score_threshold": [317, 319, 320, 321], "highest_confid": [317, 320, 321], "high_confid": [317, 320, 321], "medium_confid": [317, 320, 321], "low_confid": [317, 320, 321], "physical_interaction_scor": [317, 320], "link": 317, "subscor": [317, 320, 321], "defin": [317, 320, 321, 393, 419, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 491], "interactor": [317, 334], "we": [317, 320, 470, 482, 485, 487, 488, 489, 491], "minimum": [317, 320, 321], "pre": [317, 320, 321, 486], "confid": [317, 320, 321, 429, 488, 491], "stimul": [319, 488], "inhibit": [319, 488], "channel": [320, 321, 488, 491], "form": [320, 443], "subnetwork": 321, "tax": [322, 393], "scientif": [322, 486], "switch": 325, "elm": [325, 423], "resolut": 325, "classifi": [325, 488, 491], "accord": [325, 395, 470, 488], "intract": 327, "save": [329, 486, 487], "next": [329, 437, 488], "pickl": [329, 486, 487], "By": [329, 344, 419, 452, 457, 488, 491], "soup": 330, "look": [330, 331, 334, 393, 405], "up": [330, 331, 334, 405, 488], "instanc": [330, 419, 430, 432, 443, 444, 458, 460, 466, 470, 487, 488, 491], "trip_get_uniprot": 330, "syn": [331, 488], "exclude_method": [332, 333], "infer": [332, 333, 488], "specul": [332, 333], "speci": [332, 333, 488, 490], "obtain": [332, 393, 403, 488], "trip_process": 332, "definit": [332, 419, 486, 487, 490], "dadio": 333, "take_a_trip": 333, "provcess": 333, "discard": 333, "bait": 333, "tab": [334, 344], "intr": 334, "trp_uniprot": 334, "tag": [334, 488], "fill": 334, "so": [334, 446, 452, 454, 457, 487, 488], "twice": 334, "trp": 334, "safeti": 336, "ac": [339, 487, 488], "uk": 339, "ucqueri": 339, "listsourc": 339, "integ": [340, 396, 397, 398, 399, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "unichem_sourc": 340, "unichem_info": 341, "ncbi_id": [343, 488], "latin": [343, 488], "english": [343, 488], "latin_synonym": [343, 488], "construct": [344, 443, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485], "readi": [344, 349, 352, 362, 488], "bypass": [344, 349, 352, 362], "simpl": [344, 349, 352, 362, 419, 487, 488, 491], "concaten": [344, 349, 352, 362], "nest": [344, 349, 352, 362, 488], "exampl": [344, 349, 352, 362, 395, 429, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 486, 487], "built": [344, 349, 352, 362, 393, 419, 486, 487], "sever": [344, 349, 352, 362, 487, 488], "query_build": [344, 352, 362, 488], "AND": [344, 349, 352, 362, 488, 491], "organism_id": [344, 349, 352, 362, 488], "abov": [344, 349, 352, 362, 381, 388, 392, 403, 487, 488, 491], "oper": [344, 349, 352, 362, 488], "within": [344, 349, 352, 362, 408, 460, 470, 482, 485, 487, 488, 491], "OR": [344, 349, 352, 362, 488], "10116": [344, 349, 352, 362, 488, 491], "op": [344, 349, 352, 362, 487, 488], "underscor": [344, 349, 352, 362, 410, 419, 488], "mass": [344, 349, 352, 362, 488], "50000": [344, 349, 352, 362, 488], "TO": [344, 349, 352, 362, 488], "lit_author": [344, 349, 352, 362, 488], "huang": [344, 349, 352, 362, 488], "kovac": [344, 349, 352, 362, 488], "_and": [344, 349, 352, 362, 488], "parenthes": [344, 349, 352, 362, 488], "interv": [344, 349, 352, 362, 460], "help": [344, 349, 352, 362, 486], "search": [344, 349, 352, 362], "syntax": [344, 349, 352, 362], "_field_synonym": [344, 352, 362], "return_field": [344, 352, 362], "__iter__": 344, "over": [344, 355, 490], "skip": [344, 465], "empti": [344, 408, 487, 488], "linebreak": 344, "split": [344, 490], "fail_on_empti": 344, "name_process": 344, "differ": [344, 393, 419, 487, 488, 490, 491], "appropri": [344, 487, 488], "especi": [344, 488, 490], "were": [344, 352, 362, 408, 488], "exactli": [344, 352, 362, 488, 491], "wa": [344, 352, 362, 487, 488], "kind": [344, 352, 362, 488, 491], "previou": [344, 352, 362], "urlencod": 344, "suitabl": [344, 488], "url_plain": 344, "plain": [344, 488], "entry_vers": [345, 488], "sequence_vers": [345, 488], "entry_nam": [345, 488], "replaced_bi": [345, 488], "archiv": [346, 443, 444], "delet": [346, 446, 447, 487, 488, 490], "secondari": [347, 410, 419, 487, 488], "primari": [347, 410, 419, 487, 488], "site": [349, 488, 490], "insert": 349, "confirm": [351, 353], "swissprot": [352, 364, 371, 372, 373, 374, 375, 376, 392, 393, 487, 488], "homo": [352, 488], "sapien": [352, 488], "trembl": [352, 374, 375, 376, 393, 487, 488], "cover": [352, 487, 488], "uniprotqueri": [352, 362, 488], "histori": [355, 486], "recent": [355, 487, 488], "oldest": [355, 487], "fit": [367, 488], "tell": [374, 375, 376, 488, 491], "consid": [376, 403, 488], "mappinginput": [381, 382, 383, 384, 387, 388, 389, 391, 392, 393], "pro_id_type_a": [381, 388], "pro": [381, 388, 488], "automat": [381, 388, 392, 487, 488, 490], "give": [381, 388, 392, 460, 488], "overrid": [381, 388, 392, 393], "pro_id_type_b": [381, 388], "just": [381, 388, 392, 486], "biomart_id_type_a": 382, "biomart_id_type_b": 382, "input_": 383, "col_a": 383, "col_b": 383, "paramat": [384, 389, 391], "metabolom": [384, 486, 487], "type_": 385, "resource_id_type_a": [385, 488], "resource_id_type_b": [385, 488], "input_method": [385, 405, 406, 488], "id_col_a": [386, 488], "id_col_b": [386, 488], "entity_type_a": 386, "entity_type_b": 386, "is_direct": [386, 488], "sign": [386, 427], "input": [386, 390, 393, 405, 486, 487, 490], "extra_edge_attr": [386, 488], "extra_node_attrs_a": 386, "extra_node_attrs_b": 386, "taxon_a": 386, "taxon_b": 386, "post_transl": [386, 419, 488], "positive_filt": 386, "negative_filt": 386, "mark_sourc": 386, "mark_target": 386, "input_arg": [386, 405, 429], "curl_arg": 386, "must_have_refer": 386, "unique_field": 386, "expand_complex": 386, "allow_loop": [386, 488], "only_default_organ": 386, "creat": [386, 419, 443, 460, 487], "vertex": [386, 470, 474, 475, 476, 477, 478, 479, 488], "particular": [386, 395, 488], "vertic": [386, 470, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 488], "fname": [387, 488], "consortium": [388, 488], "ramp": [389, 486], "id_col": 390, "extra_attr": [390, 406, 488], "unichem": [391, 488, 490], "uniprot_id_type_a": 392, "uniprot_id_type_b": 392, "upload": 392, "webservic": [392, 486], "would": [393, 488, 489], "interest": [393, 486, 487, 489], "directli": [393, 410, 467, 486, 487, 491], "ye": 393, "To": [393, 488, 491], "programmat": [393, 488], "interfac": [393, 487, 488], "slightli": [393, 419], "capabl": 393, "some": [393, 408, 453, 458, 487, 488, 491], "latter": [393, 488], "static": 393, "resource_id_typ": 393, "known": [393, 488, 491], "full_nam": [395, 488], "purpos": [395, 419, 488], "attrib": [395, 419], "enabl": [395, 488], "academ": [395, 419, 488], "redistribut": [395, 419, 488, 490], "compat": [395, 419, 490], "alik": [395, 419], "licensefeatur": [396, 398, 399], "classmethod": [396, 397, 398, 399, 443], "check_level": [396, 397, 398, 399], "int_to_level": [396, 397, 398, 399], "nearest": [396, 397, 398, 399], "ordin": [396, 397, 398, 399], "scale": [396, 397, 398, 399, 482, 484, 485, 488], "level_to_int": [396, 397, 398, 399], "to_int": [396, 397, 398, 399], "featur": [396, 397, 398, 399, 486, 488], "pp": 403, "htp_threshold": 403, "20": [403, 488], "studi": [403, 487, 488], "high": [403, 488], "data_attr_nam": 405, "logger": [405, 419, 432, 443, 444, 466], "load_data": 405, "_process_method": 405, "set_method": 405, "evidence_typ": [406, 409, 411], "via": [406, 407, 409, 410], "id_type_enzym": [406, 488], "id_type_substr": 406, "organisms_support": 406, "resource_attr": 406, "resourceattribut": [406, 409], "get_via": 406, "copi": [406, 487, 488], "origin": [406, 486, 487, 490], "come": [406, 487, 488, 491], "data_typ": [407, 410, 411], "mutablemap": 408, "formerli": [408, 488], "thin": 408, "solut": [408, 488], "organis": 408, "clear": [408, 488], "d": [408, 429, 488], "k": [408, 488], "view": [408, 487], "pop": 408, "v": [408, 488], "found": [408, 488], "keyerror": 408, "popitem": 408, "setdefault": 408, "f": 408, "lack": [408, 423], "networkresourcekeybas": 410, "last": [410, 488], "came": 410, "brows": [416, 486], "logfil": [416, 488], "resource_info_path": 419, "posixpath": 419, "home": [419, 488], "runner": 419, "use_package_path": 419, "aim": [419, 487, 488], "central": [419, 488], "commun": [419, 486, 487, 490], "14": [419, 486, 488], "01": [419, 488], "2020": [419, 488], "initi": [419, 460, 488, 490], "step": [419, 455, 460, 488], "develop": [419, 487, 488], "info": [419, 486, 491], "02": [419, 488], "inherit": [419, 488], "make": [419, 432, 443, 444, 451, 457, 458, 466, 488, 491], "prepend": [419, 432, 443, 444, 466], "messag": [419, 432, 443, 444, 447, 450, 451, 466, 486, 491], "add_resource_attr": 419, "abstractresourc": 419, "It": [419, 437, 443, 444, 467, 487, 488, 491], "modifi": [419, 450], "place": [419, 488], "noth": [419, 447], "collect_interact": 419, "pathway_noref": [419, 488], "pathway_al": [419, 488], "activity_flow": [419, 488], "mirna_target": [419, 488], "dorothea": [419, 490, 491], "tfregulon": [419, 429], "omnipath": [419, 424, 426, 427, 486, 490, 491], "reaction_pc": 419, "enzyme_substr": [419, 488], "extra_direct": 419, "small_molecule_protein": [419, 488], "tf_mirna": [419, 488], "pathwaycommon": [419, 488, 490], "pathwaycommons_transcript": 419, "interaction_htp": 419, "interaction_misc": [419, 488], "ligand_receptor": [419, 488, 490], "lncrna_target": 419, "transcription_onebyon": [419, 488], "transcription_dorothea": 419, "ptm_noref": [419, 488], "ptm_all": [419, 488], "reaction_misc": [419, 488], "post_transcript": 419, "process_descript": 419, "drug_target": 419, "license_purpos": [419, 488], "commerci": 419, "profit": [419, 488], "license_shar": 419, "noderiv": 419, "noshar": 419, "deriv": [419, 474, 484, 488, 491], "license_attrib": 419, "noattrib": 419, "composit": [419, 488, 491], "incld": 419, "mani": [419, 443, 487, 488, 490, 491], "overlap": [419, 474, 475, 476, 477, 478, 479, 488], "among": [419, 488, 491], "safest": 419, "sequenti": 419, "legal": [419, 488], "desir": [419, 460, 474, 475, 476, 477, 478, 479], "condit": [419, 488], "alter": [419, 488], "even": [419, 448, 488, 490, 491], "mention": [419, 488], "who": 419, "networkinput": [419, 422, 423, 424, 425, 426, 427, 428, 429, 488], "__resource__": 419, "whole": [419, 488], "networkresourc": [419, 488], "equal": 419, "incid": 419, "flexibl": [419, 488], "collect_network": [419, 488], "license_filt": 419, "secondary_resourc": 419, "postfix": [419, 488], "tfacts_collectri": 419, "forc": [419, 460, 488], "remove_old": 419, "py": 419, "befor": [419, 460, 488], "potenti": [419, 488], "overwrit": 419, "adhesom": [422, 488], "intern": [422, 423, 424, 425, 426, 427, 428, 429, 488, 490], "input_format": [422, 423, 424, 425, 426, 427, 428, 429, 487, 488], "arn": [422, 488], "baccin2019": [422, 488], "ca1": [422, 488], "cellchatdb": [422, 488], "cellink": [422, 488], "cellphonedb": [422, 486], "celltalkdb": [422, 488], "connectomedb": [422, 488], "death": [422, 488], "guide2pharma": [422, 488], "hpmr": [422, 488], "icellnet": [422, 488], "lrdb": [422, 488], "macrophag": [422, 488], "pdz": [422, 488], "ramilowski2015": [422, 488], "scconnect": [422, 488], "signalink3": [422, 488, 491], "signor": [422, 429, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488, 491], "spike": [422, 488, 491], "talklr": [422, 488], "trip": [422, 488], "flow": [422, 491], "dbptm": [423, 488], "depod": [423, 488], "domino": 423, "hprd_p": 423, "iptmnet": [423, 488], "kea": [423, 488], "lmpid": 423, "phelm": 423, "psite": 423, "alz": 424, "ccmap": [424, 425], "dip": [424, 425], "innatedb": [424, 425], "lit17": 424, "matrixdb": [424, 425, 488], "mppi": [424, 425], "netpath": [424, 488], "regulatori": [425, 487, 490], "laudanna_direct": 426, "laudanna_effect": 426, "subset": 426, "undirect": [426, 474, 475, 476, 477, 478, 479, 488], "oreganno_old": 428, "ab": 429, "encode_dist": 429, "encode_prox": 429, "htri": 429, "medicu": 429, "oreganno": 429, "pazar": 429, "trrust": 429, "suffici": 429, "pa": [429, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488], "init_network": [429, 488], "b": [429, 488], "c": [429, 474, 475, 476, 477, 478, 479, 488], "reload": [430, 488], "instanti": [430, 488], "onc": [430, 443, 487, 488], "demand": [430, 488], "license_dir": 432, "actual": [437, 470, 488, 489], "typic": [437, 487, 488], "quicker": 437, "uniqu": [438, 488, 491], "similar": [438, 487, 488, 491], "cache_item": 438, "md5": 438, "hash": [438, 488], "anyth": [438, 446, 449, 470, 482, 485, 488], "cachedir": 439, "ensur": [439, 487, 488], "silent": 443, "post": 443, "req_head": [443, 488], "debug": [443, 452, 453, 458], "outf": [443, 465], "compr": [443, 444], "files_need": [443, 444], "connect_timeout": 443, "ignore_content_length": 443, "init_fun": 443, "get_jsessionid": 443, "init_use_cach": 443, "default_mod": [443, 444], "r": [443, 444, 487, 488, 491], "override_post": 443, "init_head": 443, "return_head": 443, "compress": [443, 444], "write_cach": 443, "force_quot": 443, "sftp_user": 443, "sftp_passwd": 443, "sftp_passwd_fil": 443, "sftp_port": 443, "22": [443, 445, 488, 491], "sftp_host": 443, "sftp_ask": 443, "setup": [443, 455, 488], "cache_dir": 443, "bypass_url_encod": 443, "empty_attempt_again": 443, "keep_fail": 443, "alpn": 443, "http2": 443, "fileopen": 443, "pycurl": [443, 488], "vast": [443, 488], "amount": [443, 488], "cooki": 443, "param": [443, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485], "multipart": 443, "quot": 443, "redirect": 443, "pointer": [443, 444], "gzip": [443, 444], "tar": [443, 444], "gz": [443, 444], "zip": [443, 444], "abl": [443, 487, 488], "progress": 443, "cache_path": 443, "close": [443, 488], "construct_binary_data": 443, "byte": 443, "is_quot": 443, "stackoverflow": 443, "question": [443, 487], "1637762": 443, "php": [443, 488], "open_tgz": [443, 444], "replace_forbidden": 443, "repl": 443, "_": 443, "charact": [443, 488], "forbidden": 443, "certain": [443, 444, 486], "slash": 443, "unix": 443, "window": 443, "environ": [443, 488], "set_binary_data": 443, "transmit": 443, "attach": [443, 474, 475, 476, 477, 478, 479], "filenam": [443, 445, 466, 488], "url_fix": 443, "charset": 443, "utf": [443, 444], "8": [443, 444, 486, 487, 488], "121017": 443, "854988": 443, "file_param": 444, "_open": 444, "set_fileobj": 444, "bz2": 444, "select": [444, 486, 491], "multifil": 444, "examin": 444, "host": [445, 488, 490], "port": 445, "rownam": 445, "_global_context_off": [446, 448, 450, 452, 454, 457], "context": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 470, 474, 475, 476, 477, 478, 479, 482, 485, 488], "handler": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "behaviour": [446, 449, 450, 454, 488], "won": [446, 449, 450, 488], "behind": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488], "scene": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488], "cachedel": [446, 447], "data_format": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488, 490], "load_resourc": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 488], "_global_context_on": [447, 449, 451, 453, 455, 458], "Then": [447, 488], "dryrun": [447, 454, 455], "turn": [447, 448, 449], "upon": [447, 488], "let": [447, 488], "know": [447, 488], "cache_on": 448, "As": [449, 450, 488, 491], "probabl": [449, 488], "cacheprint": [450, 451], "avoid": [452, 457, 474, 475, 476, 477, 478, 479, 487, 488], "restor": [452, 454, 457], "cache_debug_off": 452, "issu": [453, 458, 487], "want": [453, 458, 486, 487, 491], "cache_debug_on": 453, "cache_dryrun_off": 454, "cache_dryrun_on": 455, "itself": [457, 458, 488], "lastcurl": [457, 458, 488], "preserv": [457, 458, 488], "cache_preserve_off": 457, "cache_preserve_on": 458, "percent": 460, "done": [460, 487], "init": 460, "unit": 460, "had": 460, "my": [460, 487], "progressbar": 460, "now": [460, 488], "great": [460, 488], "tqdm": 460, "move": [460, 490], "oldprogress": 460, "get_desc": 460, "suppos": 460, "someth": [460, 487, 488], "constant": [460, 474, 475, 476, 477, 478, 479], "life": 460, "stage": [460, 488], "task": 460, "init_tqdm": 460, "set_don": 460, "posit": [460, 474, 475, 476, 477, 478, 479, 488], "bar": 460, "set_statu": 460, "set_tot": 460, "msg": [460, 488], "busi": 460, "termin": [460, 488], "finish": [460, 488], "destroi": 460, "xsize": 465, "intersect": 465, "cairotest": 465, "pdf": [465, 466], "width": 465, "1024": 465, "height": 465, "bgcol": 465, "embl_gray125": 465, "interscol": 465, "ysize": 465, "ycol": 465, "margin": [465, 466, 488], "24": [465, 488], "mincircl": 465, "cellpad": 465, "graph": [466, 467, 470, 473, 480, 482, 484, 485, 488, 490], "graphix_dir": 466, "graphix_format": 466, "title_text": 466, "title_font_famili": 466, "title_font_s": 466, "title_color": 466, "646567": 466, "layout": [466, 470, 482, 484, 485], "fruchterman_reingold": 466, "layout_param": 466, "vertex_label": 466, "vertex_s": [466, 488], "vertex_label_s": [466, 488], "degree_label_s": 466, "edge_width": [466, 488], "vertex_color": [466, 488], "6ea945": 466, "vertex_label_color": [466, 488], "007b7f": 466, "vertex_alpha": 466, "aa": [466, 488], "vertex_frame_color": 466, "ffffff00": 466, "vertex_frame_width": [466, 488], "edge_label": 466, "edge_label_s": 466, "edge_label_color": 466, "edge_curv": 466, "edge_color": [466, 488], "818284": 466, "edge_alpha": 466, "autocurv": 466, "vertex_label_font": 466, "san": 466, "serif": 466, "edge_label_font": 466, "edge_arrow_s": 466, "edge_arrow_width": 466, "palett": [466, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485], "bbox": [466, 470, 482, 485], "dimens": 466, "1280": 466, "draw": [467, 470, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "routin": [467, 480], "cairo": [467, 470, 474, 475, 476, 477, 478, 479, 482, 485, 488], "surfac": [467, 488], "l": [467, 470, 474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "defaultgraphdraw": [467, 482, 484, 485], "ubigraph": 467, "displai": [467, 488], "ubigraphdraw": 467, "u": [467, 487, 488], "ubietylab": 467, "net": [467, 488], "igraph": [467, 470, 482, 484, 485, 486, 487, 490], "cytoscap": [467, 487, 488], "cytoscaperpc": 467, "plugin": 467, "gforg": 467, "nbic": 467, "nl": 467, "project": 467, "cytoscapegraphdraw": 467, "abstractcairographdraw": [469, 470, 471, 472], "vertex_drawer_factori": 470, "edge_drawer_factori": 470, "label_drawer_factori": 470, "visualis": 470, "2d": 470, "plane": 470, "straight": [470, 474, 475, 476, 477, 478, 479, 488], "curv": 470, "when": [470, 474, 475, 476, 477, 478, 479, 482, 484, 485, 487, 488], "invok": 470, "plot": [470, 473, 486, 490], "__plot__": 470, "drawer": [470, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "boundingbox": [470, 482, 485], "bound": [470, 482, 484, 485, 488], "box": [470, 482, 484, 485], "constructor": [470, 482, 485], "factori": 470, "abstractcairovertexdraw": [470, 485], "area": 470, "color": [470, 474, 475, 476, 477, 478, 479, 482, 484, 485], "defaultvertexdraw": 470, "abstractedgedraw": [470, 475, 476, 479], "style": [470, 473, 490, 491], "drawn": [470, 474, 475, 476, 477, 478, 479, 482, 484, 485], "arrowedgedraw": 470, "textdraw": 470, "abstract": [474, 482, 484], "concret": [474, 484], "draw_directed_edg": [474, 475, 476, 477, 478, 479], "src_vertex": [474, 475, 476, 477, 478, 479], "dest_vertex": [474, 475, 476, 477, 478, 479], "draw_loop_edg": [474, 475, 476, 477, 478, 479], "loop": [474, 475, 476, 477, 478, 479, 486], "circl": [474, 475, 476, 477, 478, 479], "draw_undirected_edg": [474, 475, 476, 477, 478, 479], "get_label_posit": [474, 475, 476, 477, 478, 479], "midpoint": [474, 475, 476, 477, 478, 479], "align": [474, 475, 476, 477, 478, 479], "tri": [474, 475, 476, 477, 478, 479], "x": [474, 475, 476, 477, 478, 479, 482, 484, 485], "y": [474, 475, 476, 477, 478, 479, 482, 484, 485, 488], "horizont": [474, 475, 476, 477, 478, 479], "taken": [474, 475, 476, 477, 478, 479], "textalign": [474, 475, 476, 477, 478, 479], "alpha_at_src": 475, "alpha_at_dest": 475, "vari": 475, "alpha": [475, 477, 478, 488], "destin": [475, 477, 478, 479], "arrow": 476, "alphavaryingedgedraw": [477, 478], "opac": [477, 478], "zero": [477, 478], "transpar": [477, 478], "interpol": [477, 478], "taper": 479, "wider": 479, "narrow": 479, "abstractvertexdraw": 482, "abstractcairodraw": 482, "canva": 482, "visual_vertex": [482, 484, 485], "coord": [482, 484, 485], "Its": [482, 484, 485, 488], "visualvertexbuild": [482, 484, 485], "coordin": [482, 484, 485, 487, 488], "algorithm": [482, 484, 485], "abstractdraw": 484, "welcom": [486, 488], "pypath": [486, 490, 491], "instal": 486, "doc": [486, 490], "manag": 486, "faq": 486, "contact": [486, 488], "impressum": 486, "releas": [486, 488], "mous": [486, 487, 488], "rat": 486, "role": [486, 487], "inter": [486, 487], "cellular": [486, 487], "explor": [486, 488], "32": [486, 488], "31": [486, 488], "74": [486, 488], "93": 486, "110": [486, 488], "11": [486, 488], "13": [486, 488], "upcom": 486, "how": [486, 487], "navig": 486, "introduct": 486, "app": [486, 487], "hmdb": 486, "swisslipid": 486, "lipid": 486, "self": 486, "sanit": 486, "intercellular": [486, 487, 490], "quantit": 486, "overview": 486, "intercel": [486, 487, 490, 491], "log": [486, 487, 490], "disabl": 486, "write": [486, 487], "bel": [486, 487, 490], "export": [486, 487, 490], "legaci": 486, "quickli": 486, "plai": 486, "causal": [486, 491], "out": [487, 488], "packag": [487, 488], "omnipathr": [487, 488], "popular": 487, "versatil": [487, 488, 490], "150": [487, 488], "don": [487, 488, 489, 491], "yourself": 487, "try": [487, 488], "builder": 487, "peopl": [487, 488], "satisfi": 487, "realli": [487, 488], "fresh": [487, 488], "pypi": [487, 488], "pip": 487, "git": 487, "github": [487, 488], "saezlab": 487, "comprehens": [487, 488, 490, 491], "guid": [487, 488], "experienc": 487, "well": [487, 488], "platform": 487, "biolog": [487, 488], "languag": [487, 488], "major": [487, 488, 490, 491], "distinguish": 487, "overal": [487, 488], "core": [487, 488, 490], "downlad": 487, "applic": [487, 488], "stand": 487, "alon": 487, "processor": 487, "begin": 487, "fundament": [487, 488], "design": [487, 488], "principl": 487, "todai": 487, "expos": 487, "rich": [487, 488], "five": [487, 488], "enz_sub": [487, 488, 491], "howev": [487, 488], "often": [487, 488], "get_db": [487, 488], "But": [487, 488], "subsequ": [487, 488], "easi": [487, 488], "mb": [487, 488], "gb": [487, 488], "long": [487, 488], "prone": 487, "truncat": [487, 488], "due": [487, 488], "interrupt": 487, "problemat": 487, "possibli": [487, 488], "anoth": [487, 488, 491], "sometim": [487, 488, 490, 491], "offlin": 487, "encount": 487, "fix": [487, 488, 490], "much": [487, 488, 490, 491], "faster": [487, 488], "still": [487, 488], "standalon": [487, 488], "script": [487, 488], "varieti": [487, 488, 491], "predefin": [487, 488], "map_nam": [487, 488], "p00533": [487, 488, 491], "genesymbol": [487, 488, 491], "egfr": [487, 488, 491], "homologen": [487, 488, 490, 491], "q01279": [487, 488], "run": [487, 488, 491], "doesn": [487, 488], "pyproject": 487, "toml": 487, "besid": [487, 488], "privat": 487, "sensit": 487, "matter": [487, 488], "feel": [487, 488], "omnipathdb": [487, 488, 491], "gmail": 487, "d\u00e9ne": 487, "t\u00fcrei": 487, "saez": 487, "contribut": 487, "scientist": 487, "erva": 487, "ulusoi": 487, "melih": 487, "darcan": 487, "\u00f6mer": 487, "kaan": 487, "vural": 487, "tennur": 487, "k\u0131l\u0131\u00e7": 487, "elif": 487, "\u00e7evrim": 487, "b\u00fcnyamin": 487, "\u015fen": 487, "atabei": 487, "\u00fcnl\u00fc": 487, "mert": 487, "erg\u00fcn": 487, "hu": [487, 488], "scienc": 487, "pi": [487, 488], "tunca": 487, "do\u011fan": 487, "leila": 487, "gul": 487, "dezs\u0151": 487, "m\u00f3do": 487, "m\u00e1rton": 487, "\u00f6lbei": 487, "tam\u00e1": 487, "korcsm\u00e1ro": 487, "korcsmaro": 487, "michael": 487, "klein": 487, "fabian": 487, "charl": 487, "taplei": 487, "hoyt": 487, "daniel": 487, "domingo": 487, "fern\u00e1ndez": 487, "ad": [487, 488], "olga": 487, "ivanova": 487, "introduc": 487, "sophia": 487, "m\u00fcller": 487, "dott": 487, "collectri": [487, 488], "nicol\u00e0": 487, "palacio": 487, "sebastian": 487, "lobentanz": 487, "ahmet": 487, "rifaioglu": 487, "mainten": [487, 488], "refactor": 487, "aurelien": 487, "dugourd": 487, "christina": 487, "schmidt": 487, "maintain": [487, 488], "francesco": 487, "ceccarelli": 487, "attila": 487, "g\u00e1bor": 487, "alberto": 487, "valdeoliva": 487, "logo": 487, "jakob": 487, "wirbel": 487, "graphic": 487, "spencer": 487, "phillip": 487, "embl": [487, 488], "bird": 487, "ey": 487, "15": 488, "16": 488, "17": 488, "18": 488, "19": 488, "21": 488, "segment": 488, "bioconductor": 488, "furthermor": 488, "enjoi": 488, "almost": [488, 490], "unlimit": 488, "tour": 488, "chanc": 488, "hesit": 488, "__version__": 488, "execut": 488, "0m": 488, "49": 488, "47": 488, "2023": 488, "03": 488, "09": 488, "39": 488, "36": 488, "easiest": 488, "henc": [488, 490, 491], "quick": 488, "34": 488, "27": 488, "2022": 488, "lt": 488, "databasemanag": 488, "0x602fb851cd90": 488, "gt": 488, "tf_target": [488, 491], "small_molecul": 488, "mirna_mrna": 488, "lncrna_mrna": 488, "offer": [488, 490], "cu": 488, "83": 488, "7980": 488, "35551": 488, "1m": 488, "55": 488, "18558": 488, "94358": 488, "tft": 488, "2m": 488, "72": 488, "54": 488, "18986": 488, "326708": 488, "mi": 488, "28": 488, "1264": 488, "3288": 488, "tmi": 488, "41": 488, "1032": 488, "4960": 488, "lnc": 488, "33": 488, "243": 488, "217": 488, "alloster": 488, "metabolit": [488, 490], "experiment": 488, "extend": 488, "futur": [488, 491], "smol": 488, "94": 488, "57": 488, "1980": 488, "3147": 488, "26": 488, "41426": 488, "co": 488, "28173": 488, "quit": 488, "43": 488, "60": 488, "5490653": 488, "50872": 488, "68": 488, "heavi": 488, "ic": 488, "23": 488, "37": 488, "301527": 488, "48570": 488, "biomed": 488, "troublesom": 488, "broken": 488, "daili": 488, "after": [488, 491], "cytosig": 488, "signor_interact": 488, "_interact": 488, "_enz_sub": 488, "_complex": 488, "_annot": 488, "intend": 488, "respect": 488, "fulli": 488, "_raw": 488, "_map": 488, "bring": 488, "state": 488, "though": [488, 491], "mai": 488, "observ": 488, "repeat": 488, "pattern": 488, "arbitrarili": 488, "toward": 488, "straightforward": 488, "outsid": 488, "signor_complex": 488, "intera": 488, "complexaggreg": 488, "p23511_p25208_q13952": 488, "nfy": 488, "p68104_p85299_q6r327_q8tb45_q9bvc4": 488, "mtorc2": 488, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 488, "mtorc1": 488, "p63208_q13616_q9y297": 488, "scf": 488, "betatrcp": 488, "q09472_q92793": 488, "cbp": 488, "p300": 488, "q09472_q92793_q92831": 488, "pcaf": 488, "q13485_q15796": 488, "smad2": [488, 491], "smad4": 488, "p84022_q13485": 488, "smad3": 488, "p05412_q13485": 488, "jun": 488, "q15796_q9hau4": 488, "smurf2": 488, "o15105_q01094_q13547": 488, "smad7": 488, "hdac1": 488, "e2f": 488, "p19838_q04206": 488, "nfkb": 488, "p65": 488, "p50": 488, "o14920_o15111": 488, "ik": 488, "1000": 488, "17699": 488, "readabl": 488, "52": 488, "signorinteract": 488, "o15530": 488, "source_isoform": 488, "target_isoform": 488, "source_typ": 488, "target_typ": 488, "phosphoryl": 488, "10455013": 488, "ptm_type": 488, "ptm_residu": 488, "ser396": 488, "ptm_motif": 488, "sssssshslsasdtg": 488, "q9nq66": 488, "18035": 488, "smallmolecul": 488, "quantiti": 488, "23880553": 488, "catalysi": 488, "p62136": 488, "o15169": 488, "down": 488, "dephosphoryl": 488, "17318175": 488, "ser77": 488, "yepegsasptppylk": 488, "sou": 488, "3285": 488, "signor_enzyme_substr": 488, "easier": 488, "enzymesubstrateaggreg": 488, "58": 488, "typ": 488, "resnum": 488, "396": 488, "389": 488, "403": 488, "resaa": 488, "enzyme_isoform": 488, "substrate_isoform": 488, "77": 488, "70": 488, "84": 488, "final": 488, "assign": [488, 491], "signor_pathway_annot": 488, "practic": 488, "o14733": 488, "48": 488, "signorpathwai": 488, "tnf": 488, "toll": 488, "haven": 488, "four": 488, "signor_protein_famili": 488, "famili": 488, "own": [488, 490], "pf2": 488, "53": 488, "q9hbw0": 488, "q92633": 488, "q9uby5": 488, "showcas": 488, "metabol": 488, "enzymat": 488, "closer": 488, "ramp_list_t": 488, "51": 488, "analyt": 488, "rampid": 488, "analytehasontologi": 488, "rampcompoundid": 488, "rampontologyid": 488, "analytehaspathwai": 488, "pathwayrampid": 488, "pathwaysourc": 488, "analytesynonym": 488, "geneorcompound": 488, "catalyz": 488, "rampgeneid": 488, "chem_prop": 488, "ramp_id": 488, "chem_data_sourc": 488, "chem_source_id": 488, "iso_smil": 488, "inchi_key_prefix": 488, "inchi_kei": 488, "mw": 488, "monoisotop_mass": 488, "common_nam": 488, "mol_formula": 488, "db_version": 488, "ramp_vers": 488, "load_timestamp": 488, "version_not": 488, "met_intersects_json": 488, "gene_intersects_json": 488, "met_intersects_json_pw_map": 488, "gene_intersects_json_pw_map": 488, "db_sql_url": 488, "entity_status_info": 488, "status_categori": 488, "entity_source_id": 488, "entity_source_nam": 488, "entity_count": 488, "metabolite_class": 488, "class_source_id": 488, "class_level_nam": 488, "class_nam": 488, "commonnam": 488, "hmdbontologytyp": 488, "metcount": 488, "pathwayr": 488, "1368": 488, "ramp_raw": 488, "conveni": 488, "At": 488, "bottleneck": 488, "thank": 488, "happen": 488, "25": [488, 491], "sourceid": 488, "idtyp": 488, "priorityhmdbstatu": 488, "datasourc": 488, "pathwaycount": 488, "hmdb0000001": 488, "ramp_c_000000001": 488, "methylhistidin": 488, "quantifi": 488, "hmdb0000479": 488, "50599": 488, "chemspid": 488, "83153": 488, "c01152": 488, "hmdb_kegg": 488, "756552": 488, "h0ydb7": 488, "ramp_g_000009307": 488, "rab38": 488, "null": 488, "wiki": 488, "756553": 488, "a0a024r191": 488, "756554": 488, "h0yea4": 488, "756555": 488, "entrez": 488, "23682": 488, "756556": 488, "gene_symbol": 488, "756557": 488, "physicochem": 488, "00": 488, "46": 488, "h": 488, "oc": 488, "o": 488, "n": 488, "c1": 488, "brmwtnujhumwm": 488, "lurjtmiesa": 488, "c7h11n3o2": 488, "169": 488, "181": 488, "085": 488, "cc1": 488, "cn": 488, "cn1c": 488, "jdhildinmrgul": 488, "27596": 488, "cn1cncc1c": 488, "methyl": 488, "histidin": 488, "cn1cnc": 488, "tele": 488, "ramp_c_000000002": 488, "hmdb0000002": 488, "ncccn": 488, "xfnjvjplkcpibv": 488, "uhfffaoysa": 488, "c3h10n2": 488, "c4": 488, "h1": 488, "5h2": 488, "1249": 488, "0844": 488, "diaminopropan": 488, "275898": 488, "ramp_c_000258279": 488, "lipidmap": 488, "lmpk15050003": 488, "ccccccccccccc": 488, "uxlmjhnfdrmgpw": 488, "ljqanchmsa": 488, "c24h38o6": 488, "422": 488, "267": 488, "hydroxi": 488, "methoxi": 488, "2r": 488, "acetoxi": 488, "pentadecyl": 488, "275899": 488, "ramp_c_000258280": 488, "lmpk15050004": 488, "cc": 488, "cvznklnahbtint": 488, "jochjyfzsa": 488, "c24h38o5": 488, "406": 488, "272": 488, "benzoq": 488, "275900": 488, "ramp_c_000226089": 488, "lmpk15050005": 488, "ccccccccccc": 488, "jiugzsypfredlg": 488, "hxuwfjfhsa": 488, "c22h34o5": 488, "378": 488, "241": 488, "tridecyl": 488, "benzoqui": 488, "275901": 488, "ramp_c_000258283": 488, "lmpk15050008": 488, "ccccccccccccccc": 488, "gxdurrguxldzkn": 488, "c21h34o4": 488, "350": 488, "246": 488, "suberonon": 488, "275902": 488, "ramp_c_000258284": 488, "lmpk15050009": 488, "amknobhckrzhio": 488, "c19h30o4": 488, "322": 488, "214": 488, "rapanon": 488, "275903": 488, "advantag": 488, "vice": 488, "versa": 488, "alwai": 488, "con": 488, "your": [488, 491], "disk": 488, "56": 488, "07": 488, "0x6fa1e9e4e940": 488, "big": 488, "enough": 488, "short": [488, 491], "period": 488, "format_byt": 488, "python_memory_usag": 488, "44": 488, "list_column": 488, "subqueri": 488, "order": [488, 491], "distinct": 488, "ON": 488, "read_sql_queri": 488, "hmdb00001": 488, "104129": 488, "hmdb0126033": 488, "25882": 488, "104130": 488, "hmdb0141947": 488, "180150": 488, "104131": 488, "hmdb0128505": 488, "7870": 488, "104132": 488, "hmdb0130984": 488, "8227": 488, "104133": 488, "hmdb0130987": 488, "8630": 488, "104134": 488, "Such": 488, "easili": [488, 491], "ramp_map": 488, "45": 488, "brenda": 488, "kegg_glycan": 488, "lipidbank": 488, "ncbiprotein": 488, "plantfa": 488, "wikidata": 488, "29": 488, "lmfa00000008": 488, "slm": 488, "000390048": 488, "lmfa01010001": 488, "000000510": 488, "lmfa01010002": 488, "000000449": 488, "lmfa01010003": 488, "000001194": 488, "lmfa01010004": 488, "000001195": 488, "lmfa01010005": 488, "000389552": 488, "lmfa01010006": 488, "000001196": 488, "lmfa01010007": 488, "000389947": 488, "lmfa01010008": 488, "000000853": 488, "lmfa01010010": 488, "000000855": 488, "lmfa01010011": 488, "000389946": 488, "lmfa01010012": 488, "000000719": 488, "lmfa01010013": 488, "000001198": 488, "lmfa01010014": 488, "000000825": 488, "lmfa01010015": 488, "000001199": 488, "lmfa01010017": 488, "000001095": 488, "lmfa01010019": 488, "000001205": 488, "lmfa01010020": 488, "000000829": 488, "lmfa01010021": 488, "000001207": 488, "lmfa01010022": 488, "000000827": 488, "lmfa01010023": 488, "000001128": 488, "lmfa01010024": 488, "000000414": 488, "lmfa01010026": 488, "000000539": 488, "lmfa01010027": 488, "000000980": 488, "lmfa01010028": 488, "000000540": 488, "lmfa01010030": 488, "000000543": 488, "lmfa01010032": 488, "000000544": 488, "lmfa01010034": 488, "00000": 488, "44684": 488, "got": 488, "63": 488, "30": 488, "lmst02030086": 488, "000485328": 488, "lmst02030087": 488, "000485330": 488, "lmsp06020013": 488, "000000534": 488, "lmst02020001": 488, "000001055": 488, "000485315": 488, "35218": 488, "lmpr0104010007": 488, "000389242": 488, "35219": 488, "lmpr0104030005": 488, "000390232": 488, "35220": 488, "lmpr0104030006": 488, "000390227": 488, "35221": 488, "lmpr01070626": 488, "000000432": 488, "35222": 488, "lmpr01090015": 488, "000389419": 488, "35223": 488, "get_mapp": 488, "38": 488, "medchemexpress": 488, "actor": 488, "affymetrix": 488, "alzforum": 488, "alzforum_mut": 488, "araport": 488, "atla": [488, 491], "bindingdb": 488, "carotenoiddb": 488, "cas_id": 488, "cgnc": 488, "chemicalbook": 488, "clinicaltri": 488, "clinic": 488, "7422": 488, "35": 488, "mapping_t": 488, "mappingtabledefinit": 488, "input_class": 488, "rampmap": 488, "3238": 488, "insight": 488, "99": 488, "131431": 488, "hmdb0094709": 488, "lxml": 488, "etre": 488, "minim": 488, "iter_metabolit": 488, "04": 488, "0x60b1846262c0": 488, "On": 488, "schema": 488, "instruct": 488, "metabolites_schema": 488, "direct_par": 488, "kingdom": 488, "sub_class": 488, "molecular_framework": 488, "alternative_par": 488, "findal": 488, "substitu": 488, "spectra": 488, "spectrum": 488, "spectrum_id": 488, "biological_properti": 488, "cellular_loc": 488, "biospecimen_loc": 488, "biospecimen": 488, "tissue_loc": 488, "tissu": [488, 491], "kegg_map_id": 488, "smpdb_id": 488, "experimental_properti": 488, "4037": 488, "proteins_schema": 488, "gene_properti": 488, "chromosome_loc": 488, "locu": 488, "gene_sequ": 488, "protein_properti": 488, "residue_numb": 488, "molecular_weight": 488, "theoretical_pi": 488, "polypeptide_sequ": 488, "transmembrane_region": 488, "region": 488, "signal_region": 488, "pfam": 488, "pfam_id": 488, "metabolite_associ": 488, "go_classif": 488, "go_class": 488, "go_id": 488, "general_refer": 488, "general_": 488, "2072": 488, "metabolites_raw": 488, "proteins_raw": 488, "head": 488, "peek": 488, "belong": 488, "cystein": 488, "thereof": 488, "amino": 488, "carboxi": 488, "hydrogen": 488, "glycin": 488, "heteroatom": 488, "carboxyl": 488, "acid": 488, "analogu": 488, "aromat": 488, "heteromonocycl": 488, "aralkylamin": 488, "azacycl": 488, "carbonyl": 488, "heteroaromat": 488, "hydrocarbon": 488, "imidazolyl": 488, "monoalkylamin": 488, "monocarboxyl": 488, "substitut": 488, "imidazol": 488, "oxid": 488, "132354": 488, "hmdb0000005": 488, "ketobutyr": 488, "hmdb0000008": 488, "hydroxybutyr": 488, "hmdb0000010": 488, "methoxyestron": 488, "hmdb0000011": 488, "hmdb0000012": 488, "deoxyuridin": 488, "hmdb0000014": 488, "deoxycytidin": 488, "hmdb0000015": 488, "cortexolon": 488, "hmdb0000016": 488, "deoxycorticosteron": 488, "hmdb0000017": 488, "pyridox": 488, "hmdb0000019": 488, "ketoisovaler": 488, "hmdb0000020": 488, "p": 488, "hydroxyphenylacet": 488, "hmdb0000021": 488, "iodotyrosin": 488, "hmdb0000022": 488, "methoxytyramin": 488, "hmdb0000023": 488, "hydroxyisobutyr": 488, "hmdb00": 488, "1291": 488, "gene_nam": 488, "nucleotidas": 488, "nt5e": 488, "deoxycytidyl": 488, "deaminas": 488, "dctd": 488, "ump": 488, "cmp": 488, "cmpk1": 488, "cytosol": 488, "1b": 488, "nt5c1b": 488, "1a": 488, "nt5c1a": 488, "deoxyribonucleotidas": 488, "nt5c": 488, "dck": 488, "mitochondri": 488, "nt5m": 488, "hydroxymethylglutaryl": 488, "coa": 488, "lyas": 488, "hmgcl": 488, "atp": 488, "citrat": 488, "synthas": 488, "acli": 488, "histon": 488, "acetyltransferas": 488, "ep300": 488, "pyruv": 488, "dehydrogenas": 488, "e1": 488, "subunit": 488, "beta": 488, "pdhb": 488, "acetyl": [488, 491], "acat2": 488, "creb": 488, "crebbp": 488, "diamin": 488, "acetyltransf": 488, "1478": 488, "metabolites_t": 488, "proteins_t": 488, "nameless": 488, "notat": 488, "_tabl": 488, "nc": 488, "ccc": 488, "tyeybosbbbhjiv": 488, "afendnxgafykqo": 488, "vkhmyheasa": 488, "12ccc": 488, "c3": 488, "wheuwnkscxykbu": 488, "qpwughhjsa": 488, "whbmmwsbfzvssr": 488, "gsvougtgsa": 488, "1o": 488, "n1c": 488, "nc1": 488, "mxhrcpnrjammim": 488, "shyzeuofsa": 488, "1c": 488, "o1": 488, "cktsbutuhbmzgz": 488, "12cc": 488, "whbhbvvogneclv": 488, "obqkjfggsa": 488, "zesrjspzrdmnhi": 488, "yfwfahhusa": 488, "c1o": 488, "hxacouqixzgnbf": 488, "1h": 488, "yl": 488, "propanediamin": 488, "propylenediamin": 488, "ketobutano": 488, "oxobutyr": 488, "met": 488, "hydroxybutano": 488, "meth": 488, "hydro": 488, "du": 488, "deo": 488, "5r": 488, "hydroxymet": 488, "desoxi": 488, "hydroxycorticosteron": 488, "cortodoxo": 488, "pregnen": 488, "dion": 488, "hydroxyp": 488, "hydroxymethylp": 488, "hmdb_synonym": 488, "propano": 488, "mhi": 488, "n1": 488, "dihydrochlorid": 488, "expand": 488, "prop": 488, "291": 488, "hydroxymethyl": 488, "isonicotin": 488, "292": 488, "pyridoxin": 488, "293": 488, "pyridoxinecarboxyl": 488, "294": 488, "pyridoxyl": 488, "295": 488, "296": 488, "300": 488, "care": 488, "combinatori": 488, "grow": 488, "taxonomy__alternative_par": 488, "taxonomy__class": 488, "taxonomy__descript": 488, "taxonomy__direct_par": 488, "taxonomy__kingdom": 488, "taxonomy__molecular_framework": 488, "taxonomy__sub_class": 488, "taxonomy__substitu": 488, "compoun": 488, "kno": 488, "amin": 488, "aralkyla": 488, "organopnictogen": 488, "comp": 488, "organonitrogen": 488, "aliphat": 488, "acycl": 488, "keton": 488, "keto": 488, "ket": 488, "fatti": 488, "alcohol": 488, "hy": 488, "unsubstitut": 488, "benzenoid": 488, "oxo": 488, "steroid": 488, "estrogen": 488, "homopolycycl": 488, "estran": 488, "oxost": 488, "hyd": 488, "pyrimidin": 488, "nucleosid": 488, "deoxyribonucleosid": 488, "aminopyrimidin": 488, "hydroxysteroid": 488, "oxosteroid": 488, "del": 488, "delta": 488, "carbo": 488, "pyridin": 488, "pyridinecarboxyl": 488, "heteromon": 488, "gave": 488, "birth": 488, "000": [488, 491], "2235": 488, "vinylog": 488, "organooxygen": 488, "2236": 488, "2237": 488, "2238": 488, "2239": 488, "2240": 488, "metabolites_map": 488, "proteins_map": 488, "c00109": 488, "c00526": 488, "c00847": 488, "c00881": 488, "c00986": 488, "c01089": 488, "c03205": 488, "ccc2": 488, "12c": 488, "c05299": 488, "c05488": 488, "c05984": 488, "pretti": 488, "h3": 488, "6h": 488, "8h2": 488, "1h3": 488, "t6": 488, "m0": 488, "s1": 488, "constitut": 488, "isom": 488, "hydrid": 488, "tau": 488, "n3": 488, "81": 488, "figur": [488, 490], "hmdb_name": 488, "2024": 488, "06": 488, "swisslipids_tissu": 488, "0x6a4f241d0230": 488, "000056561": 488, "phosphatidylcholin": 488, "40": 488, "cell": [488, 491], "uberon": 488, "0001969": 488, "blood": 488, "plasma": [488, 491], "6814": 488, "lipids2uniprot": 488, "000056510": 488, "6806": 488, "000056525": 488, "6809": 488, "000056524": 488, "6808": 488, "000056509": 488, "6805": 488, "934": 488, "000098542": 488, "phosphatidylethanolamin": 488, "0000468": 488, "6239": 488, "caenorhabd": 488, "elegan": 488, "15918": 488, "935": 488, "000098543": 488, "15917": 488, "936": 488, "000098546": 488, "15916": 488, "937": 488, "000098549": 488, "15913": 488, "938": 488, "000098557": 488, "15910": 488, "939": 488, "tool": 488, "research": 488, "lmsd": 488, "sdf": 488, "lmsd_sdf": 488, "42": 488, "lmfa00000001": 488, "lipid_maps_structure_databas": 488, "comment": 488, "mol": 488, "lm_id": 488, "systematic_nam": 488, "methyloctadec": 488, "ynoyl": 488, "anhydrid": 488, "c40h66o5": 488, "vogbkcaaniaxci": 488, "h7": 488, "38h": 488, "34h2": 488, "6h3": 488, "ccccccc": 488, "ccccc": 488, "fa": 488, "o3": 488, "acetylen": 488, "10930192": 488, "chebi_id": 488, "178363": 488, "acyl": 488, "main_class": 488, "fa00": 488, "exact_mass": 488, "626": 488, "491025": 488, "48116": 488, "len": 488, "1803": 488, "And": [488, 491], "pc": 488, "lmgp01010888": 488, "9z": 488, "octadecenoyl": 488, "octadecanoyl": 488, "sn": 488, "glycero": 488, "phosphocholin": 488, "c44h86no8p": 488, "nmjcstnqfypvor": 488, "vhonouadsa": 488, "50": 488, "h20": 488, "42h": 488, "41h2": 488, "5h3": 488, "b22": 488, "t42": 488, "m1": 488, "cop": 488, "occ": 488, "ccccccccccccccccc": 488, "coc": 488, "cccccccc": 488, "cholin": 488, "phosphat": 488, "ester": 488, "oleo": 488, "stearin": 488, "oleoyl": 488, "stearoyl": 488, "lecithin": 488, "ospc": 488, "0_18": 488, "24778936": 488, "hmdb_id": 488, "hmdb0008102": 488, "76073": 488, "swisslipids_id": 488, "000012": 488, "2352": 488, "08": 488, "000012332": 488, "na": 488, "2290": 488, "esummari": 488, "eutil": 488, "6063": 488, "uid": 488, "gd": 488, "gpl": 488, "erank": 488, "8esiq": 488, "evalu": 488, "joaz": 488, "titl": 488, "diurnal": 488, "circadian": 488, "arabidopsi": 488, "thaliana": 488, "gdstype": 488, "profil": 488, "valtyp": 488, "ratio": 488, "idref": 488, "genenam": 488, "genedesc": 488, "ugnam": 488, "at4g11560": 488, "ugdesc": 488, "bromo": 488, "adjac": 488, "bah": 488, "nucdesc": 488, "9366": 488, "lambda": 488, "prl2": 488, "cdna": 488, "clone": 488, "135j10t7": 488, "entrez_gene_id": 488, "gbacc": 488, "t46103": 488, "ptacc": 488, "cloneid": 488, "orf": 488, "spotid": 488, "vmin": 488, "395000": 488, "vmax": 488, "201000": 488, "a1b3c1": 488, "abscal": 488, "aflag": 488, "aoutl": 488, "rstd": 488, "rmean": 488, "get_pubm": 488, "33209674": 488, "pubdat": 488, "oct": 488, "epubd": 488, "transl": 488, "androl": 488, "urol": 488, "kim": 488, "authtyp": 488, "clusterid": 488, "lee": 488, "sh": 488, "dh": 488, "jy": 488, "hong": 488, "ih": 488, "lastauthor": 488, "gemcitabin": 488, "versu": 488, "chemotherapi": 488, "patient": 488, "metastat": 488, "urotheli": 488, "carcinoma": 488, "retrospect": 488, "sorttitl": 488, "volum": 488, "2113": 488, "2121": 488, "lang": 488, "eng": 488, "2263": 488, "1956": 488, "epiderm": 488, "growth": 488, "factor": [488, 491], "currentid": 488, "chromosom": 488, "geneticsourc": 488, "genom": 488, "maploc": 488, "7p11": 488, "otheralias": 488, "erbb": 488, "erbb1": 488, "errp": 488, "her1": 488, "nisbd2": 488, "pig61": 488, "mena": 488, "otherdesign": 488, "viii": 488, "avian": 488, "erythroblast": 488, "leukemia": 488, "viral": 488, "erb": 488, "oncogen": 488, "homolog": [488, 491], "prolifer": 488, "induc": 488, "61": 488, "tyrosin": 488, "b2": 488, "proto": 488, "nomenclaturesymbol": 488, "nomenclaturenam": 488, "nomenclaturestatu": 488, "mim": 488, "131550": 488, "genomicinfo": 488, "chrloc": 488, "chraccver": 488, "nc_000007": 488, "chrstart": 488, "55019016": 488, "chrstop": 488, "55211627": 488, "exoncount": 488, "geneweight": 488, "580393": 488, "5417": 488, "90": 488, "min": 488, "awar": 488, "hundr": 488, "dozen": [488, 491], "sooner": 488, "later": 488, "accid": 488, "recommend": 488, "remain": 488, "cache_delete_on": 488, "depod_enzyme_substr": 488, "59": 488, "cache_off": 488, "cache_print_on": 488, "dry_run_on": 488, "wrong": 488, "debug_on": 488, "curl_connect_timeout": 488, "establish": 488, "curl_extended_timeout": 488, "exception": 488, "curl_retri": 488, "curl_timeout": 488, "360": 488, "deep": 488, "stack": 488, "investig": 488, "difficult": 488, "preserve_on": 488, "kept": 488, "depod_curl": 488, "0x6947386dc8b0": 488, "fileobj": 488, "bioss": 488, "uni": 488, "freiburg": 488, "de": 488, "depod_201405_human_phosphatas": 488, "mitab": 488, "_io": 488, "textiowrapp": 488, "dene": 488, "6a711369ecf9dcff8c5ed88996685b54": 488, "mode": 488, "iso": 488, "8859": 488, "okai": 488, "wether": 488, "successfulli": 488, "night": 488, "transient": 488, "disappear": 488, "dai": 488, "perman": 488, "mayb": 488, "third": 488, "parti": 488, "lot": [488, 490], "notebook": 488, "pypath_log": 488, "s3e92": 488, "535b06d53a59e75bb693369bc5fdc556": 488, "112963": 488, "verifi": 488, "certif": 488, "invalid": 488, "expir": 488, "miss": 488, "softwar": 488, "encrypt": 488, "trust": 488, "reach": [488, 489], "root": [488, 490], "global": 488, "everi": [488, 490], "comput": 488, "program": 488, "correctli": 488, "admin": 488, "duti": 488, "procedur": 488, "97": 488, "scan": 488, "cipher": 488, "libcurl": 488, "anaconda": 488, "java": 488, "mozilla": 488, "firefox": 488, "seriou": 488, "strong": 488, "think": 488, "written": 488, "rc": 488, "get_control": 488, "resourcecontrol": 488, "0x6cc25e25dcf0": 488, "BY": 488, "sa": 488, "aspect": [488, 491], "pw_academ": 488, "pw_commerci": 488, "pdzbase": 488, "No": 488, "nar": 488, "gplv3": 488, "mit": 488, "net_academ": 488, "net_commerci": 488, "79": 488, "6833": 488, "25607": 488, "6429": 488, "23288": 488, "usabl": 488, "400": 488, "fine": 488, "grain": 488, "analysi": [488, 490], "expert": 488, "thought": 488, "owner": 488, "permiss": 488, "pai": 488, "fee": 488, "product": 488, "yearusedreleas": 488, "2015": 488, "2009": 488, "2011": 488, "bioinformat": 488, "oxfordjourn": 488, "690": 488, "d1": 488, "d321": 488, "suppl_1": 488, "d235": 488, "univ": 488, "lyon1": 488, "fr": 488, "omictool": 488, "19147664": 488, "20852260": 488, "25378329": 488, "mammalia": 488, "extracellular": [488, 491], "bairoch": 488, "partner": [488, 491], "repor": 488, "4479": 488, "197": 488, "collect_enzyme_substr": 488, "enzymesubstrateresourc": 488, "phosphoelm": 488, "li2012": 488, "phosphonetwork": [488, 491], "mimp": 488, "protmapp": 488, "202": 488, "phosphoelm_enzyme_substr": 488, "larger": 488, "netr": 488, "deathdomain": 488, "1864": 488, "05": 488, "7979": 488, "35550": 488, "8002": 488, "35748": 488, "older": 488, "mentin": 488, "focu": 488, "sinc": 488, "constraint": 488, "unbias": 488, "interactom": 488, "screen": 488, "vidal": 488, "lncrna_protein": 488, "guarante": 488, "moment": 488, "dict_kei": 488, "connectomedb2020": 488, "popul": 488, "trpc1": 488, "kcnma1": 488, "ppp3ca": 488, "calm2": 488, "calm3": 488, "calm1": 488, "casp1": 488, "casp4": 488, "cacna1c": 488, "cav1": 488, "ev": 488, "118492": 488, "sync": 488, "facilit": 488, "p48995": 488, "q12791": 488, "q08209": 488, "p0dp24": 488, "p0dp25": 488, "p0dp23": 488, "p29466": 488, "p49662": 488, "q13936": 488, "q03135": 488, "p56539": 488, "cav3": 488, "q14247": 488, "cttn": 488, "p14416": 488, "drd2": 488, "p11532": 488, "dmd": 488, "p11362": 488, "fgfr1": 488, "q02790": 488, "fkbp4": 488, "q86ym7": 488, "homer1": 488, "q9nsc5": 488, "homer3": 488, "q99750": 488, "mdfi": 488, "q14571": 488, "itpr2": 488, "q14573": 488, "itpr3": 488, "p29966": 488, "marck": 488, "q13255": 488, "grm1": 488, "p20591": 488, "mx1": 488, "p62166": 488, "ncs1": 488, "q96d31": 488, "orai1": 488, "q96sn7": 488, "orai2": 488, "q9brq5": 488, "orai3": 488, "p11171": 488, "epb41": 488, "p61586": 488, "rhoa": 488, "q9y225": 488, "rnf24": 488, "p21817": 488, "ryr1": 488, "p16615": 488, "atp2a2": 488, "q93084": 488, "atp2a3": 488, "p60880": 488, "snap25": 488, "q13586": 488, "sti": 488, "30573": 488, "egf": 488, "fantom5": 488, "cellsign": 488, "similarli": 488, "ia": 488, "get_resource_nam": 488, "get_refer": 488, "10085134": 488, "10209155": 488, "10788520": 488, "12093292": 488, "12297050": 488, "12620237": 488, "12648462": 488, "15620700": 488, "16274239": 488, "17145710": 488, "19531499": 488, "20458382": 488, "21071413": 488, "23331499": 488, "3494473": 488, "6289330": 488, "8639530": 488, "get_direct": 488, "opposit": 488, "get_sign": 488, "get_": 488, "get_interaction_typ": 488, "_by_": 488, "references_by_resourc": 488, "get_interactions_posit": 488, "Or": [488, 491], "make_df": 488, "type_a": 488, "type_b": 488, "dmodel": 488, "nan": 488, "44033": 488, "q14289": 488, "q9ulz3": 488, "44034": 488, "p54646": 488, "q9y2i7": 488, "44035": 488, "q9bxm7": 488, "q9y2n7": 488, "44036": 488, "p49137": 488, "q9y385": 488, "44037": 488, "q9uhc7": 488, "p04637": 488, "44038": 488, "unique_pair": 488, "65": 488, "source_genesymbol": 488, "target_genesymbol": 488, "is_stimul": 488, "is_inhibit": 488, "consensus_direct": 488, "consensus_stimul": 488, "consensus_inhibit": 488, "19168436": 488, "25139746": 488, "23228564": 488, "11290752": 488, "11983166": 488, "12601176": 488, "36729": 488, "ptk2b": 488, "pycard": 488, "27796369": 488, "36730": 488, "prkaa2": 488, "pikfyv": 488, "24070423": 488, "36731": 488, "pink1": 488, "hif3a": 488, "27551449": 488, "36732": 488, "mapkapk2": 488, "ube2j1": 488, "24020373": 488, "36733": 488, "mkrn1": 488, "tp53": 488, "19536131": 488, "36734": 488, "extra_node_attr": 488, "customis": 488, "webservice_interactions_df": 488, "dorothea_tfb": 488, "dorothea_coexp": 488, "dorothea_level": [488, 491], "curation_effort": 488, "ncbi_tax_id_sourc": 488, "entity_type_sourc": 488, "ncbi_tax_id_target": 488, "entity_type_target": 488, "trip_method": 488, "immunoprecipit": 488, "fluoresc": 488, "downstream": 488, "benefici": 488, "undesir": 488, "grn": 488, "network_allow_loop": 488, "wish": 488, "pw": 488, "gr": 488, "count_loop": 488, "149": 488, "count_interactions_by_interaction_typ": 488, "33571": 488, "281262": 488, "soon": 488, "nucleic": 488, "mandatori": [488, 490, 491], "topologi": [488, 491], "network_expand_complex": 488, "pharmacologi": 488, "count_complex": 488, "get_complex": 488, "fos_jun": 488, "fos_junb": 488, "fos_jund": 488, "fosl1_jun": 488, "fosl2_jun": 488, "jun_junb": 488, "jun_jund": 488, "fosb_jun": 488, "fosl1_junb": 488, "fosl1_jund": 488, "fosl2_junb": 488, "fosl2_jund": 488, "junb": 488, "junb_jund": 488, "fosb_junb": 488, "jund": 488, "fosb_jund": 488, "nfkb1": 488, "nfkb1_nfkb2": 488, "nfkb1_relb": 488, "nfkb1_rela": 488, "nfkb1_rel": 488, "nfkb2": 488, "nfkb2_relb": 488, "nfkb2_rela": 488, "nfkb2_rel": 488, "relb": 488, "rela_relb": 488, "rel_relb": 488, "rela": 488, "rel_rela": 488, "rel": 488, "cplex_ent": 488, "q04206_q04864": 488, "isinst": 488, "p17535": 488, "p15407": 488, "p04040": 488, "cat": 488, "extri_collectri": 488, "10022519": 488, "10329043": 488, "collectr": 488, "p05412": 488, "p15408": 488, "p17275": 488, "54980": 488, "p01100": 488, "p01270": 488, "pth": 488, "9989817": 488, "54981": 488, "54982": 488, "p53539": 488, "54983": 488, "54984": 488, "23235": 488, "iloc": 488, "p15407_p17535": 488, "p01106": 488, "o14746": 488, "myc": 488, "tert": 488, "75": 488, "67945": 488, "q01196": 488, "q13094": 488, "runx1": 488, "lcp2": 488, "67946": 488, "q6mzq0": 488, "prr5l": 488, "67947": 488, "q15672": 488, "p08151": 488, "twist1": 488, "gli1": 488, "67948": 488, "p22415": 488, "q5sre5": 488, "usf1": 488, "nup188": 488, "67949": 488, "q9uqr1": 488, "q5vyx0": 488, "znf148": 488, "rnl": 488, "67950": 488, "familiar": 488, "to_csv": 488, "kinaseextra": [488, 491], "ligrecextra": [488, 491], "pathwayextra": [488, 491], "mirnatarget": [488, 491], "dorothea_cur": 488, "dorothea_chipseq": 488, "ncomplex": 488, "12036993": 488, "12538496": 488, "17935786": 488, "7489329": 488, "7651432": 488, "7818486": 488, "8867782": 488, "9030359": 488, "9136992": 488, "9142914": 488, "9168892": 488, "9687385": 488, "p05412_p15408": 488, "extri_c": 488, "1004": 488, "ambigu": 488, "unambigu": 488, "map_name0": 488, "random": 488, "gabarapl3": 488, "q9by60": 488, "shortcut": 488, "id_from_label": 488, "o75385": 488, "ulk1": [488, 491], "id_from_label0": 488, "certainli": 488, "q15796": 488, "effici": 488, "q62432": 488, "8408": 488, "chain_map": 488, "by_id_typ": 488, "autumn": 488, "uniprotmap": 488, "uploadlist": 488, "outdat": 488, "inputs_format": 488, "uniprotlistmap": 488, "biomartmap": 488, "arraymap": 488, "promap": 488, "unichemmap": 488, "filemap": 488, "mirbas": 488, "hmdbmap": 488, "fly": 488, "mapread": 488, "mappingt": 488, "mapper": 488, "dispatch": 488, "geneid": 488, "hgnc": 488, "refseqp": 488, "input_cl": 488, "29850": 488, "eas": 488, "ac_queri": 488, "ac_map": 488, "biomart_map": 488, "pro_map": 488, "array_map": 488, "bigg": 488, "biocyc": 488, "cas_registry_numb": 488, "ch": 488, "8561": 488, "tbl": 488, "translation_dict": 488, "20243": 488, "q00604": 488, "ndp": 488, "q9hb19": 488, "plekha2": 488, "q16718": 488, "ndufa5": 488, "p55769": 488, "snu13": 488, "q92886": 488, "neurog1": 488, "q6t4r5": 488, "nh": 488, "p80188": 488, "lcn2": 488, "q86xr2": 488, "fam129c": 488, "q5t2w1": 488, "pdzk1": 488, "q9bsh3": 488, "nicn1": 488, "translation_df": 488, "20375": 488, "q96l92": 488, "snx27": 488, "20376": 488, "q9unh6": 488, "snx7": 488, "20377": 488, "q5vwj9": 488, "snx30": 488, "20378": 488, "q9bzz2": 488, "siglec1": 488, "20379": 488, "q96bd0": 488, "slco4a1": 488, "20380": 488, "matrix": [488, 491], "oma": 488, "ensembl_hc": 488, "ensembl_typ": 488, "one2on": 488, "human_mouse_genesymbol": 488, "get_dict": 488, "confdenc": 488, "full_record": 488, "omaortholog": 488, "rel_typ": 488, "12704": 488, "5703125": 488, "get_df": 488, "h4c3": 488, "h4c1": 488, "1262": 488, "050049": 488, "h4c12": 488, "h4c11": 488, "h4c9": 488, "18446": 488, "gdap2": 488, "5553": 488, "779785": 488, "18447": 488, "itga8": 488, "10772": 488, "969727": 488, "18448": 488, "sema3f": 488, "9121": 488, "080078": 488, "18449": 488, "eepd1": 488, "5874": 488, "350098": 488, "18450": 488, "drg2": 488, "4423": 488, "589844": 488, "18451": 488, "everywher": 488, "deal": 488, "hsapien": 488, "ensmebl": 488, "genu": 488, "space": 488, "hsa": 488, "ensure_ncbi_tax_id": 488, "ensure_latin_nam": 488, "cow": 488, "bo": 488, "tauru": 488, "ensure_common_nam": 488, "erithacu": 488, "rubecula": 488, "european": 488, "robin": 488, "uniprot_taxid": 488, "unfortun": 488, "p53104": 488, "saccharomyc": 488, "cerevisia": 488, "divers": 488, "essenti": 488, "proteom": 488, "averag": 488, "harbor": 488, "littl": 488, "unload": 488, "119": 488, "iuniprot": 488, "all_swissprot": 488, "all_trembl": 488, "3m": 488, "86440": 488, "17131": 488, "69300": 488, "against": [488, 491], "124": 488, "valid_uniprot": 488, "a0a8d0h0c2": 488, "inde": 488, "125": 488, "is_uniprot": 488, "122": 488, "is_swissprot": 488, "123": 488, "126": 488, "protein_datasheet": 488, "egfr_human": 488, "1210": 488, "o00688": 488, "o00732": 488, "p06268": 488, "q14225": 488, "q68gs5": 488, "q92795": 488, "q9bzs2": 488, "q9gzx1": 488, "q9h2c9": 488, "q9h3c9": 488, "q9umd7": 488, "q9umd8": 488, "q9umg5": 488, "dt": 488, "jul": 488, "1986": 488, "nov": 488, "1997": 488, "283": 488, "recnam": 488, "eco": 488, "0000305": 488, "altnam": 488, "flag": 488, "precursor": 488, "gn": 488, "0000312": 488, "3236": 488, "eukaryota": 488, "metazoa": 488, "chordata": 488, "craniata": 488, "vertebrata": 488, "euteleostomi": 488, "eutheria": 488, "euarchontoglir": 488, "primat": 488, "haplorrhini": 488, "catarrhini": 488, "hominida": 488, "ox": 488, "ncbi_taxid": 488, "rn": 488, "rp": 488, "nucleotid": 488, "isoform": [488, 491], "58080": 488, "131": 488, "egfr_histori": 488, "uniprot_histori": 488, "uniprotrecordhistori": 488, "2022_04": 488, "282": 488, "2022_03": 488, "281": 488, "2022_02": 488, "280": 488, "2022_01": 488, "279": 488, "2021_04": 488, "2021": 488, "278": 488, "50933": 488, "132": 488, "uniprot_recent_vers": 488, "133": 488, "uniprot_history_recent_datasheet": 488, "deploi": 488, "transit": 488, "uniprot_data": 488, "uniprot_queri": 488, "situat": 488, "uniprot_preprocess": 488, "clutter": 488, "transmembran": [488, 491], "a0a087x1c5": 488, "cytochrom": 488, "p450": 488, "a0a0b4j2f2": 488, "superfamili": 488, "camk": 488, "ser": 488, "thr": 488, "ampk": 488, "subfamili": 488, "a0a0k2s4q6": 488, "cd300": 488, "a0a1b0gtw7": 488, "peptidas": 488, "m8": 488, "a0av02": 488, "slc12a": 488, "transport": 488, "a0av96": 488, "rrm": 488, "rbm47": 488, "a0avf1": 488, "ift56": 488, "a0avi4": 488, "tmem129": 488, "a0avk6": 488, "dp": 488, "a0avt1": 488, "ubiquitin": [488, 491], "a0fgr8": 488, "synaptotagmin": 488, "a0fgr9": 488, "a0jlt2": 488, "mediat": 488, "a0jp26": 488, "pote": 488, "a0mz66": 488, "shootin": 488, "a0pjk1": 488, "sodium": 488, "symport": 488, "ssf": 488, "tc": 488, "a0pjy2": 488, "krueppel": 488, "c2h2": 488, "zinc": 488, "finger": 488, "a0pk00": 488, "tmem120": 488, "a0pk11": 488, "clarin": 488, "a1a4y4": 488, "trafac": 488, "dynamin": 488, "gtpase": 488, "irg": 488, "a1a519": 488, "fam170": 488, "a1a5b4": 488, "anoctamin": 488, "a1a5c7": 488, "orga": 488, "510530": 488, "uiprot": 488, "funcion": 488, "up000004102": 488, "d1ym56": 488, "d1ymj2": 488, "d1yn32": 488, "d1ynb3": 488, "d1ypz1": 488, "d1yr07": 488, "d1yr15": 488, "d1yr93": 488, "d1yrb4": 488, "d1yrb7": 488, "cleaner": 488, "imperfect": 488, "job": 488, "badli": 488, "fragment": 488, "136": 488, "uniprot_taxonomi": 488, "p00521": 488, "abelson": 488, "murin": 488, "viru": 488, "p03333": 488, "h8zm73": 488, "abi": 488, "balsamea": 488, "balsam": 488, "fir": 488, "pinu": 488, "h8zm71": 488, "q9mv51": 488, "firma": 488, "momi": 488, "o81086": 488, "grandi": 488, "grand": 488, "o24474": 488, "o24475": 488, "o64404": 488, "o64405": 488, "q948z0": 488, "q9m7d1": 488, "q9m7d0": 488, "o22340": 488, "q9m7c9": 488, "q5k3v1": 488, "homolepi": 488, "nikko": 488, "p21715": 488, "abrothrix": 488, "jelskii": 488, "akodon": 488, "jelski": 488, "altiplano": 488, "p11140": 488, "abru": 488, "56985": 488, "139": 488, "uniprot_ncbi_taxids_2": 488, "648330": 488, "aed": 488, "albopictu": 488, "densoviru": 488, "isol": 488, "boublik": 488, "1994": 488, "aaldnv": 488, "10804": 488, "adeno": 488, "aav": 488, "648242": 488, "srivastava": 488, "1982": 488, "118452": 488, "abacion": 488, "magnum": 488, "milliped": 488, "72259": 488, "abaei": 488, "nicipp": 488, "sleepi": 488, "orang": 488, "butterfli": 488, "eurema": 488, "102642": 488, "abax": 488, "parallelepipedu": 488, "ground": 488, "beetl": 488, "392897": 488, "abalist": 488, "stellari": 488, "starri": 488, "triggerfish": 488, "balist": 488, "75332": 488, "abbottina": 488, "rivulari": 488, "chines": 488, "gudgeon": 488, "gobio": 488, "515833": 488, "abdopu": 488, "aculeatu": 488, "engl": 488, "118050": 488, "140": 488, "uniprot_loc": 488, "q96ec8": 488, "uniprotloc": 488, "golgi": 488, "apparatu": 488, "membran": [488, 491], "q6zms4": 488, "nucleu": 488, "q8n8l2": 488, "q15916": 488, "q3mis6": 488, "q6p280": 488, "q969w1": 488, "endoplasm": 488, "reticulum": 488, "o14978": 488, "q66k41": 488, "q15937": 488, "q9p2j8": 488, "q8nd82": 488, "q9np64": 488, "nucleolu": 488, "143466": 488, "141": 488, "uniprot_keyword": 488, "p63120": 488, "uniprotkeyword": 488, "aspartyl": 488, "proteas": 488, "autocatalyt": 488, "cleavag": 488, "erv": 488, "hydrolas": 488, "ribosom": 488, "frameshift": 488, "transpos": 488, "splice": 488, "helix": 488, "metal": 488, "unipro": 488, "445111": 488, "142": 488, "uniprot_famili": 488, "uniprotfamili": 488, "a2": 488, "herv": 488, "ii": 488, "hml": 488, "yip1": 488, "q86uk7": 488, "znf598": 488, "dhhc": 488, "palmitoyltransferas": 488, "q8iuh4": 488, "77892": 488, "143": 488, "uniprot_tissu": 488, "uniprottissu": 488, "brain": 488, "wide": 488, "undefin": 488, "colon": 488, "heart": 488, "kidnei": 488, "leukocyt": 488, "liver": 488, "lung": 488, "ovari": 488, "pancrea": 488, "placenta": 488, "prostat": 488, "skelet": 488, "muscl": [488, 491], "intestin": 488, "spleen": 488, "testi": 488, "318790": 488, "144": 488, "uniprot_topologi": 488, "uniprottopologi": 488, "cytoplasm": 488, "137": 488, "146": 488, "206": 488, "212": 488, "lumen": 488, "106": 488, "115": 488, "168": 488, "184": 488, "234": 488, "236": 488, "85": 488, "105": 488, "116": 488, "147": 488, "167": 488, "185": 488, "205": 488, "213": 488, "233": 488, "138": 488, "198": 488, "288": 488, "377": 488, "220": 488, "544230": 488, "bulk": 488, "153": 488, "q14457": 488, "becn1": 488, "154": 488, "156": 488, "weight": 488, "subcellular_loc": 488, "112631": 488, "1050": 488, "preautophagosom": 488, "starvat": 488, "puncat": 488, "primarili": 488, "sequest": 488, "portion": 488, "autophagosom": 488, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 488, "1329": 488, "ineffici": 488, "hand": 488, "158": 488, "ordereddict": 488, "134277": 488, "51896": 488, "450": 488, "tabular": [488, 491], "159": 488, "print_featur": 488, "There": 488, "character": 488, "160": 488, "function_o": 488, "subcellula": 488, "r_genecard": 488, "r_locat": 488, "3d": 488, "alternativ": 488, "20254": 488, "unless": 488, "uniprot_cleanup": 488, "exploit": 488, "162": 488, "q9uq28": 488, "8m": 488, "acquir": 488, "mtor": [488, 491], "akt1": 488, "s473": 488, "sparser": 488, "t450": 488, "t308": 488, "domainmotif": 488, "e_ptm": 488, "p31749": 488, "473": 488, "14761976": 488, "15047712": 488, "15364915": 488, "15718470": 488, "15899889": 488, "16221682": 488, "17013611": 488, "19844585": 488, "20333297": 488, "20489726": 488, "21157483": 488, "21592956": 488, "23006971": 488, "8978681": 488, "9736715": 488, "dabas": 488, "enzyme_genesymbol": 488, "substrate_genesymbol": 488, "residue_typ": 488, "residue_offset": 488, "p63104": 488, "ywhaz": 488, "hprd_mimp": 488, "11956222": 488, "12861023": 488, "phosphosite_mimp": 488, "phosp": 488, "15071501": 488, "p45983": 488, "mapk8": 488, "phosph": 488, "15696159": 488, "p06493": 488, "cdk1": 488, "712": 488, "rea": 488, "15525677": 488, "18220": 488, "2171679": 488, "41421": 488, "p29597": 488, "tyk2": 488, "p51692": 488, "stat5b": 488, "699": 488, "10830280": 488, "11751923": 488, "12411494": 488, "41422": 488, "q06418": 488, "tyro3": 488, "p19174": 488, "plcg1": 488, "771": 488, "12601080": 488, "15144186": 488, "15592455": 488, "41423": 488, "q9h4a3": 488, "wnk1": 488, "q8tax0": 488, "osr1": 488, "18270262": 488, "41424": 488, "q96j92": 488, "wnk4": 488, "335": 488, "15883153": 488, "41425": 488, "q9nyl2": 488, "map3k20": 488, "q92903": 488, "cds1": 488, "10973490": 488, "ve": 488, "never": 488, "nice": 488, "power": 488, "believ": 488, "ever": 488, "topic": 488, "186": 488, "seqc": 488, "sequencecontain": 488, "preload_seq": 488, "get_seq": 488, "get_region": 488, "tfiirclqwt": 488, "187": 488, "seq": 488, "human_proteom": 488, "swissprot_seq": 488, "0x689900d45cc0": 488, "0x689908ea8f70": 488, "0x689908eaa4a0": 488, "0x6899223538b0": 488, "0x689922353c70": 488, "o60384": 488, "0x689922350730": 488, "0x689922353310": 488, "0x689922353760": 488, "0x689922353190": 488, "0x689922350d90": 488, "0x689922353220": 488, "p61129": 488, "0x689922353370": 488, "0x6899223534f0": 488, "0x689922350c70": 488, "0x689922351450": 488, "0x689922353910": 488, "0x6899223502b0": 488, "p98182": 488, "0x689922350280": 488, "0x68992235": 488, "53045": 488, "191": 488, "ygct": 488, "seqlookup": 488, "625": 488, "annotationt": 488, "3788067": 488, "51636": 488, "78": 488, "cpad": 488, "2308": 488, "1358": 488, "annotationbas": 488, "get_nam": 488, "regulator_typ": 488, "effect_on_pathwai": 488, "effect_on_canc": 488, "effect_on_cancer_outcom": 488, "cancer": 488, "pathway_categori": 488, "get_valu": 488, "acut": 488, "lymphoblast": 488, "myeloid": 488, "aml": 488, "basal": 488, "bladder": 488, "breast": 488, "cervic": 488, "cholangiocarcinoma": 488, "choriocarcinoma": 488, "chronic": 488, "lymphocyt": 488, "cll": 488, "cml": 488, "colorect": 488, "endometri": 488, "esophag": 488, "ew": 488, "sarcoma": 488, "gallbladd": 488, "gastric": 488, "glioma": 488, "hepatocellular": 488, "hodgkin": 488, "lymphoma": 488, "infantil": 488, "hemangioma": 488, "laryng": 488, "malign": 488, "melanoma": 488, "pleural": 488, "mesothelioma": 488, "mantl": 488, "myeloma": 488, "nasopharyng": 488, "neuroblastoma": 488, "oral": 488, "osteosarcoma": 488, "ovarian": 488, "pancreat": 488, "pituitari": 488, "adenoma": 488, "renal": 488, "squamou": 488, "synovi": 488, "testicular": 488, "thyroid": 488, "a6ndv4": 488, "o14745": 488, "o14862": 488, "o15169_p25054": 488, "o94813": 488, "o94953": 488, "p06733": 488, "glucos": 488, "p11166": 488, "p25054": 488, "p40261": 488, "p49327": 488, "p54687": 488, "pten": 488, "phosphatas": 488, "p60484": 488, "q01973": 488, "q12888": 488, "q13620": 488, "q96cx2": 488, "q99558": 488, "mimat0000069": 488, "mimat0000089": 488, "mimat0000093": 488, "mimat0000262": 488, "mimat0000274": 488, "mimat0000422": 488, "mimat0000427": 488, "mimat0000437": 488, "mimat0000449": 488, "mimat0000455": 488, "mimat0000460": 488, "mimat0000461": 488, "mimat0000617": 488, "mimat0003266": 488, "mimat0003320": 488, "o75473": 488, "o75888": 488, "o76041": 488, "p06756": 488, "p13631": 488, "p22676": 488, "p25791": 488, "p546": 488, "1279": 488, "usual": 488, "215": 488, "celltypist": 488, "927": 488, "integrin": 488, "62": 488, "cellcellinteract": 488, "5544": 488, "panglaodb": 488, "8479": 488, "4813": 488, "lambert2018": 488, "3281": 488, "3277": 488, "cancersea": 488, "2515": 488, "1992": 488, "phobiu": 488, "35382": 488, "go_intercel": 488, "48799": 488, "18377": 488, "18127": 488, "15903": 488, "surfaceom": 488, "3558": 488, "matrisom": 488, "1514": 488, "hpa_secretom": 488, "3568": 488, "1748": 488, "1695": 488, "annotati": 488, "5842": 488, "exempl": 488, "mainclass": 488, "subclass": 488, "subsubclass": 488, "collagen": 488, "ecm": [488, 491], "glycoprotein": 488, "affili": 488, "proteoglycan": 488, "get_subset": 488, "a6nmz7": 488, "a8tx70": 488, "b4dz39": 488, "homotrim": 488, "p02452": 488, "ht_dm_cluster278": 488, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 488, "trimer": 488, "p02452_p08123": 488, "p02458": 488, "xi": 488, "p02458_p12107_p13942": 488, "p02458_p20908_p25067": 488, "p02458_p20908_p25067_p29400": 488, "p02458_p25067_p29400": 488, "iii": 488, "p02461": 488, "p02462": 488, "iv": 488, "p02462_p08572": 488, "p05997_p12107": 488, "p05997_p12107_p20908": 488, "p05997_p20908": 488, "p05997_p20908_p25940": 488, "p08572": 488, "p12109_p12110": 488, "3072": 488, "membership": 488, "signalink": [488, 491], "protein_sourc": 488, "signalinkpathwai": 488, "keggpathwai": 488, "netpathpathwai": 488, "complex_sourc": 488, "28745": 488, "6762": 488, "all_annot": 488, "jak": 488, "stat": 488, "actin": 488, "cytoskeleton": 488, "oxytocin": 488, "phospholipas": 488, "inhibitor": 488, "resist": 488, "papillomaviru": 488, "infect": 488, "carbon": 488, "endocytosi": 488, "parathyroid": 488, "hormon": 488, "synthesi": 488, "2540": 488, "record_id": [488, 491], "q16181": 488, "sept7": 488, "upregul": 488, "migrat": 488, "14396": 488, "p30990": 488, "nt": 488, "2306": 488, "14397": 488, "2307": 488, "14398": 488, "erk": 488, "14399": 488, "14400": 488, "14401": 488, "convent": 488, "tidyvers": 488, "tidyr": [488, 491], "pivot_wid": 488, "unintuit": 488, "index_col": 488, "drop": 488, "axi": 488, "set_index": 488, "unstack": 488, "droplevel": 488, "reset_index": 488, "mimat0000431": 488, "mir": 488, "suppress": 488, "tumor": 488, "invas": 488, "adam10": 488, "notch1": [488, 491], "notch": 488, "mimat0005886": 488, "1297": 488, "aeg1": 488, "wnt": 488, "q9up65": 488, "pla2g4c": 488, "chemotaxi": 488, "downregul": 488, "akt": 488, "pi3k": 488, "q92600": 488, "cnot9": 488, "2303": 488, "p16422": 488, "epcam": 488, "2304": 488, "q9y6y0": 488, "ivns1abp": 488, "2305": 488, "kctd12": 488, "catenin": 488, "goe": 488, "customannot": 488, "anyon": 488, "intercellannot": 488, "310033": 488, "43617": 488, "intercell_annot": 488, "annot_combined_class": 488, "revis": 488, "scope": [488, 491], "tgf": 488, "annotdefkei": 488, "annotationgroup": 488, "5150": 488, "5760": 488, "7041": 488, "transmembrane_predict": 488, "6444": 488, "transmembrane_phobiu": 488, "almen2009": 488, "transmembrane_sosui": 488, "1663": 488, "tran": 488, "143945": 488, "behav": 488, "gaba_receptor": 488, "gaba": 488, "a8mpy1": 488, "gabra1": 488, "gabrb2": 488, "gabrd": 488, "o14764_p14867_p47870": 488, "o14764_p28472_p48169": 488, "o14764_p28472_q16445": 488, "o14764_p47870_p48169": 488, "o14764_p47870_q16445": 488, "gabbr1": 488, "gabbr2": 488, "o75899_q9ubs5": 488, "p14867": 488, "gamma": 488, "p14867_p18507_p28472": 488, "gabrg2": 488, "p14867_p18507_p47870": 488, "p18507_p28472_p31644": 488, "p18507_p28472_p34903": 488, "p18507_p28472_p47869": 488, "p18507_p28472_q16445": 488, "p18507_q8n1c3": 488, "register_network": 488, "statist": 488, "counts_df": 488, "consensus_scor": 488, "transmitt": [488, 491], "receiv": [488, 491], "plasma_membrane_transmembran": 488, "plasma_membrane_peripher": 488, "n_uniprot": 488, "resource_specif": [488, 491], "1120": 488, "parin_adhesion_regul": 488, "intracellular_intercellular_rel": 488, "1121": 488, "plakophilin_adhesion_regul": 488, "1122": 488, "actin_regulation_adhesom": 488, "1123": 488, "adhesion_cytoskeleton_adaptor": 488, "118": 488, "1124": 488, "1125": 488, "q96jp9": 488, "cdhr1": 488, "q9p126": 488, "clec1b": 488, "q13585": 488, "gpr50": 488, "q8n9i0": 488, "syt2": 488, "o43614": 488, "hcrtr2": 488, "a6njy1": 488, "slc9b1p1": 488, "q5ri15": 488, "cox20": 488, "q13948": 488, "cux1": 488, "q8ngk4": 488, "or52k1": 488, "q8iys2": 488, "kiaa2013": 488, "neurotensin": 488, "recom": 488, "o95665": 488, "ntsr2": 488, "410": 488, "45385": 488, "neurotensi": 488, "tr": 488, "idecapepti": 488, "disulfid": 488, "7598": 488, "tree": [488, 490], "geneontologi": 488, "goannot": 488, "80": 488, "goa": 488, "0x689946b55570": 488, "82": 488, "0x68991cdc9b40": 488, "NOT": 488, "p21333": 488, "p80108": 488, "p62258": 488, "q9nrx4": 488, "p54710": 488, "q8ner1": 488, "p01303": 488, "get_all_descend": 488, "0005576": 488, "0001507": 488, "0001527": 488, "0003351": 488, "0003355": 488, "0005201": 488, "0005577": 488, "0005582": 488, "0005583": 488, "0005584": 488, "0005585": 488, "0005586": 488, "0005587": 488, "0005588": 488, "0005590": 488, "0005591": 488, "0005592": 488, "0005595": 488, "0005596": 488, "0005599": 488, "0005601": 488, "0005602": 488, "0005604": 488, "0005606": 488, "0005607": 488, "0005608": 488, "0005609": 488, "0005610": 488, "0005611": 488, "0005612": 488, "0005614": 488, "0005615": 488, "0005616": 488, "0006858": 488, "0006859": 488, "0006860": 488, "0009519": 488, "0010367": 488, "0016914": 488, "0016942": 488, "0020003": 488, "0020004": 488, "0020005": 488, "0020006": 488, "0030020": 488, "0030021": 488, "0030023": 488, "0030197": 488, "0030345": 488, "0030934": 488, "0030935": 488, "0030938": 488, "0031012": 488, "0031395": 488, "0032311": 488, "0032579": 488, "0033165": 488, "0033166": 488, "0034358": 488, "0034359": 488, "0034360": 488, "0034361": 488, "0034362": 488, "0034363": 488, "0034364": 488, "0034365": 488, "00343": 488, "3104": 488, "redund": 488, "homomultim": 488, "update_index": 488, "91": 488, "p42345": [488, 491], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 488, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 488, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 488, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 488, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 488, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 488, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 488, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 488, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 488, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 488, "5348": 488, "equival": 488, "represent": 488, "alphabet": 488, "sort": [488, 490], "despit": [488, 490], "fact": 488, "98": 488, "q92793": 488, "q09472": 488, "components_genesymbol": 488, "nfya_nfyb_nfyc": 488, "corum": [488, 491], "compleat": 488, "complexport": 488, "15243141": 488, "14755292": 488, "9372932": 488, "4478": 488, "hc1449": 488, "deptor_eef1a1_mlst8_prr5_rictor": 488, "c2": 488, "akt1s1_deptor_mlst8_mtor_rptor": 488, "btrc_cul1_skp1": 488, "9990852": 488, "c5": 488, "227": 488, "hc757": 488, "crebbp_ep300": 488, "c6": 488, "28168": 488, "npnt": 488, "q5szk8_q6uxi9_q86xx4": 488, "fras1_frem2_npnt": 488, "28169": 488, "nrp1_nrp2": 488, "o14786_o60462_q9y4d7": 488, "nrp1_nrp2_plxnd1": 488, "28170": 488, "nrp2_plxna2": 488, "o60462_o75051": 488, "28171": 488, "nrp2_plxna4": 488, "o60462_q9hcm2": 488, "28172": 488, "ptch2_smo": 488, "q99835_q9y6c5": 488, "compil": [488, 489], "longer": 488, "good": 488, "reli": 488, "save_to_pickl": 488, "myannot": 488, "pickle_fil": 488, "complexdb": 488, "mycomplex": 488, "char": 488, "xxxxx": 488, "ten": 488, "l0n17": 488, "disclaim": 488, "annoi": 488, "101": 488, "least": 488, "educ": 488, "credit": 488, "publish": 488, "gnu": 488, "104": 488, "prioriti": 488, "107": 488, "console_level": 488, "si": 488, "uniroma2": 488, "download_complex": 488, "d7b8673e83e43a01c533f9de5a2b04b9": 488, "1046": 488, "creation": 488, "builtin": 488, "shell": 488, "dev": 488, "108": 488, "devnul": 488, "notic": 488, "109": 488, "greet": 488, "Not": 488, "childoflogg": 488, "def": 488, "say_someth": 488, "_log": 488, "anywher": 488, "111": 488, "_logger": 488, "mylogg": 488, "strai": 488, "flood": 488, "112": 488, "hasn": 488, "thoroughli": 488, "scai": 488, "fraunhof": 488, "captur": 488, "span": 488, "rang": 488, "ptmaggreg": 488, "belgraph": 488, "bel_graph": 488, "summar": 488, "export_relationship": 488, "omnipath_pathwai": 488, "fp": 488, "bel_str": 488, "333": 488, "interaction_input": 488, "singnalink": 488, "interaction_datafram": 488, "peripher": [488, 491], "protein_datafram": 488, "along": 488, "load_omnipath": 488, "entir": 488, "sai": 488, "worri": 488, "network1": 488, "entreza": 488, "entrezb": 488, "1950": 488, "5290": 488, "207": 488, "2932": 488, "network2": 488, "pik3ca": 488, "sos1": 488, "rac1": 488, "map3k1": 488, "hra": 488, "gsk3b": 488, "iinput_format": 488, "input1": 488, "readset": 488, "egf1": 488, "input2": 488, "egf2": 488, "lst": 488, "ecount": 488, "vcount": 488, "dgraph": 488, "3241": 488, "dir": 488, "agre": 488, "p17252": 488, "q15139": 488, "stimulatori": 488, "revers": 488, "get_dir": 488, "inhibitori": 488, "contradict": 488, "decid": 488, "rid": 488, "consensu": 488, "consensus_edg": 488, "helper": 488, "esr1": 488, "plural": 488, "gss": 488, "atg16l2": 488, "mix": [488, 491], "could": 488, "affect": 488, "gs_stimulated_bi": 488, "_namedvertexseq": 488, "seri": 488, "bit": 488, "contraintuit": 488, "gs_stimul": 488, "affected_bi": 488, "similari": 488, "inhibited_bi": 488, "gs_": 488, "up_": 488, "neighbor": 488, "neighborhood": 488, "increas": 488, "rapidli": 488, "atg3": [488, 491], "get_edg": 488, "map1lc3b": [488, 491], "sqstm1": [488, 491], "refs_by_sourc": 488, "abil": 488, "librari": 488, "egf_network": 488, "png": 488, "777777": 488, "97be73": 488, "ffffff": 488, "bug": 488, "ipython": 488, "visibl": 488, "inlin": 488, "120": 488, "imag": 488, "click": 489, "changelog": 490, "improv": 490, "remot": 490, "partial": 490, "pyreact": 490, "biopaxread": 490, "rule": [490, 491], "workflow": 490, "mysql_connect": 490, "python3": 490, "mrna": [490, 491], "websrvtab": 490, "dataio": 490, "docstr": 490, "focus": 490, "rewritten": 490, "workaround": 490, "terribl": 490, "reflist": 490, "becam": 490, "paremet": 490, "reorgan": 490, "redesign": 490, "src": 490, "yml": 490, "rna": 490, "neo4j": 490, "backend": 490, "biocyph": 490, "dlmanag": 490, "protocol": 491, "wget": 491, "whatev": 491, "recogn": 491, "webserv": 491, "optimum": 491, "qualiti": 491, "interacion": 491, "rodent": 491, "counterpart": 491, "omic": 491, "highest": 491, "regulon": 491, "arget": 491, "source_target": 491, "atg7": 491, "atg4b": 491, "map1lc3a": 491, "map1lc3c": 491, "q9h0r8": 491, "gabarap": 491, "gabarapl2": 491, "appear": 491, "fyn": 491, "ens_sub": 491, "phosphosite_noref": 491, "hearth": 491, "dplyr": 491, "signalink_pathwai": 491, "bmp7": 491, "hpa_tissu": 491, "funtion": 491, "ion": 491, "interleukin": 491, "deliv": 491, "exact": 491, "atg4a": 491, "bmp8b": 491, "intuit": 491, "repli": 491}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [379, 0, 0, "-", "internals"], [412, 0, 0, "-", "legacy"], [416, 3, 1, "", "log"], [417, 0, 0, "-", "resources"], [435, 0, 0, "-", "share"], [463, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "abs"], [12, 0, 0, "-", "acsn"], [15, 0, 0, "-", "adrecs"], [25, 0, 0, "-", "biogrid"], [28, 0, 0, "-", "biomart"], [34, 0, 0, "-", "biomodels"], [40, 0, 0, "-", "ca1"], [42, 0, 0, "-", "cancercellmap"], [44, 0, 0, "-", "cell"], [46, 0, 0, "-", "chembl"], [54, 0, 0, "-", "clinvar"], [57, 0, 0, "-", "common"], [64, 0, 0, "-", "compath"], [66, 0, 0, "-", "cpdb"], [69, 0, 0, "-", "credentials"], [71, 0, 0, "-", "ctdbase"], [74, 0, 0, "-", "ddinter"], [80, 0, 0, "-", "deathdomain"], [83, 0, 0, "-", "dip"], [86, 0, 0, "-", "diseases"], [94, 0, 0, "-", "drugbank"], [101, 0, 0, "-", "ebi"], [103, 0, 0, "-", "elm"], [108, 0, 0, "-", "embopress"], [110, 0, 0, "-", "encode"], [112, 0, 0, "-", "ensembl"], [114, 0, 0, "-", "eutils"], [116, 0, 0, "-", "expasy"], [119, 0, 0, "-", "genecards"], [123, 3, 1, "", "get_method"], [124, 0, 0, "-", "graphviz"], [126, 0, 0, "-", "hprd"], [131, 0, 0, "-", "htri"], [133, 0, 0, "-", "humsavar"], [135, 0, 0, "-", "ielm"], [138, 0, 0, "-", "imweb"], [141, 0, 0, "-", "innatedb"], [143, 0, 0, "-", "instruct"], [146, 0, 0, "-", "intact"], [148, 0, 0, "-", "interpro"], [153, 0, 0, "-", "ipi"], [155, 0, 0, "-", "kegg_api"], [172, 0, 0, "-", "kirouac2010"], [174, 0, 0, "-", "laudanna"], [177, 0, 0, "-", "lincs"], [179, 0, 0, "-", "macrophage"], [181, 0, 0, "-", "main"], [182, 0, 0, "-", "mimp"], [186, 0, 0, "-", "mir2disease"], [188, 0, 0, "-", "mirdeathdb"], [190, 0, 0, "-", "mitab"], [193, 0, 0, "-", "mppi"], [195, 0, 0, "-", "ncrdeathdb"], [197, 0, 0, "-", "negatome"], [199, 0, 0, "-", "netbiol"], [202, 0, 0, "-", "offsides"], [204, 0, 0, "-", "ontology"], [207, 0, 0, "-", "opentargets"], [213, 0, 0, "-", "pathophenodb"], [216, 0, 0, "-", "pathwaycommons"], [233, 0, 0, "-", "pazar"], [235, 0, 0, "-", "pepcyber"], [238, 0, 0, "-", "pharos"], [247, 0, 0, "-", "phobius"], [249, 0, 0, "-", "phosphonetworks"], [252, 0, 0, "-", "phosphopoint"], [255, 0, 0, "-", "pro"], [258, 0, 0, "-", "protmapper"], [262, 0, 0, "-", "pubchem"], [264, 0, 0, "-", "pubmed"], [271, 0, 0, "-", "ramp"], [278, 0, 0, "-", "rdata"], [279, 0, 0, "-", "reaction"], [299, 0, 0, "-", "reactome"], [304, 0, 0, "-", "science"], [306, 0, 0, "-", "sider"], [315, 0, 0, "-", "stitch"], [318, 0, 0, "-", "string"], [323, 0, 0, "-", "swisslipids"], [324, 0, 0, "-", "switches_elm"], [326, 0, 0, "-", "transmir"], [328, 0, 0, "-", "trip"], [335, 0, 0, "-", "twosides"], [337, 0, 0, "-", "unichem"], [342, 0, 0, "-", "uniprot"], [368, 0, 0, "-", "uniprot_db"], [377, 0, 0, "-", "uniprot_idmapping"]], "pypath.inputs.abs": [[11, 3, 1, "", "abs_interactions"]], "pypath.inputs.acsn": [[13, 3, 1, "", "acsn_interactions"], [14, 3, 1, "", "acsn_interactions_sif"]], "pypath.inputs.adrecs": [[16, 1, 1, "", "AdrecsAdr"], [17, 1, 1, "", "AdrecsChildParent"], [18, 1, 1, "", "AdrecsDrug"], [19, 1, 1, "", "AdrecsDrugAdr"], [20, 1, 1, "", "AdrecsTerm"], [21, 3, 1, "", "adrecs_adr_ontology"], [22, 3, 1, "", "adrecs_drug_adr"], [23, 3, 1, "", "adrecs_drug_identifiers"], [24, 3, 1, "", "adrecs_hierarchy"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "adr_class"], [16, 4, 1, "", "badd"], [16, 2, 1, "", "count"], [16, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "child"], [17, 2, 1, "", "count"], [17, 2, 1, "", "index"], [17, 4, 1, "", "parent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, 2, 1, "", "__init__"], [18, 4, 1, "", "badd"], [18, 2, 1, "", "count"], [18, 4, 1, "", "drug"], [18, 4, 1, "", "drugbank"], [18, 2, 1, "", "index"], [18, 4, 1, "", "kegg"], [18, 4, 1, "", "mesh"], [18, 4, 1, "", "pubchem_cid"], [18, 4, 1, "", "synonyms"], [18, 4, 1, "", "tdd"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "adr"], [19, 4, 1, "", "adr_badd"], [19, 2, 1, "", "count"], [19, 4, 1, "", "drug"], [19, 4, 1, "", "drug_badd"], [19, 2, 1, "", "index"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, 2, 1, "", "__init__"], [20, 4, 1, "", "adrecs_class"], [20, 4, 1, "", "badd"], [20, 2, 1, "", "count"], [20, 2, 1, "", "index"], [20, 4, 1, "", "meddra"], [20, 4, 1, "", "name"], [20, 4, 1, "", "synonyms"]], "pypath.inputs.biogrid": [[26, 3, 1, "", "biogrid_all_interactions"], [27, 3, 1, "", "biogrid_interactions"]], "pypath.inputs.biomart": [[29, 3, 1, "", "biomart_homology"], [30, 3, 1, "", "biomart_microarray"], [31, 3, 1, "", "biomart_microarray_types"], [32, 3, 1, "", "biomart_microarrays"], [33, 3, 1, "", "biomart_query"]], "pypath.inputs.biomodels": [[35, 3, 1, "", "download_single_model"], [36, 3, 1, "", "get_all_models"], [37, 3, 1, "", "get_biomodels"], [38, 3, 1, "", "get_biomodels_req"], [39, 3, 1, "", "get_single_model"]], "pypath.inputs.ca1": [[41, 3, 1, "", "ca1_interactions"]], "pypath.inputs.cancercellmap": [[43, 3, 1, "", "ccmap_interactions"]], "pypath.inputs.cell": [[45, 3, 1, "", "cell_supplementary"]], "pypath.inputs.chembl": [[47, 3, 1, "", "chembl_activities"], [48, 3, 1, "", "chembl_assays"], [49, 3, 1, "", "chembl_documents"], [50, 3, 1, "", "chembl_drug_indications"], [51, 3, 1, "", "chembl_mechanisms"], [52, 3, 1, "", "chembl_molecules"], [53, 3, 1, "", "chembl_targets"]], "pypath.inputs.clinvar": [[55, 3, 1, "", "clinvar_citations"], [56, 3, 1, "", "clinvar_raw"]], "pypath.inputs.common": [[58, 3, 1, "", "csv_sep_change"], [59, 3, 1, "", "glom_fields"], [60, 3, 1, "", "json_extract"], [61, 3, 1, "", "json_read"], [62, 3, 1, "", "read_table"], [63, 3, 1, "", "read_xls"]], "pypath.inputs.compath": [[65, 3, 1, "", "compath_mappings"]], "pypath.inputs.cpdb": [[67, 3, 1, "", "cpdb_interactions"], [68, 3, 1, "", "cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[70, 3, 1, "", "credentials"]], "pypath.inputs.ctdbase": [[72, 3, 1, "", "ctdbase_relations"], [73, 3, 1, "", "ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[75, 3, 1, "", "ddinter_drug_interactions"], [76, 3, 1, "", "ddinter_identifiers"], [77, 3, 1, "", "ddinter_interactions"], [78, 3, 1, "", "ddinter_mappings"], [79, 3, 1, "", "ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[81, 3, 1, "", "deathdomain_interactions"], [82, 3, 1, "", "deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[84, 3, 1, "", "dip_interactions"], [85, 3, 1, "", "dip_login"]], "pypath.inputs.diseases": [[87, 3, 1, "", "diseases_general"], [88, 3, 1, "", "experiments_filtered"], [89, 3, 1, "", "experiments_full"], [90, 3, 1, "", "knowledge_filtered"], [91, 3, 1, "", "knowledge_full"], [92, 3, 1, "", "textmining_filtered"], [93, 3, 1, "", "textmining_full"]], "pypath.inputs.drugbank": [[95, 1, 1, "", "DrugbankFull"], [96, 3, 1, "", "drugbank_annotations"], [97, 3, 1, "", "drugbank_drugs"], [98, 3, 1, "", "drugbank_interactions"], [99, 3, 1, "", "drugbank_mapping"], [100, 3, 1, "", "drugbank_raw_interactions"]], "pypath.inputs.drugbank.DrugbankFull": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "drugbank_drugs_full"], [95, 2, 1, "", "drugbank_external_ids_full"], [95, 2, 1, "", "drugbank_properties_full"], [95, 2, 1, "", "drugbank_targets_full"]], "pypath.inputs.ebi": [[102, 3, 1, "", "ebi_rest"]], "pypath.inputs.elm": [[104, 3, 1, "", "elm_classes"], [105, 3, 1, "", "elm_domains"], [106, 3, 1, "", "elm_instances"], [107, 3, 1, "", "elm_interactions"]], "pypath.inputs.embopress": [[109, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.encode": [[111, 3, 1, "", "encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[113, 3, 1, "", "ensembl_organisms"]], "pypath.inputs.eutils": [[115, 3, 1, "", "esummary"]], "pypath.inputs.expasy": [[117, 3, 1, "", "expasy_enzyme_classes"], [118, 3, 1, "", "expasy_enzymes"]], "pypath.inputs.genecards": [[120, 3, 1, "", "genecards_datasheet"], [121, 3, 1, "", "genecards_soup"], [122, 3, 1, "", "genecards_summaries"]], "pypath.inputs.graphviz": [[125, 3, 1, "", "graphviz_attrs"]], "pypath.inputs.hprd": [[127, 3, 1, "", "get_hprd"], [128, 3, 1, "", "hprd_enzyme_substrate"], [129, 3, 1, "", "hprd_interactions"], [130, 3, 1, "", "hprd_interactions_htp"]], "pypath.inputs.htri": [[132, 3, 1, "", "htri_interactions"]], "pypath.inputs.humsavar": [[134, 3, 1, "", "uniprot_variants"]], "pypath.inputs.ielm": [[136, 3, 1, "", "get_ielm"], [137, 3, 1, "", "get_ielm_huge"]], "pypath.inputs.imweb": [[139, 3, 1, "", "get_imweb"], [140, 3, 1, "", "get_imweb_req"]], "pypath.inputs.innatedb": [[142, 3, 1, "", "innatedb_interactions"]], "pypath.inputs.instruct": [[144, 3, 1, "", "get_instruct"], [145, 3, 1, "", "get_instruct_offsets"]], "pypath.inputs.intact": [[147, 3, 1, "", "intact_interactions"]], "pypath.inputs.interpro": [[149, 3, 1, "", "interpro2go_annotations"], [150, 3, 1, "", "interpro_annotations"], [151, 3, 1, "", "interpro_entries"], [152, 3, 1, "", "interpro_xrefs"]], "pypath.inputs.ipi": [[154, 3, 1, "", "ipi_uniprot"]], "pypath.inputs.kegg_api": [[156, 3, 1, "", "disease_to_drug"], [157, 3, 1, "", "disease_to_gene"], [158, 3, 1, "", "disease_to_pathway"], [159, 3, 1, "", "drug_to_disease"], [160, 3, 1, "", "drug_to_drug"], [161, 3, 1, "", "drug_to_gene"], [162, 3, 1, "", "drug_to_pathway"], [163, 3, 1, "", "gene_to_disease"], [164, 3, 1, "", "gene_to_drug"], [165, 3, 1, "", "gene_to_pathway"], [166, 3, 1, "", "kegg_drug_to_chebi"], [167, 3, 1, "", "kegg_gene_to_ncbi_geneid"], [168, 3, 1, "", "kegg_gene_to_uniprot"], [169, 3, 1, "", "pathway_to_disease"], [170, 3, 1, "", "pathway_to_drug"], [171, 3, 1, "", "pathway_to_gene"]], "pypath.inputs.kirouac2010": [[173, 3, 1, "", "kirouac2010_interactions"]], "pypath.inputs.laudanna": [[175, 3, 1, "", "laudanna_directions"], [176, 3, 1, "", "laudanna_effects"]], "pypath.inputs.lincs": [[178, 3, 1, "", "lincs_compounds"]], "pypath.inputs.macrophage": [[180, 3, 1, "", "macrophage_interactions"]], "pypath.inputs.mimp": [[183, 3, 1, "", "get_kinase_class"], [184, 3, 1, "", "mimp_enzyme_substrate"], [185, 3, 1, "", "mimp_interactions"]], "pypath.inputs.mir2disease": [[187, 3, 1, "", "mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[189, 3, 1, "", "mirdeathdb_interactions"]], "pypath.inputs.mitab": [[191, 3, 1, "", "mitab_field_list"], [192, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.mppi": [[194, 3, 1, "", "mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[196, 3, 1, "", "ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[198, 3, 1, "", "negatome_interactions"]], "pypath.inputs.netbiol": [[200, 3, 1, "", "arn_interactions"], [201, 3, 1, "", "nrf2ome_interactions"]], "pypath.inputs.offsides": [[203, 3, 1, "", "offsides_side_effects"]], "pypath.inputs.ontology": [[205, 3, 1, "", "listof_ontologies"], [206, 3, 1, "", "ontology"]], "pypath.inputs.opentargets": [[208, 3, 1, "", "opentargets_adverse_reactions"], [209, 3, 1, "", "opentargets_baseline_expression"], [210, 3, 1, "", "opentargets_direct_score"], [211, 3, 1, "", "opentargets_general"], [212, 3, 1, "", "opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[214, 1, 1, "", "DiseasePathogen"], [215, 3, 1, "", "disease_pathogen_interactions"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "count"], [214, 4, 1, "", "disease"], [214, 4, 1, "", "disease_id"], [214, 4, 1, "", "evidence"], [214, 2, 1, "", "index"], [214, 4, 1, "", "pathogen"], [214, 4, 1, "", "pathogen_taxid"]], "pypath.inputs.pathwaycommons": [[217, 1, 1, "", "PathwayCommonsInteraction"], [218, 1, 1, "", "PathwayCommonsResource"], [219, 3, 1, "", "pathwaycommons_bind_interactions"], [220, 3, 1, "", "pathwaycommons_biogrid_interactions"], [221, 3, 1, "", "pathwaycommons_corum_interactions"], [222, 3, 1, "", "pathwaycommons_dip_interactions"], [223, 3, 1, "", "pathwaycommons_hprd_interactions"], [224, 3, 1, "", "pathwaycommons_inoh_interactions"], [225, 3, 1, "", "pathwaycommons_intact_interactions"], [226, 3, 1, "", "pathwaycommons_interactions"], [227, 3, 1, "", "pathwaycommons_kegg_interactions"], [228, 3, 1, "", "pathwaycommons_netpath_interactions"], [229, 3, 1, "", "pathwaycommons_panther_interactions"], [230, 3, 1, "", "pathwaycommons_phosphosite_interactions"], [231, 3, 1, "", "pathwaycommons_reactome_interactions"], [232, 3, 1, "", "pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, 2, 1, "", "__init__"], [217, 2, 1, "", "count"], [217, 4, 1, "", "id_a"], [217, 4, 1, "", "id_b"], [217, 2, 1, "", "index"], [217, 4, 1, "", "interaction_type"], [217, 4, 1, "", "resource"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "count"], [218, 2, 1, "", "index"], [218, 4, 1, "", "name"], [218, 4, 1, "", "pc_label"], [218, 4, 1, "", "version"]], "pypath.inputs.pazar": [[234, 3, 1, "", "pazar_interactions"]], "pypath.inputs.pepcyber": [[236, 3, 1, "", "pepcyber_details"], [237, 3, 1, "", "pepcyber_interactions"]], "pypath.inputs.pharos": [[239, 3, 1, "", "pharos_diseases"], [240, 3, 1, "", "pharos_expression"], [241, 3, 1, "", "pharos_general"], [242, 3, 1, "", "pharos_gtex"], [243, 3, 1, "", "pharos_ligands"], [244, 3, 1, "", "pharos_orthologs"], [245, 3, 1, "", "pharos_targets"], [246, 3, 1, "", "pharos_xrefs"]], "pypath.inputs.phobius": [[248, 3, 1, "", "phobius_annotations"]], "pypath.inputs.phosphonetworks": [[250, 3, 1, "", "phosphonetworks_enzyme_substrate"], [251, 3, 1, "", "phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[253, 3, 1, "", "phosphopoint_directions"], [254, 3, 1, "", "phosphopoint_interactions"]], "pypath.inputs.pro": [[256, 3, 1, "", "get_pro"], [257, 3, 1, "", "pro_mapping"]], "pypath.inputs.protmapper": [[259, 3, 1, "", "get_protmapper"], [260, 3, 1, "", "protmapper_enzyme_substrate"], [261, 3, 1, "", "protmapper_interactions"]], "pypath.inputs.pubchem": [[263, 3, 1, "", "pubchem_mapping"]], "pypath.inputs.pubmed": [[265, 3, 1, "", "get_pmid"], [266, 3, 1, "", "get_pubmeds"], [267, 3, 1, "", "only_pmids"], [268, 3, 1, "", "open_pubmed"], [269, 3, 1, "", "pmids_dict"], [270, 3, 1, "", "pmids_list"]], "pypath.inputs.ramp": [[272, 3, 1, "", "ramp_id_types"], [273, 3, 1, "", "ramp_id_types_2"], [274, 3, 1, "", "ramp_list_tables"], [275, 3, 1, "", "ramp_mapping"], [276, 3, 1, "", "ramp_raw"], [277, 3, 1, "", "ramp_show_tables"]], "pypath.inputs.reaction": [[280, 3, 1, "", "acsn_biopax"], [281, 3, 1, "", "acsn_interactions_2"], [282, 3, 1, "", "get_acsn_effects"], [283, 3, 1, "", "get_controls"], [284, 3, 1, "", "get_interactions"], [285, 3, 1, "", "get_reactions"], [286, 3, 1, "", "get_soup"], [287, 3, 1, "", "panther_biopax"], [288, 3, 1, "", "panther_interactions"], [289, 3, 1, "", "pid_biopax"], [290, 3, 1, "", "pid_interactions"], [291, 3, 1, "", "process_complex"], [292, 3, 1, "", "process_controls"], [293, 3, 1, "", "process_reactions"], [294, 3, 1, "", "reactions_biopax"], [295, 3, 1, "", "reactome_biopax"], [296, 3, 1, "", "reactome_bs"], [297, 3, 1, "", "reactome_interactions"], [298, 3, 1, "", "reactome_sbml"]], "pypath.inputs.reactome": [[300, 3, 1, "", "reactome_chebis"], [301, 3, 1, "", "reactome_pathway_relations"], [302, 3, 1, "", "reactome_pathways"], [303, 3, 1, "", "reactome_uniprots"]], "pypath.inputs.science": [[305, 3, 1, "", "science_download"]], "pypath.inputs.sider": [[307, 1, 1, "", "SiderDrug"], [308, 1, 1, "", "SiderSideeffect"], [309, 1, 1, "", "SiderSideeffectMeddra"], [310, 1, 1, "", "SiderSideeffetFrequency"], [311, 3, 1, "", "sider_drug_names"], [312, 3, 1, "", "sider_meddra_side_effects"], [313, 3, 1, "", "sider_side_effect_frequencies"], [314, 3, 1, "", "sider_side_effects"]], "pypath.inputs.sider.SiderDrug": [[307, 2, 1, "", "__init__"], [307, 4, 1, "", "atc"], [307, 2, 1, "", "count"], [307, 2, 1, "", "index"], [307, 4, 1, "", "name"]], "pypath.inputs.sider.SiderSideeffect": [[308, 2, 1, "", "__init__"], [308, 2, 1, "", "count"], [308, 2, 1, "", "index"], [308, 4, 1, "", "side_effect"], [308, 4, 1, "", "umls_concept_in_meddra"], [308, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[309, 2, 1, "", "__init__"], [309, 4, 1, "", "cid"], [309, 2, 1, "", "count"], [309, 2, 1, "", "index"], [309, 4, 1, "", "meddra_id"], [309, 4, 1, "", "side_effect_name"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[310, 2, 1, "", "__init__"], [310, 2, 1, "", "count"], [310, 4, 1, "", "frequency"], [310, 2, 1, "", "index"], [310, 4, 1, "", "side_effect"], [310, 4, 1, "", "umls_concept_in_meddra"], [310, 4, 1, "", "umls_concept_on_label"]], "pypath.inputs.stitch": [[316, 3, 1, "", "stitch_actions_interactions"], [317, 3, 1, "", "stitch_links_interactions"]], "pypath.inputs.string": [[319, 3, 1, "", "string_effects"], [320, 3, 1, "", "string_links_interactions"], [321, 3, 1, "", "string_physical_interactions"], [322, 3, 1, "", "string_species"]], "pypath.inputs.switches_elm": [[325, 3, 1, "", "get_switches_elm"]], "pypath.inputs.transmir": [[327, 3, 1, "", "transmir_interactions"]], "pypath.inputs.trip": [[329, 3, 1, "", "take_a_trip"], [330, 3, 1, "", "trip_find_uniprot"], [331, 3, 1, "", "trip_get_uniprot"], [332, 3, 1, "", "trip_interactions"], [333, 3, 1, "", "trip_process"], [334, 3, 1, "", "trip_process_table"]], "pypath.inputs.twosides": [[336, 3, 1, "", "twosides_interactions"]], "pypath.inputs.unichem": [[338, 3, 1, "", "info"], [339, 3, 1, "", "unichem_info"], [340, 3, 1, "", "unichem_mapping"], [341, 3, 1, "", "unichem_sources"]], "pypath.inputs.uniprot": [[343, 1, 1, "", "Taxon"], [344, 1, 1, "", "UniprotQuery"], [345, 1, 1, "", "UniprotRecordHistory"], [346, 3, 1, "", "deleted_uniprot_genesymbol"], [347, 3, 1, "", "get_uniprot_sec"], [348, 3, 1, "", "protein_datasheet"], [349, 3, 1, "", "query_builder"], [350, 3, 1, "", "swissprot_deleted"], [351, 3, 1, "", "trembl_deleted"], [352, 3, 1, "", "uniprot_data"], [353, 3, 1, "", "uniprot_deleted"], [354, 3, 1, "", "uniprot_families"], [355, 3, 1, "", "uniprot_history"], [356, 3, 1, "", "uniprot_history_recent_datasheet"], [357, 3, 1, "", "uniprot_keywords"], [358, 3, 1, "", "uniprot_locations"], [359, 3, 1, "", "uniprot_ncbi_taxids"], [360, 3, 1, "", "uniprot_ncbi_taxids_2"], [361, 3, 1, "", "uniprot_preprocess"], [362, 3, 1, "", "uniprot_query"], [363, 3, 1, "", "uniprot_recent_version"], [364, 3, 1, "", "uniprot_taxonomy"], [365, 3, 1, "", "uniprot_tissues"], [366, 3, 1, "", "uniprot_topology"], [367, 3, 1, "", "valid_uniprot"]], "pypath.inputs.uniprot.Taxon": [[343, 2, 1, "", "__init__"], [343, 2, 1, "", "count"], [343, 4, 1, "", "english"], [343, 2, 1, "", "index"], [343, 4, 1, "", "latin"], [343, 4, 1, "", "latin_synonym"], [343, 4, 1, "", "ncbi_id"]], "pypath.inputs.uniprot.UniprotQuery": [[344, 2, 1, "", "__init__"], [344, 2, 1, "", "__iter__"], [344, 4, 1, "", "fail_on_empty"], [344, 4, 1, "", "name_process"], [344, 2, 1, "", "perform"], [344, 5, 1, "", "url"], [344, 5, 1, "", "url_plain"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[345, 2, 1, "", "__init__"], [345, 2, 1, "", "count"], [345, 4, 1, "", "database"], [345, 4, 1, "", "date"], [345, 4, 1, "", "entry_name"], [345, 4, 1, "", "entry_version"], [345, 2, 1, "", "index"], [345, 4, 1, "", "number"], [345, 4, 1, "", "replaced_by"], [345, 4, 1, "", "replaces"], [345, 4, 1, "", "sequence_version"]], "pypath.inputs.uniprot_db": [[369, 3, 1, "", "all_swissprots"], [370, 3, 1, "", "all_trembls"], [371, 3, 1, "", "all_uniprots"], [372, 3, 1, "", "get_db"], [373, 3, 1, "", "init_db"], [374, 3, 1, "", "is_swissprot"], [375, 3, 1, "", "is_trembl"], [376, 3, 1, "", "is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[378, 3, 1, "", "idtypes"]], "pypath.internals": [[380, 0, 0, "-", "input_formats"], [394, 0, 0, "-", "license"], [400, 0, 0, "-", "maps"], [401, 0, 0, "-", "refs"], [404, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[381, 1, 1, "", "ArrayMapping"], [382, 1, 1, "", "BiomartMapping"], [383, 1, 1, "", "FileMapping"], [384, 1, 1, "", "HmdbMapping"], [385, 1, 1, "", "MappingInput"], [386, 1, 1, "", "NetworkInput"], [387, 1, 1, "", "PickleMapping"], [388, 1, 1, "", "ProMapping"], [389, 1, 1, "", "RampMapping"], [390, 1, 1, "", "ReadList"], [391, 1, 1, "", "UnichemMapping"], [392, 1, 1, "", "UniprotListMapping"], [393, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[381, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[382, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[383, 2, 1, "", "__init__"]], "pypath.internals.input_formats.HmdbMapping": [[384, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[385, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[386, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[387, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[388, 2, 1, "", "__init__"]], "pypath.internals.input_formats.RampMapping": [[389, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[390, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[391, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[392, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[393, 2, 1, "", "__init__"], [393, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[395, 1, 1, "", "License"], [396, 1, 1, "", "LicenseAttrib"], [397, 1, 1, "", "LicenseFeature"], [398, 1, 1, "", "LicensePurpose"], [399, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[396, 2, 1, "", "__init__"], [396, 2, 1, "", "check_level"], [396, 2, 1, "", "int_to_level"], [396, 2, 1, "", "level_to_int"], [396, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[397, 2, 1, "", "__init__"], [397, 2, 1, "", "check_level"], [397, 2, 1, "", "int_to_level"], [397, 2, 1, "", "level_to_int"], [397, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[398, 2, 1, "", "__init__"], [398, 2, 1, "", "check_level"], [398, 2, 1, "", "int_to_level"], [398, 2, 1, "", "level_to_int"], [398, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[399, 2, 1, "", "__init__"], [399, 2, 1, "", "check_level"], [399, 2, 1, "", "int_to_level"], [399, 2, 1, "", "level_to_int"], [399, 2, 1, "", "to_int"]], "pypath.internals.refs": [[402, 1, 1, "", "Reference"], [403, 3, 1, "", "get_pubmed_data"]], "pypath.internals.refs.Reference": [[402, 2, 1, "", "__init__"]], "pypath.internals.resource": [[405, 1, 1, "", "AbstractResource"], [406, 1, 1, "", "EnzymeSubstrateResource"], [407, 1, 1, "", "EnzymeSubstrateResourceKey"], [408, 1, 1, "", "NetworkDataset"], [409, 1, 1, "", "NetworkResource"], [410, 1, 1, "", "NetworkResourceKey"], [411, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[405, 2, 1, "", "__init__"], [405, 2, 1, "", "load_data"], [405, 2, 1, "", "process"], [405, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[406, 2, 1, "", "__init__"], [406, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[407, 2, 1, "", "__init__"], [407, 2, 1, "", "count"], [407, 4, 1, "", "data_type"], [407, 2, 1, "", "index"], [407, 4, 1, "", "name"], [407, 4, 1, "", "via"]], "pypath.internals.resource.NetworkDataset": [[408, 2, 1, "", "__init__"], [408, 2, 1, "", "clear"], [408, 2, 1, "", "get"], [408, 2, 1, "", "items"], [408, 2, 1, "", "keys"], [408, 2, 1, "", "pop"], [408, 2, 1, "", "popitem"], [408, 2, 1, "", "setdefault"], [408, 2, 1, "", "update"], [408, 2, 1, "", "values"]], "pypath.internals.resource.NetworkResource": [[409, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[410, 2, 1, "", "__init__"], [410, 2, 1, "", "count"], [410, 4, 1, "", "data_model"], [410, 4, 1, "", "data_type"], [410, 2, 1, "", "index"], [410, 4, 1, "", "interaction_type"], [410, 5, 1, "", "label"], [410, 5, 1, "", "last"], [410, 4, 1, "", "name"], [410, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[411, 2, 1, "", "__init__"]], "pypath.legacy": [[413, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[414, 3, 1, "", "get_categories"], [415, 3, 1, "", "get_category"]], "pypath.resources": [[418, 0, 0, "-", "controller"], [420, 0, 0, "-", "data"], [421, 0, 0, "-", "data_formats"], [430, 3, 1, "", "get_controller"], [431, 0, 0, "-", "licenses"], [433, 0, 0, "-", "network"], [434, 0, 0, "-", "urls"]], "pypath.resources.controller": [[419, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[419, 2, 1, "", "__init__"], [419, 2, 1, "", "add_resource_attrs"], [419, 2, 1, "", "collect_interaction"], [419, 2, 1, "", "collect_network"], [419, 2, 1, "", "license_filter"], [419, 2, 1, "", "secondary_resources"], [419, 2, 1, "", "update"]], "pypath.resources.data_formats": [[422, 6, 1, "", "activity_flow"], [423, 6, 1, "", "enzyme_substrate"], [424, 6, 1, "", "interaction"], [425, 6, 1, "", "interaction_htp"], [426, 6, 1, "", "pathway_bad"], [427, 6, 1, "", "reaction_pc"], [428, 6, 1, "", "transcription_deprecated"], [429, 6, 1, "", "transcription_onebyone"]], "pypath.resources.licenses": [[432, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[432, 2, 1, "", "__init__"]], "pypath.share": [[436, 0, 0, "-", "cache"], [440, 0, 0, "-", "common"], [441, 0, 0, "-", "constants"], [442, 0, 0, "-", "curl"], [459, 0, 0, "-", "progress"], [461, 0, 0, "-", "session"], [462, 0, 0, "-", "settings"]], "pypath.share.cache": [[437, 3, 1, "", "cache_item"], [438, 3, 1, "", "cache_path"], [439, 3, 1, "", "get_cachedir"]], "pypath.share.curl": [[443, 1, 1, "", "Curl"], [444, 1, 1, "", "FileOpener"], [445, 1, 1, "", "RemoteFile"], [446, 1, 1, "", "cache_delete_off"], [447, 1, 1, "", "cache_delete_on"], [448, 1, 1, "", "cache_off"], [449, 1, 1, "", "cache_on"], [450, 1, 1, "", "cache_print_off"], [451, 1, 1, "", "cache_print_on"], [452, 1, 1, "", "debug_off"], [453, 1, 1, "", "debug_on"], [454, 1, 1, "", "dryrun_off"], [455, 1, 1, "", "dryrun_on"], [456, 3, 1, "", "is_url"], [457, 1, 1, "", "preserve_off"], [458, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[443, 2, 1, "", "__init__"], [443, 2, 1, "", "cache_path"], [443, 2, 1, "", "close"], [443, 2, 1, "", "construct_binary_data"], [443, 2, 1, "", "extract"], [443, 2, 1, "", "is_quoted"], [443, 2, 1, "", "open"], [443, 2, 1, "", "open_tgz"], [443, 2, 1, "", "replace_forbidden"], [443, 2, 1, "", "set_binary_data"], [443, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[444, 2, 1, "", "__init__"], [444, 2, 1, "", "extract"], [444, 2, 1, "", "open"], [444, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[445, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[446, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[447, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[448, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[449, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[450, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[451, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[452, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[453, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[454, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[455, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[457, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[458, 2, 1, "", "__init__"]], "pypath.share.progress": [[460, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[460, 2, 1, "", "__init__"], [460, 2, 1, "", "get_desc"], [460, 2, 1, "", "init_tqdm"], [460, 2, 1, "", "set_done"], [460, 2, 1, "", "set_status"], [460, 2, 1, "", "set_total"], [460, 2, 1, "", "step"], [460, 2, 1, "", "terminate"]], "pypath.visual": [[464, 0, 0, "-", "drawing"], [467, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[465, 1, 1, "", "InterSet"], [466, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[465, 2, 1, "", "__init__"], [465, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[466, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[468, 1, 1, "", "AbstractCairoGraphDrawer"], [469, 4, 1, "", "ArrowEdgeDrawer"], [470, 1, 1, "", "DefaultGraphDrawerFFsupport"], [471, 4, 1, "", "DefaultVertexDrawer"], [472, 4, 1, "", "TextDrawer"], [473, 0, 0, "-", "edge"], [480, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[468, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[470, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[474, 1, 1, "", "AbstractEdgeDrawer"], [475, 1, 1, "", "AlphaVaryingEdgeDrawer"], [476, 1, 1, "", "ArrowEdgeDrawer"], [477, 1, 1, "", "DarkToLightEdgeDrawer"], [478, 1, 1, "", "LightToDarkEdgeDrawer"], [479, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "draw_directed_edge"], [474, 2, 1, "", "draw_loop_edge"], [474, 2, 1, "", "draw_undirected_edge"], [474, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "draw_directed_edge"], [475, 2, 1, "", "draw_loop_edge"], [475, 2, 1, "", "draw_undirected_edge"], [475, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "draw_directed_edge"], [476, 2, 1, "", "draw_loop_edge"], [476, 2, 1, "", "draw_undirected_edge"], [476, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "draw_directed_edge"], [477, 2, 1, "", "draw_loop_edge"], [477, 2, 1, "", "draw_undirected_edge"], [477, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "draw_directed_edge"], [478, 2, 1, "", "draw_loop_edge"], [478, 2, 1, "", "draw_undirected_edge"], [478, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[479, 2, 1, "", "__init__"], [479, 2, 1, "", "draw_directed_edge"], [479, 2, 1, "", "draw_loop_edge"], [479, 2, 1, "", "draw_undirected_edge"], [479, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[481, 1, 1, "", "AbstractCairoDrawer"], [482, 1, 1, "", "AbstractCairoVertexDrawer"], [483, 1, 1, "", "AbstractDrawer"], [484, 1, 1, "", "AbstractVertexDrawer"], [485, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[481, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[483, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pypath": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "core": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 57, 58, 59, 60, 61, 62, 63, 440, 488], "filter_network_df": 5, "data": [6, 420, 488], "disclaim": 7, "info": [8, 338, 488], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 488], "ab": [10, 11], "abs_interact": 11, "acsn": [12, 13, 14], "acsn_interact": 13, "acsn_interactions_sif": 14, "adrec": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "adrecsadr": 16, "adrecschildpar": 17, "adrecsdrug": 18, "adrecsdrugadr": 19, "adrecsterm": 20, "adrecs_adr_ontologi": 21, "adrecs_drug_adr": 22, "adrecs_drug_identifi": 23, "adrecs_hierarchi": 24, "biogrid": [25, 26, 27], "biogrid_all_interact": 26, "biogrid_interact": 27, "biomart": [28, 29, 30, 31, 32, 33], "biomart_homologi": 29, "biomart_microarrai": [30, 32], "biomart_microarray_typ": 31, "biomart_queri": 33, "biomodel": [34, 35, 36, 37, 38, 39], "download_single_model": 35, "get_all_model": 36, "get_biomodel": 37, "get_biomodels_req": 38, "get_single_model": 39, "ca1": [40, 41], "ca1_interact": 41, "cancercellmap": [42, 43], "ccmap_interact": 43, "cell": [44, 45], "cell_supplementari": 45, "chembl": [46, 47, 48, 49, 50, 51, 52, 53], "chembl_act": 47, "chembl_assai": 48, "chembl_docu": 49, "chembl_drug_ind": 50, "chembl_mechan": 51, "chembl_molecul": 52, "chembl_target": 53, "clinvar": [54, 55, 56], "clinvar_cit": 55, "clinvar_raw": 56, "csv_sep_chang": 58, "glom_field": 59, "json_extract": 60, "json_read": 61, "read_tabl": 62, "read_xl": 63, "compath": [64, 65], "compath_map": 65, "cpdb": [66, 67, 68], "cpdb_interact": 67, "cpdb_interactions_ltp": 68, "credenti": [69, 70], "ctdbase": [71, 72, 73], "ctdbase_rel": 72, "ctdbase_vocabulari": 73, "ddinter": [74, 75, 76, 77, 78, 79], "ddinter_drug_interact": 75, "ddinter_identifi": 76, "ddinter_interact": 77, "ddinter_map": 78, "ddinter_n_drug": 79, "deathdomain": [80, 81, 82], "deathdomain_interact": 81, "deathdomain_interactions_rescu": 82, "dip": [83, 84, 85], "dip_interact": 84, "dip_login": 85, "diseas": [86, 87, 88, 89, 90, 91, 92, 93], "diseases_gener": 87, "experiments_filt": 88, "experiments_ful": 89, "knowledge_filt": 90, "knowledge_ful": 91, "textmining_filt": 92, "textmining_ful": 93, "drugbank": [94, 95, 96, 97, 98, 99, 100], "drugbankful": 95, "drugbank_annot": 96, "drugbank_drug": 97, "drugbank_interact": 98, "drugbank_map": 99, "drugbank_raw_interact": 100, "ebi": [101, 102], "ebi_rest": 102, "elm": [103, 104, 105, 106, 107], "elm_class": 104, "elm_domain": 105, "elm_inst": 106, "elm_interact": 107, "embopress": [108, 109], "embopress_supplementari": 109, "encod": [110, 111], "encode_tf_mirna_interact": 111, "ensembl": [112, 113], "ensembl_organ": 113, "eutil": [114, 115], "esummari": 115, "expasi": [116, 117, 118], "expasy_enzyme_class": 117, "expasy_enzym": 118, "genecard": [119, 120, 121, 122], "genecards_datasheet": 120, "genecards_soup": 121, "genecards_summari": 122, "get_method": 123, "graphviz": [124, 125], "graphviz_attr": 125, "hprd": [126, 127, 128, 129, 130], "get_hprd": 127, "hprd_enzyme_substr": 128, "hprd_interact": 129, "hprd_interactions_htp": 130, "htri": [131, 132], "htri_interact": 132, "humsavar": [133, 134], "uniprot_vari": 134, "ielm": [135, 136, 137], "get_ielm": 136, "get_ielm_hug": 137, "imweb": [138, 139, 140], "get_imweb": 139, "get_imweb_req": 140, "innatedb": [141, 142], "innatedb_interact": 142, "instruct": [143, 144, 145], "get_instruct": 144, "get_instruct_offset": 145, "intact": [146, 147], "intact_interact": 147, "interpro": [148, 149, 150, 151, 152], "interpro2go_annot": 149, "interpro_annot": 150, "interpro_entri": 151, "interpro_xref": 152, "ipi": [153, 154], "ipi_uniprot": 154, "kegg_api": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "disease_to_drug": 156, "disease_to_gen": 157, "disease_to_pathwai": 158, "drug_to_diseas": 159, "drug_to_drug": 160, "drug_to_gen": 161, "drug_to_pathwai": 162, "gene_to_diseas": 163, "gene_to_drug": 164, "gene_to_pathwai": 165, "kegg_drug_to_chebi": 166, "kegg_gene_to_ncbi_geneid": 167, "kegg_gene_to_uniprot": 168, "pathway_to_diseas": 169, "pathway_to_drug": 170, "pathway_to_gen": 171, "kirouac2010": [172, 173], "kirouac2010_interact": 173, "laudanna": [174, 175, 176], "laudanna_direct": 175, "laudanna_effect": 176, "linc": [177, 178], "lincs_compound": 178, "macrophag": [179, 180], "macrophage_interact": 180, "main": 181, "mimp": [182, 183, 184, 185], "get_kinase_class": 183, "mimp_enzyme_substr": 184, "mimp_interact": 185, "mir2diseas": [186, 187], "mir2disease_interact": 187, "mirdeathdb": [188, 189], "mirdeathdb_interact": 189, "mitab": [190, 191, 192], "mitab_field_list": 191, "mitab_field_uniprot": 192, "mppi": [193, 194], "mppi_interact": 194, "ncrdeathdb": [195, 196], "ncrdeathdb_interact": 196, "negatom": [197, 198], "negatome_interact": 198, "netbiol": [199, 200, 201], "arn_interact": 200, "nrf2ome_interact": 201, "offsid": [202, 203], "offsides_side_effect": 203, "ontologi": [204, 205, 206, 488], "listof_ontologi": 205, "opentarget": [207, 208, 209, 210, 211, 212], "opentargets_adverse_react": 208, "opentargets_baseline_express": 209, "opentargets_direct_scor": 210, "opentargets_gener": 211, "opentargets_indirect_scor": 212, "pathophenodb": [213, 214, 215], "diseasepathogen": 214, "disease_pathogen_interact": 215, "pathwaycommon": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "pathwaycommonsinteract": 217, "pathwaycommonsresourc": 218, "pathwaycommons_bind_interact": 219, "pathwaycommons_biogrid_interact": 220, "pathwaycommons_corum_interact": 221, "pathwaycommons_dip_interact": 222, "pathwaycommons_hprd_interact": 223, "pathwaycommons_inoh_interact": 224, "pathwaycommons_intact_interact": 225, "pathwaycommons_interact": 226, "pathwaycommons_kegg_interact": 227, "pathwaycommons_netpath_interact": 228, "pathwaycommons_panther_interact": 229, "pathwaycommons_phosphosite_interact": 230, "pathwaycommons_reactome_interact": 231, "pathwaycommons_wikipathways_interact": 232, "pazar": [233, 234], "pazar_interact": 234, "pepcyb": [235, 236, 237], "pepcyber_detail": 236, "pepcyber_interact": 237, "pharo": [238, 239, 240, 241, 242, 243, 244, 245, 246], "pharos_diseas": 239, "pharos_express": 240, "pharos_gener": 241, "pharos_gtex": 242, "pharos_ligand": 243, "pharos_ortholog": 244, "pharos_target": 245, "pharos_xref": 246, "phobiu": [247, 248], "phobius_annot": 248, "phosphonetwork": [249, 250, 251], "phosphonetworks_enzyme_substr": 250, "phosphonetworks_interact": 251, "phosphopoint": [252, 253, 254], "phosphopoint_direct": 253, "phosphopoint_interact": 254, "pro": [255, 256, 257], "get_pro": 256, "pro_map": 257, "protmapp": [258, 259, 260, 261], "get_protmapp": 259, "protmapper_enzyme_substr": 260, "protmapper_interact": 261, "pubchem": [262, 263], "pubchem_map": 263, "pubm": [264, 265, 266, 267, 268, 269, 270], "get_pmid": 265, "get_pubm": 266, "only_pmid": 267, "open_pubm": 268, "pmids_dict": 269, "pmids_list": 270, "ramp": [271, 272, 273, 274, 275, 276, 277, 488], "ramp_id_typ": 272, "ramp_id_types_2": 273, "ramp_list_t": 274, "ramp_map": 275, "ramp_raw": 276, "ramp_show_t": 277, "rdata": 278, "reaction": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "acsn_biopax": 280, "acsn_interactions_2": 281, "get_acsn_effect": 282, "get_control": [283, 430], "get_interact": 284, "get_react": 285, "get_soup": 286, "panther_biopax": 287, "panther_interact": 288, "pid_biopax": 289, "pid_interact": 290, "process_complex": 291, "process_control": 292, "process_react": 293, "reactions_biopax": 294, "reactome_biopax": 295, "reactome_b": 296, "reactome_interact": 297, "reactome_sbml": 298, "reactom": [299, 300, 301, 302, 303], "reactome_chebi": 300, "reactome_pathway_rel": 301, "reactome_pathwai": 302, "reactome_uniprot": 303, "scienc": [304, 305], "science_download": 305, "sider": [306, 307, 308, 309, 310, 311, 312, 313, 314], "siderdrug": 307, "sidersideeffect": 308, "sidersideeffectmeddra": 309, "sidersideeffetfrequ": 310, "sider_drug_nam": 311, "sider_meddra_side_effect": 312, "sider_side_effect_frequ": 313, "sider_side_effect": 314, "stitch": [315, 316, 317], "stitch_actions_interact": 316, "stitch_links_interact": 317, "string": [318, 319, 320, 321, 322], "string_effect": 319, "string_links_interact": 320, "string_physical_interact": 321, "string_speci": 322, "swisslipid": [323, 488], "switches_elm": [324, 325], "get_switches_elm": 325, "transmir": [326, 327], "transmir_interact": 327, "trip": [328, 329, 330, 331, 332, 333, 334], "take_a_trip": 329, "trip_find_uniprot": 330, "trip_get_uniprot": 331, "trip_interact": 332, "trip_process": 333, "trip_process_t": 334, "twosid": [335, 336], "twosides_interact": 336, "unichem": [337, 338, 339, 340, 341], "unichem_info": 339, "unichem_map": 340, "unichem_sourc": 341, "uniprot": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 488], "taxon": 343, "uniprotqueri": 344, "uniprotrecordhistori": 345, "deleted_uniprot_genesymbol": 346, "get_uniprot_sec": 347, "protein_datasheet": 348, "query_build": 349, "swissprot_delet": 350, "trembl_delet": 351, "uniprot_data": 352, "uniprot_delet": 353, "uniprot_famili": 354, "uniprot_histori": 355, "uniprot_history_recent_datasheet": 356, "uniprot_keyword": 357, "uniprot_loc": 358, "uniprot_ncbi_taxid": 359, "uniprot_ncbi_taxids_2": 360, "uniprot_preprocess": 361, "uniprot_queri": 362, "uniprot_recent_vers": 363, "uniprot_taxonomi": 364, "uniprot_tissu": 365, "uniprot_topologi": 366, "valid_uniprot": 367, "uniprot_db": [368, 369, 370, 371, 372, 373, 374, 375, 376], "all_swissprot": 369, "all_trembl": 370, "all_uniprot": 371, "get_db": 372, "init_db": 373, "is_swissprot": 374, "is_trembl": 375, "is_uniprot": 376, "uniprot_idmap": [377, 378], "idtyp": 378, "intern": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "input_format": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "arraymap": 381, "biomartmap": 382, "filemap": 383, "hmdbmap": 384, "mappinginput": 385, "networkinput": 386, "picklemap": 387, "promap": 388, "rampmap": 389, "readlist": 390, "unichemmap": 391, "uniprotlistmap": 392, "uniprotmap": 393, "licens": [394, 395, 396, 397, 398, 399, 431, 432, 488], "licenseattrib": 396, "licensefeatur": 397, "licensepurpos": 398, "licenseshar": 399, "map": [400, 488], "ref": [401, 402, 403], "refer": [402, 488, 489], "get_pubmed_data": 403, "resourc": [404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 488], "abstractresourc": 405, "enzymesubstrateresourc": 406, "enzymesubstrateresourcekei": 407, "networkdataset": 408, "networkresourc": 409, "networkresourcekei": 410, "resourceattribut": 411, "legaci": [412, 413, 414, 415, 488], "db_categori": [413, 414, 415], "get_categori": [414, 415], "log": [416, 488], "control": [418, 419], "resourcecontrol": 419, "data_format": [421, 422, 423, 424, 425, 426, 427, 428, 429], "activity_flow": 422, "enzyme_substr": 423, "interact": [424, 488, 491], "interaction_htp": 425, "pathway_bad": 426, "reaction_pc": 427, "transcription_deprec": 428, "transcription_onebyon": 429, "network": [433, 488, 491], "url": 434, "share": [435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "cach": [436, 437, 438, 439, 488], "cache_item": 437, "cache_path": 438, "get_cachedir": 439, "constant": 441, "curl": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 488], "fileopen": 444, "remotefil": 445, "cache_delete_off": 446, "cache_delete_on": 447, "cache_off": 448, "cache_on": 449, "cache_print_off": 450, "cache_print_on": 451, "debug_off": 452, "debug_on": 453, "dryrun_off": 454, "dryrun_on": 455, "is_url": 456, "preserve_off": 457, "preserve_on": 458, "progress": [459, 460], "session": [461, 488], "set": 462, "visual": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "draw": [464, 465, 466], "interset": 465, "plot": [466, 488], "igraph_draw": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "abstractcairographdraw": 468, "arrowedgedraw": [469, 476], "defaultgraphdrawerffsupport": 470, "defaultvertexdraw": [471, 485], "textdraw": 472, "edg": [473, 474, 475, 476, 477, 478, 479, 488], "abstractedgedraw": 474, "alphavaryingedgedraw": 475, "darktolightedgedraw": 477, "lighttodarkedgedraw": 478, "taperededgedraw": 479, "vertex": [480, 481, 482, 483, 484, 485], "abstractcairodraw": 481, "abstractcairovertexdraw": 482, "abstractdraw": 483, "abstractvertexdraw": 484, "content": [486, 488], "welcom": 487, "omnipath": [487, 488], "do": [487, 488], "you": [487, 488], "need": 487, "instal": 487, "doc": 487, "get": 487, "help": 487, "featur": 487, "integr": 487, "databas": [487, 488], "manag": [487, 488], "further": 487, "modul": [487, 488], "id": [487, 488], "convers": 487, "homologi": 487, "translat": [487, 488], "faq": 487, "contact": 487, "impressum": 487, "histori": [487, 488, 490], "releas": [487, 490], "The": 488, "book": 488, "introduct": 488, "build": 488, "load": 488, "save": 488, "app": 488, "built": 488, "definit": 488, "strictli": 488, "literatur": 488, "curat": 488, "extra": 488, "activ": 488, "flow": 488, "enzym": [488, 491], "substrat": [488, 491], "ligand": 488, "receptor": 488, "transcript": 488, "regul": 488, "from": 488, "dorothea": 488, "other": 488, "mirna": 488, "post": 488, "lncrna": 488, "mrna": 488, "small": 488, "molecul": 488, "protein": 488, "relationship": 488, "complex": [488, 491], "annot": [488, 491], "inter": [488, 491], "cellular": [488, 491], "commun": [488, 491], "role": [488, 491], "directli": 488, "origin": 488, "interest": 488, "tl": 488, "dr": 488, "hmdb": 488, "human": 488, "metabolom": 488, "direct": 488, "access": 488, "higher": 488, "level": 488, "lipid": 488, "ncbi": 488, "e": 488, "util": 488, "download": 488, "custom": 488, "failur": 488, "corrupt": 488, "issu": 488, "look": 488, "debug": 488, "timeout": 488, "inspect": 488, "object": 488, "i": 488, "fail": 488, "onli": 488, "read": 488, "ssl": 488, "http": 488, "error": 488, "exampl": [488, 491], "commerci": 488, "us": 488, "inform": 488, "certain": 488, "dataset": [488, 491], "which": 488, "ar": 488, "pre": 488, "defin": 488, "panda": 488, "datafram": 488, "self": 488, "loop": 488, "molecular": [488, 491], "identifi": 488, "tabl": 488, "orthologi": 488, "dictionari": 488, "frame": 488, "taxonomi": 488, "scientif": 488, "name": 488, "organ": 488, "all": 488, "one": 488, "format": 488, "valid": 488, "singl": 488, "datasheet": 488, "record": 488, "rest": 488, "api": 488, "process": 488, "sanit": 488, "sequenc": 488, "full": 488, "select": 488, "signal": 488, "an": 488, "intercellular": 488, "quantit": 488, "overview": 488, "intercel": 488, "brows": 488, "categori": 488, "gene": 488, "pickl": 488, "messag": 488, "basic": 488, "about": 488, "file": 488, "consol": 488, "disabl": 488, "write": 488, "send": 488, "connect": 488, "class": 488, "logger": 488, "bel": 488, "export": 488, "cellphonedb": 488, "igraph": 488, "base": 488, "just": 488, "want": 488, "quickli": 488, "plai": 488, "around": 488, "how": [488, 489], "ani": 488, "creat": 488, "2": [488, 490], "test": 488, "structur": 488, "sign": 488, "node": 488, "queri": [488, 491], "our": 488, "without": 488, "causal": 488, "navig": 489, "0": 490, "1": 490, "3": 490, "4": 490, "5": 490, "32": 490, "6": 490, "31": 490, "7": 490, "74": 490, "93": 490, "110": 490, "8": 490, "9": 490, "10": 490, "11": 490, "12": 490, "13": 490, "14": 490, "upcom": 490, "webservic": 491, "type": 491, "mous": 491, "rat": 491, "explor": 491, "possibl": 491, "paramet": 491}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "pypath.inputs.abs.abs_interactions": [[11, "pypath-inputs-abs-abs-interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "pypath.inputs.acsn.acsn_interactions": [[13, "pypath-inputs-acsn-acsn-interactions"]], "pypath.inputs.acsn.acsn_interactions_sif": [[14, "pypath-inputs-acsn-acsn-interactions-sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "pypath.inputs.adrecs.AdrecsAdr": [[16, "pypath-inputs-adrecs-adrecsadr"]], "pypath.inputs.adrecs.AdrecsChildParent": [[17, "pypath-inputs-adrecs-adrecschildparent"]], "pypath.inputs.adrecs.AdrecsDrug": [[18, "pypath-inputs-adrecs-adrecsdrug"]], "pypath.inputs.adrecs.AdrecsDrugAdr": [[19, "pypath-inputs-adrecs-adrecsdrugadr"]], "pypath.inputs.adrecs.AdrecsTerm": [[20, "pypath-inputs-adrecs-adrecsterm"]], "pypath.inputs.adrecs.adrecs_adr_ontology": [[21, "pypath-inputs-adrecs-adrecs-adr-ontology"]], "pypath.inputs.adrecs.adrecs_drug_adr": [[22, "pypath-inputs-adrecs-adrecs-drug-adr"]], "pypath.inputs.adrecs.adrecs_drug_identifiers": [[23, "pypath-inputs-adrecs-adrecs-drug-identifiers"]], "pypath.inputs.adrecs.adrecs_hierarchy": [[24, "pypath-inputs-adrecs-adrecs-hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "pypath.inputs.biogrid.biogrid_all_interactions": [[26, "pypath-inputs-biogrid-biogrid-all-interactions"]], "pypath.inputs.biogrid.biogrid_interactions": [[27, "pypath-inputs-biogrid-biogrid-interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "pypath.inputs.biomart.biomart_homology": [[29, "pypath-inputs-biomart-biomart-homology"]], "pypath.inputs.biomart.biomart_microarray": [[30, "pypath-inputs-biomart-biomart-microarray"]], "pypath.inputs.biomart.biomart_microarray_types": [[31, "pypath-inputs-biomart-biomart-microarray-types"]], "pypath.inputs.biomart.biomart_microarrays": [[32, "pypath-inputs-biomart-biomart-microarrays"]], "pypath.inputs.biomart.biomart_query": [[33, "pypath-inputs-biomart-biomart-query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "pypath.inputs.biomodels.download_single_model": [[35, "pypath-inputs-biomodels-download-single-model"]], "pypath.inputs.biomodels.get_all_models": [[36, "pypath-inputs-biomodels-get-all-models"]], "pypath.inputs.biomodels.get_biomodels": [[37, "pypath-inputs-biomodels-get-biomodels"]], "pypath.inputs.biomodels.get_biomodels_req": [[38, "pypath-inputs-biomodels-get-biomodels-req"]], "pypath.inputs.biomodels.get_single_model": [[39, "pypath-inputs-biomodels-get-single-model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "pypath.inputs.ca1.ca1_interactions": [[41, "pypath-inputs-ca1-ca1-interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "pypath.inputs.cancercellmap.ccmap_interactions": [[43, "pypath-inputs-cancercellmap-ccmap-interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[45, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "pypath.inputs.chembl.chembl_activities": [[47, "pypath-inputs-chembl-chembl-activities"]], "pypath.inputs.chembl.chembl_assays": [[48, "pypath-inputs-chembl-chembl-assays"]], "pypath.inputs.chembl.chembl_documents": [[49, "pypath-inputs-chembl-chembl-documents"]], "pypath.inputs.chembl.chembl_drug_indications": [[50, "pypath-inputs-chembl-chembl-drug-indications"]], "pypath.inputs.chembl.chembl_mechanisms": [[51, "pypath-inputs-chembl-chembl-mechanisms"]], "pypath.inputs.chembl.chembl_molecules": [[52, "pypath-inputs-chembl-chembl-molecules"]], "pypath.inputs.chembl.chembl_targets": [[53, "pypath-inputs-chembl-chembl-targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "pypath.inputs.clinvar.clinvar_citations": [[55, "pypath-inputs-clinvar-clinvar-citations"]], "pypath.inputs.clinvar.clinvar_raw": [[56, "pypath-inputs-clinvar-clinvar-raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[58, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[59, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[60, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[61, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[62, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[63, "pypath-inputs-common-read-xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "pypath.inputs.compath.compath_mappings": [[65, "pypath-inputs-compath-compath-mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "pypath.inputs.cpdb.cpdb_interactions": [[67, "pypath-inputs-cpdb-cpdb-interactions"]], "pypath.inputs.cpdb.cpdb_interactions_ltp": [[68, "pypath-inputs-cpdb-cpdb-interactions-ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[70, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "pypath.inputs.ctdbase.ctdbase_relations": [[72, "pypath-inputs-ctdbase-ctdbase-relations"]], "pypath.inputs.ctdbase.ctdbase_vocabulary": [[73, "pypath-inputs-ctdbase-ctdbase-vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "pypath.inputs.ddinter.ddinter_drug_interactions": [[75, "pypath-inputs-ddinter-ddinter-drug-interactions"]], "pypath.inputs.ddinter.ddinter_identifiers": [[76, "pypath-inputs-ddinter-ddinter-identifiers"]], "pypath.inputs.ddinter.ddinter_interactions": [[77, "pypath-inputs-ddinter-ddinter-interactions"]], "pypath.inputs.ddinter.ddinter_mappings": [[78, "pypath-inputs-ddinter-ddinter-mappings"]], "pypath.inputs.ddinter.ddinter_n_drugs": [[79, "pypath-inputs-ddinter-ddinter-n-drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "pypath.inputs.deathdomain.deathdomain_interactions": [[81, "pypath-inputs-deathdomain-deathdomain-interactions"]], "pypath.inputs.deathdomain.deathdomain_interactions_rescued": [[82, "pypath-inputs-deathdomain-deathdomain-interactions-rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "pypath.inputs.dip.dip_interactions": [[84, "pypath-inputs-dip-dip-interactions"]], "pypath.inputs.dip.dip_login": [[85, "pypath-inputs-dip-dip-login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "pypath.inputs.diseases.diseases_general": [[87, "pypath-inputs-diseases-diseases-general"]], "pypath.inputs.diseases.experiments_filtered": [[88, "pypath-inputs-diseases-experiments-filtered"]], "pypath.inputs.diseases.experiments_full": [[89, "pypath-inputs-diseases-experiments-full"]], "pypath.inputs.diseases.knowledge_filtered": [[90, "pypath-inputs-diseases-knowledge-filtered"]], "pypath.inputs.diseases.knowledge_full": [[91, "pypath-inputs-diseases-knowledge-full"]], "pypath.inputs.diseases.textmining_filtered": [[92, "pypath-inputs-diseases-textmining-filtered"]], "pypath.inputs.diseases.textmining_full": [[93, "pypath-inputs-diseases-textmining-full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "pypath.inputs.drugbank.DrugbankFull": [[95, "pypath-inputs-drugbank-drugbankfull"]], "pypath.inputs.drugbank.drugbank_annotations": [[96, "pypath-inputs-drugbank-drugbank-annotations"]], "pypath.inputs.drugbank.drugbank_drugs": [[97, "pypath-inputs-drugbank-drugbank-drugs"]], "pypath.inputs.drugbank.drugbank_interactions": [[98, "pypath-inputs-drugbank-drugbank-interactions"]], "pypath.inputs.drugbank.drugbank_mapping": [[99, "pypath-inputs-drugbank-drugbank-mapping"]], "pypath.inputs.drugbank.drugbank_raw_interactions": [[100, "pypath-inputs-drugbank-drugbank-raw-interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[102, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "pypath.inputs.elm.elm_classes": [[104, "pypath-inputs-elm-elm-classes"]], "pypath.inputs.elm.elm_domains": [[105, "pypath-inputs-elm-elm-domains"]], "pypath.inputs.elm.elm_instances": [[106, "pypath-inputs-elm-elm-instances"]], "pypath.inputs.elm.elm_interactions": [[107, "pypath-inputs-elm-elm-interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[109, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "pypath.inputs.encode.encode_tf_mirna_interactions": [[111, "pypath-inputs-encode-encode-tf-mirna-interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "pypath.inputs.ensembl.ensembl_organisms": [[113, "pypath-inputs-ensembl-ensembl-organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "pypath.inputs.eutils.esummary": [[115, "pypath-inputs-eutils-esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "pypath.inputs.expasy.expasy_enzyme_classes": [[117, "pypath-inputs-expasy-expasy-enzyme-classes"]], "pypath.inputs.expasy.expasy_enzymes": [[118, "pypath-inputs-expasy-expasy-enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "pypath.inputs.genecards.genecards_datasheet": [[120, "pypath-inputs-genecards-genecards-datasheet"]], "pypath.inputs.genecards.genecards_soup": [[121, "pypath-inputs-genecards-genecards-soup"]], "pypath.inputs.genecards.genecards_summaries": [[122, "pypath-inputs-genecards-genecards-summaries"]], "pypath.inputs.get_method": [[123, "pypath-inputs-get-method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "pypath.inputs.graphviz.graphviz_attrs": [[125, "pypath-inputs-graphviz-graphviz-attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "pypath.inputs.hprd.get_hprd": [[127, "pypath-inputs-hprd-get-hprd"]], "pypath.inputs.hprd.hprd_enzyme_substrate": [[128, "pypath-inputs-hprd-hprd-enzyme-substrate"]], "pypath.inputs.hprd.hprd_interactions": [[129, "pypath-inputs-hprd-hprd-interactions"]], "pypath.inputs.hprd.hprd_interactions_htp": [[130, "pypath-inputs-hprd-hprd-interactions-htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "pypath.inputs.htri.htri_interactions": [[132, "pypath-inputs-htri-htri-interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "pypath.inputs.humsavar.uniprot_variants": [[134, "pypath-inputs-humsavar-uniprot-variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "pypath.inputs.ielm.get_ielm": [[136, "pypath-inputs-ielm-get-ielm"]], "pypath.inputs.ielm.get_ielm_huge": [[137, "pypath-inputs-ielm-get-ielm-huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "pypath.inputs.imweb.get_imweb": [[139, "pypath-inputs-imweb-get-imweb"]], "pypath.inputs.imweb.get_imweb_req": [[140, "pypath-inputs-imweb-get-imweb-req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "pypath.inputs.innatedb.innatedb_interactions": [[142, "pypath-inputs-innatedb-innatedb-interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "pypath.inputs.instruct.get_instruct": [[144, "pypath-inputs-instruct-get-instruct"]], "pypath.inputs.instruct.get_instruct_offsets": [[145, "pypath-inputs-instruct-get-instruct-offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "pypath.inputs.intact.intact_interactions": [[147, "pypath-inputs-intact-intact-interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "pypath.inputs.interpro.interpro2go_annotations": [[149, "pypath-inputs-interpro-interpro2go-annotations"]], "pypath.inputs.interpro.interpro_annotations": [[150, "pypath-inputs-interpro-interpro-annotations"]], "pypath.inputs.interpro.interpro_entries": [[151, "pypath-inputs-interpro-interpro-entries"]], "pypath.inputs.interpro.interpro_xrefs": [[152, "pypath-inputs-interpro-interpro-xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "pypath.inputs.ipi.ipi_uniprot": [[154, "pypath-inputs-ipi-ipi-uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "pypath.inputs.kegg_api.disease_to_drug": [[156, "pypath-inputs-kegg-api-disease-to-drug"]], "pypath.inputs.kegg_api.disease_to_gene": [[157, "pypath-inputs-kegg-api-disease-to-gene"]], "pypath.inputs.kegg_api.disease_to_pathway": [[158, "pypath-inputs-kegg-api-disease-to-pathway"]], "pypath.inputs.kegg_api.drug_to_disease": [[159, "pypath-inputs-kegg-api-drug-to-disease"]], "pypath.inputs.kegg_api.drug_to_drug": [[160, "pypath-inputs-kegg-api-drug-to-drug"]], "pypath.inputs.kegg_api.drug_to_gene": [[161, "pypath-inputs-kegg-api-drug-to-gene"]], "pypath.inputs.kegg_api.drug_to_pathway": [[162, "pypath-inputs-kegg-api-drug-to-pathway"]], "pypath.inputs.kegg_api.gene_to_disease": [[163, "pypath-inputs-kegg-api-gene-to-disease"]], "pypath.inputs.kegg_api.gene_to_drug": [[164, "pypath-inputs-kegg-api-gene-to-drug"]], "pypath.inputs.kegg_api.gene_to_pathway": [[165, "pypath-inputs-kegg-api-gene-to-pathway"]], "pypath.inputs.kegg_api.kegg_drug_to_chebi": [[166, "pypath-inputs-kegg-api-kegg-drug-to-chebi"]], "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid": [[167, "pypath-inputs-kegg-api-kegg-gene-to-ncbi-geneid"]], "pypath.inputs.kegg_api.kegg_gene_to_uniprot": [[168, "pypath-inputs-kegg-api-kegg-gene-to-uniprot"]], "pypath.inputs.kegg_api.pathway_to_disease": [[169, "pypath-inputs-kegg-api-pathway-to-disease"]], "pypath.inputs.kegg_api.pathway_to_drug": [[170, "pypath-inputs-kegg-api-pathway-to-drug"]], "pypath.inputs.kegg_api.pathway_to_gene": [[171, "pypath-inputs-kegg-api-pathway-to-gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "pypath.inputs.kirouac2010.kirouac2010_interactions": [[173, "pypath-inputs-kirouac2010-kirouac2010-interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "pypath.inputs.laudanna.laudanna_directions": [[175, "pypath-inputs-laudanna-laudanna-directions"]], "pypath.inputs.laudanna.laudanna_effects": [[176, "pypath-inputs-laudanna-laudanna-effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "pypath.inputs.lincs.lincs_compounds": [[178, "pypath-inputs-lincs-lincs-compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "pypath.inputs.macrophage.macrophage_interactions": [[180, "pypath-inputs-macrophage-macrophage-interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "pypath.inputs.mimp.get_kinase_class": [[183, "pypath-inputs-mimp-get-kinase-class"]], "pypath.inputs.mimp.mimp_enzyme_substrate": [[184, "pypath-inputs-mimp-mimp-enzyme-substrate"]], "pypath.inputs.mimp.mimp_interactions": [[185, "pypath-inputs-mimp-mimp-interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "pypath.inputs.mir2disease.mir2disease_interactions": [[187, "pypath-inputs-mir2disease-mir2disease-interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "pypath.inputs.mirdeathdb.mirdeathdb_interactions": [[189, "pypath-inputs-mirdeathdb-mirdeathdb-interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[191, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[192, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "pypath.inputs.mppi.mppi_interactions": [[194, "pypath-inputs-mppi-mppi-interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions": [[196, "pypath-inputs-ncrdeathdb-ncrdeathdb-interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "pypath.inputs.negatome.negatome_interactions": [[198, "pypath-inputs-negatome-negatome-interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "pypath.inputs.netbiol.arn_interactions": [[200, "pypath-inputs-netbiol-arn-interactions"]], "pypath.inputs.netbiol.nrf2ome_interactions": [[201, "pypath-inputs-netbiol-nrf2ome-interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "pypath.inputs.offsides.offsides_side_effects": [[203, "pypath-inputs-offsides-offsides-side-effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "pypath.inputs.ontology.listof_ontologies": [[205, "pypath-inputs-ontology-listof-ontologies"]], "pypath.inputs.ontology.ontology": [[206, "pypath-inputs-ontology-ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "pypath.inputs.opentargets.opentargets_adverse_reactions": [[208, "pypath-inputs-opentargets-opentargets-adverse-reactions"]], "pypath.inputs.opentargets.opentargets_baseline_expression": [[209, "pypath-inputs-opentargets-opentargets-baseline-expression"]], "pypath.inputs.opentargets.opentargets_direct_score": [[210, "pypath-inputs-opentargets-opentargets-direct-score"]], "pypath.inputs.opentargets.opentargets_general": [[211, "pypath-inputs-opentargets-opentargets-general"]], "pypath.inputs.opentargets.opentargets_indirect_score": [[212, "pypath-inputs-opentargets-opentargets-indirect-score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "pypath.inputs.pathophenodb.DiseasePathogen": [[214, "pypath-inputs-pathophenodb-diseasepathogen"]], "pypath.inputs.pathophenodb.disease_pathogen_interactions": [[215, "pypath-inputs-pathophenodb-disease-pathogen-interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pypath.inputs.pathwaycommons.PathwayCommonsInteraction": [[217, "pypath-inputs-pathwaycommons-pathwaycommonsinteraction"]], "pypath.inputs.pathwaycommons.PathwayCommonsResource": [[218, "pypath-inputs-pathwaycommons-pathwaycommonsresource"]], "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions": [[219, "pypath-inputs-pathwaycommons-pathwaycommons-bind-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions": [[220, "pypath-inputs-pathwaycommons-pathwaycommons-biogrid-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions": [[221, "pypath-inputs-pathwaycommons-pathwaycommons-corum-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions": [[222, "pypath-inputs-pathwaycommons-pathwaycommons-dip-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions": [[223, "pypath-inputs-pathwaycommons-pathwaycommons-hprd-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions": [[224, "pypath-inputs-pathwaycommons-pathwaycommons-inoh-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions": [[225, "pypath-inputs-pathwaycommons-pathwaycommons-intact-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_interactions": [[226, "pypath-inputs-pathwaycommons-pathwaycommons-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions": [[227, "pypath-inputs-pathwaycommons-pathwaycommons-kegg-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions": [[228, "pypath-inputs-pathwaycommons-pathwaycommons-netpath-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions": [[229, "pypath-inputs-pathwaycommons-pathwaycommons-panther-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions": [[230, "pypath-inputs-pathwaycommons-pathwaycommons-phosphosite-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions": [[231, "pypath-inputs-pathwaycommons-pathwaycommons-reactome-interactions"]], "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions": [[232, "pypath-inputs-pathwaycommons-pathwaycommons-wikipathways-interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pypath.inputs.pazar.pazar_interactions": [[234, "pypath-inputs-pazar-pazar-interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pypath.inputs.pepcyber.pepcyber_details": [[236, "pypath-inputs-pepcyber-pepcyber-details"]], "pypath.inputs.pepcyber.pepcyber_interactions": [[237, "pypath-inputs-pepcyber-pepcyber-interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pypath.inputs.pharos.pharos_diseases": [[239, "pypath-inputs-pharos-pharos-diseases"]], "pypath.inputs.pharos.pharos_expression": [[240, "pypath-inputs-pharos-pharos-expression"]], "pypath.inputs.pharos.pharos_general": [[241, "pypath-inputs-pharos-pharos-general"]], "pypath.inputs.pharos.pharos_gtex": [[242, "pypath-inputs-pharos-pharos-gtex"]], "pypath.inputs.pharos.pharos_ligands": [[243, "pypath-inputs-pharos-pharos-ligands"]], "pypath.inputs.pharos.pharos_orthologs": [[244, "pypath-inputs-pharos-pharos-orthologs"]], "pypath.inputs.pharos.pharos_targets": [[245, "pypath-inputs-pharos-pharos-targets"]], "pypath.inputs.pharos.pharos_xrefs": [[246, "pypath-inputs-pharos-pharos-xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "pypath.inputs.phobius.phobius_annotations": [[248, "pypath-inputs-phobius-phobius-annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate": [[250, "pypath-inputs-phosphonetworks-phosphonetworks-enzyme-substrate"]], "pypath.inputs.phosphonetworks.phosphonetworks_interactions": [[251, "pypath-inputs-phosphonetworks-phosphonetworks-interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "pypath.inputs.phosphopoint.phosphopoint_directions": [[253, "pypath-inputs-phosphopoint-phosphopoint-directions"]], "pypath.inputs.phosphopoint.phosphopoint_interactions": [[254, "pypath-inputs-phosphopoint-phosphopoint-interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "pypath.inputs.pro.get_pro": [[256, "pypath-inputs-pro-get-pro"]], "pypath.inputs.pro.pro_mapping": [[257, "pypath-inputs-pro-pro-mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "pypath.inputs.protmapper.get_protmapper": [[259, "pypath-inputs-protmapper-get-protmapper"]], "pypath.inputs.protmapper.protmapper_enzyme_substrate": [[260, "pypath-inputs-protmapper-protmapper-enzyme-substrate"]], "pypath.inputs.protmapper.protmapper_interactions": [[261, "pypath-inputs-protmapper-protmapper-interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pypath.inputs.pubchem.pubchem_mapping": [[263, "pypath-inputs-pubchem-pubchem-mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "pypath.inputs.pubmed.get_pmid": [[265, "pypath-inputs-pubmed-get-pmid"]], "pypath.inputs.pubmed.get_pubmeds": [[266, "pypath-inputs-pubmed-get-pubmeds"]], "pypath.inputs.pubmed.only_pmids": [[267, "pypath-inputs-pubmed-only-pmids"]], "pypath.inputs.pubmed.open_pubmed": [[268, "pypath-inputs-pubmed-open-pubmed"]], "pypath.inputs.pubmed.pmids_dict": [[269, "pypath-inputs-pubmed-pmids-dict"]], "pypath.inputs.pubmed.pmids_list": [[270, "pypath-inputs-pubmed-pmids-list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "pypath.inputs.ramp.ramp_id_types": [[272, "pypath-inputs-ramp-ramp-id-types"]], "pypath.inputs.ramp.ramp_id_types_2": [[273, "pypath-inputs-ramp-ramp-id-types-2"]], "pypath.inputs.ramp.ramp_list_tables": [[274, "pypath-inputs-ramp-ramp-list-tables"]], "pypath.inputs.ramp.ramp_mapping": [[275, "pypath-inputs-ramp-ramp-mapping"]], "pypath.inputs.ramp.ramp_raw": [[276, "pypath-inputs-ramp-ramp-raw"]], "pypath.inputs.ramp.ramp_show_tables": [[277, "pypath-inputs-ramp-ramp-show-tables"]], "pypath.inputs.rdata": [[278, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[279, "module-pypath.inputs.reaction"]], "pypath.inputs.reaction.acsn_biopax": [[280, "pypath-inputs-reaction-acsn-biopax"]], "pypath.inputs.reaction.acsn_interactions_2": [[281, "pypath-inputs-reaction-acsn-interactions-2"]], "pypath.inputs.reaction.get_acsn_effects": [[282, "pypath-inputs-reaction-get-acsn-effects"]], "pypath.inputs.reaction.get_controls": [[283, "pypath-inputs-reaction-get-controls"]], "pypath.inputs.reaction.get_interactions": [[284, "pypath-inputs-reaction-get-interactions"]], "pypath.inputs.reaction.get_reactions": [[285, "pypath-inputs-reaction-get-reactions"]], "pypath.inputs.reaction.get_soup": [[286, "pypath-inputs-reaction-get-soup"]], "pypath.inputs.reaction.panther_biopax": [[287, "pypath-inputs-reaction-panther-biopax"]], "pypath.inputs.reaction.panther_interactions": [[288, "pypath-inputs-reaction-panther-interactions"]], "pypath.inputs.reaction.pid_biopax": [[289, "pypath-inputs-reaction-pid-biopax"]], "pypath.inputs.reaction.pid_interactions": [[290, "pypath-inputs-reaction-pid-interactions"]], "pypath.inputs.reaction.process_complex": [[291, "pypath-inputs-reaction-process-complex"]], "pypath.inputs.reaction.process_controls": [[292, "pypath-inputs-reaction-process-controls"]], "pypath.inputs.reaction.process_reactions": [[293, "pypath-inputs-reaction-process-reactions"]], "pypath.inputs.reaction.reactions_biopax": [[294, "pypath-inputs-reaction-reactions-biopax"]], "pypath.inputs.reaction.reactome_biopax": [[295, "pypath-inputs-reaction-reactome-biopax"]], "pypath.inputs.reaction.reactome_bs": [[296, "pypath-inputs-reaction-reactome-bs"]], "pypath.inputs.reaction.reactome_interactions": [[297, "pypath-inputs-reaction-reactome-interactions"]], "pypath.inputs.reaction.reactome_sbml": [[298, "pypath-inputs-reaction-reactome-sbml"]], "pypath.inputs.reactome": [[299, "module-pypath.inputs.reactome"]], "pypath.inputs.reactome.reactome_chebis": [[300, "pypath-inputs-reactome-reactome-chebis"]], "pypath.inputs.reactome.reactome_pathway_relations": [[301, "pypath-inputs-reactome-reactome-pathway-relations"]], "pypath.inputs.reactome.reactome_pathways": [[302, "pypath-inputs-reactome-reactome-pathways"]], "pypath.inputs.reactome.reactome_uniprots": [[303, "pypath-inputs-reactome-reactome-uniprots"]], "pypath.inputs.science": [[304, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[305, "pypath-inputs-science-science-download"]], "pypath.inputs.sider": [[306, "module-pypath.inputs.sider"]], "pypath.inputs.sider.SiderDrug": [[307, "pypath-inputs-sider-siderdrug"]], "pypath.inputs.sider.SiderSideeffect": [[308, "pypath-inputs-sider-sidersideeffect"]], "pypath.inputs.sider.SiderSideeffectMeddra": [[309, "pypath-inputs-sider-sidersideeffectmeddra"]], "pypath.inputs.sider.SiderSideeffetFrequency": [[310, "pypath-inputs-sider-sidersideeffetfrequency"]], "pypath.inputs.sider.sider_drug_names": [[311, "pypath-inputs-sider-sider-drug-names"]], "pypath.inputs.sider.sider_meddra_side_effects": [[312, "pypath-inputs-sider-sider-meddra-side-effects"]], "pypath.inputs.sider.sider_side_effect_frequencies": [[313, "pypath-inputs-sider-sider-side-effect-frequencies"]], "pypath.inputs.sider.sider_side_effects": [[314, "pypath-inputs-sider-sider-side-effects"]], "pypath.inputs.stitch": [[315, "module-pypath.inputs.stitch"]], "pypath.inputs.stitch.stitch_actions_interactions": [[316, "pypath-inputs-stitch-stitch-actions-interactions"]], "pypath.inputs.stitch.stitch_links_interactions": [[317, "pypath-inputs-stitch-stitch-links-interactions"]], "pypath.inputs.string": [[318, "module-pypath.inputs.string"]], "pypath.inputs.string.string_effects": [[319, "pypath-inputs-string-string-effects"]], "pypath.inputs.string.string_links_interactions": [[320, "pypath-inputs-string-string-links-interactions"]], "pypath.inputs.string.string_physical_interactions": [[321, "pypath-inputs-string-string-physical-interactions"]], "pypath.inputs.string.string_species": [[322, "pypath-inputs-string-string-species"]], "pypath.inputs.swisslipids": [[323, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[324, "module-pypath.inputs.switches_elm"]], "pypath.inputs.switches_elm.get_switches_elm": [[325, "pypath-inputs-switches-elm-get-switches-elm"]], "pypath.inputs.transmir": [[326, "module-pypath.inputs.transmir"]], "pypath.inputs.transmir.transmir_interactions": [[327, "pypath-inputs-transmir-transmir-interactions"]], "pypath.inputs.trip": [[328, "module-pypath.inputs.trip"]], "pypath.inputs.trip.take_a_trip": [[329, "pypath-inputs-trip-take-a-trip"]], "pypath.inputs.trip.trip_find_uniprot": [[330, "pypath-inputs-trip-trip-find-uniprot"]], "pypath.inputs.trip.trip_get_uniprot": [[331, "pypath-inputs-trip-trip-get-uniprot"]], "pypath.inputs.trip.trip_interactions": [[332, "pypath-inputs-trip-trip-interactions"]], "pypath.inputs.trip.trip_process": [[333, "pypath-inputs-trip-trip-process"]], "pypath.inputs.trip.trip_process_table": [[334, "pypath-inputs-trip-trip-process-table"]], "pypath.inputs.twosides": [[335, "module-pypath.inputs.twosides"]], "pypath.inputs.twosides.twosides_interactions": [[336, "pypath-inputs-twosides-twosides-interactions"]], "pypath.inputs.unichem": [[337, "module-pypath.inputs.unichem"]], "pypath.inputs.unichem.info": [[338, "pypath-inputs-unichem-info"]], "pypath.inputs.unichem.unichem_info": [[339, "pypath-inputs-unichem-unichem-info"]], "pypath.inputs.unichem.unichem_mapping": [[340, "pypath-inputs-unichem-unichem-mapping"]], "pypath.inputs.unichem.unichem_sources": [[341, "pypath-inputs-unichem-unichem-sources"]], "pypath.inputs.uniprot": [[342, "module-pypath.inputs.uniprot"]], "pypath.inputs.uniprot.Taxon": [[343, "pypath-inputs-uniprot-taxon"]], "pypath.inputs.uniprot.UniprotQuery": [[344, "pypath-inputs-uniprot-uniprotquery"]], "pypath.inputs.uniprot.UniprotRecordHistory": [[345, "pypath-inputs-uniprot-uniprotrecordhistory"]], "pypath.inputs.uniprot.deleted_uniprot_genesymbol": [[346, "pypath-inputs-uniprot-deleted-uniprot-genesymbol"]], "pypath.inputs.uniprot.get_uniprot_sec": [[347, "pypath-inputs-uniprot-get-uniprot-sec"]], "pypath.inputs.uniprot.protein_datasheet": [[348, "pypath-inputs-uniprot-protein-datasheet"]], "pypath.inputs.uniprot.query_builder": [[349, "pypath-inputs-uniprot-query-builder"]], "pypath.inputs.uniprot.swissprot_deleted": [[350, "pypath-inputs-uniprot-swissprot-deleted"]], "pypath.inputs.uniprot.trembl_deleted": [[351, "pypath-inputs-uniprot-trembl-deleted"]], "pypath.inputs.uniprot.uniprot_data": [[352, "pypath-inputs-uniprot-uniprot-data"]], "pypath.inputs.uniprot.uniprot_deleted": [[353, "pypath-inputs-uniprot-uniprot-deleted"]], "pypath.inputs.uniprot.uniprot_families": [[354, "pypath-inputs-uniprot-uniprot-families"]], "pypath.inputs.uniprot.uniprot_history": [[355, "pypath-inputs-uniprot-uniprot-history"]], "pypath.inputs.uniprot.uniprot_history_recent_datasheet": [[356, "pypath-inputs-uniprot-uniprot-history-recent-datasheet"]], "pypath.inputs.uniprot.uniprot_keywords": [[357, "pypath-inputs-uniprot-uniprot-keywords"]], "pypath.inputs.uniprot.uniprot_locations": [[358, "pypath-inputs-uniprot-uniprot-locations"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids": [[359, "pypath-inputs-uniprot-uniprot-ncbi-taxids"]], "pypath.inputs.uniprot.uniprot_ncbi_taxids_2": [[360, "pypath-inputs-uniprot-uniprot-ncbi-taxids-2"]], "pypath.inputs.uniprot.uniprot_preprocess": [[361, "pypath-inputs-uniprot-uniprot-preprocess"]], "pypath.inputs.uniprot.uniprot_query": [[362, "pypath-inputs-uniprot-uniprot-query"]], "pypath.inputs.uniprot.uniprot_recent_version": [[363, "pypath-inputs-uniprot-uniprot-recent-version"]], "pypath.inputs.uniprot.uniprot_taxonomy": [[364, "pypath-inputs-uniprot-uniprot-taxonomy"]], "pypath.inputs.uniprot.uniprot_tissues": [[365, "pypath-inputs-uniprot-uniprot-tissues"]], "pypath.inputs.uniprot.uniprot_topology": [[366, "pypath-inputs-uniprot-uniprot-topology"]], "pypath.inputs.uniprot.valid_uniprot": [[367, "pypath-inputs-uniprot-valid-uniprot"]], "pypath.inputs.uniprot_db": [[368, "module-pypath.inputs.uniprot_db"]], "pypath.inputs.uniprot_db.all_swissprots": [[369, "pypath-inputs-uniprot-db-all-swissprots"]], "pypath.inputs.uniprot_db.all_trembls": [[370, "pypath-inputs-uniprot-db-all-trembls"]], "pypath.inputs.uniprot_db.all_uniprots": [[371, "pypath-inputs-uniprot-db-all-uniprots"]], "pypath.inputs.uniprot_db.get_db": [[372, "pypath-inputs-uniprot-db-get-db"]], "pypath.inputs.uniprot_db.init_db": [[373, "pypath-inputs-uniprot-db-init-db"]], "pypath.inputs.uniprot_db.is_swissprot": [[374, "pypath-inputs-uniprot-db-is-swissprot"]], "pypath.inputs.uniprot_db.is_trembl": [[375, "pypath-inputs-uniprot-db-is-trembl"]], "pypath.inputs.uniprot_db.is_uniprot": [[376, "pypath-inputs-uniprot-db-is-uniprot"]], "pypath.inputs.uniprot_idmapping": [[377, "module-pypath.inputs.uniprot_idmapping"]], "pypath.inputs.uniprot_idmapping.idtypes": [[378, "pypath-inputs-uniprot-idmapping-idtypes"]], "pypath.internals": [[379, "module-pypath.internals"]], "pypath.internals.input_formats": [[380, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[381, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[382, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[383, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.HmdbMapping": [[384, "pypath-internals-input-formats-hmdbmapping"]], "pypath.internals.input_formats.MappingInput": [[385, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[386, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[387, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[388, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.RampMapping": [[389, "pypath-internals-input-formats-rampmapping"]], "pypath.internals.input_formats.ReadList": [[390, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[391, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[392, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[393, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[394, "module-pypath.internals.license"]], "pypath.internals.license.License": [[395, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[396, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[397, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[398, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[399, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[400, "module-pypath.internals.maps"]], "pypath.internals.refs": [[401, "module-pypath.internals.refs"]], "pypath.internals.refs.Reference": [[402, "pypath-internals-refs-reference"]], "pypath.internals.refs.get_pubmed_data": [[403, "pypath-internals-refs-get-pubmed-data"]], "pypath.internals.resource": [[404, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[405, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[406, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[407, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkDataset": [[408, "pypath-internals-resource-networkdataset"]], "pypath.internals.resource.NetworkResource": [[409, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[410, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[411, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[412, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[413, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[414, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[415, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[416, "pypath-log"]], "pypath.resources": [[417, "module-pypath.resources"]], "pypath.resources.controller": [[418, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[419, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[420, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[421, "module-pypath.resources.data_formats"]], "pypath.resources.data_formats.activity_flow": [[422, "pypath-resources-data-formats-activity-flow"]], "pypath.resources.data_formats.enzyme_substrate": [[423, "pypath-resources-data-formats-enzyme-substrate"]], "pypath.resources.data_formats.interaction": [[424, "pypath-resources-data-formats-interaction"]], "pypath.resources.data_formats.interaction_htp": [[425, "pypath-resources-data-formats-interaction-htp"]], "pypath.resources.data_formats.pathway_bad": [[426, "pypath-resources-data-formats-pathway-bad"]], "pypath.resources.data_formats.reaction_pc": [[427, "pypath-resources-data-formats-reaction-pc"]], "pypath.resources.data_formats.transcription_deprecated": [[428, "pypath-resources-data-formats-transcription-deprecated"]], "pypath.resources.data_formats.transcription_onebyone": [[429, "pypath-resources-data-formats-transcription-onebyone"]], "pypath.resources.get_controller": [[430, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[431, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[432, "pypath-resources-licenses-licenses"]], "pypath.resources.network": [[433, "module-pypath.resources.network"]], "pypath.resources.urls": [[434, "module-pypath.resources.urls"]], "pypath.share": [[435, "module-pypath.share"]], "pypath.share.cache": [[436, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[437, "pypath-share-cache-cache-item"]], "pypath.share.cache.cache_path": [[438, "pypath-share-cache-cache-path"]], "pypath.share.cache.get_cachedir": [[439, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[440, "module-pypath.share.common"]], "pypath.share.constants": [[441, "module-pypath.share.constants"]], "pypath.share.curl": [[442, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[443, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[444, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[445, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[446, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[447, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[448, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[449, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[450, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[451, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[452, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[453, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[454, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[455, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[456, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[457, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[458, "pypath-share-curl-preserve-on"]], "pypath.share.progress": [[459, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[460, "pypath-share-progress-progress"]], "pypath.share.session": [[461, "module-pypath.share.session"]], "pypath.share.settings": [[462, "module-pypath.share.settings"]], "pypath.visual": [[463, "module-pypath.visual"]], "pypath.visual.drawing": [[464, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[465, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[466, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[467, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[468, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[469, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[470, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[471, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[472, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[473, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[474, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[475, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[476, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[477, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[478, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[479, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[480, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[481, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[482, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[483, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[484, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[485, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[486, "contents"]], "Welcome to pypath!": [[487, "welcome-to-pypath"]], "OmniPath": [[487, "omnipath"]], "Do you need pypath?": [[487, "do-you-need-pypath"]], "Installation": [[487, "installation"]], "Docs": [[487, "docs"]], "Get help": [[487, "get-help"]], "Features": [[487, "features"]], "Integrated databases": [[487, "integrated-databases"]], "Database management": [[487, "database-management"]], "Further modules in pypath": [[487, "further-modules-in-pypath"]], "ID conversion": [[487, "id-conversion"]], "Homology translation": [[487, "homology-translation"]], "FAQ": [[487, "faq"]], "Contact": [[487, "contact"]], "Impressum": [[487, "impressum"]], "History and releases": [[487, "history-and-releases"]], "The pypath book": [[488, "The-pypath-book"]], "Introduction": [[488, "Introduction"]], "Build, load and save databases": [[488, "Build,-load-and-save-databases"]], "The OmniPath app": [[488, "The-OmniPath-app"]], "Built-in database definitions": [[488, "Built-in-database-definitions"]], "Networks": [[488, "Networks"]], "Strictly literature curated network": [[488, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[488, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[488, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[488, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[488, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[488, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[488, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[488, "Enzyme-substrate-relationships"]], "Protein complexes": [[488, "Protein-complexes"], [488, "id2"]], "Annotations": [[488, "Annotations"], [488, "id1"], [491, "annotations"]], "Inter-cellular communication roles": [[488, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[488, "Data-directly-from-the-original-resources"]], "Interesting resources": [[488, "Interesting-resources"]], "RaMP": [[488, "RaMP"]], "TL;DR": [[488, "TL;DR"]], "HMDB (Human Metabolome Database)": [[488, "HMDB-(Human-Metabolome-Database)"]], "Direct access to HMDB data": [[488, "Direct-access-to-HMDB-data"]], "Higher level access to HMDB data": [[488, "Higher-level-access-to-HMDB-data"]], "ID translation with HMDB": [[488, "ID-translation-with-HMDB"]], "SwissLipids": [[488, "SwissLipids"]], "LIPID MAPS": [[488, "LIPID-MAPS"]], "NCBI E-Utils": [[488, "NCBI-E-Utils"]], "Download management": [[488, "Download-management"]], "Cache management and customization": [[488, "Cache-management-and-customization"]], "Download failures": [[488, "Download-failures"]], "Corrupted cache content": [[488, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[488, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[488, "Timeouts"]], "Access and inspect the Curl object": [[488, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[488, "Is-it-failing-only-for-you?"]], "Read the log": [[488, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[488, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[488, "Resources"]], "Licenses": [[488, "Licenses"]], "Example: build a network for commercial use": [[488, "Example:-build-a-network-for-commercial-use"]], "Resource information": [[488, "Resource-information"]], "Resource definitions for a certain database or dataset": [[488, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[488, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[488, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[488, "The-Network-object"]], "Network in pandas.DataFrame": [[488, "Network-in-pandas.DataFrame"]], "Self interactions (loop edges) in the network": [[488, "Self-interactions-(loop-edges)-in-the-network"]], "Molecular complexes in the network": [[488, "Molecular-complexes-in-the-network"]], "Translating identifiers": [[488, "Translating-identifiers"]], "Pre-defined ID translation tables": [[488, "Pre-defined-ID-translation-tables"]], "Direct access to ID translation tables": [[488, "Direct-access-to-ID-translation-tables"]], "Orthology translation": [[488, "Orthology-translation"]], "Orthology translation tables as dictionaries": [[488, "Orthology-translation-tables-as-dictionaries"]], "Orthology translation data frames": [[488, "Orthology-translation-data-frames"]], "Taxonomy": [[488, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[488, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[488, "Organism-from-UniProt-ID"]], "UniProt": [[488, "UniProt"]], "The UniProt input module": [[488, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[488, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[488, "UniProt-ID-format-validation"]], "UniProt ID validation": [[488, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[488, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[488, "History-of-UniProt-records"]], "UniProt REST API": [[488, "UniProt-REST-API"]], "Processed UniProt annotations": [[488, "Processed-UniProt-annotations"]], "The UniProt utils module": [[488, "The-UniProt-utils-module"]], "Datasheets": [[488, "Datasheets"]], "Tables": [[488, "Tables"]], "Sanitizing UniProt IDs": [[488, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[488, "Enzyme-substrate-interactions"], [491, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[488, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[488, "Enzyme-substrate-data-frame"]], "Protein sequences": [[488, "Protein-sequences"]], "Load a single annotation resource": [[488, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[488, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[488, "Load-only-selected-annotations"]], "Data frames of annotations": [[488, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[488, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[488, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[488, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[488, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[488, "Browse-intercell-categories"]], "Gene Ontology": [[488, "Gene-Ontology"]], "Protein complex objects": [[488, "Protein-complex-objects"]], "Protein complex data frame": [[488, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[488, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[488, "Log-messages-and-sessions"]], "Basic info about the session": [[488, "Basic-info-about-the-session"]], "Read the log file": [[488, "Read-the-log-file"]], "Logging to the console": [[488, "Logging-to-the-console"]], "Disable logging": [[488, "Disable-logging"]], "Write to the log": [[488, "Write-to-the-log"]], "Sending a single message": [[488, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[488, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[488, "BEL-export"]], "CellPhoneDB export": [[488, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[488, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[488, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[488, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[488, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[488, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[488, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[488, "Directions-and-signs"]], "Accessing nodes in the network": [[488, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[488, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[488, "Accessing-edges-by-identifiers"]], "Literature references": [[488, "Literature-references"]], "Plotting the network with igraph": [[488, "Plotting-the-network-with-igraph"]], "Reference": [[489, "reference"]], "How to navigate the reference?": [[489, "how-to-navigate-the-reference"]], "Release history": [[490, "release-history"]], "0.1.0": [[490, "id1"]], "0.2.0": [[490, "id2"]], "0.3.0": [[490, "id3"]], "0.4.0": [[490, "id4"]], "0.5.0": [[490, "id5"]], "0.5.32": [[490, "id6"]], "0.6.31": [[490, "id7"]], "0.7.0": [[490, "id8"]], "0.7.74": [[490, "id9"]], "0.7.93": [[490, "id10"]], "0.7.110": [[490, "id11"]], "0.8": [[490, "id12"]], "0.9": [[490, "id13"]], "0.10.0": [[490, "id14"]], "0.11.0": [[490, "id15"]], "0.12.0": [[490, "id16"]], "0.13.0": [[490, "id17"]], "0.14.0": [[490, "id18"]], "Upcoming": [[490, "upcoming"]], "Webservice": [[491, "webservice"]], "Query types": [[491, "query-types"]], "Interaction datasets": [[491, "interaction-datasets"]], "Mouse and rat": [[491, "mouse-and-rat"]], "Examples": [[491, "examples"]], "Molecular interaction network": [[491, "molecular-interaction-network"]], "Molecular complexes": [[491, "molecular-complexes"]], "Roles in inter-cellular communication": [[491, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[491, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.abs"], [12, "module-pypath.inputs.acsn"], [15, "module-pypath.inputs.adrecs"], [25, "module-pypath.inputs.biogrid"], [28, "module-pypath.inputs.biomart"], [34, "module-pypath.inputs.biomodels"], [40, "module-pypath.inputs.ca1"], [42, "module-pypath.inputs.cancercellmap"], [44, "module-pypath.inputs.cell"], [46, "module-pypath.inputs.chembl"], [54, "module-pypath.inputs.clinvar"], [57, "module-pypath.inputs.common"], [64, "module-pypath.inputs.compath"], [66, "module-pypath.inputs.cpdb"], [69, "module-pypath.inputs.credentials"], [71, "module-pypath.inputs.ctdbase"], [74, "module-pypath.inputs.ddinter"], [80, "module-pypath.inputs.deathdomain"], [83, "module-pypath.inputs.dip"], [86, "module-pypath.inputs.diseases"], [94, "module-pypath.inputs.drugbank"], [101, "module-pypath.inputs.ebi"], [103, "module-pypath.inputs.elm"], [108, "module-pypath.inputs.embopress"], [110, "module-pypath.inputs.encode"], [112, "module-pypath.inputs.ensembl"], [114, "module-pypath.inputs.eutils"], [116, "module-pypath.inputs.expasy"], [119, "module-pypath.inputs.genecards"], [124, "module-pypath.inputs.graphviz"], [126, "module-pypath.inputs.hprd"], [131, "module-pypath.inputs.htri"], [133, "module-pypath.inputs.humsavar"], [135, "module-pypath.inputs.ielm"], [138, "module-pypath.inputs.imweb"], [141, "module-pypath.inputs.innatedb"], [143, "module-pypath.inputs.instruct"], [146, "module-pypath.inputs.intact"], [148, "module-pypath.inputs.interpro"], [153, "module-pypath.inputs.ipi"], [155, "module-pypath.inputs.kegg_api"], [172, "module-pypath.inputs.kirouac2010"], [174, "module-pypath.inputs.laudanna"], [177, "module-pypath.inputs.lincs"], [179, "module-pypath.inputs.macrophage"], [181, "module-pypath.inputs.main"], [182, "module-pypath.inputs.mimp"], [186, "module-pypath.inputs.mir2disease"], [188, "module-pypath.inputs.mirdeathdb"], [190, "module-pypath.inputs.mitab"], [193, "module-pypath.inputs.mppi"], [195, "module-pypath.inputs.ncrdeathdb"], [197, "module-pypath.inputs.negatome"], [199, "module-pypath.inputs.netbiol"], [202, "module-pypath.inputs.offsides"], [204, "module-pypath.inputs.ontology"], [207, "module-pypath.inputs.opentargets"], [213, "module-pypath.inputs.pathophenodb"], [216, "module-pypath.inputs.pathwaycommons"], [233, "module-pypath.inputs.pazar"], [235, "module-pypath.inputs.pepcyber"], [238, "module-pypath.inputs.pharos"], [247, "module-pypath.inputs.phobius"], [249, "module-pypath.inputs.phosphonetworks"], [252, "module-pypath.inputs.phosphopoint"], [255, "module-pypath.inputs.pro"], [258, "module-pypath.inputs.protmapper"], [262, "module-pypath.inputs.pubchem"], [264, "module-pypath.inputs.pubmed"], [271, "module-pypath.inputs.ramp"], [278, "module-pypath.inputs.rdata"], [279, "module-pypath.inputs.reaction"], [299, "module-pypath.inputs.reactome"], [304, "module-pypath.inputs.science"], [306, "module-pypath.inputs.sider"], [315, "module-pypath.inputs.stitch"], [318, "module-pypath.inputs.string"], [323, "module-pypath.inputs.swisslipids"], [324, "module-pypath.inputs.switches_elm"], [326, "module-pypath.inputs.transmir"], [328, "module-pypath.inputs.trip"], [335, "module-pypath.inputs.twosides"], [337, "module-pypath.inputs.unichem"], [342, "module-pypath.inputs.uniprot"], [368, "module-pypath.inputs.uniprot_db"], [377, "module-pypath.inputs.uniprot_idmapping"], [379, "module-pypath.internals"], [380, "module-pypath.internals.input_formats"], [394, "module-pypath.internals.license"], [400, "module-pypath.internals.maps"], [401, "module-pypath.internals.refs"], [404, "module-pypath.internals.resource"], [412, "module-pypath.legacy"], [413, "module-pypath.legacy.db_categories"], [417, "module-pypath.resources"], [418, "module-pypath.resources.controller"], [420, "module-pypath.resources.data"], [421, "module-pypath.resources.data_formats"], [431, "module-pypath.resources.licenses"], [433, "module-pypath.resources.network"], [434, "module-pypath.resources.urls"], [435, "module-pypath.share"], [436, "module-pypath.share.cache"], [440, "module-pypath.share.common"], [441, "module-pypath.share.constants"], [442, "module-pypath.share.curl"], [459, "module-pypath.share.progress"], [461, "module-pypath.share.session"], [462, "module-pypath.share.settings"], [463, "module-pypath.visual"], [464, "module-pypath.visual.drawing"], [467, "module-pypath.visual.igraph_drawing"], [473, "module-pypath.visual.igraph_drawing.edge"], [480, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.abs": [[10, "module-pypath.inputs.abs"]], "abs_interactions() (in module pypath.inputs.abs)": [[11, "pypath.inputs.abs.abs_interactions"]], "pypath.inputs.acsn": [[12, "module-pypath.inputs.acsn"]], "acsn_interactions() (in module pypath.inputs.acsn)": [[13, "pypath.inputs.acsn.acsn_interactions"]], "acsn_interactions_sif() (in module pypath.inputs.acsn)": [[14, "pypath.inputs.acsn.acsn_interactions_sif"]], "pypath.inputs.adrecs": [[15, "module-pypath.inputs.adrecs"]], "adrecsadr (class in pypath.inputs.adrecs)": [[16, "pypath.inputs.adrecs.AdrecsAdr"]], "__init__() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.__init__"]], "adr_class (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.adr_class"]], "badd (pypath.inputs.adrecs.adrecsadr attribute)": [[16, "pypath.inputs.adrecs.AdrecsAdr.badd"]], "count() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.count"]], "index() (pypath.inputs.adrecs.adrecsadr method)": [[16, "pypath.inputs.adrecs.AdrecsAdr.index"]], "adrecschildparent (class in pypath.inputs.adrecs)": [[17, "pypath.inputs.adrecs.AdrecsChildParent"]], "__init__() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.__init__"]], "child (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.child"]], "count() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.count"]], "index() (pypath.inputs.adrecs.adrecschildparent method)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.index"]], "parent (pypath.inputs.adrecs.adrecschildparent attribute)": [[17, "pypath.inputs.adrecs.AdrecsChildParent.parent"]], "adrecsdrug (class in pypath.inputs.adrecs)": [[18, "pypath.inputs.adrecs.AdrecsDrug"]], "__init__() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.__init__"]], "badd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.badd"]], "count() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.count"]], "drug (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drug"]], "drugbank (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.drugbank"]], "index() (pypath.inputs.adrecs.adrecsdrug method)": [[18, "pypath.inputs.adrecs.AdrecsDrug.index"]], "kegg (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.kegg"]], "mesh (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.mesh"]], "pubchem_cid (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.pubchem_cid"]], "synonyms (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.synonyms"]], "tdd (pypath.inputs.adrecs.adrecsdrug attribute)": [[18, "pypath.inputs.adrecs.AdrecsDrug.tdd"]], "adrecsdrugadr (class in pypath.inputs.adrecs)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr"]], "__init__() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.__init__"]], "adr (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr"]], "adr_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.adr_badd"]], "count() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.count"]], "drug (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug"]], "drug_badd (pypath.inputs.adrecs.adrecsdrugadr attribute)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.drug_badd"]], "index() (pypath.inputs.adrecs.adrecsdrugadr method)": [[19, "pypath.inputs.adrecs.AdrecsDrugAdr.index"]], "adrecsterm (class in pypath.inputs.adrecs)": [[20, "pypath.inputs.adrecs.AdrecsTerm"]], "__init__() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.__init__"]], "adrecs_class (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.adrecs_class"]], "badd (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.badd"]], "count() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.count"]], "index() (pypath.inputs.adrecs.adrecsterm method)": [[20, "pypath.inputs.adrecs.AdrecsTerm.index"]], "meddra (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.meddra"]], "name (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.name"]], "synonyms (pypath.inputs.adrecs.adrecsterm attribute)": [[20, "pypath.inputs.adrecs.AdrecsTerm.synonyms"]], "adrecs_adr_ontology() (in module pypath.inputs.adrecs)": [[21, "pypath.inputs.adrecs.adrecs_adr_ontology"]], "adrecs_drug_adr() (in module pypath.inputs.adrecs)": [[22, "pypath.inputs.adrecs.adrecs_drug_adr"]], "adrecs_drug_identifiers() (in module pypath.inputs.adrecs)": [[23, "pypath.inputs.adrecs.adrecs_drug_identifiers"]], "adrecs_hierarchy() (in module pypath.inputs.adrecs)": [[24, "pypath.inputs.adrecs.adrecs_hierarchy"]], "pypath.inputs.biogrid": [[25, "module-pypath.inputs.biogrid"]], "biogrid_all_interactions() (in module pypath.inputs.biogrid)": [[26, "pypath.inputs.biogrid.biogrid_all_interactions"]], "biogrid_interactions() (in module pypath.inputs.biogrid)": [[27, "pypath.inputs.biogrid.biogrid_interactions"]], "pypath.inputs.biomart": [[28, "module-pypath.inputs.biomart"]], "biomart_homology() (in module pypath.inputs.biomart)": [[29, "pypath.inputs.biomart.biomart_homology"]], "biomart_microarray() (in module pypath.inputs.biomart)": [[30, "pypath.inputs.biomart.biomart_microarray"]], "biomart_microarray_types() (in module pypath.inputs.biomart)": [[31, "pypath.inputs.biomart.biomart_microarray_types"]], "biomart_microarrays() (in module pypath.inputs.biomart)": [[32, "pypath.inputs.biomart.biomart_microarrays"]], "biomart_query() (in module pypath.inputs.biomart)": [[33, "pypath.inputs.biomart.biomart_query"]], "pypath.inputs.biomodels": [[34, "module-pypath.inputs.biomodels"]], "download_single_model() (in module pypath.inputs.biomodels)": [[35, "pypath.inputs.biomodels.download_single_model"]], "get_all_models() (in module pypath.inputs.biomodels)": [[36, "pypath.inputs.biomodels.get_all_models"]], "get_biomodels() (in module pypath.inputs.biomodels)": [[37, "pypath.inputs.biomodels.get_biomodels"]], "get_biomodels_req() (in module pypath.inputs.biomodels)": [[38, "pypath.inputs.biomodels.get_biomodels_req"]], "get_single_model() (in module pypath.inputs.biomodels)": [[39, "pypath.inputs.biomodels.get_single_model"]], "pypath.inputs.ca1": [[40, "module-pypath.inputs.ca1"]], "ca1_interactions() (in module pypath.inputs.ca1)": [[41, "pypath.inputs.ca1.ca1_interactions"]], "pypath.inputs.cancercellmap": [[42, "module-pypath.inputs.cancercellmap"]], "ccmap_interactions() (in module pypath.inputs.cancercellmap)": [[43, "pypath.inputs.cancercellmap.ccmap_interactions"]], "pypath.inputs.cell": [[44, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[45, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.chembl": [[46, "module-pypath.inputs.chembl"]], "chembl_activities() (in module pypath.inputs.chembl)": [[47, "pypath.inputs.chembl.chembl_activities"]], "chembl_assays() (in module pypath.inputs.chembl)": [[48, "pypath.inputs.chembl.chembl_assays"]], "chembl_documents() (in module pypath.inputs.chembl)": [[49, "pypath.inputs.chembl.chembl_documents"]], "chembl_drug_indications() (in module pypath.inputs.chembl)": [[50, "pypath.inputs.chembl.chembl_drug_indications"]], "chembl_mechanisms() (in module pypath.inputs.chembl)": [[51, "pypath.inputs.chembl.chembl_mechanisms"]], "chembl_molecules() (in module pypath.inputs.chembl)": [[52, "pypath.inputs.chembl.chembl_molecules"]], "chembl_targets() (in module pypath.inputs.chembl)": [[53, "pypath.inputs.chembl.chembl_targets"]], "pypath.inputs.clinvar": [[54, "module-pypath.inputs.clinvar"]], "clinvar_citations() (in module pypath.inputs.clinvar)": [[55, "pypath.inputs.clinvar.clinvar_citations"]], "clinvar_raw() (in module pypath.inputs.clinvar)": [[56, "pypath.inputs.clinvar.clinvar_raw"]], "pypath.inputs.common": [[57, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[58, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[59, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[60, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[61, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[62, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[63, "pypath.inputs.common.read_xls"]], "pypath.inputs.compath": [[64, "module-pypath.inputs.compath"]], "compath_mappings() (in module pypath.inputs.compath)": [[65, "pypath.inputs.compath.compath_mappings"]], "pypath.inputs.cpdb": [[66, "module-pypath.inputs.cpdb"]], "cpdb_interactions() (in module pypath.inputs.cpdb)": [[67, "pypath.inputs.cpdb.cpdb_interactions"]], "cpdb_interactions_ltp() (in module pypath.inputs.cpdb)": [[68, "pypath.inputs.cpdb.cpdb_interactions_ltp"]], "pypath.inputs.credentials": [[69, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[70, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ctdbase": [[71, "module-pypath.inputs.ctdbase"]], "ctdbase_relations() (in module pypath.inputs.ctdbase)": [[72, "pypath.inputs.ctdbase.ctdbase_relations"]], "ctdbase_vocabulary() (in module pypath.inputs.ctdbase)": [[73, "pypath.inputs.ctdbase.ctdbase_vocabulary"]], "pypath.inputs.ddinter": [[74, "module-pypath.inputs.ddinter"]], "ddinter_drug_interactions() (in module pypath.inputs.ddinter)": [[75, "pypath.inputs.ddinter.ddinter_drug_interactions"]], "ddinter_identifiers() (in module pypath.inputs.ddinter)": [[76, "pypath.inputs.ddinter.ddinter_identifiers"]], "ddinter_interactions() (in module pypath.inputs.ddinter)": [[77, "pypath.inputs.ddinter.ddinter_interactions"]], "ddinter_mappings() (in module pypath.inputs.ddinter)": [[78, "pypath.inputs.ddinter.ddinter_mappings"]], "ddinter_n_drugs() (in module pypath.inputs.ddinter)": [[79, "pypath.inputs.ddinter.ddinter_n_drugs"]], "pypath.inputs.deathdomain": [[80, "module-pypath.inputs.deathdomain"]], "deathdomain_interactions() (in module pypath.inputs.deathdomain)": [[81, "pypath.inputs.deathdomain.deathdomain_interactions"]], "deathdomain_interactions_rescued() (in module pypath.inputs.deathdomain)": [[82, "pypath.inputs.deathdomain.deathdomain_interactions_rescued"]], "pypath.inputs.dip": [[83, "module-pypath.inputs.dip"]], "dip_interactions() (in module pypath.inputs.dip)": [[84, "pypath.inputs.dip.dip_interactions"]], "dip_login() (in module pypath.inputs.dip)": [[85, "pypath.inputs.dip.dip_login"]], "pypath.inputs.diseases": [[86, "module-pypath.inputs.diseases"]], "diseases_general() (in module pypath.inputs.diseases)": [[87, "pypath.inputs.diseases.diseases_general"]], "experiments_filtered() (in module pypath.inputs.diseases)": [[88, "pypath.inputs.diseases.experiments_filtered"]], "experiments_full() (in module pypath.inputs.diseases)": [[89, "pypath.inputs.diseases.experiments_full"]], "knowledge_filtered() (in module pypath.inputs.diseases)": [[90, "pypath.inputs.diseases.knowledge_filtered"]], "knowledge_full() (in module pypath.inputs.diseases)": [[91, "pypath.inputs.diseases.knowledge_full"]], "textmining_filtered() (in module pypath.inputs.diseases)": [[92, "pypath.inputs.diseases.textmining_filtered"]], "textmining_full() (in module pypath.inputs.diseases)": [[93, "pypath.inputs.diseases.textmining_full"]], "pypath.inputs.drugbank": [[94, "module-pypath.inputs.drugbank"]], "drugbankfull (class in pypath.inputs.drugbank)": [[95, "pypath.inputs.drugbank.DrugbankFull"]], "__init__() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.__init__"]], "drugbank_drugs_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_drugs_full"]], "drugbank_external_ids_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_external_ids_full"]], "drugbank_properties_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_properties_full"]], "drugbank_targets_full() (pypath.inputs.drugbank.drugbankfull method)": [[95, "pypath.inputs.drugbank.DrugbankFull.drugbank_targets_full"]], "drugbank_annotations() (in module pypath.inputs.drugbank)": [[96, "pypath.inputs.drugbank.drugbank_annotations"]], "drugbank_drugs() (in module pypath.inputs.drugbank)": [[97, "pypath.inputs.drugbank.drugbank_drugs"]], "drugbank_interactions() (in module pypath.inputs.drugbank)": [[98, "pypath.inputs.drugbank.drugbank_interactions"]], "drugbank_mapping() (in module pypath.inputs.drugbank)": [[99, "pypath.inputs.drugbank.drugbank_mapping"]], "drugbank_raw_interactions() (in module pypath.inputs.drugbank)": [[100, "pypath.inputs.drugbank.drugbank_raw_interactions"]], "pypath.inputs.ebi": [[101, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[102, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.elm": [[103, "module-pypath.inputs.elm"]], "elm_classes() (in module pypath.inputs.elm)": [[104, "pypath.inputs.elm.elm_classes"]], "elm_domains() (in module pypath.inputs.elm)": [[105, "pypath.inputs.elm.elm_domains"]], "elm_instances() (in module pypath.inputs.elm)": [[106, "pypath.inputs.elm.elm_instances"]], "elm_interactions() (in module pypath.inputs.elm)": [[107, "pypath.inputs.elm.elm_interactions"]], "pypath.inputs.embopress": [[108, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[109, "pypath.inputs.embopress.embopress_supplementary"]], "pypath.inputs.encode": [[110, "module-pypath.inputs.encode"]], "encode_tf_mirna_interactions() (in module pypath.inputs.encode)": [[111, "pypath.inputs.encode.encode_tf_mirna_interactions"]], "pypath.inputs.ensembl": [[112, "module-pypath.inputs.ensembl"]], "ensembl_organisms() (in module pypath.inputs.ensembl)": [[113, "pypath.inputs.ensembl.ensembl_organisms"]], "pypath.inputs.eutils": [[114, "module-pypath.inputs.eutils"]], "esummary() (in module pypath.inputs.eutils)": [[115, "pypath.inputs.eutils.esummary"]], "pypath.inputs.expasy": [[116, "module-pypath.inputs.expasy"]], "expasy_enzyme_classes() (in module pypath.inputs.expasy)": [[117, "pypath.inputs.expasy.expasy_enzyme_classes"]], "expasy_enzymes() (in module pypath.inputs.expasy)": [[118, "pypath.inputs.expasy.expasy_enzymes"]], "pypath.inputs.genecards": [[119, "module-pypath.inputs.genecards"]], "genecards_datasheet() (in module pypath.inputs.genecards)": [[120, "pypath.inputs.genecards.genecards_datasheet"]], "genecards_soup() (in module pypath.inputs.genecards)": [[121, "pypath.inputs.genecards.genecards_soup"]], "genecards_summaries() (in module pypath.inputs.genecards)": [[122, "pypath.inputs.genecards.genecards_summaries"]], "get_method() (in module pypath.inputs)": [[123, "pypath.inputs.get_method"]], "pypath.inputs.graphviz": [[124, "module-pypath.inputs.graphviz"]], "graphviz_attrs() (in module pypath.inputs.graphviz)": [[125, "pypath.inputs.graphviz.graphviz_attrs"]], "pypath.inputs.hprd": [[126, "module-pypath.inputs.hprd"]], "get_hprd() (in module pypath.inputs.hprd)": [[127, "pypath.inputs.hprd.get_hprd"]], "hprd_enzyme_substrate() (in module pypath.inputs.hprd)": [[128, "pypath.inputs.hprd.hprd_enzyme_substrate"]], "hprd_interactions() (in module pypath.inputs.hprd)": [[129, "pypath.inputs.hprd.hprd_interactions"]], "hprd_interactions_htp() (in module pypath.inputs.hprd)": [[130, "pypath.inputs.hprd.hprd_interactions_htp"]], "pypath.inputs.htri": [[131, "module-pypath.inputs.htri"]], "htri_interactions() (in module pypath.inputs.htri)": [[132, "pypath.inputs.htri.htri_interactions"]], "pypath.inputs.humsavar": [[133, "module-pypath.inputs.humsavar"]], "uniprot_variants() (in module pypath.inputs.humsavar)": [[134, "pypath.inputs.humsavar.uniprot_variants"]], "pypath.inputs.ielm": [[135, "module-pypath.inputs.ielm"]], "get_ielm() (in module pypath.inputs.ielm)": [[136, "pypath.inputs.ielm.get_ielm"]], "get_ielm_huge() (in module pypath.inputs.ielm)": [[137, "pypath.inputs.ielm.get_ielm_huge"]], "pypath.inputs.imweb": [[138, "module-pypath.inputs.imweb"]], "get_imweb() (in module pypath.inputs.imweb)": [[139, "pypath.inputs.imweb.get_imweb"]], "get_imweb_req() (in module pypath.inputs.imweb)": [[140, "pypath.inputs.imweb.get_imweb_req"]], "pypath.inputs.innatedb": [[141, "module-pypath.inputs.innatedb"]], "innatedb_interactions() (in module pypath.inputs.innatedb)": [[142, "pypath.inputs.innatedb.innatedb_interactions"]], "pypath.inputs.instruct": [[143, "module-pypath.inputs.instruct"]], "get_instruct() (in module pypath.inputs.instruct)": [[144, "pypath.inputs.instruct.get_instruct"]], "get_instruct_offsets() (in module pypath.inputs.instruct)": [[145, "pypath.inputs.instruct.get_instruct_offsets"]], "pypath.inputs.intact": [[146, "module-pypath.inputs.intact"]], "intact_interactions() (in module pypath.inputs.intact)": [[147, "pypath.inputs.intact.intact_interactions"]], "pypath.inputs.interpro": [[148, "module-pypath.inputs.interpro"]], "interpro2go_annotations() (in module pypath.inputs.interpro)": [[149, "pypath.inputs.interpro.interpro2go_annotations"]], "interpro_annotations() (in module pypath.inputs.interpro)": [[150, "pypath.inputs.interpro.interpro_annotations"]], "interpro_entries() (in module pypath.inputs.interpro)": [[151, "pypath.inputs.interpro.interpro_entries"]], "interpro_xrefs() (in module pypath.inputs.interpro)": [[152, "pypath.inputs.interpro.interpro_xrefs"]], "pypath.inputs.ipi": [[153, "module-pypath.inputs.ipi"]], "ipi_uniprot() (in module pypath.inputs.ipi)": [[154, "pypath.inputs.ipi.ipi_uniprot"]], "pypath.inputs.kegg_api": [[155, "module-pypath.inputs.kegg_api"]], "disease_to_drug() (in module pypath.inputs.kegg_api)": [[156, "pypath.inputs.kegg_api.disease_to_drug"]], "disease_to_gene() (in module pypath.inputs.kegg_api)": [[157, "pypath.inputs.kegg_api.disease_to_gene"]], "disease_to_pathway() (in module pypath.inputs.kegg_api)": [[158, "pypath.inputs.kegg_api.disease_to_pathway"]], "drug_to_disease() (in module pypath.inputs.kegg_api)": [[159, "pypath.inputs.kegg_api.drug_to_disease"]], "drug_to_drug() (in module pypath.inputs.kegg_api)": [[160, "pypath.inputs.kegg_api.drug_to_drug"]], "drug_to_gene() (in module pypath.inputs.kegg_api)": [[161, "pypath.inputs.kegg_api.drug_to_gene"]], "drug_to_pathway() (in module pypath.inputs.kegg_api)": [[162, "pypath.inputs.kegg_api.drug_to_pathway"]], "gene_to_disease() (in module pypath.inputs.kegg_api)": [[163, "pypath.inputs.kegg_api.gene_to_disease"]], "gene_to_drug() (in module pypath.inputs.kegg_api)": [[164, "pypath.inputs.kegg_api.gene_to_drug"]], "gene_to_pathway() (in module pypath.inputs.kegg_api)": [[165, "pypath.inputs.kegg_api.gene_to_pathway"]], "kegg_drug_to_chebi() (in module pypath.inputs.kegg_api)": [[166, "pypath.inputs.kegg_api.kegg_drug_to_chebi"]], "kegg_gene_to_ncbi_geneid() (in module pypath.inputs.kegg_api)": [[167, "pypath.inputs.kegg_api.kegg_gene_to_ncbi_geneid"]], "kegg_gene_to_uniprot() (in module pypath.inputs.kegg_api)": [[168, "pypath.inputs.kegg_api.kegg_gene_to_uniprot"]], "pathway_to_disease() (in module pypath.inputs.kegg_api)": [[169, "pypath.inputs.kegg_api.pathway_to_disease"]], "pathway_to_drug() (in module pypath.inputs.kegg_api)": [[170, "pypath.inputs.kegg_api.pathway_to_drug"]], "pathway_to_gene() (in module pypath.inputs.kegg_api)": [[171, "pypath.inputs.kegg_api.pathway_to_gene"]], "pypath.inputs.kirouac2010": [[172, "module-pypath.inputs.kirouac2010"]], "kirouac2010_interactions() (in module pypath.inputs.kirouac2010)": [[173, "pypath.inputs.kirouac2010.kirouac2010_interactions"]], "pypath.inputs.laudanna": [[174, "module-pypath.inputs.laudanna"]], "laudanna_directions() (in module pypath.inputs.laudanna)": [[175, "pypath.inputs.laudanna.laudanna_directions"]], "laudanna_effects() (in module pypath.inputs.laudanna)": [[176, "pypath.inputs.laudanna.laudanna_effects"]], "pypath.inputs.lincs": [[177, "module-pypath.inputs.lincs"]], "lincs_compounds() (in module pypath.inputs.lincs)": [[178, "pypath.inputs.lincs.lincs_compounds"]], "pypath.inputs.macrophage": [[179, "module-pypath.inputs.macrophage"]], "macrophage_interactions() (in module pypath.inputs.macrophage)": [[180, "pypath.inputs.macrophage.macrophage_interactions"]], "pypath.inputs.main": [[181, "module-pypath.inputs.main"]], "pypath.inputs.mimp": [[182, "module-pypath.inputs.mimp"]], "get_kinase_class() (in module pypath.inputs.mimp)": [[183, "pypath.inputs.mimp.get_kinase_class"]], "mimp_enzyme_substrate() (in module pypath.inputs.mimp)": [[184, "pypath.inputs.mimp.mimp_enzyme_substrate"]], "mimp_interactions() (in module pypath.inputs.mimp)": [[185, "pypath.inputs.mimp.mimp_interactions"]], "pypath.inputs.mir2disease": [[186, "module-pypath.inputs.mir2disease"]], "mir2disease_interactions() (in module pypath.inputs.mir2disease)": [[187, "pypath.inputs.mir2disease.mir2disease_interactions"]], "pypath.inputs.mirdeathdb": [[188, "module-pypath.inputs.mirdeathdb"]], "mirdeathdb_interactions() (in module pypath.inputs.mirdeathdb)": [[189, "pypath.inputs.mirdeathdb.mirdeathdb_interactions"]], "pypath.inputs.mitab": [[190, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[191, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[192, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.mppi": [[193, "module-pypath.inputs.mppi"]], "mppi_interactions() (in module pypath.inputs.mppi)": [[194, "pypath.inputs.mppi.mppi_interactions"]], "pypath.inputs.ncrdeathdb": [[195, "module-pypath.inputs.ncrdeathdb"]], "ncrdeathdb_interactions() (in module pypath.inputs.ncrdeathdb)": [[196, "pypath.inputs.ncrdeathdb.ncrdeathdb_interactions"]], "pypath.inputs.negatome": [[197, "module-pypath.inputs.negatome"]], "negatome_interactions() (in module pypath.inputs.negatome)": [[198, "pypath.inputs.negatome.negatome_interactions"]], "pypath.inputs.netbiol": [[199, "module-pypath.inputs.netbiol"]], "arn_interactions() (in module pypath.inputs.netbiol)": [[200, "pypath.inputs.netbiol.arn_interactions"]], "nrf2ome_interactions() (in module pypath.inputs.netbiol)": [[201, "pypath.inputs.netbiol.nrf2ome_interactions"]], "pypath.inputs.offsides": [[202, "module-pypath.inputs.offsides"]], "offsides_side_effects() (in module pypath.inputs.offsides)": [[203, "pypath.inputs.offsides.offsides_side_effects"]], "pypath.inputs.ontology": [[204, "module-pypath.inputs.ontology"]], "listof_ontologies() (in module pypath.inputs.ontology)": [[205, "pypath.inputs.ontology.listof_ontologies"]], "ontology() (in module pypath.inputs.ontology)": [[206, "pypath.inputs.ontology.ontology"]], "pypath.inputs.opentargets": [[207, "module-pypath.inputs.opentargets"]], "opentargets_adverse_reactions() (in module pypath.inputs.opentargets)": [[208, "pypath.inputs.opentargets.opentargets_adverse_reactions"]], "opentargets_baseline_expression() (in module pypath.inputs.opentargets)": [[209, "pypath.inputs.opentargets.opentargets_baseline_expression"]], "opentargets_direct_score() (in module pypath.inputs.opentargets)": [[210, "pypath.inputs.opentargets.opentargets_direct_score"]], "opentargets_general() (in module pypath.inputs.opentargets)": [[211, "pypath.inputs.opentargets.opentargets_general"]], "opentargets_indirect_score() (in module pypath.inputs.opentargets)": [[212, "pypath.inputs.opentargets.opentargets_indirect_score"]], "pypath.inputs.pathophenodb": [[213, "module-pypath.inputs.pathophenodb"]], "diseasepathogen (class in pypath.inputs.pathophenodb)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen"]], "__init__() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.__init__"]], "count() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.count"]], "disease (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease"]], "disease_id (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.disease_id"]], "evidence (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.evidence"]], "index() (pypath.inputs.pathophenodb.diseasepathogen method)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.index"]], "pathogen (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen"]], "pathogen_taxid (pypath.inputs.pathophenodb.diseasepathogen attribute)": [[214, "pypath.inputs.pathophenodb.DiseasePathogen.pathogen_taxid"]], "disease_pathogen_interactions() (in module pypath.inputs.pathophenodb)": [[215, "pypath.inputs.pathophenodb.disease_pathogen_interactions"]], "pypath.inputs.pathwaycommons": [[216, "module-pypath.inputs.pathwaycommons"]], "pathwaycommonsinteraction (class in pypath.inputs.pathwaycommons)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.count"]], "id_a (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_a"]], "id_b (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.id_b"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsinteraction method)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.index"]], "interaction_type (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.interaction_type"]], "resource (pypath.inputs.pathwaycommons.pathwaycommonsinteraction attribute)": [[217, "pypath.inputs.pathwaycommons.PathwayCommonsInteraction.resource"]], "pathwaycommonsresource (class in pypath.inputs.pathwaycommons)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource"]], "__init__() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.__init__"]], "count() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.count"]], "index() (pypath.inputs.pathwaycommons.pathwaycommonsresource method)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.index"]], "name (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.name"]], "pc_label (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.pc_label"]], "version (pypath.inputs.pathwaycommons.pathwaycommonsresource attribute)": [[218, "pypath.inputs.pathwaycommons.PathwayCommonsResource.version"]], "pathwaycommons_bind_interactions() (in module pypath.inputs.pathwaycommons)": [[219, "pypath.inputs.pathwaycommons.pathwaycommons_bind_interactions"]], "pathwaycommons_biogrid_interactions() (in module pypath.inputs.pathwaycommons)": [[220, "pypath.inputs.pathwaycommons.pathwaycommons_biogrid_interactions"]], "pathwaycommons_corum_interactions() (in module pypath.inputs.pathwaycommons)": [[221, "pypath.inputs.pathwaycommons.pathwaycommons_corum_interactions"]], "pathwaycommons_dip_interactions() (in module pypath.inputs.pathwaycommons)": [[222, "pypath.inputs.pathwaycommons.pathwaycommons_dip_interactions"]], "pathwaycommons_hprd_interactions() (in module pypath.inputs.pathwaycommons)": [[223, "pypath.inputs.pathwaycommons.pathwaycommons_hprd_interactions"]], "pathwaycommons_inoh_interactions() (in module pypath.inputs.pathwaycommons)": [[224, "pypath.inputs.pathwaycommons.pathwaycommons_inoh_interactions"]], "pathwaycommons_intact_interactions() (in module pypath.inputs.pathwaycommons)": [[225, "pypath.inputs.pathwaycommons.pathwaycommons_intact_interactions"]], "pathwaycommons_interactions() (in module pypath.inputs.pathwaycommons)": [[226, "pypath.inputs.pathwaycommons.pathwaycommons_interactions"]], "pathwaycommons_kegg_interactions() (in module pypath.inputs.pathwaycommons)": [[227, "pypath.inputs.pathwaycommons.pathwaycommons_kegg_interactions"]], "pathwaycommons_netpath_interactions() (in module pypath.inputs.pathwaycommons)": [[228, "pypath.inputs.pathwaycommons.pathwaycommons_netpath_interactions"]], "pathwaycommons_panther_interactions() (in module pypath.inputs.pathwaycommons)": [[229, "pypath.inputs.pathwaycommons.pathwaycommons_panther_interactions"]], "pathwaycommons_phosphosite_interactions() (in module pypath.inputs.pathwaycommons)": [[230, "pypath.inputs.pathwaycommons.pathwaycommons_phosphosite_interactions"]], "pathwaycommons_reactome_interactions() (in module pypath.inputs.pathwaycommons)": [[231, "pypath.inputs.pathwaycommons.pathwaycommons_reactome_interactions"]], "pathwaycommons_wikipathways_interactions() (in module pypath.inputs.pathwaycommons)": [[232, "pypath.inputs.pathwaycommons.pathwaycommons_wikipathways_interactions"]], "pypath.inputs.pazar": [[233, "module-pypath.inputs.pazar"]], "pazar_interactions() (in module pypath.inputs.pazar)": [[234, "pypath.inputs.pazar.pazar_interactions"]], "pypath.inputs.pepcyber": [[235, "module-pypath.inputs.pepcyber"]], "pepcyber_details() (in module pypath.inputs.pepcyber)": [[236, "pypath.inputs.pepcyber.pepcyber_details"]], "pepcyber_interactions() (in module pypath.inputs.pepcyber)": [[237, "pypath.inputs.pepcyber.pepcyber_interactions"]], "pypath.inputs.pharos": [[238, "module-pypath.inputs.pharos"]], "pharos_diseases() (in module pypath.inputs.pharos)": [[239, "pypath.inputs.pharos.pharos_diseases"]], "pharos_expression() (in module pypath.inputs.pharos)": [[240, "pypath.inputs.pharos.pharos_expression"]], "pharos_general() (in module pypath.inputs.pharos)": [[241, "pypath.inputs.pharos.pharos_general"]], "pharos_gtex() (in module pypath.inputs.pharos)": [[242, "pypath.inputs.pharos.pharos_gtex"]], "pharos_ligands() (in module pypath.inputs.pharos)": [[243, "pypath.inputs.pharos.pharos_ligands"]], "pharos_orthologs() (in module pypath.inputs.pharos)": [[244, "pypath.inputs.pharos.pharos_orthologs"]], "pharos_targets() (in module pypath.inputs.pharos)": [[245, "pypath.inputs.pharos.pharos_targets"]], "pharos_xrefs() (in module pypath.inputs.pharos)": [[246, "pypath.inputs.pharos.pharos_xrefs"]], "pypath.inputs.phobius": [[247, "module-pypath.inputs.phobius"]], "phobius_annotations() (in module pypath.inputs.phobius)": [[248, "pypath.inputs.phobius.phobius_annotations"]], "pypath.inputs.phosphonetworks": [[249, "module-pypath.inputs.phosphonetworks"]], "phosphonetworks_enzyme_substrate() (in module pypath.inputs.phosphonetworks)": [[250, "pypath.inputs.phosphonetworks.phosphonetworks_enzyme_substrate"]], "phosphonetworks_interactions() (in module pypath.inputs.phosphonetworks)": [[251, "pypath.inputs.phosphonetworks.phosphonetworks_interactions"]], "pypath.inputs.phosphopoint": [[252, "module-pypath.inputs.phosphopoint"]], "phosphopoint_directions() (in module pypath.inputs.phosphopoint)": [[253, "pypath.inputs.phosphopoint.phosphopoint_directions"]], "phosphopoint_interactions() (in module pypath.inputs.phosphopoint)": [[254, "pypath.inputs.phosphopoint.phosphopoint_interactions"]], "pypath.inputs.pro": [[255, "module-pypath.inputs.pro"]], "get_pro() (in module pypath.inputs.pro)": [[256, "pypath.inputs.pro.get_pro"]], "pro_mapping() (in module pypath.inputs.pro)": [[257, "pypath.inputs.pro.pro_mapping"]], "pypath.inputs.protmapper": [[258, "module-pypath.inputs.protmapper"]], "get_protmapper() (in module pypath.inputs.protmapper)": [[259, "pypath.inputs.protmapper.get_protmapper"]], "protmapper_enzyme_substrate() (in module pypath.inputs.protmapper)": [[260, "pypath.inputs.protmapper.protmapper_enzyme_substrate"]], "protmapper_interactions() (in module pypath.inputs.protmapper)": [[261, "pypath.inputs.protmapper.protmapper_interactions"]], "pypath.inputs.pubchem": [[262, "module-pypath.inputs.pubchem"]], "pubchem_mapping() (in module pypath.inputs.pubchem)": [[263, "pypath.inputs.pubchem.pubchem_mapping"]], "pypath.inputs.pubmed": [[264, "module-pypath.inputs.pubmed"]], "get_pmid() (in module pypath.inputs.pubmed)": [[265, "pypath.inputs.pubmed.get_pmid"]], "get_pubmeds() (in module pypath.inputs.pubmed)": [[266, "pypath.inputs.pubmed.get_pubmeds"]], "only_pmids() (in module pypath.inputs.pubmed)": [[267, "pypath.inputs.pubmed.only_pmids"]], "open_pubmed() (in module pypath.inputs.pubmed)": [[268, "pypath.inputs.pubmed.open_pubmed"]], "pmids_dict() (in module pypath.inputs.pubmed)": [[269, "pypath.inputs.pubmed.pmids_dict"]], "pmids_list() (in module pypath.inputs.pubmed)": [[270, "pypath.inputs.pubmed.pmids_list"]], "pypath.inputs.ramp": [[271, "module-pypath.inputs.ramp"]], "ramp_id_types() (in module pypath.inputs.ramp)": [[272, "pypath.inputs.ramp.ramp_id_types"]], "ramp_id_types_2() (in module pypath.inputs.ramp)": [[273, "pypath.inputs.ramp.ramp_id_types_2"]], "ramp_list_tables() (in module pypath.inputs.ramp)": [[274, "pypath.inputs.ramp.ramp_list_tables"]], "ramp_mapping() (in module pypath.inputs.ramp)": [[275, "pypath.inputs.ramp.ramp_mapping"]], "ramp_raw() (in module pypath.inputs.ramp)": [[276, "pypath.inputs.ramp.ramp_raw"]], "ramp_show_tables() (in module pypath.inputs.ramp)": [[277, "pypath.inputs.ramp.ramp_show_tables"]], "pypath.inputs.rdata": [[278, "module-pypath.inputs.rdata"]], "pypath.inputs.reaction": [[279, "module-pypath.inputs.reaction"]], "acsn_biopax() (in module pypath.inputs.reaction)": [[280, "pypath.inputs.reaction.acsn_biopax"]], "acsn_interactions_2() (in module pypath.inputs.reaction)": [[281, "pypath.inputs.reaction.acsn_interactions_2"]], "get_acsn_effects() (in module pypath.inputs.reaction)": [[282, "pypath.inputs.reaction.get_acsn_effects"]], "get_controls() (in module pypath.inputs.reaction)": [[283, "pypath.inputs.reaction.get_controls"]], "get_interactions() (in module pypath.inputs.reaction)": [[284, "pypath.inputs.reaction.get_interactions"]], "get_reactions() (in module pypath.inputs.reaction)": [[285, "pypath.inputs.reaction.get_reactions"]], "get_soup() (in module pypath.inputs.reaction)": [[286, "pypath.inputs.reaction.get_soup"]], "panther_biopax() (in module pypath.inputs.reaction)": [[287, "pypath.inputs.reaction.panther_biopax"]], "panther_interactions() (in module pypath.inputs.reaction)": [[288, "pypath.inputs.reaction.panther_interactions"]], "pid_biopax() (in module pypath.inputs.reaction)": [[289, "pypath.inputs.reaction.pid_biopax"]], "pid_interactions() (in module pypath.inputs.reaction)": [[290, "pypath.inputs.reaction.pid_interactions"]], "process_complex() (in module pypath.inputs.reaction)": [[291, "pypath.inputs.reaction.process_complex"]], "process_controls() (in module pypath.inputs.reaction)": [[292, "pypath.inputs.reaction.process_controls"]], "process_reactions() (in module pypath.inputs.reaction)": [[293, "pypath.inputs.reaction.process_reactions"]], "reactions_biopax() (in module pypath.inputs.reaction)": [[294, "pypath.inputs.reaction.reactions_biopax"]], "reactome_biopax() (in module pypath.inputs.reaction)": [[295, "pypath.inputs.reaction.reactome_biopax"]], "reactome_bs() (in module pypath.inputs.reaction)": [[296, "pypath.inputs.reaction.reactome_bs"]], "reactome_interactions() (in module pypath.inputs.reaction)": [[297, "pypath.inputs.reaction.reactome_interactions"]], "reactome_sbml() (in module pypath.inputs.reaction)": [[298, "pypath.inputs.reaction.reactome_sbml"]], "pypath.inputs.reactome": [[299, "module-pypath.inputs.reactome"]], "reactome_chebis() (in module pypath.inputs.reactome)": [[300, "pypath.inputs.reactome.reactome_chebis"]], "reactome_pathway_relations() (in module pypath.inputs.reactome)": [[301, "pypath.inputs.reactome.reactome_pathway_relations"]], "reactome_pathways() (in module pypath.inputs.reactome)": [[302, "pypath.inputs.reactome.reactome_pathways"]], "reactome_uniprots() (in module pypath.inputs.reactome)": [[303, "pypath.inputs.reactome.reactome_uniprots"]], "pypath.inputs.science": [[304, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[305, "pypath.inputs.science.science_download"]], "pypath.inputs.sider": [[306, "module-pypath.inputs.sider"]], "siderdrug (class in pypath.inputs.sider)": [[307, "pypath.inputs.sider.SiderDrug"]], "__init__() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.__init__"]], "atc (pypath.inputs.sider.siderdrug attribute)": [[307, "pypath.inputs.sider.SiderDrug.atc"]], "count() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.count"]], "index() (pypath.inputs.sider.siderdrug method)": [[307, "pypath.inputs.sider.SiderDrug.index"]], "name (pypath.inputs.sider.siderdrug attribute)": [[307, "pypath.inputs.sider.SiderDrug.name"]], "sidersideeffect (class in pypath.inputs.sider)": [[308, "pypath.inputs.sider.SiderSideeffect"]], "__init__() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.__init__"]], "count() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.count"]], "index() (pypath.inputs.sider.sidersideeffect method)": [[308, "pypath.inputs.sider.SiderSideeffect.index"]], "side_effect (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffect attribute)": [[308, "pypath.inputs.sider.SiderSideeffect.umls_concept_on_label"]], "sidersideeffectmeddra (class in pypath.inputs.sider)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra"]], "__init__() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.__init__"]], "cid (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.cid"]], "count() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.count"]], "index() (pypath.inputs.sider.sidersideeffectmeddra method)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.index"]], "meddra_id (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.meddra_id"]], "side_effect_name (pypath.inputs.sider.sidersideeffectmeddra attribute)": [[309, "pypath.inputs.sider.SiderSideeffectMeddra.side_effect_name"]], "sidersideeffetfrequency (class in pypath.inputs.sider)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency"]], "__init__() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.__init__"]], "count() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.count"]], "frequency (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.frequency"]], "index() (pypath.inputs.sider.sidersideeffetfrequency method)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.index"]], "side_effect (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.side_effect"]], "umls_concept_in_meddra (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_in_meddra"]], "umls_concept_on_label (pypath.inputs.sider.sidersideeffetfrequency attribute)": [[310, "pypath.inputs.sider.SiderSideeffetFrequency.umls_concept_on_label"]], "sider_drug_names() (in module pypath.inputs.sider)": [[311, "pypath.inputs.sider.sider_drug_names"]], "sider_meddra_side_effects() (in module pypath.inputs.sider)": [[312, "pypath.inputs.sider.sider_meddra_side_effects"]], "sider_side_effect_frequencies() (in module pypath.inputs.sider)": [[313, "pypath.inputs.sider.sider_side_effect_frequencies"]], "sider_side_effects() (in module pypath.inputs.sider)": [[314, "pypath.inputs.sider.sider_side_effects"]], "pypath.inputs.stitch": [[315, "module-pypath.inputs.stitch"]], "stitch_actions_interactions() (in module pypath.inputs.stitch)": [[316, "pypath.inputs.stitch.stitch_actions_interactions"]], "stitch_links_interactions() (in module pypath.inputs.stitch)": [[317, "pypath.inputs.stitch.stitch_links_interactions"]], "pypath.inputs.string": [[318, "module-pypath.inputs.string"]], "string_effects() (in module pypath.inputs.string)": [[319, "pypath.inputs.string.string_effects"]], "string_links_interactions() (in module pypath.inputs.string)": [[320, "pypath.inputs.string.string_links_interactions"]], "string_physical_interactions() (in module pypath.inputs.string)": [[321, "pypath.inputs.string.string_physical_interactions"]], "string_species() (in module pypath.inputs.string)": [[322, "pypath.inputs.string.string_species"]], "pypath.inputs.swisslipids": [[323, "module-pypath.inputs.swisslipids"]], "pypath.inputs.switches_elm": [[324, "module-pypath.inputs.switches_elm"]], "get_switches_elm() (in module pypath.inputs.switches_elm)": [[325, "pypath.inputs.switches_elm.get_switches_elm"]], "pypath.inputs.transmir": [[326, "module-pypath.inputs.transmir"]], "transmir_interactions() (in module pypath.inputs.transmir)": [[327, "pypath.inputs.transmir.transmir_interactions"]], "pypath.inputs.trip": [[328, "module-pypath.inputs.trip"]], "take_a_trip() (in module pypath.inputs.trip)": [[329, "pypath.inputs.trip.take_a_trip"]], "trip_find_uniprot() (in module pypath.inputs.trip)": [[330, "pypath.inputs.trip.trip_find_uniprot"]], "trip_get_uniprot() (in module pypath.inputs.trip)": [[331, "pypath.inputs.trip.trip_get_uniprot"]], "trip_interactions() (in module pypath.inputs.trip)": [[332, "pypath.inputs.trip.trip_interactions"]], "trip_process() (in module pypath.inputs.trip)": [[333, "pypath.inputs.trip.trip_process"]], "trip_process_table() (in module pypath.inputs.trip)": [[334, "pypath.inputs.trip.trip_process_table"]], "pypath.inputs.twosides": [[335, "module-pypath.inputs.twosides"]], "twosides_interactions() (in module pypath.inputs.twosides)": [[336, "pypath.inputs.twosides.twosides_interactions"]], "pypath.inputs.unichem": [[337, "module-pypath.inputs.unichem"]], "info() (in module pypath.inputs.unichem)": [[338, "pypath.inputs.unichem.info"]], "unichem_info() (in module pypath.inputs.unichem)": [[339, "pypath.inputs.unichem.unichem_info"]], "unichem_mapping() (in module pypath.inputs.unichem)": [[340, "pypath.inputs.unichem.unichem_mapping"]], "unichem_sources() (in module pypath.inputs.unichem)": [[341, "pypath.inputs.unichem.unichem_sources"]], "pypath.inputs.uniprot": [[342, "module-pypath.inputs.uniprot"]], "taxon (class in pypath.inputs.uniprot)": [[343, "pypath.inputs.uniprot.Taxon"]], "__init__() (pypath.inputs.uniprot.taxon method)": [[343, "pypath.inputs.uniprot.Taxon.__init__"]], "count() (pypath.inputs.uniprot.taxon method)": [[343, "pypath.inputs.uniprot.Taxon.count"]], "english (pypath.inputs.uniprot.taxon attribute)": [[343, "pypath.inputs.uniprot.Taxon.english"]], "index() (pypath.inputs.uniprot.taxon method)": [[343, "pypath.inputs.uniprot.Taxon.index"]], "latin (pypath.inputs.uniprot.taxon attribute)": [[343, "pypath.inputs.uniprot.Taxon.latin"]], "latin_synonym (pypath.inputs.uniprot.taxon attribute)": [[343, "pypath.inputs.uniprot.Taxon.latin_synonym"]], "ncbi_id (pypath.inputs.uniprot.taxon attribute)": [[343, "pypath.inputs.uniprot.Taxon.ncbi_id"]], "uniprotquery (class in pypath.inputs.uniprot)": [[344, "pypath.inputs.uniprot.UniprotQuery"]], "__init__() (pypath.inputs.uniprot.uniprotquery method)": [[344, "pypath.inputs.uniprot.UniprotQuery.__init__"]], "__iter__() (pypath.inputs.uniprot.uniprotquery method)": [[344, "pypath.inputs.uniprot.UniprotQuery.__iter__"]], "fail_on_empty (pypath.inputs.uniprot.uniprotquery attribute)": [[344, "pypath.inputs.uniprot.UniprotQuery.fail_on_empty"]], "name_process (pypath.inputs.uniprot.uniprotquery attribute)": [[344, "pypath.inputs.uniprot.UniprotQuery.name_process"]], "perform() (pypath.inputs.uniprot.uniprotquery method)": [[344, "pypath.inputs.uniprot.UniprotQuery.perform"]], "url (pypath.inputs.uniprot.uniprotquery property)": [[344, "pypath.inputs.uniprot.UniprotQuery.url"]], "url_plain (pypath.inputs.uniprot.uniprotquery property)": [[344, "pypath.inputs.uniprot.UniprotQuery.url_plain"]], "uniprotrecordhistory (class in pypath.inputs.uniprot)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory"]], "__init__() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.__init__"]], "count() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.count"]], "database (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.database"]], "date (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.date"]], "entry_name (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.entry_name"]], "entry_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.entry_version"]], "index() (pypath.inputs.uniprot.uniprotrecordhistory method)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.index"]], "number (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.number"]], "replaced_by (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.replaced_by"]], "replaces (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.replaces"]], "sequence_version (pypath.inputs.uniprot.uniprotrecordhistory attribute)": [[345, "pypath.inputs.uniprot.UniprotRecordHistory.sequence_version"]], "deleted_uniprot_genesymbol() (in module pypath.inputs.uniprot)": [[346, "pypath.inputs.uniprot.deleted_uniprot_genesymbol"]], "get_uniprot_sec() (in module pypath.inputs.uniprot)": [[347, "pypath.inputs.uniprot.get_uniprot_sec"]], "protein_datasheet() (in module pypath.inputs.uniprot)": [[348, "pypath.inputs.uniprot.protein_datasheet"]], "query_builder() (in module pypath.inputs.uniprot)": [[349, "pypath.inputs.uniprot.query_builder"]], "swissprot_deleted() (in module pypath.inputs.uniprot)": [[350, "pypath.inputs.uniprot.swissprot_deleted"]], "trembl_deleted() (in module pypath.inputs.uniprot)": [[351, "pypath.inputs.uniprot.trembl_deleted"]], "uniprot_data() (in module pypath.inputs.uniprot)": [[352, "pypath.inputs.uniprot.uniprot_data"]], "uniprot_deleted() (in module pypath.inputs.uniprot)": [[353, "pypath.inputs.uniprot.uniprot_deleted"]], "uniprot_families() (in module pypath.inputs.uniprot)": [[354, "pypath.inputs.uniprot.uniprot_families"]], "uniprot_history() (in module pypath.inputs.uniprot)": [[355, "pypath.inputs.uniprot.uniprot_history"]], "uniprot_history_recent_datasheet() (in module pypath.inputs.uniprot)": [[356, "pypath.inputs.uniprot.uniprot_history_recent_datasheet"]], "uniprot_keywords() (in module pypath.inputs.uniprot)": [[357, "pypath.inputs.uniprot.uniprot_keywords"]], "uniprot_locations() (in module pypath.inputs.uniprot)": [[358, "pypath.inputs.uniprot.uniprot_locations"]], "uniprot_ncbi_taxids() (in module pypath.inputs.uniprot)": [[359, "pypath.inputs.uniprot.uniprot_ncbi_taxids"]], "uniprot_ncbi_taxids_2() (in module pypath.inputs.uniprot)": [[360, "pypath.inputs.uniprot.uniprot_ncbi_taxids_2"]], "uniprot_preprocess() (in module pypath.inputs.uniprot)": [[361, "pypath.inputs.uniprot.uniprot_preprocess"]], "uniprot_query() (in module pypath.inputs.uniprot)": [[362, "pypath.inputs.uniprot.uniprot_query"]], "uniprot_recent_version() (in module pypath.inputs.uniprot)": [[363, "pypath.inputs.uniprot.uniprot_recent_version"]], "uniprot_taxonomy() (in module pypath.inputs.uniprot)": [[364, "pypath.inputs.uniprot.uniprot_taxonomy"]], "uniprot_tissues() (in module pypath.inputs.uniprot)": [[365, "pypath.inputs.uniprot.uniprot_tissues"]], "uniprot_topology() (in module pypath.inputs.uniprot)": [[366, "pypath.inputs.uniprot.uniprot_topology"]], "valid_uniprot() (in module pypath.inputs.uniprot)": [[367, "pypath.inputs.uniprot.valid_uniprot"]], "pypath.inputs.uniprot_db": [[368, "module-pypath.inputs.uniprot_db"]], "all_swissprots() (in module pypath.inputs.uniprot_db)": [[369, "pypath.inputs.uniprot_db.all_swissprots"]], "all_trembls() (in module pypath.inputs.uniprot_db)": [[370, "pypath.inputs.uniprot_db.all_trembls"]], "all_uniprots() (in module pypath.inputs.uniprot_db)": [[371, "pypath.inputs.uniprot_db.all_uniprots"]], "get_db() (in module pypath.inputs.uniprot_db)": [[372, "pypath.inputs.uniprot_db.get_db"]], "init_db() (in module pypath.inputs.uniprot_db)": [[373, "pypath.inputs.uniprot_db.init_db"]], "is_swissprot() (in module pypath.inputs.uniprot_db)": [[374, "pypath.inputs.uniprot_db.is_swissprot"]], "is_trembl() (in module pypath.inputs.uniprot_db)": [[375, "pypath.inputs.uniprot_db.is_trembl"]], "is_uniprot() (in module pypath.inputs.uniprot_db)": [[376, "pypath.inputs.uniprot_db.is_uniprot"]], "pypath.inputs.uniprot_idmapping": [[377, "module-pypath.inputs.uniprot_idmapping"]], "idtypes() (in module pypath.inputs.uniprot_idmapping)": [[378, "pypath.inputs.uniprot_idmapping.idtypes"]], "pypath.internals": [[379, "module-pypath.internals"]], "pypath.internals.input_formats": [[380, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[381, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[381, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[382, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[382, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[383, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[383, "pypath.internals.input_formats.FileMapping.__init__"]], "hmdbmapping (class in pypath.internals.input_formats)": [[384, "pypath.internals.input_formats.HmdbMapping"]], "__init__() (pypath.internals.input_formats.hmdbmapping method)": [[384, "pypath.internals.input_formats.HmdbMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[385, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[385, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[386, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[386, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[387, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[387, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[388, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[388, "pypath.internals.input_formats.ProMapping.__init__"]], "rampmapping (class in pypath.internals.input_formats)": [[389, "pypath.internals.input_formats.RampMapping"]], "__init__() (pypath.internals.input_formats.rampmapping method)": [[389, "pypath.internals.input_formats.RampMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[390, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[390, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[391, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[391, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[392, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[392, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[393, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[393, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[393, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[394, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[395, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[395, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[395, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[396, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[396, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[396, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[396, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[396, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[396, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[397, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[397, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[397, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[397, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[397, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[397, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[398, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[398, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[398, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[398, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[398, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[398, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[399, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[399, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[399, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[399, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[399, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[399, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[400, "module-pypath.internals.maps"]], "pypath.internals.refs": [[401, "module-pypath.internals.refs"]], "reference (class in pypath.internals.refs)": [[402, "pypath.internals.refs.Reference"]], "__init__() (pypath.internals.refs.reference method)": [[402, "pypath.internals.refs.Reference.__init__"]], "get_pubmed_data() (in module pypath.internals.refs)": [[403, "pypath.internals.refs.get_pubmed_data"]], "pypath.internals.resource": [[404, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[405, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[405, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[405, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[405, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[405, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[406, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[406, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[406, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[407, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkdataset (class in pypath.internals.resource)": [[408, "pypath.internals.resource.NetworkDataset"]], "__init__() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.__init__"]], "clear() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.clear"]], "get() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.get"]], "items() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.items"]], "keys() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.keys"]], "pop() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.pop"]], "popitem() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.popitem"]], "setdefault() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.setdefault"]], "update() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.update"]], "values() (pypath.internals.resource.networkdataset method)": [[408, "pypath.internals.resource.NetworkDataset.values"]], "networkresource (class in pypath.internals.resource)": [[409, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[409, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[410, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[410, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[410, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[410, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[410, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[410, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[410, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[410, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[410, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[410, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[410, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[411, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[411, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[412, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[413, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[414, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[415, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[416, "pypath.log"]], "pypath.resources": [[417, "module-pypath.resources"]], "pypath.resources.controller": [[418, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[419, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.__init__"]], "add_resource_attrs() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.add_resource_attrs"]], "collect_interaction() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.collect_interaction"]], "collect_network() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.collect_network"]], "license_filter() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.license_filter"]], "secondary_resources() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.secondary_resources"]], "update() (pypath.resources.controller.resourcecontroller method)": [[419, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[420, "module-pypath.resources.data"]], "pypath.resources.data_formats": [[421, "module-pypath.resources.data_formats"]], "activity_flow (in module pypath.resources.data_formats)": [[422, "pypath.resources.data_formats.activity_flow"]], "enzyme_substrate (in module pypath.resources.data_formats)": [[423, "pypath.resources.data_formats.enzyme_substrate"]], "interaction (in module pypath.resources.data_formats)": [[424, "pypath.resources.data_formats.interaction"]], "interaction_htp (in module pypath.resources.data_formats)": [[425, "pypath.resources.data_formats.interaction_htp"]], "pathway_bad (in module pypath.resources.data_formats)": [[426, "pypath.resources.data_formats.pathway_bad"]], "reaction_pc (in module pypath.resources.data_formats)": [[427, "pypath.resources.data_formats.reaction_pc"]], "transcription_deprecated (in module pypath.resources.data_formats)": [[428, "pypath.resources.data_formats.transcription_deprecated"]], "transcription_onebyone (in module pypath.resources.data_formats)": [[429, "pypath.resources.data_formats.transcription_onebyone"]], "get_controller() (in module pypath.resources)": [[430, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[431, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[432, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[432, "pypath.resources.licenses.Licenses.__init__"]], "pypath.resources.network": [[433, "module-pypath.resources.network"]], "pypath.resources.urls": [[434, "module-pypath.resources.urls"]], "pypath.share": [[435, "module-pypath.share"]], "pypath.share.cache": [[436, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[437, "pypath.share.cache.cache_item"]], "cache_path() (in module pypath.share.cache)": [[438, "pypath.share.cache.cache_path"]], "get_cachedir() (in module pypath.share.cache)": [[439, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[440, "module-pypath.share.common"]], "pypath.share.constants": [[441, "module-pypath.share.constants"]], "pypath.share.curl": [[442, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[443, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.__init__"]], "cache_path() (pypath.share.curl.curl class method)": [[443, "pypath.share.curl.Curl.cache_path"]], "close() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[443, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[443, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[444, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[444, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[444, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[444, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[444, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[445, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[445, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[446, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[446, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[447, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[447, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[448, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[448, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[449, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[449, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[450, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[450, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[451, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[451, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[452, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[452, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[453, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[453, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[454, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[454, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[455, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[455, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[456, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[457, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[457, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[458, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[458, "pypath.share.curl.preserve_on"]], "pypath.share.progress": [[459, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[460, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[460, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[461, "module-pypath.share.session"]], "pypath.share.settings": [[462, "module-pypath.share.settings"]], "pypath.visual": [[463, "module-pypath.visual"]], "pypath.visual.drawing": [[464, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[465, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[465, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[465, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[466, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[466, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[467, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[468, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[468, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[469, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[470, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[470, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[471, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[472, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[473, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[474, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[475, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[476, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[477, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[478, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[479, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[480, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[481, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[481, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[482, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[482, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[482, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[483, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[483, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[484, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[484, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[484, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[485, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[485, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[485, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})